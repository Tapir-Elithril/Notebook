{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Tapir's Notebook","text":"<p>Personal website by Tapir_Elithril</p> <ul> <li>Zhejiang Univ.</li> <li>23 Turing AI</li> <li>Hangzhou/ShangHai,China</li> </ul> <p>QQ:406015625  </p> <p>2025.1.29</p>"},{"location":"fa23/","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5927\u5b66\u7684\u7b2c\u4e00\u5b66\u671f\uff0c\u672c\u8d28\u4e0a\u7b97\u6bd4\u8f83\u8f7b\u677e\uff0c\u53ea\u9700\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9  </p> <ul> <li>\u63d0\u95ee\u7684\u667a\u6167\uff1a\u63d0\u95ee\u4e4b\u524d\uff0c\u9075\u5faaSTFW\u3001RTFM\u548cRTFSC\u7684\u539f\u5219\u540e\u5927\u80c6\u63d0\u95ee\uff0c\u5982\u679c\u4e0d\u597d\u610f\u601d\u95ee\u53ef\u4ee5\u6765\u627e\u6211^^</li> <li>\u5230\u8bfe\u662f\u5b66\u751f\u7684\u672c\u804c\uff0c\u4f46\u4e0d\u662f\u5fc5\u987b\uff0c\u627e\u5230\u81ea\u5df1\u7684\u8282\u594f</li> <li>\u6253\u7834\u4fe1\u606f\u5dee\uff0c\u7406\u89e3\u8fd9\u662f\u4e00\u4e2a\u4eba\u60c5\u793e\u4f1a</li> <li>\u7406\u89e3\u671f\u672b\u5468\u548c\u5e73\u65f6\u662f\u4e24\u4e2a\u4e16\u754c \u8fd9\u4e2a\u5b66\u671f\u6700\u5927\u7684\u7279\u70b9\u662f\u8bba\u6587/pre\u8d85\u591a \u52a1\u5fc5\u5e73\u8861\u597d\u671f\u672b\u4f5c\u4e1a\u548c\u6570\u5206\u7684\u590d\u4e60 \u8bf7\u81f3\u5c11\u4fdd\u8bc15\u5929\u7684\u6570\u5206\u590d\u4e60\u65f6\u95f4</li> <li>\u8eab\u5fc3\u5065\u5eb7\u6c38\u8fdc\u662f\u6700\u91cd\u8981\u7684\uff08\u5927\u6982\u5427\uff09</li> </ul> <p>P.S. \u6240\u6709\u901a\u8bc6\u8bfe\u9664\u8bf4\u660e\u5916\u5747\u4e0d\u9700\u8981\u6559\u6750\uff0c\u66f4\u4e0d\u9700\u8981\u8d2d\u4e70\u7eb8\u8d28\u6559\u6750</p>"},{"location":"fa23/astronomy/","title":"\u5929\u6587\u5b66\u5bfc\u8bba  2.0 \u5b66\u5206","text":""},{"location":"fa23/astronomy/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u66f9\u65b0\u4f0d</p>"},{"location":"fa23/astronomy/#_2","title":"\u8ba4\u5b9a","text":"<p>\u901a\u8bc6\u57fa\u7840\u8bfe\uff1a\u79d1\u6280\u521b\u65b0</p>"},{"location":"fa23/astronomy/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u5e73\u65f6\u6210\u7ee9 60%   10\u6b21\u4f5c\u4e1a \u6bcf\u6b216%</li> <li>\u8bfe\u7a0b\u62a5\u544a 40%</li> </ul>"},{"location":"fa23/astronomy/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u901a\u8bc6\u8bfe\u7684\u552f\u4e00\u771f\u795e\uff0c\u4e0d\u70b9\u540d\uff08\u53ef\u4ee5\u4e00\u6b21\u90fd\u4e0d\u53bb\uff09 \u4f5c\u4e1a\u7ffb\u770b\u667a\u4e91\u8bfe\u5802 \u8bfe\u7a0b\u62a5\u544a\u53ef\u53c2\u8003b\u7ad9\u5929\u6587\u5b66\u8bfe\u7a0b\uff0c\u9002\u5f53\u505a\u4e00\u4e9b\u8ba1\u7b97\uff0c\u8f7b\u677e\u6ee1\u7ee9\u3002 lbb\uff0ckx\u73ed\u7ea7\u7ed9\u5206\u540c\u6837\u5f88\u597d RENYUE CEN\u4e3a\u5168\u5916\u6587\u6559\u5b66\uff0c\u7ed9\u5206\u5f88\u597d\u4f46\u662f\u53ef\u80fd\u6709\u4e9b\u6298\u78e8  </p>"},{"location":"fa23/astronomy/#_5","title":"\u4f5c\u4e1a\u4e0e\u53c2\u8003\u7b54\u6848","text":"<p>\u7b54\u6848\u4e0d\u4fdd\u5bf9\uff0c\u8bf7\u8c28\u614e\u53c2\u8003\uff0c\u5207\u52ff\u6284\u88ad\uff01\uff01\uff01  </p> <ul> <li>\u4f5c\u4e1a1</li> <li>\u4f5c\u4e1a1\u7b54\u6848</li> <li>\u4f5c\u4e1a2</li> <li>\u4f5c\u4e1a2\u7b54\u6848</li> <li>\u4f5c\u4e1a3</li> <li>\u4f5c\u4e1a3\u7b54\u6848</li> <li>\u4f5c\u4e1a4</li> <li>\u4f5c\u4e1a4\u7b54\u6848</li> <li>\u4f5c\u4e1a5</li> <li>\u4f5c\u4e1a5\u7b54\u6848</li> <li>\u4f5c\u4e1a6</li> <li>\u4f5c\u4e1a6\u7b54\u6848</li> <li>\u4f5c\u4e1a7</li> <li>\u4f5c\u4e1a7\u7b54\u6848</li> <li>\u4f5c\u4e1a8</li> <li>\u4f5c\u4e1a8\u7b54\u6848</li> <li>\u4f5c\u4e1a9</li> <li>\u4f5c\u4e1a9\u7b54\u6848</li> <li>\u4f5c\u4e1a10</li> <li>\u4f5c\u4e1a10\u7b54\u6848</li> </ul>"},{"location":"fa23/career_planning/","title":"\u804c\u4e1a\u751f\u6daf\u89c4\u5212  1.5 \u5b66\u5206","text":""},{"location":"fa23/career_planning/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u6c88\u9ece\u52c7</p>"},{"location":"fa23/career_planning/#_2","title":"\u8ba4\u5b9a","text":"<p>\u521b\u65b0\u521b\u4e1a\u7c7b</p>"},{"location":"fa23/career_planning/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>sly\u662f\u4f20\u7edf\u7684\u601d\u653f\u8bfe\u8001\u5e08\uff0c\u4e0a\u8bfe\u5439\u725b\u8f83\u591a\uff0c\u671f\u672b\u66f4\u662f\u7ea2\u4e0a\u52a0\u7ea2\uff08\u4f1a\u9080\u8bf7\u4e3b\u6301\u4eba\uff0c\u7531\u4e3b\u6301\u4eba\uff0c\u4efb\u8bfe\u8001\u5e08\uff0c\u52a9\u6559\uff0c\u7ec4\u957f\u8f6e\u756a\u53d1\u8a00...\uff09 \u4fee\u8bfb\u65f6\u4e3a\u51ac\u5b66\u671f\u77ed\u5b66\u671f\u8bfe\u7a0b\uff088\u6b21\u8bfe\uff09 \u4efb\u52a1\u8f83\u5c11\uff0c\u4e09\u6b21\u4f5c\u4e1a\u5de6\u53f3\uff08\u6210\u5c31\u6545\u4e8b\uff0c\u4e2a\u4eba\u6218\u7565\u5341\u95ee\uff0c\u5f69\u8679\u56fe\u7b49\uff09\uff0c\u82e5\u5e72\u6b21\u5c0f\u7ec4\u5206\u4eab\uff08\u4e0d\u8bb0\u5f97\u4e86\uff09\uff0c\u671f\u672b\u662f\u4e00\u7bc7\u804c\u4e1a\u751f\u6daf\u89c4\u5212\u4e66\u4e0e\u76f8\u5173\u7684\u5c0f\u7ec4\u6c47\u62a5 \u62c5\u4efb\u7ec4\u957f\u5e76\u6b63\u5e38\u8868\u73b0\u53ef\u4ee5\u5f97\u5230\u7ecf\u5178\u5206\u657089 \u5982\u679c\u5b9e\u5728\u793e\u6050\u53ef\u4ee5\u53bb\u4fee\u521b\u4e1a\u542f\u7a0b\uff08\uff1f\uff09  </p>"},{"location":"fa23/fitness/","title":"\u8eab\u4f53\u7d20\u8d28\u8bfe  0.0 \u5b66\u5206","text":""},{"location":"fa23/fitness/#_1","title":"\u8bfe\u7a0b\u6559\u5e08","text":"<p>\u8463\u6653\u8679</p>"},{"location":"fa23/fitness/#_2","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8001\u5e08\u975e\u5e38\u8ba4\u771f\u4f46\u4e0a\u8bfe\u5f3a\u5ea6\u5f88\u5927\uff08\u5927\u6982\u6bd4\u5468\u5e7f\u8d22\u8001\u5e08\u5c0f\uff09\uff0c\u4f8b\u5982\u6a21\u62df\u7ec3\u4e6012\u5206\u949f\u8dd1\uff0c\u4f1a\u9488\u5bf9\u4f53\u6d4b\u9879\u76ee\u8fdb\u884c\u7ec3\u4e60\uff0c\u5982\u679c\u5e0c\u671b\u63d0\u5347\u81ea\u8eab\u4f53\u6d4b\u6c34\u5e73\u7684\u53ef\u9009\uff0c\u5370\u8c61\u91cc\u7b7e\u8fc7\u4e00\u6b21\u9000\uff0c\u5982\u679c\u5e0c\u671b\u6c34\u7684\u53c2\u89c1\u4e0b\u5b66\u671f  </p>"},{"location":"fa23/linear_algebra1/","title":"\u7ebf\u6027\u4ee3\u6570I(H)  3.5 \u5b66\u5206","text":""},{"location":"fa23/linear_algebra1/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5434\u5fd7\u7965</p>"},{"location":"fa23/linear_algebra1/#_2","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"fa23/linear_algebra1/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>wzx\u4eb2\u7237\u7237\uff0c\u671f\u4e2d\u671f\u672b\u8003\u8bd5\u8bd5\u5377\u5c3d\u91cf\u5199\u6ee1\uff0c\u5199\u6ee1\uff0c\u5199\u6ee1\uff0c\u53ea\u8981\u8bd5\u5377\u4e0a\u6709\u5b57\uff0c\u662f\u706b\u661f\u6587\u90fd\u7ed9\u5206 \u4ee3\u6570\u5b66\u53ef\u80fd\u6bd4\u8f83\u62bd\u8c61\uff0c\u5728\u7ebf\u4ee3I\u4e0d\u80fd\u5b8c\u5168\u7406\u89e3\u662f\u5f88\u6b63\u5e38\u7684\uff0c\u53c2\u8003\u8f85\u5b66\u8bfe\u7a0b\uff0c\u300a\u7ebf\u6027\u4ee3\u6570\u672a\u5c3d\u4e4b\u7f8e\u300b\u5c31\u80fd\u53d6\u5f97\u4e0d\u9519\u7684\u6210\u7ee9\u3002 \u671f\u4e2d\u8003\u8bd5\u7684\u5360\u6bd4\u6ca1\u6709\u7ed9\u51fa\uff0c\u63a8\u6d4b\u572810-20%\u5de6\u53f3\uff0c\u5360\u6bd4\u4e0d\u5927\u4f46\u4e5f\u4f1a\u6709\u6240\u5f71\u54cd\uff0c\u8bf7\u5c3d\u91cf\u5c06\u8bd5\u5377\u5199\u6ee1 \u5185\u79ef\u7a7a\u95f4\u76f8\u5173\u90e8\u5206\u4e0d\u8003 \u5982\u679c\u5e0c\u671b\u53d6\u5f974.8\u53ca\u4ee5\u4e0a\u7684\u6210\u7ee9\uff0c\u8bf7\u786e\u4fdd\u4e66\u540e\u4e60\u9898\u90fd\u662f\u4f1a\u505a\u7684\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u5c06\u8003\u8bd5\u8bd5\u5377\u5199\u6ee1\uff0c\u5199\u6ee1\uff0c\u5199\u6ee1  </p>"},{"location":"fa23/math_analysis1/","title":"\u6570\u5b66\u5206\u6790(\u7532)I(H)  5.5 \u5b66\u5206","text":""},{"location":"fa23/math_analysis1/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u8d3e\u539a\u7389</p>"},{"location":"fa23/math_analysis1/#_2","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"fa23/math_analysis1/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u7b14\u8005\u66f4\u559c\u6b22\u59dc\u6d77\u76ca\u8001\u5e08\u7684\u6559\u5b66\u65b9\u5f0f\uff0c\u4e0d\u8fc7\u8fd9\u56e0\u4eba\u800c\u5f02 \u671f\u672b\u8003\u8bd5\u5360\u6bd460%(\u4e8b\u5b9e\u4e0a\u4f1a\u66f4\u591a\uff0c\u56e0\u4e3a\u5e73\u65f6\u5206\u6570\u53c2\u8003\u671f\u672b\u8003\u8bd5\uff0c\u4f8b\u5982\u4f60\u7684\u603b\u8bc4\u5206\u4e0d\u4f1a\u4f4e\u4e8e\u671f\u672b\u8003\u8bd5\u5377\u9762\u5206)\uff0c\u65a9\u6740\u7ebf40\u5206 \u52a1\u5fc5\u52a1\u5fc5\u6295\u5165\u8db3\u591f\u8db3\u591f\u7684\u91cd\u89c6\uff0c\u8fd9\u662f\u5927\u4e00\u4e0a\u6700\u91cd\u8981\u7684\u4e5f\u662f\u552f\u4e00\u9700\u8981\u683c\u5916\u91cd\u89c6\u7684\u8bfe\u7a0b\uff0c\u52a1\u5fc5\u719f\u7ec3\u638c\u63e1\u6559\u6750\u4e2d\u76f8\u5173\u5b9a\u7406\u7684\u8bc1\u660e\uff0c\u4f8b\u5982Rolle\u4e2d\u503c\u5b9a\u7406\uff0c\u5bfc\u51fd\u6570\u7684\u4ecb\u8d28\u5b9a\u7406\uff0cCantor\u5b9a\u7406\u7b49\uff0c\u5fc5\u8981\u65f6\u80cc\u51fa\u8fd9\u4e9b\u5b9a\u7406\u76f8\u5173\u7684\u8bc1\u660e\uff0c\u5982\u679c\u671f\u672b\u8003\u8bd5\u7684\u8bc1\u660e\u4e0d\u5168\u5bf9\u5927\u6982\u7387\u5f97\u7684\u5206\u5f88\u5c11 \u8bf7\u52a1\u5fc5\u7559\u51fa\u81f3\u5c115\u5929\u65f6\u95f4\u590d\u4e60\uff0c\u6570\u5206II\u540c\u7406  </p>"},{"location":"fa23/military_training/","title":"\u519b\u8bad  2.0 \u5b66\u5206","text":""},{"location":"fa23/military_training/#_1","title":"\u6388\u8bfe\u8001\u5e08","text":"<p>/ </p>"},{"location":"fa23/military_training/#_2","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u6ca1\u4ec0\u4e48\u597d\u5efa\u8bae\u7684\uff0c\u8ba9\u5e72\u561b\u5c31\u5e72\u561b\uff0c\u4e0d\u8ba9\u5e72\u561b\u5c31\u4e0d\u5e72\u561b \u901a\u8baf\u7a3f\u8be5\u5199\u5199\uff0c\u6d3b\u7740\u5c31\u884c\u4e86\uff0c\u7ee9\u70b9\u4e5f\u522b\u8981\u6c42\u5565\u4e86 \u6ce8\u610f\u9632\u6652  </p>"},{"location":"fa23/modern_history/","title":"\u4e2d\u56fd\u8fd1\u73b0\u4ee3\u53f2\u7eb2\u8981(H)  3.0 \u5b66\u5206","text":""},{"location":"fa23/modern_history/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u7518\u94a7\u5148</p>"},{"location":"fa23/modern_history/#_2","title":"\u8ba4\u5b9a","text":"<p>\u601d\u653f\u519b\u4f53\u8bfe</p>"},{"location":"fa23/modern_history/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u7518\u8001\u5e08\u5c24\u5176\u70ed\u7231\u5b87\u5b99\u76f8\u5173\uff0c\u8bf7\u5c3d\u53ef\u80fd\u5728\u4f60\u7684\u4f5c\u4e1a\u4e2d\u4f53\u73b0\uff0c\u5e76\u5207\u5b9e\u5730\u601d\u8003\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u7518\u8001\u5e08\u7684\u7ed9\u5206\u76f8\u5f53\u4e0d\u9519 \u671f\u672b\u8003\u8bd5\u6293\u7d27\u65f6\u95f4\uff0c\u4e3b\u89c2\u9898\u627e\u51c6\u518d\u52a8\u7b14  </p>"},{"location":"fa23/morality_law/","title":"\u601d\u60f3\u9053\u5fb7\u4e0e\u6cd5\u6cbb  3.0\u5b66\u5206(not2.0)","text":""},{"location":"fa23/morality_law/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5355\u73cf\u6167\uff08\u56fe\u70752303\u73ed\u4e3b\u4efb\uff09</p>"},{"location":"fa23/morality_law/#_2","title":"\u8ba4\u5b9a","text":"<p>\u601d\u653f\u519b\u4f53\u8bfe</p>"},{"location":"fa23/morality_law/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<ul> <li>\u4e0d\u8981\u8fdf\u5230\u3001\u66f4\u4e0d\u8981\u7f3a\u8bfe\uff08\u636e\u8bf4\u7f3a\u4e00\u6b21-5\u5206\u5e73\u65f6\u5206\u4e0d\u8fc7\u597d\u50cf\u4e5f\u6ca1\u6267\u884c\uff1f\uff09</li> <li>sjh\u7684\u5e73\u65f6\u4efb\u52a1\u4e0d\u7b97\u591a\uff0c\u4e00\u6b21\u5c0f\u4f5c\u4e1a+\u8bfb\u4e66\u601d\u7ef4\u5bfc\u56fe+\u5c0f\u7ec4\u4e3b\u9898\u5c55\u793a</li> <li>\u671f\u672b\u8003\u8bd5\u4e0d\u7528\u590d\u4e60\u592a\u591a\uff0c\u5199\u6ee1\u5373\u53ef</li> </ul>"},{"location":"fa23/orienteering/","title":"\u5b9a\u5411\u8d8a\u91ce  1.0\u5b66\u5206","text":""},{"location":"fa23/orienteering/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5f20\u9510</p>"},{"location":"fa23/orienteering/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4f53\u80b2\u8bfe</p>"},{"location":"fa23/orienteering/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5b9a\u5411\u8d8a\u91ce\u662f\u6700\u786c\u6838\u7684\u4f53\u80b2\u8bfe\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u5212\u6c34\uff0c\u5e73\u65f6\u4e0a\u8bfe\u7684\u56fe\u90fd\u53ef\u4ee5\u4e0d\u8dd1\uff08\u4e0d\u8bb0\u5f55\u6210\u7ee9\uff09\uff0c\u51fa\u53bb\u6e9c\u8fbe\u4e00\u5708\u56de\u64cd\u573a\u5373\u53ef \u671f\u672b\u4e09\u6b21\u8003\u6838\u5927\u7ea6\u5728\u51ac/\u590f456\u5468\u7684\u5468\u65e5\uff0c\u4f9d\u6b21\u4e3a\u7389\u6cc9\uff08\u96be\u5ea6\u9002\u4e2d\uff09\u3001\u690d\u7269\u56ed\uff08\u6076\u5fc3\uff09\u3001\u534e\u5bb6\u6c60\uff08\u8f83\u7b80\u5355\uff09\uff0c\u5f3a\u70c8\u5efa\u8bae\u5bfb\u627e\u81f3\u5c11\u4e00\u4e2a\u642d\u5b50\u966a\u8dd1\uff0c\u6700\u540e\u6210\u7ee9\u5e94\u8be5\u662f\u4e09\u6b21\u4e2d\u53d6\u4e24\u6b21\uff08\u6240\u4ee5\u7406\u8bba\u4e0a\u690d\u7269\u56ed\u53ef\u4ee5\u4e0d\u53bb\uff09 \u907f\u96f7\u5468\u5e7f\u8d22\uff0c\u5e26\u8fc7\u8bfe\uff0c\u4f53\u9a8c\u76f8\u5f53\u4e0d\u597d  </p>"},{"location":"fa23/political_philosophy/","title":"\u8fd1\u4ee3\u897f\u65b9\u653f\u6cbb\u54f2\u5b66\u5bfc\u8bba  2.0\u5b66\u5206","text":""},{"location":"fa23/political_philosophy/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5305\u5927\u4e3a</p>"},{"location":"fa23/political_philosophy/#_2","title":"\u8ba4\u5b9a","text":"<p>\u901a\u8bc6\u57fa\u7840\u8bfe\uff1a\u4e16\u754c\u6587\u660e</p>"},{"location":"fa23/political_philosophy/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>bdw\u552f\u4e00\u771f\u795e\uff0c\u4e0a\u8bfe\u6709\u8da3\u4efb\u52a1\u5c11\uff0c\u601d\u7ef4\u6df1\u523b\u4eba\u53c8\u597d\uff0c\u672c\u4eba\u6709\u5e78\u5728\u6b64\u95e8\u8bfe\u5f00\u8bbe\u7684\u7b2c\u4e00\u5b66\u671f\u5c31\u6070\u5de7\u9009\u5230 \u5e73\u65f6\u4efb\u52a1\u53ea\u6709\u4e34\u8fd1\u5b66\u671f\u672b\u7684\u4e00\u6b21\u4f5c\u4e1a\uff08\u4e09\u4e2a\u5c0f\u9898\u5e76\u9650\u5236\u5b57\u6570\u4e0a\u9650\uff09 \u5f00\u5377\u671f\u672b\u8003\u8bd5\u5efa\u8bae\u643a\u5e26\u8bfe\u7a0b\u6559\u6750\uff0c\u5c3d\u91cf\u53d1\u6325\u5373\u53ef\uff0c\u7ed9\u5206\u4e5f\u4e0d\u7528\u62c5\u5fc3  </p>"},{"location":"fa23/programming/","title":"\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u7b97\u6cd5\u57fa\u7840  4.0\u5b66\u5206","text":""},{"location":"fa23/programming/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u4f55\u94a6\u94ed</p>"},{"location":"fa23/programming/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"fa23/programming/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>hqm\u5728\u6559\u5b66\u4e0a\u8fdc\u4e0d\u5982wk\"\u5148\u8fdb\"\uff0c\u4f8b\u5982\uff1a\u4e00\u76f4\u4f7f\u7528dev-c++\uff0c\u4f46\u5728\u6559\u5b66\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u65b9\u9762\u5df2\u7ecf\u8db3\u591f\u4e86 \u6ca1\u6709wk\u7684\u8865\u5206\u96c6\u4f46\u7ed9\u5206\u8fd8\u7b97\u4e0d\u9519 \u5b9e\u9a8c\u8bfe\u53ef\u4ee5\u4e0d\u7528\u53bb\u673a\u623f\uff0c\u5982\u679c\u9047\u5230\u5b9e\u9a8c\u4e0d\u592a\u4f1a\u505a\uff0c\u6765\u4e0d\u53ca\u505a\u7eaf\u5c5e\u6b63\u5e38\u73b0\u8c61\uff0c\u8bf7\u5927\u80c6\u4e0e\u52a9\u6559\u3001\u540c\u5b66\u4ea4\u6d41\uff0c\u6700\u540e\uff0c\u6ca1\u5fc5\u8981\u4e00\u5207\u90fd\u8ffd\u6c42\u5b8c\u7f8e~ \u672c\u8bfe\u7a0b\u5728\u591a\u79cd\u6392\u5e8f\uff0c\u591a\u6587\u4ef6\u7f16\u7a0b\uff0c\u94fe\u8868\u90e8\u5206\u53ef\u80fd\u8f83\u96be\u7406\u89e3\u4e0e\u5168\u9762\u638c\u63e1\uff0c\u4f46\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u90e8\u5206\u662f\u540e\u7eed\u8bfe\u7a0b\uff08\u4e3b\u8981\u662ffds\uff09\u7684\u8854\u63a5\uff0c\u671f\u672b\u8003\u8bd5\u7684\u91cd\u70b9\u505c\u7559\u5728\u6570\u7ec4\uff0c\u53d8\u91cf\u7c7b\u578b\u7b49\uff0c\u94fe\u8868\u53ea\u8003\u5bdf\u57fa\u672c\u7684\u6982\u5ff5\u4e0e\u7b80\u5355\u7684\u7a0b\u5e8f\u586b\u7a7a\uff0c\u8003\u524d\u5728\u7af9\u56ed\u8f85\u5b66\u7f51\u7ad9\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u4e13\u9898\u5237\u4e0a\u4e00\u4e9b\u5c31\u591f\u4e86\u3002 \u4ecd\u7136\u518d\u6b21\u63a8\u8350\u7cfb\u7edf\u77e5\u8bc6\u62fe\u9057\u7cfb\u5217\uff0c\u81f3\u5c11\u5728\u5927\u4e00\u7406\u89e3\u5e76\u8fd0\u7528git\uff0cmarkdown\uff0clinux \u4e0d\u8fc7\u4e0d\u7406\u89e3\u4e5f\u6ca1\u5173\u7cfb\uff0c\u6709\u4e9b\u90fd\u4f1a\u88ab\u8feb\u7406\u89e3\u7684\uff08\u5e94\u8be5\u5427\uff09\uff0c\u4f46\u4e3b\u52a8\u63d0\u65e9\u7cfb\u7edf\u6027\u5730\u4e86\u89e3\uff0c\u603b\u5f52\u66f4\u597d\u4e00\u4e9b\u5bf9\u5427(^_^)  </p>"},{"location":"fa23/psychology/","title":"\u5fc3\u7406\u5b66\u53ca\u5e94\u7528  1.5\u5b66\u5206","text":""},{"location":"fa23/psychology/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u674e\u5cd9</p>"},{"location":"fa23/psychology/#_2","title":"\u8ba4\u5b9a","text":"<p>\u901a\u8bc6\u57fa\u7840\u8bfe\uff1a\u751f\u547d\u63a2\u7d22</p>"},{"location":"fa23/psychology/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u674e\u5cd9\u8001\u5e08\u8bb2\u89e3\u7684\u5185\u5bb9\u4e3b\u8981\u4fa7\u91cd\u8ba4\u77e5\u5fc3\u7406\u5b66\uff0c\u8bfe\u7a0b\u5185\u5bb9\u8fd8\u662f\u5341\u5206\u6709\u8da3\u7684 \u672c\u95e8\u8bfe\u7a0b\u6700\u5927\u7684\u96be\u70b9\u5728\u4e8e\u9605\u8bfb\u82f1\u6587\u6587\u732e\uff0c\u8bfe\u5802\u4e0a\u6b63\u5e38\u53d1\u8a00\u4e0e\u7b7e\u5230\uff0c\u5fc3\u7406\u5b66\u5b9e\u9a8c\u65f6\u957f\u63a5\u8fd1\u6ee1\uff0c89\u4e0d\u662f\u95ee\u9898  </p>"},{"location":"fa23/reform_and_openup/","title":"\u4e2d\u56fd\u6539\u9769\u5f00\u653e\u53f2  1.5\u5b66\u5206","text":""},{"location":"fa23/reform_and_openup/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u53f6\u5efa\u4eae\uff08\u6302\u540d\uff09  \u5b9e\u9645\u4e3a8\u540d\u6559\u5e08</p>"},{"location":"fa23/reform_and_openup/#_2","title":"\u8ba4\u5b9a","text":"<p>\u56db\u53f2</p>"},{"location":"fa23/reform_and_openup/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u7ed9\u5206\u53f2 4\u4e2a\u601d\u8003\u9898+\u4e00\u7bc7\u671f\u672b\u8bba\u6587 \u552f\u4e00\u7684\u597d\u5904\u662f\u4e0d\u7528\u5230\u8bfe\uff0c\u5efa\u8bae\u4e00\u6b21\u90fd\u4e0d\u8981\u53bb\uff0c\u66f4\u5efa\u8bae\u4e0d\u9009  </p>"},{"location":"fa24/","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u4e00\u4e2a\u5408\u683c\u7684\u8001\u6cb9\u6761\u5e94\u8be5\u5b66\u4f1a  </p> <ul> <li>Read the manuals and papers</li> <li>Improve your English</li> <li>Be a smart researcher</li> <li>Self-learning</li> <li>Reserve KFC breakfast</li> </ul>"},{"location":"fa24/ads/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790  4.0 \u5b66\u5206","text":""},{"location":"fa24/ads/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u6768\u6d0b</p>"},{"location":"fa24/ads/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"fa24/ads/#_3","title":"\u8bfe\u7a0b\u6559\u6750","text":"<p>\u7b97\u6cd5\u5bfc\u8bba \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790  </p>"},{"location":"fa24/ads/#_4","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>homework 10% \uff08\u4f1a\u5728\u671f\u672b\u91cd\u65b0\u5f00\u653e\uff09</li> <li>discussion 10% \uff08\u5373\u70b9\u540d\uff09  </li> <li>project 10% * 2 + 10%\u5c55\u793a = 30%  </li> <li>mid-term 10% \uff08\u53ef\u88ab\u671f\u672b\u8986\u76d6\uff09 --------------total &lt;= 60--------------</li> <li>final-exam 40%(\u5224\u65ad13 * 2% + \u9009\u62e920 * 3% + \u7a0b\u5e8f\u586b\u7a7a 6% + \u7f16\u7a0b/\u51fd\u6570 8%)</li> </ul>"},{"location":"fa24/ads/#_5","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8fd9\u95e8\u8bfe\u7a0b\u662f\u51fa\u4e86\u540d\u7684\u6298\u78e8\uff0c\u6bcf\u8282\u8bfe\u540e\u82b190\u5206\u949f\u590d\u4e60\u5305\u62ec\u770b\u7b97\u6cd5\u5bfc\u8bba\u548c\u8bb2\u4e49\u662f\u5fc5\u8981\u7684 \u5bf9\u4e8e\u671f\u4e2d\u8003\u8bd5\uff0c\u4e0d\u8981\u5bc4\u5e0c\u671b\u4e8e\u8003\u7684\u5f88\u9ad8\uff0c\u5927\u90e8\u5206\u540c\u5b66\u7684\u5f97\u5206\u7387\u90fd\u572860-80\u5de6\u53f3\uff0c\u8001\u8001\u5b9e\u5b9e\u5b8c\u6210\u81f3\u5c113\u4e2abonus\u662f\u5fc5\u8981\u7684 fa24Yangyang\u73ed\u7ea7\u76848\u4e2aproject\u5305\u62ec\uff1a\uff08\u96be\u5ea61-10\u4ece\u4f4e\u5230\u9ad8\uff09  </p> \u540d\u79f0 \u96be\u5ea6 Binary Search Trees 1 Shortest Path Algorithm with Heaps 6 Safe Fruit 4 Beautiful Subsequence 5 Huffman Code 2 Texture Packing 4 Skip List 1 Map Reduce 9 <p>leetcode\u76f8\u5173\u7684\u9898\u76ee\u53ef\u4ee5\u5237\u4e00\u4e9b\u63d0\u9ad8\u90e8\u5206\u7ae0\u8282\u7684\u7406\u89e3\u4f46\u4e0d\u9700\u8981\u8fc7\u591a\uff0c\u5bf9\u4e8e\u671f\u672b\u8003\u8bd5\u7684\u7f16\u7a0b\u9898\uff0c\u53ea\u9700\u4e5f\u5fc5\u987b\u638c\u63e1\u52a8\u6001\u89c4\u5212\u7684\u7ecf\u5178\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u5f0f\uff0c\u5305\u62ec\u5404\u7c7b\u80cc\u5305\u95ee\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5faa\u73af\u8ba1\u7b97\u987a\u5e8f\uff0c\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u7b49\uff0c\u8fd1\u5e74\u6765\u9898\u76ee\u96be\u5ea6\u6bd4\u8f83\u5747\u8861\uff0c\u540c\u6837\u8003\u8bd5\u65f6\u6ce8\u610f\u6570\u636e\u7ed3\u6784\u90e8\u5206\u3001\u7a0b\u5e8f\u586b\u7a7a\u7684\u7ed3\u6784\u4f53\u3001\u51e0\u4e2a\u6b63\u786e\u51e0\u4e2a\u9519\u8bef\u8981\u53cd\u590d\u68c0\u67e5    </p> <p>ADS\u8bb2\u4e49 \u6768\u6d0bsp24\u671f\u4e2d\u771f\u9898 fa24\u671f\u672b\u771f\u9898 sp24\u671f\u672b\u771f\u9898 \u5176\u4f59\u671f\u4e2d\u671f\u672b\u9898\u70b9\u51fb\u8fdb\u5165\u8bfe\u7a0b\u9875\u67e5\u770b </p>"},{"location":"fa24/ads/note/","title":"Advanced Data Structure and Algorithm Analysis","text":""},{"location":"fa24/ads/note/#lecture-1-avl-treesplay-tree-and-amortized-analysis","title":"Lecture 1 : AVL Tree,Splay Tree and Amortized Analysis","text":""},{"location":"fa24/ads/note/#avl-tree","title":"AVL Tree","text":"<p>[Target]Speed up searching   Problem: worst case complexity of BST may be O(N)   [Definition]T\u662f\u975e\u7a7a\u4e8c\u53c9\u6811\uff08\u7a7a\u6811\u7684\u9ad8\u5ea6:=-1\uff09\uff0cT\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\uff0c\u5982\u679c   (1)\u5de6\u53f3\u5b50\u6811\u662f\u9ad8\u5ea6\u5e73\u8861\u7684   (2)\u5de6\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee|h<sub>L</sub>-h<sub>R</sub>|&lt;=1   \u5b9a\u4e49BF(node) = h<sub>L</sub>-h<sub>R</sub> \u4e3a\u67d0\u4e2a\u8282\u70b9\u7684\u5e73\u8861\u56e0\u5b50\uff0c\u5982\u679cT\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\uff0c\u5219BF(node) = -1,0,1   Rotation\uff1a   (1)single rotation:LL &amp; RR    \u4fdd\u7559\u4e86\u5de6\u5c0f\u53f3\u5927\u7684\u987a\u5e8f   \u5177\u4f53\u6267\u884c\u89c4\u5219\uff1a    RR\uff08\u63d2\u5165\u4f4d\u7f6e\uff0c\u662f\u5e73\u8861\u56e0\u5b50\u8d85\u8fc71\u7684\u8282\u70b9\u7684\u53f3\u513f\u5b50\u7684\u53f3\u5b50\u6811\uff09 rotation:\u627e\u5230\u7b2c\u4e00\u4e2a\u5e73\u8861\u56e0\u5b50\u8d85\u8fc71\u7684\u7236\u8282\u70b9\uff0c\u65cb\u8f6c\u7236\u8282\u70b9\u7684\u53f3\u513f\u5b50 Left single     LL rotation:\u627e\u5230\u7b2c\u4e00\u4e2a\u5e73\u8861\u56e0\u5b50\u8d85\u8fc71\u7684\u7236\u8282\u70b9\uff0c\u65cb\u8f6c\u7236\u8282\u70b9\u7684\u5de6\u513f\u5b50 Right single \u4e0a\u4f8b\u4e2d\u65cb\u8f6cMar\u4e5f\u6210\u7acb\uff0c\u601d\u8003:\u6784\u9020\u4e00\u4e2acase\uff0c\u4f7f\u5f97\u65cb\u8f6cMar\u4e0d\u6210\u7acb    </p> <p>  LR rotation:\u627e\u5230\u7b2c\u4e00\u4e2a\u5e73\u8861\u56e0\u5b50\u8d85\u8fc71\u7684\u7236\u8282\u70b9\uff0c\u5c06\u5176\u5de6\u513f\u5b50\u7684\u53f3\u513f\u5b50\u5148\u5de6\u65cb\u518d\u53f3\u65cb double rotation   RL rotation:\u627e\u5230\u7b2c\u4e00\u4e2a\u5e73\u8861\u56e0\u5b50\u8d85\u8fc71\u7684\u7236\u8282\u70b9\uff0c\u5c06\u5176\u53f3\u513f\u5b50\u7684\u5de6\u513f\u5b50\u5148\u53f3\u65cb\u518d\u5de6\u65cb double rotation   \u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\uff1a   </p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a   T = O(h)   h\u4e0en\u5173\u7cfb\u7684\u8bc1\u660e\uff1a   n<sub>h</sub>\u662f\u9ad8\u5ea6\u4e3ah\u7684AVL\u6811\u7684\u6700\u5c11\u8282\u70b9\u6570\uff0c   n<sub>h</sub> = n<sub>h-1</sub> + n<sub>h-2</sub> + 1  n<sub>h</sub> = F<sub>h+3</sub> - 1,F\u4e3aFibonacci\u6570    </p>"},{"location":"fa24/ads/note/#splay-tree","title":"Splay Tree","text":"<p>[Target]\u4ece\u7a7a\u6811\u5f00\u59cb\u7684\u4efb\u610f\u8fde\u7eedM\u4e2a\u64cd\u4f5c\u6700\u591a\u82b1\u8d39O(MlogN)time   \u644a\u8fd8\u65f6\u95f4\u590d\u6742\u5ea6\uff1aWorst time complexity may be O(N) but Amortized time complexity O(logN)    Zig-zag double rotation,\u4e24\u6b21\u65cb\u8f6cX\uff08LR rotation\uff09   Zig-zig \u4e24\u6b21single rotation\uff0c\u5148\u53f3\u65cbP\uff0c\u518d\u53f3\u65cbX   \u76ee\u7684\uff1a\u5c06\u8981\u67e5\u8be2\u7684\u8282\u70b9\u65cb\u8f6c\u5230\u6839\u8282\u70b9\u7684\u540c\u65f6\u5c06\u6811\u9ad8\u964d\u4f4e\u81f3\u5c11\u4e00\u534a   Deletion\uff1a   (1)Find X(X will be the root)   (2)Delete X   (3)FindMax(T<sub>L</sub>)(T<sub>L</sub> will be the root\uff0c\u6811\u6ca1\u6709\u53f3\u5b50\u6811)    (4)Make T<sub>R</sub> the right child of the root of T<sub>L</sub> </p>"},{"location":"fa24/ads/note/#amortized-analysis","title":"Amortized Analysis","text":"<p>worst-case &gt;= amortized bound &gt;= average-case   (\u644a\u8fd8\u6210\u672c\u662f\u5e73\u5747\u6210\u672c\u7684\u4e0a\u754c\uff0c\u540e\u7eed\u4fdd\u8bc1\u4efb\u610f\u65f6\u523b\u03a3C<sub>i</sub> &gt;= \u03a3c<sub>i</sub>\u7684\u539f\u56e0)   amortized analysis:\u591a\u6b21\u64cd\u4f5c\u7684\u5e73\u5747\u503c \u4e0e\u6982\u7387\u65e0\u5173    </p> <ul> <li>Aggregate analysis \u805a\u5408\u6cd5\uff1an\u6b21\u64cd\u4f5c\uff0cworst time T(n)\uff0camortized cost T(n)/n   \u3010example\u3011MultiPop Stack:   worst time bound:\u8ba4\u4e3a\u6700\u5dee\u7684\u64cd\u4f5c\u5c31\u662f\u4e00\u6b21 MultiPop n \u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u5f97\u5230\u8fde\u7eed n \u6b21\u64cd\u4f5c\u6700\u5dee\u65f6\u95f4\u4e3a O(n<sup>2</sup>)   Amortized bound:\u53ea\u8003\u8651\u53ef\u80fd\u5e8f\u5217\u9047\u5230\u7684\u6700\u5dee\u60c5\u51b5\uff0c\u6392\u9664\u6389\u6700\u5dee\u60c5\u51b5\u5206\u6790\u81c6\u60f3\u7684\u4e0d\u53ef\u80fd\u7684\u5e8f\u5217\u3002   \u4e8e\u662f\u6211\u4eec\u5f00\u59cb\u601d\u8003\u8fd9\u4e00\u652f\u6301 MultiPop \u64cd\u4f5c\u7684\u6808\uff0c\u5728\u4ece\u7a7a\u6808\u5f00\u59cb\u7684\u8fde\u7eed n \u6b21\u64cd\u4f5c\u4e2d\uff0c\u6700\u5dee\u7684\u60c5\u51b5\u662f\u4ec0\u4e48\uff1a\u5b9e\u9645\u4e0a\u5c31\u662f\u5148 Push n\u22121 \u4e2a\u7136\u540e\u6700\u540e\u4e00\u6b21\u64cd\u4f5c\u4e00\u6b21\u6027 Multipop \u51fa\u6240\u6709\u5143\u7d20\u3002   \u89e3\u91ca\uff1a\u56e0\u4e3a n \u6b21\u64cd\u4f5c\u662f\u56fa\u5b9a\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u76ee\u6807\u662f\uff0c\u56fa\u5b9a n \u7684\u60c5\u51b5\u4f7f\u5f97\u4e0b\u603b\u7684\u4ee3\u4ef7\u6700\u5927\uff0c\u666e\u901a\u7684 Push \u548c Pop \u90fd\u662f 1 \u6b21\u64cd\u4f5c\u5bf9\u5e941 \u4e2a\u5355\u4f4d\u4ee3\u4ef7\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5bc4\u5e0c\u671b\u4e8e\u5e8f\u5217\u4e2d MultiPop \u4ee3\u4ef7\u6700\u5927\uff0c\u90a3\u4ee3\u4ef7\u6700\u5927\u7684\u60c5\u51b5\u5c31\u662f\u53ea MultiPop\u4e00\u6b21\uff0c\u4e14\u5c31\u5728\u6700\u540e\u4e00\u6b21\uff0c\u56e0\u4e3a\u5982\u679c\u53ea MultiPop \u4e00\u6b21\uff0c\u4e0d\u5728\u6700\u540e\u4e00\u6b21\uff0c\u663e\u7136\u8fd9\u6b21 MultiPop \u4ee3\u4ef7\u6bd4 n \u2212 1\u5c0f\uff1b\u5982\u679c MultiPop \u591a\u6b21\uff0c\u90a3\u4e48 Push \u64cd\u4f5c\u7684\u4e2a\u6570\u5c11\u4e86\uff0c\u6240\u4ee5 MultiPop \u80fd\u5f39\u51fa\u7684\u6bd4 n \u2212 1 \u5c11\uff0c\u6240\u4ee5\u4ee3\u4ef7\u4e5f\u5c11\u3002   \u7efc\u4e0a\uff0c\u4ece\u7a7a\u6808\u5f00\u59cb\u7684\u8fde\u7eed n \u6b21\u64cd\u4f5c\u4e2d\uff0c\u6700\u5dee\u7684\u64cd\u4f5c\u4ee3\u4ef7\u662f 2n \u2212 2\uff0c\u56e0\u6b64\u644a\u8fd8\u5206\u6790\u590d\u6742\u5ea6\u4e3a O(1)    </li> <li> <p>Accounting method \u6838\u7b97\u6cd5\uff1a\u5c06\u65f6\u95f4\u957f\u7684\u64cd\u4f5c\u6210\u672c\u644a\u5230\u65f6\u95f4\u77ed\u7684\u64cd\u4f5c\u4e0a     amortized cost C<sub>i</sub>,actual cost c<sub>i</sub>,\u4efb\u610f\u65f6\u523b\u03a3C<sub>i</sub> &gt;= \u03a3c<sub>i</sub>,credits:\u5b58\u6b3e     credits = C<sub>i</sub> - c<sub>i</sub>  \u3010example\u3011MultiPop Stack\uff1a   c<sub>i</sub> for push:1,pop1,multipop:k   C<sub>i</sub> for push:2,pop:0,multipop:0   credits push:+1,pop:-1,multipop:-1 for each +1   \u68c0\u67e5\uff1aCredits &gt;= 0 for every n   \u5168\u662fpush:O(n)= \u03a3C<sub>i</sub> &gt;= \u03a3c<sub>i</sub>  =&gt; T<sub>amortized</sub> = O(n)/n = O(1)    </p> </li> <li> <p>Potential method \u52bf\u80fd\u6cd5\uff1a(\u84c4\u529b\u653e\u5927\u62db\u6253\u4f24\u5bb3)     C<sub>i</sub> - c<sub>i</sub> = Credit<sub>i</sub>(\u53ef\u6b63\u53ef\u8d1f) = \u03a6(D<sub>i</sub>)- \u03a6(D<sub>i-1</sub>)\uff08Potential function\uff09\u7528\u4e00\u4e2a\u7edf\u4e00\u51fd\u6570\u8868\u8fbecredit     =&gt; \u03a3C<sub>i</sub> = \u03a3c<sub>i</sub> + \u03a6(D<sub>n</sub>) - \u03a6(D<sub>0</sub>)     \u6b64\u65f6\u03a3C<sub>i</sub> &gt;= \u03a3c<sub>i</sub> &lt;=&gt; \u03a6(D<sub>n</sub>) &gt; \u03a6(D<sub>0</sub>),\u8fd9\u53ea\u9700\u8981\u03a6(D<sub>0</sub>) = 0\u5373\u53ef   \u3010example\u3011MultiPop Stack\uff1a   \u03a6(D<sub>i</sub>) = The number of objects in the stack D<sub>i</sub>  \u68c0\u67e5\uff1a\u03a6(D<sub>i</sub>) &gt;= 0 = \u03a6(D<sub>0</sub>)   \u4e3a\u4fbf\u4e8e\u7406\u89e3\uff0c\u8ba1\u7b97push,pop,multipop\u7684credits\uff08\u5b9e\u9645\u64cd\u4f5c\u65f6\u53ea\u9700\u76f4\u63a5\u6c42\u548c\u5373\u53ef\uff09    \u03a3C<sub>i</sub> = \u03a3O(1) = O(n)    </p> </li> </ul> <p>potential function\u7684\u8981\u6c42:   \u03a6(D<sub>n</sub>) &gt; \u03a6(D<sub>0</sub>)   \u5bf9\u4efb\u610f\u64cd\u4f5c\uff0c\u03a6(D<sub>i</sub>) - \u03a6(D<sub>i-1</sub>) \u5c3d\u53ef\u80fd\u5c0f\uff08\u5e38\u6570\uff09    </p> <p>\u9009\u62e9\u6b63\u786e\u7684potential function:\u8ba1\u7b97\u4e0d\u540c\u64cd\u4f5c\u7684C<sub>i</sub> = c<sub>i</sub> + \u03a6(D<sub>i</sub>) - \u03a6(D<sub>i-1</sub>)\uff0c\u9009\u62e9\u6700\u5c0f\u7684(\u901a\u5e38\u8981\u6c42\u90fd\u4e3a\u5e38\u6570)</p> <p>\u7528Amortized analysis \u5206\u6790Splay tree  \u5c1d\u8bd5\uff1a   \u03a6(D<sub>i</sub>) = \u8282\u70b9\u7684\u6df1\u5ea6   \u6df1\u5ea6\u53d8\u5316\u7684\u8282\u70b9\u8fc7\u591a\uff0c\u65e0\u6cd5\u8ba1\u7b97   \u03a6(D<sub>i</sub>) = \u8282\u70b9\u7684\u5b50\u6811\u7684\u8282\u70b9\u6570    \u53d1\u751f\u53d8\u5316\u7684\u662fG,P,X,\u4f46X\u6210\u500d\u589e\u52a0\uff0cP\u6210\u500d\u7f29\u51cf\uff0c\u03a6(D<sub>i</sub>) - \u03a6(D<sub>i-1</sub>) \u4e0d\u591f\u5c0f   \u89e3\u51b3\uff1a\u5bf9\u8282\u70b9\u7684\u540e\u4ee3\u6570\u91cf\u53d6\u5bf9\u6570   \u03a6(D<sub>i</sub>) = \u03a3logS(i) \u5176\u4e2dS(i)\u662fi\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u8282\u70b9\u4e2a\u6570\uff08\u5305\u62eci\uff09  logS(i)\uff1arank of the tree   \u5f15\u7406\uff1aa + b &lt;= c,log a + log b &lt;= 2 log c - 2   R(X)\u8868\u793a\u8282\u70b9X\u7684rank\uff0cR<sub>1</sub>\uff0cR<sub>2</sub>\u5206\u522b\u8868\u793a\u64cd\u4f5c\u524d\u540e\u7684rank   zig:C<sub>i</sub> = 1\uff08\u5b9e\u9645\u4ee3\u4ef7\uff09 + R<sub>2</sub>(X) - R<sub>1</sub>(X) + R<sub>2</sub>(P) - R<sub>1</sub>(P) &lt;= 1 + R<sub>2</sub>(X) - R<sub>1</sub>(X)\uff08\u653e\u7f29\uff09   zig-zag:C<sub>i</sub> = 2\uff08\u5b9e\u9645\u4ee3\u4ef7\uff09 + R<sub>2</sub>(X) - R<sub>1</sub>(X) + R<sub>2</sub>(P) - R<sub>1</sub>(P) + R<sub>2</sub>(G) - R<sub>1</sub>(G)    R<sub>2</sub>(X) = R<sub>1</sub>(G)    C<sub>i</sub> &lt; 2 + 2(R<sub>2</sub>(X) - R<sub>1</sub>(X)) \u4f46\u4e0d\u77e5\u9053zig-zag\u64cd\u4f5c\u8981\u6267\u884c\u51e0\u6b21\uff0c\u56e0\u6b64\u4e0d\u77e5\u9053\u5e38\u65702\u4f1a\u4e58\u4ee5\u51e0\u500d\uff0c\u4ece\u800c\u65e0\u6cd5\u8ba1\u7b97   \u5229\u7528\u5f15\u7406\u6709\uff1aC<sub>i</sub> &lt;= 2(R<sub>2</sub>(X) - R<sub>1</sub>(X))   zig-zig:C<sub>i</sub> = 2\uff08\u5b9e\u9645\u4ee3\u4ef7\uff09 + R<sub>2</sub>(X) - R<sub>1</sub>(X) + R<sub>2</sub>(P) - R<sub>1</sub>(P) + R<sub>2</sub>(G) - R<sub>1</sub>(G) = 2 + R<sub>1</sub>(X) + R<sub>2</sub>(G) + R<sub>2</sub>(P) - R<sub>1</sub>(P) - 2R<sub>1</sub>(X) &lt; 2 + 2R<sub>2</sub>(X) - 2 + R<sub>2</sub>(X) - R<sub>1</sub>(X) - 2R<sub>1</sub>(X) = 3(R<sub>2</sub>(X) - R<sub>1</sub>(X))     </p> <p>\u6c42\u548c\uff1a   zig\uff1a\u81f3\u591a1\u6b21 1 + R<sub>2</sub>(X) - R<sub>1</sub>(X) &lt; 1 + 3(R<sub>2</sub>(X) - R<sub>1</sub>(X))   zig-zag:2(R<sub>2</sub>(X) - R<sub>1</sub>(X)) &lt; 3(R<sub>2</sub>(X) - R<sub>1</sub>(X))   zig-zig:3(R<sub>2</sub>(X) - R<sub>1</sub>(X))   \u03a3 = 3(R<sub>n</sub>(X) - R<sub>1</sub>(X)) + 1 + 3(R<sub>n+1</sub>(X) - R<sub>n</sub>(X)) = 3(R<sub>n+1</sub>(X)- R<sub>1</sub>(X)) + 1   C<sub>i</sub> &lt;= 3(R<sub>n+1</sub>(X)- R<sub>1</sub>(X)) + 1 = 3(R(T)- R(X)) + 1 = O(logN)    </p>"},{"location":"fa24/ads/note/#lecture-2-red-black-tree-and-b-tree","title":"Lecture 2 :Red-Black Tree and B+ Tree","text":""},{"location":"fa24/ads/note/#red-black-tree","title":"Red-Black Tree","text":"<p>[Target]balanced BST(parent color key left right)   [Definition]   (1)\u989c\u8272\u7ea2\u6216\u9ed1\uff08\u8fd9\u662f\u53ef\u80fd\u88ab\u7834\u574f\u7684\uff0c\u5728\u5220\u9664\u4e2d\u4f1a\u6709\u6240\u4f53\u73b0\uff09   (2)\u6839\u8282\u70b9\u4e3a\u9ed1   (3)NIL\u4e3a\u9ed1\uff08\u865a\u8282\u70b9\uff0c\u6216\u79f0\u54e8\u5175\u8282\u70b9\uff08\u5916\u90e8\u8282\u70b9\uff09\uff0c\u6240\u6709\u53f6\u8282\u70b9\u4e0e\u6839\u8282\u70b9\u7684parent\u6307\u5411\u7684\u8282\u70b9\uff09   (4)\u7ea2\u8282\u70b9\u7684\u5b69\u5b50\u5168\u4e3a\u9ed1   (5)\u4ece\u4efb\u610f\u8282\u70b9\u51fa\u53d1\u5230\u53f6\u7684\u9ed1\u8272\u8282\u70b9\u6570\u76f8\u540c   [Definition]Black-height:bh(x)\u662f\u4ecex\u5230\u53f6\u5b50\u8d70\u8fc7\u7684\u9ed1\u8272\u8282\u70b9\u7684\u6570\u91cf\uff08\u4e0d\u5305\u542bx\uff09   bh(T) = bh(root)   \u5f15\u7406:N\u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\u9ad8\u5ea6\u4e0a\u754c\u4e3a\\(\\lceil2log(N+1)\\rceil\\)(\u7a7a\u6811\u9ad8\u5ea6\u4e3a0)    </p> <p>\u63d2\u5165\uff1a\u6309BST\u65b9\u6cd5\u63d2\u5165\uff0c\u9ed8\u8ba4\u63d2\u5165\u8282\u70b9\u8272\u4e3a\u7ea2\uff08\u9664\u6839\uff09\uff08\u7ef4\u62a4\u6027\u8d285\uff09\uff0c\u6b64\u65f6\u8fdd\u53cd\u6027\u8d284\u6309\u4ee5\u4e0b\u65b9\u6cd5\u89e3\u51b3\uff0c\u5176\u4e2d\u552f\u4e00\u9700\u8981\u8fed\u4ee3\u7684\u662fcase1\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(logN),case2\u548c3\u4e3aO(1)   </p> <p>\u601d\u8003\u9898\uff1a\u7ea2\u9ed1\u6811\u63d2\u5165\u7684\u4ee3\u7801\u5b9e\u73b0\uff1b\u7b97\u6cd5\u5bfc\u8bba\u5bf9\u7ea2\u9ed1\u6811\u63d2\u5165\u7684\u8bc1\u660e\uff08\u5faa\u73af\u4e0d\u53d8\u5f0f\uff09    </p> <p>\u5220\u9664\uff1a\u5148\u6309\u7167BST\u65b9\u6cd5\u5220\u9664\uff0c    </p> <ul> <li>\u4e24\u4e2a\u5b69\u5b50:\u4e00\u6b65\u4ea4\u6362\u540e\u53d8\u4e3a\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5    </li> <li>\u53ea\u6709\u5de6\u5b69\u5b50\u6216\u53ea\u6709\u53f3\u5b69\u5b50,\u4e00\u5b9a\u9ed1\u7236\u7ea2\u5b50,\u7528\u5b50\u7684\u952e\u503c\u66ff\u4ee3\u7236\u5e76\u5c06\u7236\u4eb2\u53d8\u9ed1\u5373\u53ef    </li> <li>\u6ca1\u6709\u5b69\u5b50:   (1)\u5220\u9664\u7ea2\u8282\u70b9:\u4e0d\u9700\u8981\u989d\u5916\u64cd\u4f5c   (2)\u5220\u9664\u9ed1\u8282\u70b9:\u4e3a\u8981\u5220\u9664\u7684\u8282\u70b9\u589e\u52a0\u4e00\u91cd\u9ed1\u8272\u53d8\u4e3a\u53cc\u9ed1NULL\u8282\u70b9,\u76ee\u6807\u5c31\u53d8\u4e3a\u5c06\u53cc\u9ed1\u53d8\u4e3a\u5355\u9ed1    </li> </ul> <p>case1:\u5144\u5f1f\u662f\u9ed1\u8272   case1.1:\u5144\u5f1f\u81f3\u5c11\u6709\u4e00\u4e2a\u7ea2\u5b69\u5b50   \u6839\u636eparent(p),sibling(s),sibling_red_child(r)\u4e3aLL,RR,LR,RL\u578b    LL:r\u53d8s,s\u53d8p,p\u53d8\u9ed1,\u53f3\u65cbp,\u53cc\u9ed1\u53d8\u5355\u9ed1   RR:r\u53d8s,s\u53d8p,p\u53d8\u9ed1,\u5de6\u65cbp,\u53cc\u9ed1\u53d8\u5355\u9ed1   LR:r\u53d8p,p\u53d8\u9ed1,\u5de6\u65cbs,\u53f3\u65cbp,\u53cc\u9ed1\u53d8\u5355\u9ed1   RL:r\u53d8p,p\u53d8\u9ed1,\u53f3\u65cbs,\u5de6\u65cbp,\u53cc\u9ed1\u53d8\u5355\u9ed1   case1.2:\u5144\u5f1f\u5b69\u5b50\u5168\u4e3a\u9ed1(NULL)   \u5144\u5f1f\u53d8\u7ea2,\u53cc\u9ed1\u4e0a\u79fb   case1.2.1:\u7236\u4eb2\u4e3a\u9ed1,\u8003\u5bdf\u65b0\u5144\u5f1f\u53ca\u5176\u5b69\u5b50\u7684\u60c5\u51b5,\u6267\u884c\u5bf9\u5e94\u64cd\u4f5c    case1.2.2:\u7236\u4eb2\u4e3a\u7ea2,\u7ea2\u53d8\u9ed1\u5373\u53ef   case1.2.3:\u7236\u4eb2\u4e3a\u9ed1\u6839,\u76f4\u63a5\u53bb\u9664\u591a\u51fa\u7684\u9ed1\u5373\u53ef   case2:\u5144\u5f1f\u662f\u7ea2\u8272   s,p\u6362\u8272,p\u5411\u53cc\u9ed1\u8282\u70b9\u65b9\u5411\u65cb\u8f6c,\u518d\u8003\u5bdf\u65b0\u5144\u5f1f\u53ca\u5176\u5b69\u5b50\u7684\u60c5\u51b5,\u6267\u884c\u5bf9\u5e94\u64cd\u4f5c    </p> <p>\u7ea2\u9ed1\u6811\u5220\u9664\u52a8\u753b\uff1aBV16m421u7Tb    </p> <p>\u601d\u8003\u9898\uff1a\u5148\u8fdb\u5165\u540e\u8fdb\u5165 </p> <p>\u7ecf\u9a8c\u7ed3\u8bba\uff1a\u6700\u591aO(1)\u6b21rotation O(logN)\u6b21recolor</p>"},{"location":"fa24/ads/note/#b-tree","title":"B+ Tree","text":"<p>[Target]reduce the times of accessing the disk(relevant to the height of the tree)   [Definition]A B+ Tree of order M(\u9636\u6570:\u5305\u542b\u6700\u591a\u7684\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570):   (1)The root is either a leaf or has between 2 and M children   (2)All nonleaf nodes(except the root)have between \\(\\lceil\\frac{M}{2}\\rceil\\) and M children   \u63a8\u8bba\uff1aAll nonleaf nodes(except the root)have between \\(\\lceil\\frac{M}{2}\\rceil\\)-1 and M - 1 keys   (3)All leaves are at the same depth   (4)Each interior node contains M pointers to the children   (5)\u6839\u8282\u70b9\u7684data\u662f\u5176\u53f3\u5b50\u6811\u4e2d\u6700\u5c0f\u53f6\u8282\u70b9\u7684data    2-3-4 tree/2-3 tree :\u6bcf\u4e2a\u8282\u70b9\u53ef\u80fd\u542b\u6709\u7684\u5b50\u8282\u70b9\u4e2a\u6570(The best choice of M is 3 or 4)    Find:\u6811\u9ad8*\u6bcf\u5c42\u65f6\u95f4   \u6811\u9ad8:O(\\(log_{\\lceil\\frac{M}{2}\\rceil}N\\))   \u6bcf\u5c42\u91c7\u7528\u4e8c\u5206\u67e5\u627e:O(log<sub>2</sub>M)   T = O(\\(log_{\\lceil\\frac{M}{2}\\rceil}N\\) * log<sub>2</sub>M) = O(logN) (\u6362\u5e95\u516c\u5f0f)   Insert:\u627e\u5230\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u63d2\u5165\u770b\u7ed3\u70b9\u662f\u5426\u653e\u5f97\u4e0b\uff0c\u653e\u4e0d\u4e0b\u5c31\u5206\u88c2\uff0c\u5982\u679c\u5206\u88c2\u540e\u5b50\u7ed3\u70b9\u4e2a\u6570\u4e5f\u8fc7\u591a\u5219\u7ee7\u7eed\u5411\u4e0a\u4e00\u5c42\u5206\u88c2\uff0c\u76f4\u5230\u6839\u7ed3\u70b9\u5b69\u5b50\u7206\u6ee1\u5219\u5c06\u6839\u7ed3\u70b9\u5206\u88c2\u5e76\u751f\u6210\u65b0\u7684\u6839\u7ed3\u70b9 \u6ce8\u610f:\u5373\u4f7f\u4e0d\u5206\u88c2,\u53ef\u80fd\u4e5f\u9700\u8981\u66f4\u65b0\u4e0a\u5c42\u8282\u70b9   \u63d2\u5165\u65f6\u4e5f\u53ef\u4ee5\u5f80\u6709\u7a7a\u4f4d\u7684\u5144\u5f1f\u8282\u70b9\u63a8(\u907f\u514d\u5206\u88c2),\u4f46\u4e0d\u80fd\u4e00\u76f4\u63a8,\u5426\u5219\u65f6\u95f4\u590d\u6742\u5ea6\u6321\u4e0d\u4f4f,\u4f7f\u7528\u5144\u5f1f\u6307\u9488\u6216\u7ec8\u6b62\u4e8e\u7236\u4eb2\u8282\u70b9(\u4e0d\u5230\u53d4\u53d4\u8282\u70b9)   \u6811\u9ad8:O(\\(log_{\\lceil\\frac{M}{2}\\rceil}N\\))   \u6bcf\u5c42\u64cd\u4f5c:O(M)(\u4fee\u6539O(M)\u4e2a\u952e\u6307,\u4fee\u6539O(M)\u4e2a\u7236\u5b50\u6307\u9488)   T = O(M * \\(log_{\\lceil\\frac{M}{2}\\rceil}N\\))   Delete:\u5148\u8bd5\u56fe\u501f\u5144\u5f1f\u8282\u70b9\u7684\u952e\u503c,\u4e0d\u591f\u5219\u5408\u5e76\u5b69\u5b50\u6570\u91cf\u5c11\u7684\u8282\u70b9,\u65f6\u95f4\u590d\u6742\u5ea6\u540c\u63d2\u5165    </p>"},{"location":"fa24/ads/note/#lecture-3-inverted-file-index","title":"Lecture 3 :Inverted File Index","text":"<p>[Target]\u641c\u7d22\u5f15\u64ce \u90bb\u63a5\u8868(\u5012\u6392\u8868):\u8bb0\u5f55\u6bcf\u4e2a\u8bcd\u5728\u54ea\u4e9b\u6587\u6863\u4e2d\u51fa\u73b0\u4e86  why record frequency:\u8fc7\u6ee4,\u9891\u7387\u8fc7\u9ad8\u4e0d\u8003\u8651;\u52a0\u901f\u53d6\u4ea4\u96c6(\u4ece\u5c0f\u5230\u5927) \u6784\u5efa\u7d22\u5f15: read a term:word stemming(\u8bcd\u5e72\u5206\u6790 \u4e0d\u8003\u8651\u8bcd\u8f6c);stop words(a,the,it) access a term:search tree(B+)O(logN);hashing(\u5012\u6392\u8868\u7684\u7d22\u5f15)O(1)(expensive range search in return) not enough memory:write to disk distribute index:(Each node contains index of a subset of collection) - term-partitioned(\u5355\u4e2a\u8bcd\u6548\u7387\u66f4\u9ad8,\u603b\u548c\u65f6\u95f4\u5dee\u522b\u4e0d\u5927,\u4f46\u670d\u52a1\u5668\u51fa\u9519\u65f6\u4f1a\u65e0\u7ed3\u679c\u8fd4\u56de) - document-partitioned(\u4fbf\u4e8e\u722c\u866b\u63d2\u5165)  </p> <p>\u66f4\u65b0dynamic indexing: insert:add to dictionary delete:main index \u2229 auxiliary index -&gt; search results \u5176\u5b9e\u5e76\u6ca1\u6709\u5220\u9664,\u53ea\u662f\u52a0\u5165\u4e86\u4e00\u4e2a\u8fc7\u65f6\u7684\u6807\u8bb0 \u5012\u6392\u8868\u4f18\u5316compression: stop words(\u641c\u7d22\u65f6\u8fc7\u6ee4);\u5b58\u50a8\u5b57\u7b26\u7d22\u5f15\u7684\u5dee\u503c(\u907f\u514d\u7f16\u53f7\u8fc7\u957f); Thresholding  - document    only retrieve the top x documents according to weight   not feasible for Boolean queries   miss some relevant documents - query   sort by frequency in ascending order;search according to percentage  </p> <p>\u8bc4\u4ef7\u6307\u6807: the answer set:\u641c\u7d22\u5f97\u5230\u7684\u7ed3\u679c\u96c6 relevancy of the answer set (1)\u51c6\u786e\u7387(Precision)(\u4e0d\u8981\u9519)P = R<sub>R</sub>/(R<sub>R</sub>+I<sub>R</sub>) (2)\u53ec\u56de\u7387(Recall)(\u4e0d\u8981\u5c11)R = R<sub>R</sub>/(R<sub>R</sub>+R<sub>N</sub>)  \u4e8c\u8005\u901a\u5e38\u6210\u53cd\u6bd4\uff08\u4f46\u4e0d\u4ee3\u8868\u4e8c\u8005\u662f\u5b8c\u5168\u7684\u53cd\u6bd4\u5173\u7cfb\uff09 relevancy of the answer set(\u7b54\u6848\u96c6\u4e4b\u95f4\u7684\u76f8\u5173\u6027)\u4e0e data retrieval performance\u65e0\u5173\uff0c\u53ec\u56de\u7387\u5173\u6ce8\u7684\u662f\u7cfb\u7edf\u80fd\u68c0\u7d22\u5230\u591a\u5c11\u76f8\u5173\u6587\u6863\uff0c\u800c\u4e0d\u5173\u5fc3\u8fd9\u4e9b\u6587\u6863\u7684\u5177\u4f53\u76f8\u5173\u6027\u7b49\u7ea7\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4e00\u4e2a\u67e5\u8be2\u6709 10 \u4e2a\u76f8\u5173\u6587\u6863\uff0c\u68c0\u7d22\u7cfb\u7edf\u80fd\u591f\u627e\u5230\u5176\u4e2d 7 \u4e2a\u76f8\u5173\u6587\u6863\uff0c\u90a3\u4e48\u53ec\u56de\u7387\u662f 70%\u3002\u4f46\u8fd9 7 \u4e2a\u6587\u6863\u53ef\u80fd\u662f\u5b8c\u5168\u76f8\u5173\u7684\uff0c\u4e5f\u53ef\u80fd\u53ea\u662f\u90e8\u5206\u76f8\u5173\u7684\u3002  </p> <p>\u53ec\u56de\u7387\u7684\u9ad8\u4f4e\u53ea\u4e0e\u7cfb\u7edf\u80fd\u68c0\u7d22\u5230\u591a\u5c11\u76f8\u5173\u6587\u6863\u6709\u5173\uff0c\u800c\u4e0e\u5b83\u68c0\u7d22\u5230\u7684\u76f8\u5173\u6587\u6863\u7684\u8d28\u91cf\uff08\u5373\u76f8\u5173\u6027\uff09\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\u3002 \u76f8\u5173\u6027\u5219\u53cd\u6620\u4e86\u7b54\u6848\u96c6\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u8d28\u91cf\uff0c\u5373\u68c0\u7d22\u5230\u7684\u6bcf\u4e2a\u6587\u6863\u4e0e\u67e5\u8be2\u7684\u5339\u914d\u7a0b\u5ea6\u3002  </p>"},{"location":"fa24/ads/note/#lecture-4-leftist-heaps-and-skewed-heaps","title":"Lecture 4 :Leftist Heaps and Skewed Heaps","text":""},{"location":"fa24/ads/note/#leftist-heaps","title":"Leftist Heaps","text":"<p>Review:\u5b8c\u5168\u4e8c\u53c9\u6811,\u6700\u5927\u6700\u5c0f\u5806,percolate up/down  </p> <p>Target:Speed up merging from O(N)(in normal heap,merge = rebuild) to O(logN)  </p> <p>[Definition]Null Path Length,Npl(X),is the length of the shortest path from X to a node without two children(assume every leaf has two children NULL),Npl(NULL) = -1  </p> <p>Npl(X) = min{Npl(the children of X)} + 1  </p> <p>[Definition]Leftist heap(the same order property,but an unbalanced binary tree): the Npl of the left child is at least as large as that of the right child.(\u5de6\u91cd\u53f3\u8f7b) </p> <p>[Lemma]A leftist heap with r nodes on the right path must have at least 2<sup>r</sup>-1 nodes. \u8bc1\u660e:\u5229\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5 [Theorem]The leftist tree of N nodes has a right path containing at most log(N+1) nodes. =&gt; We can perform all the work on the right path,which is guaranteed to be short if we can restore the heap to the leftist(which is easy)  </p> <p>Insert:special case of merge  </p> <p>DeleteMin:Delete the root,merge the left tree and right tree   </p> <p>Merge:(recursive) \u6bd4\u8f83\u4e24\u5de6\u5f0f\u5806\u7684\u6839\u7684key\uff0c\u5c0f\u7684\u4e3aH1\uff0c\u5927\u7684\u4e3aH2  remember to update npl(H1),otherwise the npl of every node is 0  </p> <p>level of recursive:r1+r2(length of right path of H1/H2) time per level:O(1) \\(T = O(r1 + r2) = O(logN1 + logN2) = O(log \\sqrt{N1N2} )= O(log(N1 + N2))\\) </p> <p>*Delete:Only the npl of the ancestors of the node to be deleted(u<sub>0</sub>) will be changed  \u5bf9case2.2,\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a,\u751a\u81f3\u5176\u7956\u5148\u4e5f\u4e0d\u9700\u8981\u4fee\u590d,\u505c\u6b62\u5373\u53ef  T = O(logN)  </p> <p>Decrease Key:\u6263\u51fa T = O(logN)  </p> <p>BuildHeap:\u5efa\u4e00\u4e2a\u4f20\u7edf\u5806\u5373\u53ef,\u4f20\u7edf\u5806\u5c31\u662f\u4e00\u4e2a\u5de6\u5f0f\u5806 T = O(N)  </p> <p>Merge:(iterative) </p>"},{"location":"fa24/ads/note/#skewed-heaps","title":"Skewed Heaps","text":"<p>Target:Any M consecutive operations take at most O(MlogN) time   </p> <p>[Definition]Merge:\u9664\u4e86\u4e24\u68f5\u6811\u53f3\u8def\u5f84\u4e0a\u7684\u6700\u5927\u7ed3\u70b9\u4e4b\u5916(\u4ea4\u6362\u4e86\u5c31\u53ea\u6709\u53f3\u513f\u5b50\u6ca1\u6709\u5de6\u513f\u5b50)\u90fd\u5fc5\u987b\u4ea4\u6362\u5176\u5de6\u53f3\u5b69\u5b50\uff0c\u4e00\u8def\u4e0a\u90fd\u8981\u4ea4\u6362 <pre><code>Merge(H1-&gt;Right,H2)  \nAttach(H2,H1-&gt;Right)  \nSwap(H1-&gt;Right,H1-&gt;Left) #always  \n</code></pre></p> <p>H \u4e0e null \u8fde\u63a5\uff0c\u5fc5\u987b\u770b H \u7684\u53f3\u8def\u5f84\uff0c\u8981\u6c42 H \u53f3\u8def\u5f84\u4e0a\u9664\u4e86\u6700\u5927\u7ed3\u70b9\u4e4b\u5916\u90fd\u5fc5\u987b\u4ea4\u6362\u5176\u5de6\u53f3\u5b69\u5b50\u3002</p> <p> \u4e0a\u9762\u4e24\u4e2a\u5806\u5728\u5408\u5e76\u65f6\uff0c\u6ce8\u610f6-14-13\u8fd9\u4e2a\u5806\u4e0enull\u8fde\u63a5\u65f6\uff0c\u8981\u4ea4\u63626\u7684\u5de6\u53f3\u5b69\u5b50(14&amp;13)  Delete/Decreasekey:not support  </p> <p>Insert:merge one node Merge/Insert/Deletemin:T<sub>amortized</sub> = O(logN)   </p> <p>Potential function: \u5c1d\u8bd5\uff1a \u8282\u70b9\u4e2a\u6570:\u4e0d\u4f1a\u4e0b\u964d \u53f3\u8def\u5f84\u957f\u5ea6:\u6c42\u4e0d\u51fa \u53f3\u513f\u5b50\u4e2a\u6570:\u03a6(H)\u4e0b\u964d\uff0c\u5f53\u4e14\u4ec5\u5f53H\u6ca1\u6709\u5de6\u513f\u5b50\uff0c\u4f46\u659c\u5806\u4e2d\u4e0d\u5b58\u5728\u53ea\u6709\u53f3\u513f\u5b50\u6ca1\u6709\u5de6\u513f\u5b50\u7684\u8282\u70b9 npl:\u96be\u7b97 \u7b80\u5316npl(\u4e0d\u5230\u66f4\u77ed\u8def\u5f84):\u5de6\u53f3\u5b50\u6811\u8282\u70b9\u4e2a\u6570\u7684\u5dee   [Definition]u is heavy if size(right subtree of u)&gt;=size(left subtree of u),else u is light [Lemma]\u5bf9\u4e8e\u53f3\u8def\u5f84\u4e0a\u6709 l \u4e2a\u8f7b\u7ed3\u70b9\u7684\u659c\u5806\uff0c\u6574\u4e2a\u659c\u5806\u81f3\u5c11\u6709 2<sup>l</sup> \u2212 1 \u4e2a\u7ed3\u70b9\uff0c\u8fd9\u610f\u5473\u7740\u4e00\u4e2a n \u4e2a\u7ed3\u70b9\u7684\u659c\u5806\u53f3\u8def\u5f84\u4e0a\u7684\u8f7b\u7ed3\u70b9\u4e2a\u6570\u4e3a O(log n) \u8bc1\u660e\u7c7b\u4f3cLeftist Heaps\u7684\u5f15\u7406 [Theorem]Merge H1&amp;H2 T<sub>amortized</sub> = O(log(n1 + n2))  \u03a6(H) = the number of heavy nodes in H \u53ea\u6709\u6700\u521d\u5728\u53f3\u8def\u5f84\u4e0a\u7684\u8282\u70b9\uff0c\u8f7b\u91cd\u72b6\u6001\u4f1a\u53d1\u751f\u6539\u53d8 H<sub>i</sub> = l<sub>i</sub> + h<sub>i</sub>(\u53f3\u8def\u5f84) T<sub>worst</sub> = l<sub>1</sub> + h<sub>1</sub> + l<sub>2</sub> + h<sub>2</sub> Before:\u03a6(i) = h<sub>1</sub>(\u53f3\u8def\u5f84) + h<sub>2</sub>(\u53f3\u8def\u5f84) + h(\u975e\u53f3\u8def\u5f84) After: \u91cd\u8282\u70b9\u4e00\u5b9a\u53d8\u6210\u8f7b\u8282\u70b9 \u63d2\u5165\u5143\u7d20\u53ef\u80fd\u8f7b\u8282\u70b9\u53d8\u4e3a\u91cd\u8282\u70b9\uff08\u4f30\u7b97\uff09 \u53d6\u4e0a\u754c\uff0c\u6240\u6709\u8f7b\u8282\u70b9\u53d8\u6210\u91cd\u8282\u70b9 \u03a6(i+1) &lt;= l<sub>1</sub> + l<sub>2</sub> + h T<sub>amortized</sub> = T<sub>worst</sub> + \u03a6(i+1) - \u03a6(i) &lt;= 2(l<sub>1</sub> + l<sub>2</sub>) l = O(logN) =&gt; T<sub>amortized</sub> = O(logN)   </p>"},{"location":"fa24/ads/note/#lecture-5-binomial-queue","title":"Lecture 5 :Binomial Queue","text":"<p>[Target]T<sub>amortized</sub> = O(1) for BuildHeap/Insert [Definition] a collection of heap-ordered trees,known as a forest,each tree is a binomial tree  \u7528\u4e00\u7cfb\u5217binomial tree\u8868\u793a\u4efb\u610f\u5927\u5c0f\u7684\u961f\u5217 \u6df1\u5ea6d\u5904\u7684\u8282\u70b9\u6570 = \u4e8c\u9879\u5f0f\u7cfb\u6570 FindMin the minimum key is one of the roots,at most logN roots T<sub>p</sub> = O(logN) \u8bb0\u4f4fminimum\u4f4d\u7f6e\u65f6\u8fdb\u884c\u7ef4\u62a4,\u65f6\u95f4\u590d\u6742\u5ea6O(1) =&gt; \u53ef\u4ee5\u505a\u5230\u5728O(1)\u65f6\u95f4\u5185FindMin Merge \u6574\u6570\u7684\u4e8c\u8fdb\u5236\u52a0\u6cd5(sorted by height \u4ece\u4f4e\u4f4d\u5f00\u59cb\u52a0) T<sub>p</sub> = O(logN) Insert worst case for N insertions:O(N) T<sub>amortized</sub> = O(1) [Proof1 Aggregate] Total steps = N  Total links = N(1/4 + 2 * 1/8 + 3 * 1/16 + ...) = O(N) [Lemma] (n/2)(1) + (n/4)(2) + (n/8)(3) + ... &lt;= 2n T<sub>amortized</sub> = O(1) [Proof2 Potential function] c<sub>i</sub> = cost of the ith insertion(number of trees merged + 1) \u03a6<sub>i</sub> = number of trees after the ith insertion c<sub>i</sub> + (\u03a6<sub>i</sub> - \u03a6<sub>i-1</sub>) = 2 \u03a3c<sub>i</sub> + \u03a6<sub>N</sub> - \u03a6<sub>0</sub> = 2N T<sub>amortized</sub> = 2  </p> <p>worst case for single insertion:O(logN) not O(N)! Deletemin:FindMin + Merge T<sub>p</sub> = O(logN) Decreasekey:repeatedly exchange it with its parent T<sub>p</sub> = O(logN)  </p> <p>all the trees be accessed quickly =&gt; Left-child-next-sibling with linked lists link the subtrees in decreasing sizes  </p> <p>\u5b9e\u9645\u5b58\u50a8\u65b9\u5f0f\u4e0e\u5e38\u89c4\u753b\u56fe\u65b9\u5f0f\u4e0d\u540c</p> <p> <pre><code>typedef struct BinNode *Position;  \ntypedef struct collection *BinQueue;  \ntypedef struct BinNode *BinTree;  \nstruct BinNode{  \n  ElementType Element;  \n  Position LeftChild;  \n  Position NextSibiling;  \n};  \nstruct collection{  \n  int CurrentSize;  \n  BinTree TheTrees[MaxTrees]  \n}  \nCombineTrees(BinTree T1,BinTree T2)  \n{  \n  if(T1-&gt;Element &lt; T2-&gt;Element)  \n  {  \n    T2-&gt;NextSibiling = T1-&gt;LeftChild;  \n    T1-&gt;LeftChild = T2;  \n    return T1;  \n  }  \n  else{return CombineTrees(T2,T1);}  \n}  \nMerge{   \nH1-&gt;CurrentSize += H2-&gt; CurrentSize;  \n    for ( i=0, j=1; j&lt;= H1-&gt;CurrentSize; i++, j*=2 ) {  \n        T1 = H1-&gt;TheTrees[i]; T2 = H2-&gt;TheTrees[i]; /*current trees */  \n        switch( 4*!!Carry + 2*!!T2 + !!T1 ) {   \n        case 0: /* 000 */  \n        case 1: /* 001 */  break;     \n        case 2: /* 010 */  H1-&gt;TheTrees[i] = T2; H2-&gt;TheTrees[i] = NULL; break;  \n        case 4: /* 100 */  H1-&gt;TheTrees[i] = Carry; Carry = NULL; break;  \n        case 3: /* 011 */  Carry = CombineTrees( T1, T2 );  \n                        H1-&gt;TheTrees[i] = H2-&gt;TheTrees[i] = NULL; break;  \n        case 5: /* 101 */  Carry = CombineTrees( T1, Carry );  \n                        H1-&gt;TheTrees[i] = NULL; break;  \n        case 6: /* 110 */  Carry = CombineTrees( T2, Carry );  \n                        H2-&gt;TheTrees[i] = NULL; break;  \n        case 7: /* 111 */  H1-&gt;TheTrees[i] = Carry;   \n                        Carry = CombineTrees( T1, T2 );   \n                        H2-&gt;TheTrees[i] = NULL; break;  \n        } /* end switch */  \n    } /* end for-loop */  \n    return H1;  \n}  \nDeleteMin  \n</code></pre></p> <p>\u7a0b\u5e8f\u586b\u7a7a</p> <p> Skewed heap:worst case for insert/deletemin/merge:O(N)  </p> <p>\u7ec3\u4e60\uff1a  answer:B  </p>"},{"location":"fa24/ads/note/#lecture-6-backtracking","title":"Lecture 6 :Backtracking","text":"<p>pruning\u526a\u679d:eliminate the explicit examination of a large subset of the candidates  </p>"},{"location":"fa24/ads/note/#_1","title":"\u516b\u7687\u540e\u95ee\u9898","text":"<p>\u5efa\u6811(\u6df1\u5ea6\u4f18\u5148\u4e0e\u5e7f\u5ea6\u4f18\u5148\u53d6\u51b3\u4e8e\u95ee\u9898)  - \u679a\u4e3e\u8fc7\u7a0b Smaller Si first \u65b9\u4fbf\u4e00\u526a\u6885 - \u526a\u679d   \u9884\u5224 \u5ffd\u7565\u90e8\u5206\u7ea6\u675f\uff0c\u5224\u65ad\u7406\u60f3\u60c5\u51b5\u4e0b\u662f\u5426\u53ef\u80fd\u6709\u89e3  </p>"},{"location":"fa24/ads/note/#the-turnpike-reconstruction-problem","title":"\u6536\u8d39\u516c\u8def\u95ee\u9898 The Turnpike Reconstruction Problem","text":"<p>[Problem]N points on the x-axis x1 &lt; x2 &lt; ... &lt; xN,assume x1 = 0. There are N(N-1)/2 distances between every pair of points [Example]D = {1,2,2,2,3,3,3,4,5,5,5,6,7,8,10} Step1: N(N-1)/2 = 15 =&gt; N = 6 Step2:x1 = 0 and x6 = 10 Step3:find the next larget distance and check <pre><code>    x5 = 8 or x2 = 2  \n      if x5 = 8 then x4 = 7 or x2 = 3  \n                    if x4 = 7 then x3 = 6 or x2 = 4  \n                                  if x3 = 6 // two 1. wrong! backtrack  \n                                  if x2 = 4 // two 4. wrong!  \n                    if x2 = 3 then x3 = 4 or x4 = 6  \n                                  if x3 = 4  \n                                  if x4 = 6 then x3 = 5 //true  \nsolution:(0,3,5,6,8,10)  \n</code></pre></p>"},{"location":"fa24/ads/note/#stick-problem","title":"Stick problem","text":"<p>[Problem]put stick sections back,find the minimum possible length of the original sticks sample input: <pre><code>9  \n5 2 1 5 2 1 5 2 1  \n</code></pre> sample output: <pre><code>6  \n</code></pre> \u786e\u5b9a\u957f\u6728\u68cd\u7684\u957f\u5ea6\uff0ctry 6,try 8,try 12 try 6:4 sticks in total \u5df2\u77e5\u6bcf\u6839\u957f\u5ea6\u4e3a6\uff0c\u679a\u4e3e\u6bcf\u6839\u5c0f\u6728\u68cd\u7684\u4f4d\u7f6e \u641c\u7d22\u6811\uff1a\u5df2\u7ecf\u62fc\u63a5\u7684\u6728\u68cd  pruning:  </p> <ul> <li>\u8d85\u8fc7\u603b\u957f  </li> <li>\u8003\u5bdf\u5269\u4f59\u6700\u957f\u7684\u5c0f\u6728\u68cd\u662f\u5426\u53ef\u653e =&gt; \u6539\u53d8\u641c\u7d22\u987a\u5e8f \u5148\u653e\u7f6e\u957f\u7684\u5c0f\u6728\u68cd(smaller Si)  </li> </ul> <p>\u6709\u89e3 return \u65e0\u89e3 try 8  </p>"},{"location":"fa24/ads/note/#backtracking","title":"Backtracking\u95ee\u9898\u7684\u89e3\u51b3\u901a\u5f0f","text":""},{"location":"fa24/ads/note/#_2","title":"\u535a\u5f08","text":""},{"location":"fa24/ads/note/#tic-tac-toeminimax-strategy","title":"Tic-tac-toe:Minimax Strategy","text":"<p>the \"goodness\" of a position.\u4f30\u4ef7\u51fd\u6570 f(P) = W<sub>Computer</sub> - W<sub>Human</sub> where W is the number of potential wins at position P. \u5982\u679c\u5bf9\u65b9\u5728\u5f53\u524d\u60c5\u51b5\u4e0b\u6302\u673a\uff0c\u81ea\u5df1\u7684\u8d62\u6cd5\u6570\u91cf (\u5982\u679c\u5bf9\u65b9\u6302\u673a\u4e86\u90fd\u8d62\u4e0d\u4e86\u5bf9\u65b9=&gt;\u526a\u679d) \u91cf\u5316\u5f53\u524d\u68cb\u5c40\u8c01\u5360\u4f18\u52bf The human is trying to minimize the value of the position P,while the computer is trying to maximize it.  </p>"},{"location":"fa24/ads/note/#-pruning","title":"\u03b1 - \u03b2 pruning","text":"<p> \u03b1 pruning\uff1acomputer  \u03b2 pruning\uff1ahuman black node is the node get cut  </p> <p>prunning bottom up (bottom prunned first)</p>"},{"location":"fa24/ads/note/#eight-digitsthe-minimum-number-of-moves","title":"\u534e\u5bb9\u9053 Eight Digits:The minimum number of moves","text":"<p>\u641c\u7d22\u6811\uff1a\u632a\u52a8\u68cb\u5b50\u7684\u65b9\u6848 prunning  </p> <ul> <li>\u53bb\u91cd =&gt; \u52a8\u6001\u89c4\u5212  </li> <li>\u6b65\u6570\u8d85\u8fc7\u5f53\u524d\u5df2\u6709\u7684\u6700\u4f18\u89e3   \u9884\u5224\uff1a  </li> <li>\u5f53\u524d\u7a7a\u683c\u5230\u76ee\u6807\u7a7a\u683c\u7684\u6700\u77ed\u6b65\u6570 + \u5f53\u524d\u6b65\u6570 &gt; \u6700\u4f18\u89e3  </li> <li>\u5f53\u524d\u68cb\u76d8\u6570\u5b57\u8fbe\u5230\u76ee\u6807\u72b6\u6001\u7684\u6b65\u6570 + \u5f53\u524d\u6b65\u6570 &gt; \u6700\u4f18\u89e3  </li> </ul>"},{"location":"fa24/ads/note/#lecture-7-divide-and-conquer","title":"Lecture 7 :Divide and Conquer","text":""},{"location":"fa24/ads/note/#general-recurrence","title":"General recurrence:","text":"<p>\\(T(N) = aT(N/b) + f(N)\\) a:\u5b50\u95ee\u9898\u6570\u91cf b:\u6bcf\u4e2a\u5b50\u95ee\u9898\u5185\u7684\u5143\u7d20\u6570\u91cf f(N):\u5408\u5e76\u6240\u9700\u8981\u7684\u65f6\u95f4  </p>"},{"location":"fa24/ads/note/#the-maximum-subsequence-sum-onlogn","title":"The maximum subsequence sum -O(NlogN)","text":"<p>-1 [10 2 -1 5] -2 1 -1 -1 10 2 -1    ||     5 -2 1 -1     12       &lt;--&gt;    5     \u5411\u5de6\u679a\u4e3eO(N)\u5411\u53f3\u679a\u4e3eO(N)        11           5  </p>"},{"location":"fa24/ads/note/#tree-traversals-on","title":"Tree traversals -O(N)","text":"<p>\u540e\u5e8fDEBFCA \u4e2d\u5e8fDBEACF  </p> <pre><code> A\n</code></pre> <p>/      DBE   CF  </p> <p>\u540e\u5e8fDEB      \u540e\u5e8fFC \u4e2d\u5e8fDBE      \u4e2d\u5e8fCF      B        C     /               D   E        F  combine  </p>"},{"location":"fa24/ads/note/#mergesort-and-quicksort-onlogn","title":"Mergesort and quicksort -O(NlogN)","text":""},{"location":"fa24/ads/note/#closest-points-problem","title":"Closest points problem","text":"<p>[Problem]Given N points in a plane.Find the closest pair of points Check N(N-1)/2 pairs.T = O(N\u00b2) </p> <p>$$ T(N) = 2T(N/2) + cN      = ... = 2^{k}T(N/2^{k}) +kcN = N + cNlogN = O(NlogN) $$ $$ T(N) = 2T(N/2) + cN^{2} = O(N^{2}) $$ \u4f18\u5316\u6a2a\u8de8\u70b9\u5bf9\u7684\u7b97\u6cd5\uff1aprunning \u5c0f\u4e8e\u4e24\u8fb9\u5df2\u7b97\u51fa\u7684\u6700\u77ed\u70b9\u5bf9 \u5230\u4e2d\u754c\u7ebf\u7684\u8ddd\u79bb\u5c0f\u4e8e\u4e24\u8fb9\u5df2\u7b97\u51fa\u7684\u6700\u77ed\u70b9\u5bf9 </p> <p>\u65b9\u6846\u4e2d\u6700\u591a\u53ef\u80fd\u7684\u70b9  \u5b9e\u73b0\u4e0a\u7684\u56f0\u96be\uff1a\u65e2\u6309x\u8f74\u6392\u5e8f\u53c8\u6309y\u8f74\u6392\u5e8f  </p>"},{"location":"fa24/ads/note/#recurrences-solving","title":"Recurrences solving","text":"<p>$ T(N) = aT(N/b) + f(N) $ Assume: - N/b is an integer - O(1) for small n  </p>"},{"location":"fa24/ads/note/#fundamental-method-iterative-unfolding","title":"Fundamental method - iterative unfolding","text":""},{"location":"fa24/ads/note/#substitution-method-guessthen-prove-by-induction","title":"Substitution method - guess,then prove by induction","text":"<p>$ \\begin{align}   \\begin{aligned} T(N) &amp;= 2T(N/2) + N \\ Guess:&amp;T(N) = O(NlogN) \\ T(N/2) &amp;\\leq c(N/2)log(N/2) \\ T(N) &amp;= 2T(N/2) + N \\ &amp;\\leq 2c(N/2)log(N/2) + N \\&amp;\\leq cN(logN-log2) + N \\ &amp;\\leq cNlogN   \\end{aligned} \\end{align} $ wrong for N = 1,\u53ea\u9700\u627e\u5230\u4e00\u4e2aN,\u5bf9\u4efb\u610fn&gt;N,\u4e0a\u5f0f\u6210\u7acb\u5373\u53ef \u5bf9\u4f4e\u4e8eNlogN\u7684\u91cf\uff0c\u76f4\u63a5\u4e22\u5f03(\u89c1HW7-4.A) $  \\begin{align} &amp;Wrong Guess:T(N) = O(N) \\  &amp;T(N) \\leq cN + N \\neq O(N) \\end{align} $  </p>"},{"location":"fa24/ads/note/#recursion-tree-method","title":"Recursion-tree method","text":"<p> \u518d\u7528\u4ee3\u5165\u6cd5\u8bc1\u660e\u5373\u53ef </p>"},{"location":"fa24/ads/note/#master-method","title":"Master method","text":"<p> \u5de8\u591a\u53f6 \u6bcf\u5c42\u5e73\u5747 \u5de8\u5927\u6839 \u6bd4\u8f83\u5408\u5e76\u7684\u5f00\u9500\u4e0e\u53f6\u5b50\u7684\u5f00\u9500\uff0c\u770b\u8c01\u51b3\u5b9a\u4e86\u6574\u4f53\u7684\u65f6\u95f4 \u6b63\u5219\u6761\u4ef6\uff1a\u6839\u7684\u65f6\u95f4\u5f00\u9500&gt;\u7b2c\u4e00\u6b21\u5212\u5206\u7684\u65f6\u95f4\u5f00\u9500 =&gt; \u6839dominate\u4e86\u6574\u68f5\u6811 \u6ce8\u610fN<sup>\u03b5</sup>&gt;logN </p> <p> \u4e3b\u5b9a\u7406\u5c31\u5b8c\u4e8b\u513f\u4e86~~  </p> <p> F  </p>"},{"location":"fa24/ads/note/#lecture-8-dynamic-programmingdp","title":"Lecture 8 :Dynamic Programming(DP)","text":""},{"location":"fa24/ads/note/#fundamental-problem","title":"Fundamental problem","text":""},{"location":"fa24/ads/note/#fibonacci","title":"Fibonacci","text":"<p>F(N) = F(N-1) + F(N-2) ......\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b          ^        ^          |        |        \u5b50\u95ee\u9898   \u5b50\u95ee\u9898  T(N) &gt;= F(N)  </p> <p>\"\u8bb0\u5fc6\u5316\" T(N) = O(N) \u52a8\u6001\u89c4\u5212\u7684\u6761\u4ef6\uff1a\u91cd\u53e0\u5b50\u95ee\u9898 (M1M2)(M3M4M5) ((M1M2)M3)(M4M5) M1M2\u4e3a\u91cd\u53e0\u5b50\u95ee\u9898  </p> <p>General problem \u4e00\u4e2a\u95ee\u9898\uff0c\u5b83\u7684\u6700\u4f18\u89e3\u53ef\u4ee5\u8868\u8fbe\u4e3a\u4e00\u4e9b\u5408\u9002\u7684\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u7684\u9012\u63a8\u5173\u7cfb\uff0c\u5219\u6211\u4eec\u79f0\u8fd9\u4e00\u95ee\u9898\u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\uff08\u56e0\u4e3a\u5927\u95ee\u9898\u7684\u6700\u4f18\u89e3\u53ef\u4ee5\u76f4\u63a5\u4f9d\u8d56\u4e8e\u5c0f\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff09\u3002\u7136\u540e\u6211\u4eec\u6c42\u89e3\u8fd9\u4e00\u9012\u63a8\u5f0f\uff0c\u901a\u8fc7\u8bbe\u7f6e\u597d base case\uff08\u8fd9\u91cc\u6211\u4eec\u4e5f\u7528 base case \u6307\u4ee3\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u4f46\u6ce8\u610f\u8fd9\u65f6\u4e0d\u662f\u9012\u5f52\u4e86\uff09\uff0c\u7136\u540e\u901a\u8fc7\u8bb0\u5fc6\u5316\u7684\u65b9\u6cd5\uff0c\u4f7f\u7528\u8fed\u4ee3\u7b97\u6cd5\u800c\u975e\u8d39\u65f6\u7684\u9012\u5f52\u7b97\u6cd5\u907f\u514d\u5197\u4f59\u8ba1\u7b97\uff0c\u5f97\u5230\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u4ee4\u4eba\u6ee1\u610f\u7684\u7b97\u6cd5  </p> <p>\u52a8\u6001\u89c4\u5212\u7684\u4e00\u822c\u8303\u5f0f\uff1a \u52a8\u6001\u89c4\u5212\u65b9\u6cd5\u901a\u5e38\u7528\u6765\u6c42\u89e3\u6700\u4f18\u5316\u95ee\u9898\uff08optimization problem\uff09\u3002\u8fd9\u7c7b\u95ee\u9898\u53ef\u4ee5\u6709\u5f88\u591a\u53ef\u884c\u89e3\uff0c\u6bcf\u4e2a\u89e3\u90fd\u6709\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u5e0c\u671b\u5bfb\u627e\u5177\u6709\u6700\u4f18\u503c\uff08\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\uff09\u7684\u89e3\u3002\u6211\u4eec\u79f0\u8fd9\u6837\u7684\u89e3\u4e3a\u95ee\u9898\u7684\u4e00\u4e2a\u6700\u4f18\u89e3\uff08an optimal solution\uff09\uff0c\u800c\u4e0d\u662f\u6700\u4f18\u89e3\uff08the optimal solution\uff09\uff0c\u56e0\u4e3a\u53ef\u80fd\u6709\u591a\u4e2a\u89e3\u90fd\u8fbe\u5230\u6700\u4f18\u503c\u3002 1. \u523b\u753b\u4e00\u4e2a\u6700\u4f18\u89e3\u7684\u7ed3\u6784\u7279\u5f81\uff1b 2. \u9012\u5f52\u5730\u5b9a\u4e49\u6700\u4f18\u89e3\u7684\u503c\uff1b 3. \u8ba1\u7b97\u6700\u4f18\u89e3\u7684\u503c\uff0c\u901a\u5e38\u91c7\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u6cd5\uff1b 4. \u5229\u7528\u8ba1\u7b97\u51fa\u7684\u4fe1\u606f\u6784\u9020\u4e00\u4e2a\u6700\u4f18\u89e3\u3002  </p> <p>\u4e8b\u5b9e\u4e0a\u52a8\u6001\u89c4\u5212\u5c31\u662f\u4e3a\u4e00\u4e2a\u5177\u6709\u6240\u8c13\u6700\u4f18\u5b50\u7ed3\u6784\u6027\u8d28\uff08\u5373\u539f\u95ee\u9898\u6700\u4f18\u89e3\u53ef\u4ee5\u7531\u5b50\u95ee\u9898\u6700\u4f18\u89e3\u9012\u63a8\u5f97\u5230\uff09\u7684\u6700\u4f18\u5316\u95ee\u9898\u5bfb\u627e\u4e00\u4e2a\u5b50\u95ee\u9898\u5230\u539f\u95ee\u9898\u7684\u9012\u63a8\u5f0f\uff0c\u7136\u540e\u7528\u8bb0\u5fc6\u5316\u65b9\u6cd5\u6c42\u89e3\uff0c\u6700\u540e\u6709\u65f6\u6211\u4eec\u9700\u8981\u6784\u9020\u51fa\u8fd9\u4e00\u6700\u4f18\u89e3  </p>"},{"location":"fa24/ads/note/#ordering-matrix-multiplications","title":"Ordering Matrix Multiplications","text":"<p>M<sub>[10x20]</sub> * M<sub>[20x50]</sub> T = 10 * 20 * 50 Problem M<sub>[10x20]</sub> * M<sub>[20x50]</sub> * M<sub>[50x1]</sub> * M<sub>[1x100]</sub> </p> <p>M<sub>[10x20]</sub> * (M<sub>[20x50]</sub> * (M<sub>[50x1]</sub> * M<sub>[1x100]</sub>)) T = 125000 (M<sub>[10x20]</sub> * (M<sub>[20x50]</sub> * M<sub>[50x1]</sub>)) * M<sub>[1x100]</sub> T = 2200 Question:Which order? [Backtracking] O(N) for M<sub>x</sub> * M<sub>x+1</sub> O(N-1) for one subtree ...  </p> <p>prunning - current minimum T - record the state that has been calculated \u8bb0\u5fc6\u5316\u641c\u7d22  </p> <p>\u52a8\u6001\u89c4\u5212\u7684\u5173\u952e\uff1a\u8bb0\u5fc6\u6027 </p> <p>Let b<sub>n</sub> be the ways of computing M<sub>1</sub>M<sub>2</sub>...M<sub>n</sub> $ b_{n} = O(\\frac{4^n}{n\\sqrt{n}}) $  O(N\u00b2) values of M<sub>ij</sub> \u679a\u4e3el,O(N) T = O(N<sup>3</sup>) \u4e00\u4e2a\u95ee\u9898\u7684\u6700\u4f18\u89e3\u53ea\u548c\u8fd9\u4e2a\u95ee\u9898\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff08\u6700\u4f18\u5b50\u7ed3\u6784\uff09\uff08\u800c\u4e0e\u6b21\u4f18\u89e3\u7b2c\u4e09\u4f18\u89e3\u65e0\u5173\uff09 \u68c0\u67e5\uff08\u8bc1\u660e\uff09\uff1a \u6b21\u4f18\u89e3\u4e0e\u6700\u4f18\u89e3\u80fd\u5426\u66ff\u6362\uff08\u53ef\u80fd\u4e24\u4e2a\u5b50\u95ee\u9898\u6700\u4f18\u89e3\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\uff09 \u66ff\u6362\u540e\u6700\u540e\u89e3\u662f\u5426\u4f1a\u53d8\u5dee  </p> <p>\u6ce8\u610f\uff0c\u4e0d\u80fd\u4ece1\u5f00\u59cb\u679a\u4e3ei\uff0c\u56e0\u4e3a\u8fd9\u6837\u8ba1\u7b97m<sub>ij</sub>\u4f1a\u9047\u5230\u6ca1\u7b97\u51fa\u6765\u7684\u5b50\u95ee\u9898 \u6240\u4ee5\u5bf9M<sub>ki</sub>\uff0c\u4ece1\u5f00\u59cb\u679a\u4e3ek\uff0c\u8868\u793a\u4ecei\u5f00\u59cb\uff0c\u5411\u540e\u4e58k\u4e2a\u77e9\u9635\u7684\u5b50\u95ee\u9898  \u9012\u5f52\u5b9e\u73b0\uff0c\u5224\u65ad\u662f\u5426\u8ba1\u7b97\u8fc7M[i][j]\uff0c\u5982\u679c\u6ca1\u6709\u8ba1\u7b97\u8fc7\uff0c\u9012\u5f52\u8ba1\u7b97\u5373\u53ef  </p> <p>\u4ece\u800c\uff0c\u6211\u4eec\u53ef\u4ee5\u5b58\u50a8\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3  </p>"},{"location":"fa24/ads/note/#optimal-bst","title":"Optimal BST","text":"<p>[Problem]Given N words w<sub>1</sub> &lt; ... &lt; w<sub>N</sub>,and the probability of searching w<sub>i</sub> is p<sub>i</sub>.Arrange these words in a BST in a way that minimize the expected total time.T(N) = \u03a3p<sub>i</sub>(1+d<sub>i</sub>)  </p> <p>\u8d2a\u5fc3\u6cd5\uff1a\u6839\u8282\u70b9\u4e3a\u51fa\u73b0\u6982\u7387\u6700\u9ad8\u7684\u8bcd\uff0c\u4ece\u800c\u5de6\u53f3\u5b50\u6811\u5305\u542b\u7684\u503c\u786e\u5b9a\uff08\u6309\u5b57\u5178\u5e8f\u6392\u5217\uff09\uff0c\u518d\u4ece\u5de6\u5b50\u6811\u4e2d\u5bfb\u627e\u6982\u7387\u6700\u9ad8\u7684\u8bcd\uff0c... \u7f3a\u70b9\uff1a\u6d6a\u8d39\u6d45\u5c42\u8282\u70b9 </p>"},{"location":"fa24/ads/note/#all-pairs-shortest-path","title":"All-Pairs Shortest Path","text":"<p>[Problem]For all pairs v<sub>i</sub> and v<sub>j</sub>,find the shortest path between [Method 1]use single-source algorithm(dijkstra algorithm) for |V| times. T = O(|V<sup>3</sup>|) \u2014\u2014 works fast on sparse graph. [Method 2]Define D<sup>k</sup>[i][j] = min{length of path i -&gt; {l&lt;=k} -&gt; j} Answer:D<sup>N-1</sup>[i][j] \u6269\u5c55\u53ef\u7528\u7684\u4e2d\u95f4\u8282\u70b9 for(k=0;k- k !\u2208 the shortest path i -&gt; j =&gt; D<sup>k</sup> = D<sup>k-1</sup> - k \u2208 the shortest path i -&gt; j =&gt; D<sup>k</sup>[i][j] = D<sup>k-1</sup>[i][k] + D<sup>k-1</sup>[k][j]   </p> <p>D<sup>k</sup>[i][j] = min{D<sup>k-1</sup>[i][j],D<sup>k-1</sup>[i][k] + D<sup>k-1</sup>[k][j]}  T = O(N<sup>3</sup>)  </p> <p>When can't we apply dynamic programming:history-dependency </p> <p>dynamic programming != polynomial time solve(Knapsack \u4f2a\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6)  </p>"},{"location":"fa24/ads/note/#lecture-9-greedy-algorithms","title":"Lecture 9 :Greedy Algorithms","text":""},{"location":"fa24/ads/note/#the-greedy-method","title":"The greedy method","text":"<p>Optimization problems:an optimization function with constraints feasible solution:meet the constraints optimal solution:best possible value works only if the local optimum = global optimum if not,optimal solutions are not guaranteed,but close in value to the optimal(heuristics\u542f\u53d1\u5f0f)\uff08\u526a\u679d\u5bf9\u6bd4\u7684\u5bf9\u8c61\uff09  </p>"},{"location":"fa24/ads/note/#activity-selection-problem","title":"Activity Selection Problem","text":"<p>S = {a<sub>1</sub>,a<sub>2</sub>,...,a<sub>n</sub>},time interval[s<sub>i</sub>,f<sub>i</sub>) find the maximum number of activities  </p> <p>DP solution </p> <p>Greedy Rule1:Select the interval which starts earliest Greedy Rule2:Select the interval which is shortest Greedy Rule3:Select the interval with the fewest conflicts Greedy Rule4:Select the interval which ends first[correct]  </p> <p>Correctness: - Algorithm gives non-overlapping intervals(valid result) apparently - The result is optimal   Step 1:Prove the optimal solution consists of the first choice   Step 2:Satisfy the optimal substructure(\u53ef\u66ff\u6362 \u89e3\u4e0d\u53d8\u5dee)  </p> <p>\u8d2a\u5fc3\u4f1a\u7ed9\u51fa\u4e00\u7ec4\u6700\u4f18\u89e3\uff0c\u4f46\u4e0d\u4ee3\u8868\u6700\u4f18\u89e3\u552f\u4e00  </p>"},{"location":"fa24/ads/note/#huffman-codes","title":"Huffman Codes","text":"<p>trie tree  </p> <p>The Huffman code is one kind of optimal prefix codes.  For a given alphabet and its characters' frequencies, the Huffman codes may not be unique,  the Huffman code length of each character may not unique, but the length of the overall code is unique.   </p> <p>N characters 2N-1 nodes T = O(NlogN)  </p>"},{"location":"fa24/ads/note/#lecture-10-np-completeness","title":"Lecture 10: NP-Completeness","text":""},{"location":"fa24/ads/note/#recall","title":"Recall","text":"<p>Euler circuit Hamilton circuit Single-source unweighted shortest-path problem Single-source unweighted longest-path problem  </p> <p>polynomial time:O(n<sup>x</sup>),O(nlogn) not polynomial:O(n!),O(2<sup>n</sup>) The easiest:O(N)-since we have to read inputs at least once The hardest:undecidable\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898\uff08\u5df2\u77e5\u7b54\u6848\u65e0\u6cd5\u786e\u8ba4\u6b63\u8bef\uff09  </p> <p>Halting problem:Is it possible to have a C compiler detect all infinite loops?   No,proof by self-detecting.  </p> <p>difficulty:P &lt;= NP &lt;= NPC &lt; undeciable</p>"},{"location":"fa24/ads/note/#the-class-np","title":"The Class NP","text":"<p>Deterministic Turing Machine\u786e\u5b9a\u578b\u56fe\u7075\u673a\uff08\u4e0b\u4e00\u6b65\u662f\u786e\u5b9a\u7684\uff09\uff08\u53ef\u8ba4\u4e3a\u662f\u6c42\u89e3\uff09 Nondeterministric Turing Machine\u975e\u786e\u5b9a\u578b\u56fe\u7075\u673a(\u53ef\u8ba4\u4e3a\u662f\u5224\u65ad) All NP problems can be solved in polynomial time in a non-deterministic machine. Unless P=NP, NP problems cannot be solved in polynomial time in a deterministic machine. NP:Nondeterministric polynomial-time The problem(abstract) is NP if we can prove any solution(\u5b9e\u4f8b) is true in polynomial time e.g. Hamilton cycle problem:NP e.g. A graph does not have a Hamiltonian cycle:not NP  </p> <p>P:we can prove any solution is true and find the solution in polynomial time  </p> <p>P:\u89e3\u51b3 NP:\u5224\u5b9a</p> <p>The most difficult NP problems:NP-complete problem(NPC) an NPC problem has the property that any problem in NP can be polynomially reduced to NPC If we can solve any NPC problem in polynomial time ,then we can solve all the problems in NP  </p> <p>\u89c4\u7ea6\uff1a  B \u96be\u4e8e A\uff0c\u56e0\u4e3a\u5982\u679c\u5c06A\u89c4\u7ea6\u6210B\uff0cA\u81f3\u5c11\u6709\u4e00\u4e2aB\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u89e3\uff0c\u4f46\u4e0d\u4ee3\u8868A\u6ca1\u6709\u66f4\u5feb\u7684\u7b97\u6cd5 \u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u4e00\u6837\u7b80\u5355\u7684 \u89c4\u7ea6\u5177\u6709\u4f20\u9012\u6027 e.g.Suppose that the Hamiltonian cycle problem is NPC,prove the traveling salesman problem is NPC as well A is an NPC problem,if A can be reduced to B,then B is an NPC problem Travelling salesman problem:Given a complete graph G,with edge costs, and an integer K,is there a simple cycle that visits all vertices and has total cost&lt;=K Proof:TSP is NP   and for any Hamiltonian cycle problem,we can construct an example that is a TSP problem   and the solution to the Hamiltonian cycle is the solmution to the TSP problem    \u89c4\u7ea6\u662f\u5355\u5411\u7684  </p> <p>The first proven NPC problem was the Satisfiability problem(SAT)  </p> <p>A Formal-language Framework Q:abstract problem I:instances S:solutions Q\u662fI\u5230S\u7684\u4e00\u4e2a\u6620\u5c04 \u4f18\u5316\u95ee\u9898\u90fd\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5224\u5b9a\u95ee\u9898(\u5c06\u4f18\u5316\u95ee\u9898\u7684\u89e3\u4f5c\u4e3a\u5224\u5b9a\u95ee\u9898\u7684\u6761\u4ef6\u5373\u53ef)\uff0c\u5224\u5b9a\u95ee\u9898\u7684\u8f93\u51fa\u662f0\u62161\uff0c\u8fd9\u4fbf\u4e8e\u5224\u65ad\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u95ee\u9898\u7684\u89e3\u662f\u4e0d\u662f\u4e00\u6837\u7684(recall answer for \u03b2 = answer for \u03b1) \u63a5\u4e0b\u6765\u53ea\u8ba8\u8bba\u5224\u5b9a\u95ee\u9898\uff1a  </p> <p>language\u4e5f\u5305\u62ec\u4e0d\u53ef\u5224\u5b9a\u95ee\u9898</p> <p>Formal-language Theory - An alphabet is a finite set of symbols{0,1} - A language L over the alphabet is any set of strings made up of symbols from the alphabet - Algorithm A accepts a string x\u2208{0,1} if A(x) = 1;rejects if A(x) = 0 - A language L is decided by an algorithm A if it can accept and reject every binary string(\u7b97\u6cd5\u80fd\u591f\u5224\u5b9a\u4e00\u4e2a\u89e3\u662f\u5426\u4e3a\u771f)  </p> <p>L\u2208NP -&gt; L\u7684\u8865\u96c6\u2208NP \uff1f co-NP:\u6240\u6709NP\u95ee\u9898\u7684\u8865\u95ee\u9898\uff0c\u5982\u679cL\u662fNP\uff0c\u5219L\u7684\u8865\u96c6\u662fco-NP co-NP problem:problem L and its complement are both NP co-NP\u4e0eNP\u5173\u7cfb\u672a\u77e5\uff1a\u53ef\u80fd\u76f8\u7b49 \u53ef\u80fd\u76f8\u4ea4  \u89c4\u7ea6\u7b26\u53f7\uff1aL<sub>1</sub>&lt;=<sub>p</sub>L<sub>2</sub> L<sub>1</sub>\u53ef\u4ee5\u89c4\u7ea6\u5230L<sub>2</sub>\uff08\u6b64\u5904\u7684&lt;=\u53ef\u4ee5\u8ba4\u4e3a\u662f\u96be\u5ea6\u5bf9\u6bd4\uff09  </p> <p>e.g.Suppose that clique problem(\u6700\u5927\u56e2\u95ee\u9898)is NPC ,prove that vertex cover problem is NPC too. Proof.\u5229\u7528\u8865\u56fe  </p> <p>NP-hard(NP\u56f0\u96be\u95ee\u9898)\uff1a\u6240\u6709NP\u90fd\u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5f52\u7ea6\u5230\u7684\u95ee\u9898 NP &lt;=<sub>p</sub>NP-hard NP-hard\u2229NP = NPC  </p> <p>Lecture 11-13\u7684\u4efb\u52a1\u662f\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u627e\u5230\u6700\u4f18\u89e3\u7684\u95ee\u9898\uff0c\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u627e\u5230\u4e00\u4e2a\u8fd1\u4f3c\u6700\u4f18\u89e3(\u8fd1\u4f3c\u7b97\u6cd5\uff09\uff0c\u6216\u4ee5\u8f83\u9ad8\u7684\u6982\u7387\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5185\uff08\u5c0f\u6982\u7387\u8d85\u8fc7\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\uff09\u627e\u5230\u6700\u4f18\u89e3(\u968f\u673a\u7b97\u6cd5)  </p>"},{"location":"fa24/ads/note/#lecture-11-approximation","title":"Lecture 11: Approximation","text":""},{"location":"fa24/ads/note/#dealing-with-hard-problems","title":"Dealing with hard problems","text":"<p>1.small N,O(2<sup>N</sup>) is acceptable 2.important special cases in polynomial time 3.near-optimal solutions in polynomial time  </p> <p>[Definition] Approximation Ratio $ max(\\frac{C}{C^},\\frac{C^}{C})&lt;=\u03c1(n) $ C*is the cost of an optimal solution \u03c1(n)-approximation alogrithm  </p> <p>[Definition] An approximation scheme (1+\u03b5)-approximation algorithm An approximation scheme is a polynomial-time approximation scheme(PTAS) if for any fixed \u03b5,the scheme runs in time polynomial in the size n:O(n<sup>2/\u03b5</sup>) fully polynomial-time approximation scheme(FPTAS):with the decreasing of \u03b5(\u8ffd\u6c42\u66f4\u9ad8\u7cbe\u5ea6),the time complexity will drop polynomially:O((1/\u03b5)<sup>2</sup>n<sup>3</sup>)   </p> <p>\u53ea\u8981\u662fn\u7684\u591a\u9879\u5f0f\u7ea7\u522b\uff0c\u65e0\u8bba\u03b5 \u90fd\u662fPTAS   \u5982\u679c1/\u03b5\u4e5f\u662f\u591a\u9879\u5f0f\u7ea7\u522b\uff0c\u5219\u662fFPTAS</p>"},{"location":"fa24/ads/note/#approximate-bin-packing","title":"Approximate Bin Packing","text":"<p>N items of sizes S1,...,SN,such that 0 &lt; Si &lt;= 1 Pack these items in the fewest number of bins(capacity of bins is 1)  </p> <p>Approximation1:NextFit read item one by one  create new bin if can't be placed T = O(N) \u03c1 = 2  </p> <p>Approximation2:FirstFit scan for the first bin that is large enough for item  </p> <p>can be implemented in O(NlogN) \u03c1 = 1.7  </p> <p>Remove an item may cause the solution to increase  </p> <p>Approximation3:BestFit place a new item in the tightest spot among all bins T = O(NlogN) \u03c1 = 1.7  </p> <p>special case is meaningless in the worst case</p> <p>Order is important!  </p> <p>On-line Algorithm:place an item before processing the next one,and can NOT change decision(no backtracking) No on-line algorithm can always give an optimal solution the lowest \u03c1 of the on-line algorithms is 5/3  </p> <p>Proof.\u6839\u636e\u4e0d\u540c\u7684\u5206\u6b67\uff0c\u6784\u9020\u90aa\u6076\u7684\u8f93\u5165\u6570\u636e \u4f7f\u5f97\u8fd1\u4f3c\u6bd4\u5c3d\u53ef\u80fd\u5927  </p> <p>Off-line Algorithm:view the entire item list before producing an answer Trouble maker:large items sort the items in decreasing orfer then apply first/best fit(simple greedy) \u03c1 = 11/9  </p>"},{"location":"fa24/ads/note/#the-knapsack-problem-fractional-version","title":"The Knapsack Problem \u2014\u2014 fractional version \u80cc\u5305\u95ee\u9898","text":"<p>capacity M,N items of weight wi and profit pi xi is the percentage of the item i being packed,packed profit pixi  </p> <p>piwi &lt; M , pixi max  </p> <p>Each time pack one item into the knapsack  </p> <p>be greedy on: 1.max profit X 2.min weight X 3.max profit density pi/wi(\u6027\u4ef7\u6bd4)   Proof. \u66ff\u6362\u6cd5  </p>"},{"location":"fa24/ads/note/#the-knapsack-problem-0-1-version-np-hardnpc","title":"The Knapsack Problem \u2014\u2014 0-1 version NP-hard(NPC)","text":"<p>xi is either 1 or 0  </p> <p>be greedy on profit density or max profit X be greddy both on profit density and max profit,choose the best one  </p> <p>\u03c1 = 2   </p> <p>Proof.  p<sub>max</sub> &lt;= P<sub>opt</sub> &lt;= P<sub>frac</sub> p<sub>max</sub> &lt;= P<sub>greedy</sub> </p> <p>P<sub>opt</sub> &lt;= P<sub>greedy</sub> + p<sub>max</sub> </p> <p>In fractional version,we will cut at most one item in greedy method. Among all the items packed into the knapsack,only the one with the lowest profit density will be cut. This item has the profit &lt;= p<sub>max</sub> Therefore,P<sub>opt</sub> &lt;= P<sub>greedy</sub> + p<sub>max</sub> </p> <p>P<sub>opt</sub> / P<sub>greedy</sub> &lt;= 1 + p<sub>max</sub> / P<sub>greedy</sub> &lt;= 2  </p>"},{"location":"fa24/ads/note/#a-dynamic-programming-solution","title":"A dynamic programming solution","text":"<p>\u8ba1\u7b97i\u4e2a\u7269\u4f53\u8fbe\u5230\u4ef7\u503cp\u9700\u8981\u7684\u6700\u5c0f\u5bb9\u91cfW<sub>i,p</sub> W<sub>i,p</sub> =  inf ,i = 0 W<sub>i-1,p</sub> ,pi &gt; p min{W<sub>i-1,p</sub>,w<sub>i</sub>+W<sub>i-1,p-pi</sub>} ,otherwise  </p> <p>T = O(n<sup>2</sup>p<sub>max</sub>) not polynomial because  input size:n &amp; the bytes used to store the profits(2<sup>p</sup>),\u4f2a\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6  </p> <p>dp cannot work if p<sub>max</sub> is LARGE \u4e8b\u5b9e\u4e0a\uff0c\u901a\u8fc7\u7f29\u5c0fp<sub>max</sub>\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u7684\uff0c\u8fd1\u4f3c\u6bd4\u4efb\u610f\u63a5\u8fd11\u7684\u8fd1\u4f3c\u7b97\u6cd5  </p> <p>\u4e00\u4e2a\u7b80\u5355\u7684\u60f3\u6cd5\u662f\u5bf9\u4e8e\u5927\u7684p<sub>max</sub>\uff0c\u6211\u4eec\u540c\u9664\u5b83\u4eec\u6700\u5c0f\u516c\u500d\u6570\u5c31\u53ef\u4ee5\u5728\u4e0d\u6539\u53d8\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\u964d\u4f4ep<sub>max</sub>\uff0c\u4f46\u5b9e\u9645\u64cd\u4f5c\u65f6\u4e0d\u80fd\u4fdd\u8bc1\u6240\u6709p<sub>max</sub>\u90fd\u6709\u826f\u597d\u7684\u6700\u5c0f\u516c\u500d\u6570\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u80fd\u505a\u51fa\u4e00\u4e9b\u59a5\u534f  </p> <p>1.\u7ed9\u5b9a\u5e0c\u671b\u8fbe\u5230\u7684\u8fd1\u4f3c\u6bd4\u7387\u03b5(\u5047\u5b9a1/\u03b5\u662f\u4e00\u4e2a\u6574\u6570)\uff0c\u4ee4\u653e\u7f29\u6bd4\u7387\\(b=\\frac{\\epsilon p_{max}}{n}\\) 2.\u5c06\u6240\u6709\u4ef7\u503c\u653e\u7f29\u4e3a\\(\\lceil\\frac{p_{i}}{b}\\rceil\\),dp\u5f97\u5230\u6700\u4f18\u89e3p 3.\u5c06\u6240\u6709\u4ef7\u503c\u653e\u5927\\(p_{i}' = \\lceil\\frac{p_{i}}{b}\\rceil b\\)\u5f97\u5230\u8fd1\u4f3c\u6700\u4f18\u89e3bp T = O(\\(\\frac{n^{2}p_{max}}{b}\\)) = O(\\(\\frac{n^{3}}{\\epsilon}\\))\u662fFPTAS \u03c1 = 1 + \u03b5 \u8bc1\u660e\u89c1\u8bb2\u4e49\u6216myc\u8001\u5e08\u8bfe\u4e0a  </p>"},{"location":"fa24/ads/note/#the-k-centre-problem","title":"The K-centre problem","text":"<p>n sites s1,...,sn dist(\u6b27\u6c0f\u8ddd\u79bb)  </p> <p>find a set of centres C that minimize r(C)  </p> <p>A Greedy Solution </p> <p>Put the first centre at the best possible location for a single centre,then keep adding centers to reduce the covering radius each time by as much as possible(\u5e38\u7528 but arbitarily bad)  </p> <p>\u5047\u5b9a\u5df2\u7ecf\u77e5\u9053\u6700\u4f73\u534a\u5f84 r(C*)(\u540e\u7eed\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u627e\u5230\u8fd9\u4e2a\u503c) \u6211\u4eec\u9009\u5b9a\u67d0\u4e00\u4e2asite\u4e3a\u5706\u5fc3\u4ee5\u534a\u5f842r(C*)\u753b\u5706\uff0c\u518d\u9009\u62e9\u6ca1\u6709\u88ab\u8986\u76d6\u7684site\u4e3a\u5706\u5fc3\u7ee7\u7eed\u753b\u5706\uff0c\u77e5\u9053\u6240\u6709site\u90fd\u88ab\u8986\u76d6 \u4e0b\u8bc1\u8be5\u7b97\u6cd5\u4e0d\u4f1a\u9009\u62e9\u8d85\u8fc7K centres \u53cd\u8bc1\uff1a\u5047\u8bbe\u6211\u4eec\u901a\u8fc7\u8fd9\u79cd\u7b97\u6cd5\u5f97\u5230\u4e86\u8d85\u8fc7K\u4e2acenters\uff0c\u8bf4\u660e\u5219\u4e00\u5b9a\u81f3\u5c11\u6709K+1\u4e2a\u70b9\u4e24\u4e24\u8ddd\u79bb\u8d85\u8fc72r(C*)\uff0c\u6b64\u65f6\u6211\u4eec\u5982\u679c\u53ea\u8981\u6c42\u8986\u76d6\u8fd9K+1\u4e2asites\uff0c\u6211\u4eec\u9009\u53d6\u4e24\u4e24\u7684\u4e2d\u70b9\u4e3a\u6700\u4f18\u534a\u5f84\u7684\u5706\u5fc3\uff0cK\u4e2a\u5706\u5fc3\u4e5f\u65e0\u6cd5\u8986\u76d6\u8fd9K+1\u4e2asites \u76f4\u89c2\u7684\u4f8b\u5b50\u662fk=1\u4e24\u4e2asite\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u53d6\u67d0\u4e00\u4e2a\u70b9\u4e3a\u5706\u5fc3\u534a\u5f842r(C*)\u753b\u5706\u65e0\u6cd5\u8986\u76d6\u53e6\u4e00\u4e2a\u70b9\uff0c\u5219\u6b64\u65f6\u7684r(C*)\u4e00\u5b9a\u6bd4\u5b9e\u9645\u7684\u6700\u4f18\u89e3\u5c0f\uff0c\u56e0\u4e3a\u5982\u679c\u53d6\u4e24\u4e2asite\u4e2d\u70b9\uff0c\u6700\u4f18\u89e3\u4e3a\u4e24\u4e2asite\u8ddd\u79bb\u76841/2\uff0c\u90a3\u4e48\u4ee5\u67d0\u4e00\u4e2a\u70b9\u4e3a\u5706\u5fc32\u500d\u6700\u4f18\u89e3\u753b\u5706\u4e00\u5b9a\u80fd\u8986\u76d6\u53e6\u4e00\u4e2a\u70b9 \u8fd9\u610f\u5473\u7740\u6211\u4eec\u7684r(C*)\u731c\u5c0f\u4e86 \u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u6211\u4eec\u5f97\u5230\u5c0f\u4e8eK\u4e2acenters\u5c31\u610f\u5473\u7740\u6211\u4eec\u7684r(C*)\u731c\u5927\u4e86 \u5728\u8fd9\u79cd\u542f\u53d1\u601d\u8def\u4e0b\uff0c\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u6211\u4eec\u53ef\u4ee5\u731c\u5230\u4e00\u4e2ar(C*)\uff0c\u5f53\u4ee52r(C*)\u753b\u5706\u65f6\u80fd\u6070\u597d\u8986\u76d6\u6240\u6709sites\uff0c\u6b64\u65f6\u6211\u4eec\u5f97\u5230\u4e86\u6700\u4f18\u89e3r(C*)\uff0c\u548c2r(C*)\u8986\u76d6\u6240\u6709sites\u7684\u4e00\u79cd\u65b9\u6848 \u8fd9\u662f\u4e00\u4e2a2-approximation\u7b97\u6cd5   </p> <p>Kcentre\u2014\u2014be far away(\u4e0d\u9700\u8981\u82b1\u65f6\u95f4\u731c\u6d4br(C*)\u4ee5\u5c1d\u8bd5\u6c42\u89e3) \u5bfb\u627e\u4e0e\u5706\u5fc3\u8ddd\u79bb\u6700\u8fdc\u7684\u70b9\u4f5c\u4e3a\u65b0\u7684\u5706\u5fc3  </p> <p>\u03c1 = 2   </p> <p>\u4e0a\u9650\u7ed3\u8bba\uff1aUnless P = NP,there is no \u03c1-approximation for any \u03c1 &lt; 2(\u89c4\u7ea6\u6cd5\u8bc1\u660e)  </p> <p>\u8865\u5145\uff1a A&lt;=<sub>p</sub>B\uff0cB\u6709\u8fd1\u4f3c\u6bd4\u03c1\u4e0d\u4e00\u5b9a\u80fd\u5f97\u51faA\u4e5f\u6709\u8fd1\u4f3c\u6bd4\u03c1\uff0c\u56e0\u4e3a\u4e8c\u8005\u5bf9cost\u7684\u6807\u51c6\u4e0d\u540c  </p>"},{"location":"fa24/ads/note/#lecture-12-local-search","title":"Lecture 12: Local Search","text":"<p>[Definition]Solve problems approximately\u2014\u2014aims at a local optimum [Target]Find the global Minimum of a function f Guess -&gt; Neighbourhood -&gt; Global Minimum Local Search is an approximation algorithm for it cannot ensure an optimal solution is found(maybe an extreme)  </p> <p>Local - Define neighbourhoods in a feasible set - A local optimum is a best solution in a neighbourhood  </p> <p>Search - Start with a feasible solution and search a better one in the neighbourhood(greedy algorithm) - A local optimum is achieved if no improvement is possible  </p> <p>may not stop in finite steps each step in searching in neighbourhood may not in polynomial time  </p> <pre><code>SolutionType Gradient_descent(){  \n  Start from a feasible solution S;  \n  MinCost = cost(S);  \n  while(1){  \n    S' = Search(N(S));  \n    CurrentCost = cost(S');  \n    if(CurrentCost &lt; MinCost){  \n      MinCost = CurrentCost;  \n      S = S';  \n    }  \n    else break;  \n  }  \n  return S;  \n}  \n</code></pre>"},{"location":"fa24/ads/note/#the-vertex-cover-problem","title":"The Vertex Cover Problem","text":"<p>Given an undirected graph G = (V,E) ,find a minimum vertex set S,so that for every edge (u,v),at least one vertex(u or v) is in S  </p> <p>Feasible solution set FS:all the vertex covers. Neighbourhood:FS - 1  </p> <p>Case 0:no edge \u2014\u2014 only one extreme Case 1:a centre:global optimal is not guaranteed \u2014\u2014 two extreme Case 2:Line \u2014\u2014 many extremes  </p>"},{"location":"fa24/ads/note/#try-to-improve","title":"Try to improve...","text":"<p>For Case 1:cannot jump out when reached an extreme Metropolis Algorithm <pre><code>  Define constants k and T;//\u8d85\u53c2  \n\n  while(1){  \n    S' = Randomly chosen from N(S);  \n    if(CurrentCost = cost(S')){  \n    CurrentCost = cost(S');  \n    }  \n    else{  \n      With a probability e^{-\u0394cost/(kT)},let S = S';  \n      //\u0394cost ++ ,probability --  \n      else break;//\u8bbe\u7f6e\u4e00\u5b9a\u7684\u8fed\u4ee3\u6570\uff0c\u8fbe\u5230\u8fed\u4ee3\u6570\u4fbf\u505c\u6b62  \n    }  \n  }  \n\n  return S;  \n</code></pre> Unless P=NP,no 2-\u03b5 approximation algorithm exists  </p> <p>Simulated Annealing\u6a21\u62df\u9000\u706b large jump probability at first,then getting smaller Cooling schedule T = {T1,T2,...} kT ++, probability --  </p>"},{"location":"fa24/ads/note/#hopfield-neural-networks","title":"Hopfield Neural Networks","text":"<p>Graph G = (V,E) with integer edge weight w(positive or negative) If w &lt; 0,e = (u,v),then u and v want to have the same state(1 or -1) If w &gt; 0,u and v have different states The absolute value |w| indicates the strength of the requirement  </p> <p>output:a configuration S of the network respects the requirements of all the edges  </p> <p>Find a configuration that is sufficiently good  </p> <p>In a configuration S,edge e = (u,v) is good if ws<sub>u</sub>s<sub>v</sub> &lt; 0,otherwise it's bad a node u is satisfied if the weight of incident good edges &gt;= weight of incident bad edges(\u03a3ws<sub>u</sub>s<sub>v</sub> &lt;= 0) A configuration is stable if all the nodes are satisfied Try to find a network that all the nodes are satisfied Does a stable configuration always exist? Yes,we can find it in finite steps. Find a solution by applying local search   </p> <p>Start from a random configuration Define neighbourhood by Changing the state of one node <pre><code>ConfigType State_flipping(){  \n  Start from an arbitrary configuration S;  \n  while(!IsStable(S)){  \n    u = GetUnsatisfied(S);  \n    //no better solution is guaranteed   \n    su = -su;  \n  }  \n  return S;  \n}  \n</code></pre> Will it always terminate?  </p> <p>Claim:The state-flipping algorithm terminates at a stable configuration after at most W = \u03a3|w| iterations \u603b\u80fd\u5728\u6709\u9650\u6b65\u6536\u655b\u5230\u7a33\u5b9a\u89e3\uff0c\u4f46\u4e0d\u4e00\u5b9a\u662f\u5168\u5c40\u6700\u4f18\u89e3\uff08\u6700\u5c0f\u80fd\u91cf\u72b6\u6001\uff09 Proof: the measure of progress \u03a6(S) = \u03a3<sub>e is good</sub> |w<sub>e</sub>| When u flips state \u03a6(S') = \u03a6(S) - \u03a3<sub>e is bad</sub> |w<sub>e</sub>| + \u03a3<sub>e is good</sub> |w<sub>e</sub>| \u03a6(S') &gt; \u03a6(S)  </p> <p>[Target]maximize \u03a6 Time complexity:O(eW) fake polynomial time algorithm  </p>"},{"location":"fa24/ads/note/#the-maximum-cut-problem","title":"The Maximum Cut Problem","text":"<p>Given an undirected graph G = (V,E) of positive integer edge weight,find a node partition (A,B) such that the total weight of edges crossing the cut is maximized(\u4e0d\u540c\u989c\u8272\u70b9\u4e4b\u95f4\u8fb9\u7684\u8fb9\u6743\u548c) w(A,B) = \u03a3<sub>u\u2208A,v\u2208B</sub>w<sub>uv</sub> </p> <p>Related to Local Search Feasible solution set FS:any partition(A,B) Neighbourhood:moving one node from A to B(or B to A)  </p> <p>a special case of Hopfield Neural Network - with w all being positive</p> <p><code>u = GetUnsatisfiled(S)</code> </p> <p>Hopfield Neural Network is to find a valid solution but now we want to find an optimal solution</p> <p>Claim:Let(A,B)be a local optimal partition and let (A,B) be a glocal optimal partition.Then w(A,B) &gt;= 1/2w(A,B) \u03c1 = 2 Proof: (A,B) is a local optimal partition,for any u\u2208A\uff0c\u03a3<sub>v\u2208A</sub>w<sub>uv</sub> &lt;= \u03a3<sub>v\u2208B</sub>w<sub>uv</sub> 2\u03a3<sub>{u,v}\u2208A</sub>w<sub>uv</sub> = \u03a3<sub>u\u2208A</sub>\u03a3<sub>v\u2208A</sub>w<sub>uv</sub> &lt;= \u03a3<sub>u\u2208A</sub>\u03a3<sub>v\u2208B</sub>w<sub>uv</sub> = w(A,B)  </p> <p>w(A,B) &lt;= \u03a3<sub>{u,v}\u2208A</sub>w<sub>uv</sub> + \u03a3<sub>{u,v}\u2208B</sub>w<sub>uv</sub> + w(A,B) &lt;= 2w(A,B)  </p> <p>Another problem:fake polynomial time solution:stop the algorithm when there are no \"big enough\"solution Big-improvement-flip:Only choose a node which,when flipped,increases the cut value by at least \\(\\frac{2\u03b5}{V}*w(A,B)\\) \u03c1 = 2+\u03b5 terminate at most \\(O(\\frac{n}{\u03b5}logW)\\)flips Proof by (1+1/x)^x &gt;= 2 for any x &gt;= 1  </p> <p>another solution:a better local the neighbourhood should be rich enough but not too large(increase the step length) k-flips -&gt; T = O(n<sup>k</sup>)  </p> <p>Improvement:(greedy) [Kernighan-Lin]K-L heuristic(find neighbourhood) step-1:make 1-flip as good as we can \u2014\u2014 O(N) step-k:make 1-flip of an unmarked node as good as we can \u2014\u2014 O(N-k+1) step-n:(A<sub>n</sub>,B<sub>n</sub>) = (B,A)  </p> <p>e.g.\u706b\u5f71\u5fcd\u8005\u9009\u4eba T = O(n<sup>2</sup>) 1/\u03c1 = 63%  </p> <p>Unless P=NP,no 17/16 approximation algorithm exists  </p>"},{"location":"fa24/ads/note/#lecture-13-randomized-algorithms","title":"Lecture 13: Randomized Algorithms","text":"<p>[Definition] The world behaves randomly - randomly generated input solved by traditional algorithm -&gt; Average-case Analysis  </p> <p>The algorithm behaves randomly - make random decisions as the algorithm processes the worst-case input(the worst-case input are more difficult to be created) -&gt; Randomized Algorithms  </p> <p>Efficient randomized algorithms that only need to yield the correct answer with high probability Randomized algorithms that are always correct,and run efficiently in expectation  </p> <p>Pr[A]:= probability of A E[X]:= expectation  </p>"},{"location":"fa24/ads/note/#the-hiring-problem","title":"The Hiring Problem","text":"<p>Interview a different applicant per day for N days Interviewing Cost = C<sub>i</sub> &lt;&lt; Hiring Cost = C<sub>h</sub> Assume M people hired,total cost:O(NC<sub>i</sub>+MC<sub>h</sub>)  </p> <p>Naive Solution Once Qi &gt; BestQ,update bestQ and hire i worst case:O(N(C<sub>i</sub>+C<sub>h</sub>)) Assume candidates arrive in random order X = number of hires X<sub>i</sub> = 1 if hired else 0 E[X<sub>i</sub>]=Pr[candidate i is hired] = 1/i E[X] = \u03a3E[X<sub>i</sub>] = \u03a31/i = lnN + O(1) O(C<sub>h</sub>lnN + NC<sub>i</sub>)  </p> <p>RandomizedHiring randomly permute the list of candidates(random factor)  </p> <p>Randomized Permutation Algorithm Idea1 [Target]Permute array A[] Assign each element A[i] a random priority P[i] and sort Let A[i].P = 1 + rand()%(N<sup>3</sup>) makes it more likely that all priorities are unique  </p> <p>Pr(\u51fa\u73b0\u91cd\u590d\u7684priority) &lt;= \\(\\sum_{i,j}\\frac{1}{n^{3}} = \\frac{1}{n}\\) If this happen,assign priority again  </p> <p>Idea2:Random Shuffle(\u6d17\u724c) <pre><code>for i = n to 1  \n  j = random(1,i)  \n  exchange a[i] with a[j]  \n</code></pre></p>"},{"location":"fa24/ads/note/#online-hiring-algorithm-hire-only-once","title":"Online Hiring Algorithm - hire only once","text":"<p>Select the first k out of N and find the best if any i &gt; k,hire i  </p> <p>Q1:What is the probability we hire the best for any given k S<sub>i</sub>:= the ith applicant is the best Pr(S<sub>i</sub>) = Pr(the best one is at position i) * Pr(no one at position k+1 ~ i-1 are hired) = 1/N * k/(i-1) Pr(S) = \u03a3Pr(S<sub>i</sub>) = \\(\\frac{k}{N}\\sum_{i=k}^{N-1}\\frac{1}{i}\\) $ \\frac{k}{N}ln(\\frac{N}{k}) &lt;= Pr[S] &lt;= \\frac{k}{N}ln(\\frac{N-1}{k-1}) $  </p> <p>\u6ce8\u610f\uff1a\u6700\u540e\u4e00\u4eba\u88ab\u96c7\u4f63\u7684\u6982\u7387\u8981\u52a0\u4e0a\u6700\u597d\u7684\u5728\u524dk\u4e2a\u7684\u6982\u7387   </p> <p>Q2:What is the best value of k  </p> <p>\\(\\frac{d\\frac{k}{N}ln(\\frac{N}{k})}{dk} = 0\\) </p> <p>\\(k = \\frac{N}{e}\\) </p>"},{"location":"fa24/ads/note/#3sat","title":"3SAT","text":"<p>n variables and k clauses (x1 | ~x2 | x3) &amp; (~x1 | x2 | x4) &amp; ... x1\u968f\u673a\u53d6T or F(\u54041/2\u6982\u7387)(Monte Carlo) Y:=clauses being satisfied E[Y] = \\(\\frac{7}{8}k\\) Claim:\u4e00\u5b9a\u5b58\u5728\u4e00\u79cdassignment\u6ee1\u8db3\u81f3\u5c11\\(\\frac{7}{8}k\\)\u4e2aclause,\u5373Pr(Y&gt;=\\(\\frac{7}{8}k\\))&gt;0 \u53cd\u8bc1\uff1aif Pr(Y&gt;=\\(\\frac{7}{8}k\\))=0 E[Y] = \\(\\sum_{i&lt;\\frac{7}{8}k}\\)i * Pr(Y=i) &lt; \\(\\frac{7}{8}k\\sum_{i&lt;\\frac{7}{8}k}\\)Pr(Y=i) = \\(\\frac{7}{8}k\\) \u77db\u76fe  </p> <p>\u4e0b\u6c42Pr(Y&gt;=\\(\\frac{7}{8}k\\)) k' = \\(\\lfloor\\frac{7}{8}k\\rfloor\\) \\(\\frac{7}{8}k\\) = E[Y] = \\(\\sum_{i=0}^{k}i*Pr(Y=i)\\)  = \\(\\sum_{i=0}^{k'}i*Pr(Y=i)\\) + \\(\\sum_{i=k'+1}^{k}i*Pr(Y=i)\\) &lt;= k'\\(\\sum_{i=0}^{k'}Pr(Y=i)\\) + k\\(\\sum_{i=k'+1}^{k}Pr(Y=i)\\) = k'Pr(Y&lt;\\(\\frac{7}{8}k\\)) + kPr(Y&gt;=\\(\\frac{7}{8}k\\)) &lt;= k' + kPr(Y&gt;=\\(\\frac{7}{8}k\\))  </p> <p>kPr(Y&gt;=\\(\\frac{7}{8}k\\)) &gt;= \\(\\frac{7}{8}k\\)-k' &gt;= \\(\\frac{1}{8}\\) Pr(Y&gt;=\\(\\frac{7}{8}k\\)) &gt;= \\(\\frac{1}{8k}\\) \u4ece\u800c\u91cd\u590d8k\u6b21\u6211\u4eec\u53ef\u4ee5\u671f\u671b\u6ee1\u8db3\\(\\frac{7}{8}k\\)clauses (Las Vegas)  </p> <p>\u7ee7\u7eed\u964d\u4f4e\u5931\u8d25\u7684\u6982\u7387\uff1a\u91cd\u590d8klnk\u6b21 Pr(fail)&lt;=\\((1-\\frac{1}{8k})^{8klnk}\\) &lt;= \\((e^{-1})^{lnk}\\) &lt;= \\(\\frac{1}{k}\\) \u4ece\u800c\u91cd\u590d8klnk\u6b21\uff0cPr(success) = \\(1-\\frac{1}{k}\\) </p>"},{"location":"fa24/ads/note/#quicksort","title":"Quicksort","text":"<p>Central splitter:= the pivot that divides the set so that each side contains at least n/4 Modified Quicksort := always select a central splitter before recursions  </p> <p>Claim:The expectation of iterations needed until we find a central splitter is at most 2. Recall:Recursion-tree method in divide and conquer Type j:The subproblem S is of Type j if  $ N(\\frac{3}{4})^{j+1} &lt;= |S| &lt;= N(\\frac{3}{4})^{j}(\u9012\u5f52\u6811\u7684\u5c42\u6570) $ At most \\((\\frac{3}{4})^{j+1}\\) ( = \\(\\frac{N}{|S|_{min}}\\)) subproblems of type j. $ E[T_{type j}] = O(N(\\frac{3}{4})^{j})(\u6570\u91cf\u4e0a\u754c) * (\\frac{4}{3})^{j+1}(\u89c4\u6a21\u4e0a\u754c) = O(N) $ Number of different types = log<sub>4/3</sub>N = O(logN) T = O(NlogN)(\u671f\u671b\u65f6\u95f4\u590d\u6742\u5ea6)  </p> <p>Idea2:random choose a pivot and use it anyway O(nlogn) in expectation  </p> <p>total running time = O(total comparisons) A = {a1,a2,...,ai,...,aj,...,an} in increasing order(if not,the probability is wrong) x<sub>ij</sub> = 1 if ai,aj are compared and 0 otherwise E[X] = \\(\\sum_{i}\\sum_{j&gt;i}E[X_{ij}]\\) ai,aj is compared if  1. ai or aj is choosed as a pivot 2. ai and aj is in the same group(no element between ai and aj is choosed as a pivot before) Pr(comparison ai,aj) = Pr(ai or aj was the first pivot among ai,...,aj) = \\(\\frac{2}{j-i+1}\\) E[X] = O(nlogn)  </p>"},{"location":"fa24/ads/note/#lecture-14-parallel-algorithms","title":"Lecture 14: Parallel Algorithms","text":""},{"location":"fa24/ads/note/#parallel-random-access-machinepram","title":"Parallel Random Access Machine(PRAM)","text":"<p>processors:P<sub>1</sub>,...,P<sub>n</sub> and a shared memory for P<sub>i</sub>,1 &lt;= i &lt;= n pardo A(i):=B(i) T = O(n/n) = O(1)  </p> <p>resolve access conflicts - Exclusive-Read Exclusive-Write(EREW) - Concurrent-Read Exclusive-Write(CREW) - Concurrent-Read Concurrent-Write(CRCW)   Arbitrary rule   Priority rule   Common rule  </p>"},{"location":"fa24/ads/note/#the-summation-problem","title":"The summation problem","text":"<p>Input:A(1),...,A(n) Output:A(1) + ... + A(n)  </p> <p>Let n = 8 P(i)=A(i) A(1)=A(1)+A(2),A(3),A(5),A(7) A(1)=A(1)+A(3),A(5) A(1)=A(1)+A(5) T = O(logn)  </p> <p>PRAM model\u5904\u7406\u5668\u56fa\u5b9a\u6a21\u578b <pre><code>for Pi,1&lt;=i&lt;=n pardo  \n  B(0,i):=A(i)  \n  for(h=1 to logn)do  \n    if(i&lt;=n/(2^h))  \n      B(h,i):=B(h-1,2i-1)+B(h-1,2i)  \n    else stay idle(but cannot go to other programme)  \noutput:B(logn,1)  \n</code></pre> Therefore,the number of operations for any time is p. Waste of resources  </p> <p>Work-Depth(WD)presentation\u5de5\u4f5c\u6d41\u7a0b\u6a21\u578b <pre><code>for Pi,1&lt;=i&lt;=n pardo  \n  B(0,i):=A(i)  \nfor(h=1 to logn)do  \n  for Pi,1&lt;=i&lt;=n/(2^h) pardo  \n    B(h,i):=B(h-1,2i-1)+B(h-1,2i)  \nfor i=1 pardo  \n  output B(logn,1)  \n</code></pre> Release processors right after finishing the operations T(n) = logn + 2 W(n) = n + n/2 + n/4 + ... + 1 + 1 = 2n = T<sub>no-parallel</sub>(n)  </p>"},{"location":"fa24/ads/note/#performance-measurement","title":"Performance measurement","text":"<ul> <li>Work load - total number of operations:W(n)  </li> <li>Worst-case running time:T(n)   W(n) operations and T(n) time   100\u5757\u7816\u572810\u79d2\u5185\u642c\u5b8c   P(n)=W(n)/T(n) processors and T(n) time(on a PRAM)   10\u4e2a\u4eba\u4e00\u5171\u642c\u4e8610\u79d2 -&gt; 100\u5757\u7816   W(n)/p time using any number of p &lt;= W(n)/T(n) processors(on a PRAM)   \u771f\u6b63\u642c\u7816\u4eba\u65702\uff0cT=50s(p\u8f83\u5c0f \u5904\u7406\u5668\u6709\u9650 \u7531W(n)dominate)   W(n)/p+T(n) time using any number of p processors(on a PRAM)   \u771f\u6b63\u642c\u7816\u4eba\u657050\uff0c\u4f46\u624b\u5957\u6570\u91cf\u4e3a10\uff0cT=T(n)(\u5904\u7406\u5668\u65e0\u9650\uff0c\u53d7\u9650\u4e8e\u5e76\u884c\u4e0a\u9650 \u7531T(n)dominate)     All asymptotically equivalent  </li> </ul> <p>When applying parallel algorithm,compared to serial algorithm,the running time usually decreases and the work load remains the same(or even increase)  </p>"},{"location":"fa24/ads/note/#prefix-sums","title":"Prefix Sums","text":"<p>Input:A(1),...,A(n) Output:A(1),A(1) + A(2),...,A(1) + ... + A(n) Consider balanced binary trees \u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u4e00\u4e2aC\u503cC(h,i)\u4e3a\u4ece\u7b2c\u4e00\u4e2a\u5143\u7d20\u5230\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u7684\u6700\u53f3\u8fb9\u7684\u53f6\u8282\u70b9rightmost descendant leaf\u7684\u548c   </p> <p>if(i == 1) C(h,i):=B(h,i) if(i%2 == 0) C(h,i):=C(h+1,i/2) if(i%2 == 1 &amp;&amp; i!=1)    C(h,i):=C(h,i-1)(conflict here) + B(h,i)          =C(h+1,(i-1)/2)(conflict here) + B(h,i)  </p> <p><pre><code>for Pi,1&lt;=i&lt;=n pardo  \n  B(0,i):=A(i)  \nfor(h=1 to logn)do  \n  for Pi,1&lt;=i&lt;=n/(2^h) pardo  \n    B(h,i):=B(h-1,2i-1)+B(h-1,2i)  \nfor(h=logn to 0)do  \n  for i even,1 &lt;=i&lt;= n/2^h pardo  \n  for i == 1 pardo  \n  for i odd,3 &lt;=i&lt;= n/2^h pardo  \nfor Pi,1&lt;=i&lt;=n pardo  \n  output C(0,i)  \n\nT(n) = O(logn) W(n) = O(n) = T(no parallel)  \n</code></pre> B\u4ece\u4f4e\u5230\u9ad8\uff0cC\u4ece\u9ad8\u5230\u4f4e  </p>"},{"location":"fa24/ads/note/#merging-merge-two-non-decreasing-arrays-an-and-bm-into-cnm","title":"Merging - merge two non-decreasing arrays A[n] and B[m] into C[n+m]","text":"<p>Technique:Partitioning - partition the input into a large number p of independent small jobs,so the size of the largest small job is n/p(no recursion,different from divide and conquer)  </p> <p>Ranking for B[j] RANK(j,A) = i,if A[i] &lt; B[j] &lt; A[i+1] for 1 &lt;= i &lt; n RANK(j,A) = 0,if B[j] &lt; A[1] RANK(j,A) = n,if B[j] &gt; A[n]  </p> <p>If already ranked <pre><code>for Pi, i&lt;=i&lt;=n pardo  \n  C[i+RANK(i,B)] := A[i]  \nfor Pi, i&lt;=i&lt;=n pardo  \n  C[i+RANK(i,A)] := B[i]  \n\nT = O(1) W = O(n + m)  \n</code></pre></p> <p>Calculate RANK Binary Search + parallel <pre><code>for Pi, i&lt;=i&lt;=n pardo  \n  RANK(i,B):=BS(A[i],B)  \n  RANK(i,A):=BS(B[i],A)  \n\nT = O(logn) W = O(nlogn)  \n</code></pre> Serial Ranking <pre><code>i=j=0  \nwhile(i&lt;=n ||j&lt;=m){  \n  if(A[i+1]&lt;B[j+1]&gt;)  \n    RANK(++i,B)=j;  \n  else RANK(++j,A)=i;  \n}  \n\nT = W = O(n + m)  \n</code></pre> Parallel Ranking Assume n = m and A[n+1] = B[n+1] = \u221e 1.Partitioning p = n/logn   A_select[i] = A[1+(i-1)logn]   B_select[i] = B[1+(i-1)logn]   compute RANK for each selected element </p> <p>2.Actual Ranking At most 2p smaller sized (O(logn)) problems T = O(logn) W = O(plogn) = O(n)  </p>"},{"location":"fa24/ads/note/#maximum-finding","title":"Maximum Finding","text":"<p>in binary search tree,replace \"+\" by \"max\" in the summation algorithm T(n) = O(logn),W(n) = O(n) \u5927\u86c7\u4e38\u7b97\u6cd5\u4e4b\u4e24\u4e24\u53ae\u6740 Compare all pairs T(n) = O(1)  W(n) = O(n\u00b2)  </p> <p>A Doubly-logarithmic paradigm h = loglogn is an integer Partition by \\(\\sqrt{n}\\) and do in parallel recursively(namely a divide and conquer) M<sub>i</sub> ~ T(\\(\\sqrt{n}\\)),W(\\(\\sqrt{n}\\)) 1 &lt;= i &lt;= \\(\\sqrt{n}\\) For M<sub>1</sub> to M<sub>\\(\\sqrt{n}\\)</sub>  \u5e76\u884c\u5927\u86c7\u4e38\u7b97\u6cd5 =&gt; A<sub>max</sub> ~ T = O(1),W = O(n) T(n) &lt;= T(\\(\\sqrt{n}\\)) + c W(n) &lt;= \\(\\sqrt{n}\\)W(\\(\\sqrt{n}\\)) + c  T(n) = O(loglogn) W(n) = O(nloglogn)  </p> <p>[Target]modify W(n) to O(n) Partition by h = loglogn and only one parallel M<sub>i</sub> ~ O(\\(h\\)) For M<sub>1</sub> to M<sub>n/h</sub> \u4e0a\u8ff0\u5206\u6cbb\u6cd5=&gt; A<sub>max</sub> T(n) = O(h + loglog(n/h)) = O(loglogn) W(n) = O(h x (n/h) + (n/h)loglog(n/h)) = O(n)  </p> <p>[Target]modify T(n) to O(1) Random Sampling - T(n) = O(1),W(n) = O(n) with very high probability on an arbitary CRCW PRAM  </p> <p>1.randomly select n<sup>7/8</sup> elements from A into B(\u5bf9B\u7684\u6bcf\u4e2a\u5143\u7d20\u4f4d\u7f6e\u6254\u8272\u5b50\u53d6A\u4e2d\u7684\u5143\u7d20) T = O(1),W = O(n<sup>7/8</sup>) 2.Separate into n<sup>3/4</sup> blocks of size n<sup>1/8</sup> \u5e76\u884c\u5927\u86c7\u4e38\u7b97\u6cd5 =&gt; M<sub>i</sub>  T(n) = O(1) W(n) = O(n<sup>1/4</sup>) 3.Separate into n<sup>1/2</sup> blocks of size n<sup>1/4</sup> \u5e76\u884c\u5927\u86c7\u4e38\u7b97\u6cd5 T(n) = O(1) W(n) = O(n<sup>1/2</sup>) M(n<sup>7/8</sup>) ~ T = O(1),W = O(n)  </p> <pre><code>while(there is an element larger than M){  \n  for(each element larger than M)  \n    Throw it into a random place in a new B;  \n  Compute a new M;  \n}  \n</code></pre>"},{"location":"fa24/ads/note/#lecture-15-external-sorting","title":"Lecture 15: External Sorting","text":"<p>To get a[i] on - internal memory - O(1) - hard disk   1.find the track;//\u78c1\u9053   2.find the sector;//\u6247\u533a   3.find a[i] and transmit  </p> <p>To simplify,we consider a tape where the data can be only accessed sequentially,not in random \u78c1\u5934\u53ea\u80fd\u987a\u5e8f\u79fb\u52a8 Can use at least 3 tape drives  </p> <p>Tool:Mergesort  pass:\u4ece\u5c3e\u5411\u5934\u79fb\u52a8\u8bfb\u5199\u5934\u7684\u6b21\u6570 N:\u6570\u636e\u603b\u6570 M:memory\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6570\u636e\u6570 N/M = number of runs  </p> <p>[Concerns] 1.Seek time \u2014\u2014 O(number of passes) 2.Time to read or write one block of records 3.Time to internally sort M records 4.Time to merge N records from input buffers to the output buffer  </p> <p>[Targets] 1.Reduction of the number of passes 2.Run merging 3.Buffer handling for parallel operation 4.Run generation  </p>"},{"location":"fa24/ads/note/#reduce-the-number-of-passes","title":"Reduce the number of passes","text":"<p>Use a k-way(k &lt; M) merge by applying a min-heap  </p> <p>Number of passes = \\(1 + \\lceil log_k(N/M)\\rceil\\) 2k tapes are needed </p>"},{"location":"fa24/ads/note/#reduce-the-number-of-tapes-polyphase","title":"Reduce the number of tapes \u2014\u2014 Polyphase","text":"<p>A 2-way merge using only 3 tapes <pre><code>Loop:{\n  T2,T3 -&gt; T1  \n  1/2T1 -&gt; T2 //more passes are needed  \n  T1,T2 -&gt; T3\n}  \n</code></pre></p> <p>A smarter way - split unevenly  Claim:If the number of runs is a Fibonacci number F<sub>N</sub> then the best way to distribute them is to split them into F<sub>N-1</sub> and F<sub>N-2</sub> For a k-way merge,F<sub>N</sub><sup>(k)</sup> = F<sub>N-1</sub><sup>(k)</sup>+...+F<sub>N-k</sub><sup>(k)</sup> where F<sub>N</sub><sup>(k)</sup> = 0(0 &lt;= N &lt;= k-2),F<sub>k-1</sub><sup>(k)</sup> = 1 \u4e09\u9636\uff1a0,0,1,1,2,4,7,13,24,44,... k + 1 tapes only  </p> <p>If the initial number of runs in NOT a Fibonacci number,we can add some empty runs to make it be a Fibonacci number  </p>"},{"location":"fa24/ads/note/#parallel-operation","title":"Parallel Operation\u7f13\u5b58\u5e76\u884c\u5904\u7406","text":"<p>I/O\u4e0eCPU\u7684\u5e76\u884c  2k input &amp; 2 output  </p> <p> </p> <p>\u53ea\u6709\u5728\u8bfb\u5165\u7684\u6570\u636e\u4e0d\u5f71\u54cd\u6392\u5e8f\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\u624d\u53ef\u4ee5parallel\u5730\u8bfb\u5165\u4e0e\u5408\u5e76</p>"},{"location":"fa24/ads/note/#generate-a-longer-run-replacement-selection","title":"Generate a longer run \u2014\u2014 Replacement Selection","text":""},{"location":"fa24/ads/note/#minimize-the-merge-time","title":"Minimize the merge time","text":"<p>e.g. 2-way merge,4 runs of length 2,4,5,15,how to minimize the merge time  </p> <p>\u7ebf\u6027\u5408\u5e76: 2+4+6+5+11+15  </p> <p>Huffman Tree(greedy) Total merge time = O(the weighted external path length)  </p>"},{"location":"fa24/ads/note/#appendix","title":"Appendix","text":"Problem Approximation ratio Travelling salesperson  \u221e Bin Packing online:5/3offline:11/9        Knapsack problem(0-1 version) 1+\u03b5 \u03b5-&gt;0        Graph coloring problem maxdegree + 1        Set cover problem lnn        Hamiltonian Cycle problem \u221e        3-SAT \u221e        Vertex Cover problem 2        Clique problem \u221e        Partition problem \u221e        Maximum Cut problem 17/16        Scheduling Job 2        Load Balancing 1.95        K-center 2        <p>\u88681\u2014\u2014\u5e38\u89c1NPC\u95ee\u9898\u53ca\u6700\u4f18\u8fd1\u4f3c\u6bd4  </p>"},{"location":"fa24/aerobics/","title":"\u5065\u7f8e\u64cd\uff08\u521d\u7ea7\uff09  1.0 \u5b66\u5206","text":""},{"location":"fa24/aerobics/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5bff\u65fb\u8d85</p>"},{"location":"fa24/aerobics/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4f53\u80b2\u8bfe</p>"},{"location":"fa24/aerobics/#_3","title":"\u5206\u6570\u6784\u6210","text":"<p>\u4e13\u9879\u90e8\u520640\u5206\u7531\u96c6\u4f53\u8003\u8bd5\u4e0e\u4e2a\u4eba\u8003\u8bd5\u4e24\u90e8\u5206\u6784\u6210 \u96c6\u4f53\u8003\u8bd5\u4e8e\u51ac\u4e94\u5468\u5468\u672b\u8fdb\u884c\uff0c\u4e2a\u4eba\u8003\u8bd5\u4e8e\u51ac\u516d\u5468\u8bfe\u4e0a\u4e3e\u884c\uff0c\u51ac\u4e03/\u516b\u5468\u4e0d\u4e0a\u8bfe</p>"},{"location":"fa24/aerobics/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8fd9\u662f\u4e00\u95e8\u4e8b\u60c5\u8f83\u591a\u7684\u4f53\u80b2\u8bfe\uff0c24\u79cb\u51ac\u6ca1\u6709\u4e09\u597d\u676f\uff0c\u800c\u662f\u8981\u6c42\u5168\u4f53\u53c2\u52a0\u8fd0\u52a8\u4f1a\u5f00\u5e55\u5f0f\uff0c\u56e0\u6b64\u8fd0\u52a8\u4f1a\u524d\u516d\u5468\u7684\u5185\u5bb9\u4e3a\u82b1\u7403\u5566\u5566\u64cd\uff0c\u5e76\u9700\u8981\u5468\u4e94\u4e0e\u5468\u65e5\u4e0b\u5348\u6392\u7ec3\uff0c\u4e0d\u8fc7\u8fd8\u4f1a\u6709\u5468\u4e94\u4e0e\u5468\u65e5\u4e0b\u5348\u7684\u8f85\u5bfc\u7ad9\uff0c\u6bcf\u6b21\u7b97\u4f5c3\u6b21\u8dd1\u6b65\u6253\u5361 \u96c6\u4f53\u8003\u8bd5\u524d\u4e00\u5468\u9700\u8981\u5229\u7528\u8bfe\u4f59\u65f6\u95f4\u6392\u7ec3\uff0c\u4e2a\u4eba\u8003\u8bd5\u524d\u4f1a\u96c6\u4f53\u590d\u4e60\uff0c\u4f46\u5982\u679c\u5bf9\u81ea\u8eab\u6c34\u5e73\u4e0d\u81ea\u4fe1\u53ef\u5728\u8003\u8bd5\u524d\u4e00\u5929\u7ec3\u4e60\u4e00\u4e0b\uff0c\u56e0\u4e3a\u590d\u4e60\u65f6\u95f4\u4e0d\u4f1a\u592a\u4e45 smc\u8001\u5e08\u4eba\u6781\u597d\uff0c\u76f8\u5f53\u5173\u5fc3\u540c\u5b66\u5e76\u4e14\u7ed9\u5206\u8d85\u597d\uff0c\u5f3a\u63a8  </p>"},{"location":"fa24/aid/","title":"\u4eba\u5de5\u667a\u80fd\u5f15\u8bba  3.5 \u5b66\u5206","text":""},{"location":"fa24/aid/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u9ec4\u6b63\u884c</p>"},{"location":"fa24/aid/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"fa24/aid/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u8003\u52e4 5%</li> <li>\u516d\u6b21\u5b9e\u8bad\u4f5c\u4e1a 35%   \u671f\u672b\u524d\u4f1a\u91cd\u65b0\u5f00\u653e</li> <li>\u671f\u672b\u8003\u8bd5 60%   \u586b\u7a7a 40% + \u9009\u62e9 30% + \u5927\u9898 5 * 6%  </li> </ul>"},{"location":"fa24/aid/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8fd9\u95e8\u8bfe\u7a0b\u4ec0\u4e48\u90fd\u8bb2\u4e86\uff0c\u4f46\u4ec0\u4e48\u90fd\u6ca1\u8bb2 \u8003\u52e4\u53ea\u7eb8\u8d28\u70b9\u540d\u8fc7\u4e00\u6b21\uff0c\u662f\u5426\u7b97\u5165\u603b\u8bc4\u7b97\u5165\u591a\u5c11\u672a\u77e5\uff0c\u53ef\u80fd\u5361\u7ee9\u65f6\u635e\u4e00\u628a \u5b9e\u8bad\u4f5c\u4e1a\u4e00\u5768\uff0c\u5b8c\u6210\u5373\u53ef\uff0c\u4e0d\u5fc5\u591a\u7ea0\u7ed3\uff08\u4e0d\u4f1a\u53ef\u4ee5\u95ee\u6211\uff09 \u671f\u672b\u8003\u8bd5\u8003\u5bdf\u901f\u8bb0\u4e0e\u5c11\u91cf\u8ba1\u7b97\uff08hzx\u4f1a\u5212\u91cd\u70b9\u4e0e\u900f\u9898\uff0c\u4e0d\u8fc7\u4eca\u5e74\u9898\u51fa\u7684\u665a\uff0c\u6240\u4ee5\u900f\u7684\u8f83\u5c11\uff09 \u8003\u524d\u9700\u8981\u5c06ppt\u5b8c\u6574\u8fc7\u4e00\u904d\uff0c\u786e\u4fdd\u6240\u6709\u70b9\u90fd\u6709\u5370\u8c61\u4ee5\u514d\u590d\u4e60\u9057\u6f0f  </p> <p>24\u56de\u5fc6\u5377 23\u56de\u5fc6\u5377</p>"},{"location":"fa24/military_theory/","title":"\u519b\u4e8b\u7406\u8bba  2.0 \u5b66\u5206","text":""},{"location":"fa24/military_theory/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u6c88\u8389\u840d</p>"},{"location":"fa24/military_theory/#_2","title":"\u8ba4\u5b9a","text":"<p>\u601d\u653f\u519b\u4f53\u8bfe</p>"},{"location":"fa24/military_theory/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u8003\u52e4 5 * 1%</li> <li>\u8bba\u6587 55%</li> <li>\u671f\u672b 40%</li> </ul>"},{"location":"fa24/military_theory/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>slp\u519b\u7406\u7684\u795e\uff0c\u9009\u5230\u4eab\u798f\u5373\u53ef \u8003\u52e4\u5f62\u5f0f\u4e3a\u9ed1\u677f\u4e0a\u5de8\u5927\u7684\u6570\u5b57\u6216\u6301\u7eed\u4e24\u8282\u8bfe\u7684\u96f7\u8fbe \u5982\u679c\u8003\u52e4\u4e3a\u6ee1\u5206\uff0c\u8bba\u6587\u53ea\u8981\u63d0\u4ea4\uff0c\u5e73\u65f6\u5206\u5c31\u4e0d\u4f1a\u4f4e\u4e8e58\uff08\u516c\u793a\u6210\u7ee9\u4e2d\u65e0\u4e00\u4eba\u5361\u7ee9\uff09 \u671f\u672b\u8003\u8bd5\u96be\u5ea6\u8f83\u5927\uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u5efa\u8bae\u590d\u4e60\u592a\u591a\uff0c\u5982\u679c\u5b9e\u5728\u60f3\u8981\u590d\u4e60\u53ef\u4ee5\u628a\u5236\u5bfc\uff0c\u4fa6\u5bdf\u6280\u672f\u8fd9\u4e00\u5757\u770b\u4e00\u4e0b\uff08\uff1f\uff09  </p>"},{"location":"fa24/physics2/","title":"\u666e\u901a\u7269\u7406\u5b66II(H)  4.0 \u5b66\u5206","text":""},{"location":"fa24/physics2/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>GENTARO WATANABE/\u8def\u6b23</p>"},{"location":"fa24/physics2/#_2","title":"\u8bfe\u7a0b\u52a9\u6559","text":"<p>\u738b\u71a0\u9633</p>"},{"location":"fa24/physics2/#_3","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"fa24/physics2/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u4e3a\u4e86\u52a9\u6559\u800c\u9009\u7684\u4e00\u95e8\u8bfe\uff0c\u524d\u534a\u5b66\u671f\u7531\u6e21\u8fb9\u8001\u5e08\u8bb2\u6388\u7535\u78c1\u5b66\uff0c\u540e\u534a\u5b66\u671f\u7531\u8def\u6b23\u8001\u5e08\u8bb2\u6388\u5149\u5b66\u4e0e\u91cf\u5b50\u529b\u5b66\uff0c\u6e21\u8fb9\u8001\u5e08\u5907\u8bfe\u8ba4\u771f\u4f46\u5168\u82f1\u6587\u6388\u8bfe\uff0c\u4e14\u65f6\u5e38\u8bb2\u4e0d\u5b8c\u8bfe\u800c\u62d6\u5802\uff0c\u6bcf\u8282\u8bfe\u4f1a\u5f00\u653e\u51e0\u4e2aquiz\u5e76\u5728\u51e0\u5929\u5185\u5173\u95ed\uff1b\u8def\u6b23\u8001\u5e08\u4e0d\u600e\u4e48\u4f9d\u8d56\u5907\u8bfe\uff08\u5e95\u8574\u6bd4\u8f83\u6df1\u539a\uff09\uff0c\u4f1a\u505a\u8bb8\u591a\u62d3\u5c55\uff0c\u559c\u6b22\u96c6\u4e2d\u53d1\u5e03\u4f5c\u4e1a\u4e0equiz\uff0c\u6709\u4e00\u6b21\u65e9\u516b\u8bfe\u4e0a\u7684quiz\u53ea\u5f00\u653e\u4e94\u5206\u949f\u5b8c\u6210 \u4e0e\u666e\u7269\u4e00\u7c7b\u4f3c\uff0c\u5916\u6559\u73ed\u7684\u671f\u672b\u8003\u8bd5\u671f\u4e2d\u524d\u4e0e\u671f\u4e2d\u540e\u7684\u5360\u6bd4\u4e3a1:2\uff0c\u4e00\u5b9a\u5403\u900fppt\u5e76\u91cd\u70b9\u590d\u4e60\u5149\u5b66\uff0c6\u4e2a\u9009\u62e9\u9898\u548c\u90e8\u5206\u5927\u9898\u8003\u5bdf\u4f5c\u4e1a/quiz\u539f\u9898 <sub>~\u5728\u6211\u7684\u6559\u5506\u4e0b</sub>~\u8be5\u95e8\u8bfe\u7a0b\u7684\u671f\u672b\u6539\u5377\u76f8\u5f53\u6c34\uff0c\u5e73\u65f6\u5206\u636e\u52a9\u6559\u8bf4\u662f\u7aed\u5c3d\u5168\u529b \u6b64\u5916\uff0c\u53c2\u4e0e\u5927\u5b66\u751f\u7269\u7406\u7ade\u8d5b\u5e76\u83b7\u5f97\u4e09\u3001\u4e8c\u3001\u4e00\u7b49\u5956\u53ef\u4f9d\u6b21\u83b7\u5f971\uff0c2\uff0c3\u5206\u7684\u5e73\u65f6\u5206\u52a0\u5206\uff08\u5982\u679c\u5bf9\u4e8e\u81ea\u5df1\u7684\u5b9e\u529b\u6bd4\u8f83\u81ea\u4fe1\u4e14\u671f\u671b\u53d6\u5f97\u63a5\u8fd1\u6ee1\u7ee9\u7684\u8bdd\uff09  </p> <p>fa24\u671f\u672b\u56de\u5fc6\u5377 fa24\u671f\u672b\u53c2\u8003\u7b54\u6848 fa24\u671f\u4e2d\u56de\u5fc6\u5377 sp24\u671f\u672b\u56de\u5fc6\u5377 </p>"},{"location":"fa24/physics2_lab/","title":"\u666e\u901a\u7269\u7406\u5b66\u5b9e\u9a8cII  1.5 \u5b66\u5206","text":""},{"location":"fa24/physics2_lab/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>/</p>"},{"location":"fa24/physics2_lab/#_2","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"fa24/physics2_lab/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u666e\u7269\u5b9e\u9a8cII\u4ece24\u79cb\u51ac\u5f00\u59cb\u4e0d\u518d\u8981\u6c42\u624b\u5199\u62a5\u544a\uff0c\u56e0\u6b64\u672c\u4eba\u9009\u62e9\u4e86\u5168\u90e8\u505a\u6df7\u5408\u5b9e\u9a8c\u7684\u5f62\u5f0f\uff0c\u6df7\u5408\u5b9e\u9a8c\u505a\u4e00\u6216\u4e24\u5468\u4e0d\u7b49\uff0c\u603b\u8bc4\u53d6\u6240\u6709\u5b9e\u9a8c\u62a5\u544a\u6210\u7ee9\u7684\u5e73\u5747\u503c\uff0c\u6709\u4e86\u7535\u5b50\u62a5\u544a\u66f4\u52a0\u5bb9\u6613\u6c34\u8fc7\u4e86 \u636e\u8eab\u8fb9\u7edf\u8ba1\u5b66\uff0c\u5c0f\u8bfe\u9898\u4e0e\u79d1\u521b\u9879\u76ee\u7684\u4f53\u9a8c\u5e76\u4e0d\u5b8c\u5168\u597d\uff08\u4e0d\u8fc7\u4e5f\u62a2\u4e0d\u5230\uff0c\u4e0d\u662f\u5417~\uff09</p>"},{"location":"fa24/probability/","title":"\u6982\u7387\u8bba(H)  3.0 \u5b66\u5206","text":""},{"location":"fa24/probability/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u82cf\u4e2d\u6839</p>"},{"location":"fa24/probability/#_2","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"fa24/probability/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u70b9\u540d\u3001\u4f5c\u4e1a 20%  </li> <li>\u5c0f\u6d4b 2 * 10%  </li> <li>\u671f\u672b 60%  </li> </ul>"},{"location":"fa24/probability/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>szg\u6bcf\u6b21\u8bfe\u5fc5\u96f7\u8fbe\u70b9\u540d\uff0c\u4f4616\u6b21\u8bfe\u53ea\u8981\u70b9\u523012\u6b21\u5c31\u7b97\u6ee1\u5206\uff0c\u56e0\u6b64\u5076\u5c14\u6ca1\u70b9\u4e0a\u4e5f\u6ca1\u5173\u7cfb \u6b64\u5916\uff0c\u6bcf\u8282\u8bfe\u8fd8\u4f1a\u5728\u8bfe\u524d\u6309\u7167\u540d\u5355\u987a\u5e8f\u5ff5\u540d\u5b57\u70b9\u540d\uff0c\u6bcf\u540d\u540c\u5b66\u4f1a\u88ab\u70b9\u5230\u4e24\u6b21\uff0c\u53ef\u6258\u670b\u53cb\u8bf7\u5047\uff0c\u8001\u5e08\u770b\u9489\u9489\u5df2\u8bfb\u4e0d\u56de \u8bfe\u4e0a\u5076\u5c14\u4f1a\u5728\u5ff5\u540d\u5355\u5ff5\u5230\u7684\u540c\u5b66\u4e2d\u62bd\u4eba\u56de\u7b54\u95ee\u9898\uff08\u5728\u5176\u4ed6\u4eba\u4e2d\u62bd\u4e5f\u6709\u53ef\u80fd\uff09\uff0c\u5982\u679c\u62bd\u5230\u4eba\u4e0d\u5728\u7b97\u7f3a\u52e4 \u4f5c\u4e1a\u540c\u683715\u6b21\u63d0\u4ea412\u6b21\u5373\u7b97\u6ee1\u5206 \u5c0f\u6d4b\u96be\u5ea6\u4e0d\u5c0f\uff0c\u638c\u63e1\u4f5c\u4e1a\u9898\u5f88\u91cd\u8981\uff0c\u5c0f\u6d4b\u4f1a\u62c9\u5206\u9700\u8981\u5c24\u5176\u91cd\u89c6 \u671f\u672b\u8003\u8bd5\u8f83\u4e3a\u56f0\u96be\uff08\u5927\u6982\u662fszg\u7684\u6700\u540e\u4e00\u821e\u4e86\u5427\uff09\uff0c\u4e0d\u8fc7\u636e\u52a9\u6559\u8bf4\u662f\u7aed\u5c3d\u5168\u529b\u635e\u4e86 \u56e0\u4e3a\u662f\u6700\u540e\u4e00\u821e\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u56de\u5fc6\u5377\u4e86\uff0c\u4e0d\u8fc7\u7b14\u8bb0\u53ef\u53c2\u8003  </p> <p>\u7b14\u8bb0 </p>"},{"location":"fa24/sys2/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edfII  5.5 \u5b66\u5206","text":""},{"location":"fa24/sys2/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5362\u7acb/\u7533\u6587\u535a</p>"},{"location":"fa24/sys2/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"fa24/sys2/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u8003\u52e4 1%\u4fdd\u5e95 + 1.5% * 6 = 10%   \u5171\u8003\u52e47\u6b21\uff0c\u52306\u6b21\u5373\u8bb0\u6ee1\u5206 </li> <li>\u5b9e\u9a8c 60%  </li> <li>Lab0 4%  </li> <li>Lab1 \u4e94\u7ea7\u6d41\u6c34\u7ebf 10%  </li> <li>Lab2 \u51b2\u7a81\uff0c\u6570\u636e\u524d\u9012\u4e0e\u603b\u7ebf 10%  </li> <li>Lab3 \u5377\u79ef\u52a0\u901f\u5668 4%  </li> <li>Lab4 RV64 \u5185\u6838\u5f15\u5bfc 4%  </li> <li>Lab5 RV64 \u5185\u6838\u4e2d\u65ad\u5904\u7406 6%  </li> <li>Lab6 RV64 \u5185\u6838\u7ebf\u7a0b\u8c03\u5ea6 8%  </li> <li>Project \u7efc\u5408\u5b9e\u9a8c 14%\uff08\u4e0d\u8981\u6c42\u4e0b\u677f\uff09  </li> <li>Bonus \u5b9e\u73b0<code>snprintf</code>\u51fd\u6570 5%  -----------total &lt;= 70-------------</li> <li>\u671f\u672b 30%   \u5355\u9009\uff1a15 * 2% = 30%   Q&amp;A\uff1a70%(2hardware+3software)  </li> </ul>"},{"location":"fa24/sys2/#_4","title":"\u8bfe\u7a0b\u4ecb\u7ecd","text":"<p>\u8ba1\u7b97\u673a\u7cfb\u7edfII\u5305\u62ec\u786c\u4ef6\uff08\u6d41\u6c34\u7ebfCPU\uff09\u4e0e\u8f6f\u4ef6(\u64cd\u4f5c\u7cfb\u7edfOS)\u4e24\u4e2a\u90e8\u5206 \u786c\u4ef6\u90e8\u5206\u516d\u5468\u5305\u62ec\uff1asys1\u590d\u4e60\u3001\u6d41\u6c34\u7ebfCPU\u7b80\u4ecb\u3001\u5192\u9669\u5904\u7406\u7b49 \u8f6f\u4ef6\u90e8\u5206\u4e5d\u5468\u5305\u62ec\uff1aOS Structures\u3001Processes\u3001Scheduling\u3001Threads\u3001Synchronization\u3001Deadlock  </p>"},{"location":"fa24/sys2/#_5","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5b9e\u9a8c\u591a\u4e0e\u52a9\u6559\u79c1\u4fe1/P2P \u5173\u4e8ebonus\u5b9e\u9a8c\u7684\u63d0\u793a\uff1a\u627e\u5230musl\u7684\u6e90\u7801\uff0ccp\u5927\u6cd5\u540e\u5220\u9664\u591a\u4f59\u90e8\u5206\u5373\u53ef swb\u8001\u5e08\u7279\u522b\u5fc3\u4e0a\u8bfe\u53c2\u4e0e\u5ea6\uff0c\u4f1a\u9891\u7e41\u8fde\u7eed\uff08\u65e9\u516b\uff09\u8003\u52e4\u5e76\u5bf9\u540e\u6392\u540c\u5b66\u53d1\u8d77\u63d0\u95ee \u4e0d\u8bba\u9898\u76ee\u96be\u5ea6\uff0c\u671f\u672b\u8003\u8bd5\u7b54\u9898\u65f6\u8ba4\u771f\u4ed4\u7ec6\u4e00\u4e9b\uff0c\u719f\u7ec3\u638c\u63e1\u4f5c\u4e1a\uff08\u53ef\u80fd\u662f\u9694\u58c1\u73ed\u7684\uff09\u4e2d\u7684\u5185\u5bb9  </p>"},{"location":"fa24/sys2/note/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edfII","text":""},{"location":"fa24/sys2/note/#week1-6","title":"\u786c\u4ef6 Week1 - 6","text":""},{"location":"fa24/sys2/note/#review-week1","title":"Review Week1","text":"<p>Why not single-cycle?  </p> <ul> <li>longest delay determines clock period  </li> <li>waste of area(e.g. mul need to use ALU repeatedly)  </li> </ul> <p>Why not multi-cycle?  </p> <ul> <li>even longer time (longer than single-cycle)  </li> <li>a new perspective:finer-grained  </li> </ul> <p>ISA:stack,accumulator,register(register-memory),register(load-store) </p> <p>practice:D = A * B - (A + C * B)</p> <p><pre><code>//stack:\npush A\npush B\nmul\npush A\npush C\npush B \nmul\nadd\nsub   //\u8fd9\u662f\u6b63\u786e\u7684 \u6808\u9876\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\u662f\u7b2c\u4e8c\u64cd\u4f5c\u6570\npop D\n\n\n//accumulator:\nload A \nmul B \nstore E\nload C \nmul B \nadd A \nstore F\nload E \nsub F  //\u7b2c\u4e00\u64cd\u4f5c\u6570\u662f\u5bc4\u5b58\u5668 \u7b2c\u4e8c\u64cd\u4f5c\u6570\u662f\u5185\u5b58\u53d8\u91cf\nstore D\n\n//\u4f18\u5316\uff1a\nload B\nmul C\nadd A\nstore D\nload A\nmul B\nsub D\nstore D\n</code></pre>  \u4e0d\u540c\u64cd\u4f5c\u6570\u7684\u6570\u76ee\u610f\u5473\u7740\u4e0d\u540c\u7684\u6307\u4ee4\u6570</p> <p></p> <p></p> <p>\u4f18\u5316CPU\uff1a \u51cf\u5c11\u6307\u4ee4\u6761\u6570\uff08CISC\u4e00\u6761\u6307\u4ee4\u8574\u542b\u64cd\u4f5c\u66f4\u591a\uff09  </p> <p>\u4f7f\u7528\u5e26\u7d2f\u52a0\u5668\u7684GPR\uff1a\u66f4\u5feb\u66f4\u4fbf\u6377 \u53d6\u5740\u6a21\u5f0f\uff1a\u7acb\u5373\u6570\u5bfb\u5740\u3001\u5bc4\u5b58\u5668\u5bfb\u5740\u3001\u57fa\u4e8e\u504f\u79fb\u7684\u5185\u5b58\u5bfb\u5740 \u5185\u5b58\u5bfb\u5740\uff1a\u6392\u5217\uff08\u5c0f\u7aef\u5e8fRISC-V\uff0c\u5927\u7aef\u5e8f\uff09\u3001\u5bf9\u9f50\uff08\u4e0d\u5bf9\u9f50\u53ef\u80fd\u9700\u8981\u591a\u6b21\u8bbf\u5b58\u64cd\u4f5c\uff09  </p> <p><pre><code>2000 jal x1,procedureoffset\n2004 add ...\n...\n3000 proc sub ...\n     ret\n</code></pre> x1\u5b58\u7684\u5730\u5740\u5e94\u8be5\u662f2004\uff0c\u786e\u4fdd\u8df3\u8f6c\u540e\u7684\u6307\u4ee4\u662f\u6ca1\u6709\u6267\u884c\u8fc7\u7684  </p> <p>jalr x3(\u6548\u679c\u540cjal\u7684x1),x1(\u57fa\u5730\u5740 \u7f16\u7801\u7a7a\u95f4 jal\u53ea\u80fd\u8df3\u8f6c32-5-7=20\u4f4d\uff0cx1\u7528\u4e8e\u8df3\u8f6c\u5230\u66f4\u5927\u7684\u8303\u56f4),offset  \u6267\u884c\u524d\u6709\u8981\u4fdd\u8bc1x7\u7684\u503c\u4e0d\u53d8\uff0c\u4ee5\u514d\u5916\u90e8\u7a0b\u5e8f\u8c03\u7528\u65f6\u51fa\u9519 \u4e3a\u4e86\u72b6\u6001\u4fdd\u5b58\uff0c\u6709\u4e24\u79cd\u5bc4\u5b58\u5668\u4fdd\u5b58\u65b9\u6cd5\uff1acaller saving(\u53ef\u80fd\u9700\u8981\u4fdd\u5b58\u6240\u6709\u5bc4\u5b58\u5668)/callee saving(\u4ece\u51fd\u6570\u7684\u58f0\u660e\u53ef\u77e5\u6240\u9700\u7684\u5bc4\u5b58\u5668) </p>"},{"location":"fa24/sys2/note/#week2-6","title":"\u6d41\u6c34\u7ebf Week2 - 6","text":""},{"location":"fa24/sys2/note/#week2-3","title":"\u6d41\u6c34\u7ebf\u57fa\u7840 Week2 - 3","text":"<p>1.\u6d41\u6c34\u7ebf\uff1aco-use dependent function areas average:faster individual:slower for queueing  </p> <p>IF ID EX(ALU) sequential execution:IF<sub>K</sub> ID<sub>K</sub> EX<sub>K</sub> IF<sub>K+1</sub> ID<sub>K+1</sub> EX<sub>K+1</sub> \u4f18\u70b9\uff1a\u5bb9\u6613\u5b9e\u73b0\uff0c\u5668\u4ef6\u66f4\u5c11(\u4e0d\u4f1a\u53d1\u751f\u51b2\u7a81) overlapping execution: t<sub>IF</sub> = t<sub>ID</sub> = t<sub>EX</sub> = \u0394t execute time for n instructions:  \u4f18\u70b9\uff1a\u5feb\uff0c\u5668\u4ef6\u5229\u7528\u7387\u63d0\u9ad8</p> <p>\u5355\u91cd\u53e0\uff08\u6267\u884c\u7b2ck\u6761\u6307\u4ee4\u7684\u540c\u65f6fetch\u7b2ck+1\u6761\uff09\uff1aT = (2n+1)\u0394t \u4f18\u70b9\uff1a\u8282\u77011/3\u7684\u65f6\u95f4\uff1b\u63d0\u9ad8\u5229\u7528\u7387 \u7f3a\u70b9\uff1a\u6dfb\u52a0\u5bc4\u5b58\u5668\uff0c\u63a7\u5236\u786c\u4ef6\u4e0e\u903b\u8f91\u66f4\u590d\u6742</p> <p>\u53cc\u91cd\u53e0\uff1aT = (n+2)\u0394t \u4f18\u70b9\uff1a\u8282\u77012/3\u7684\u65f6\u95f4\uff1b\u63d0\u9ad8\u5229\u7528\u7387 \u7f3a\u70b9\uff1a\u786c\u4ef6\u8fdb\u4e00\u6b65\u589e\u52a0\uff1b\u5fc5\u987b\u5c06fetch,decode,execute\u5b8c\u5168\u5206\u5f00</p> <p>\u5047\u8bbe\uff1aIF + ID = EX \u5355\u91cd\u53e0: T = (n+1)\u0394t =&gt; \u9636\u6bb5\u5212\u5206\u7684\u5408\u7406\u6027(\u975eRISC-V)(RISC-V\u4e2d\uff0cIF\u5f88\u6162\uff0c\u56e0\u4e3a\u9700\u8981\u8bbf\u95ee\u5bc4\u5b58\u5668)</p> <p>\u6d41\u6c34\u7ebf\uff1a\u57fa\u4e8e\u91cd\u53e0\u6267\u884c\u7684\u6269\u5c55\uff08\u5192\u9669\uff09 \u5b50\u8fc7\u7a0b\uff1astages/segments \u6df1\u5ea6depth\uff1athe number of segments\uff08\u6307\u4ee4\u6267\u884c\u7684\u6761\u6570\uff09 space-time\u56fe \u591a\u5468\u671f\u7684\u5b9e\u9645\u6267\u884c\u65f6\u95f4\uff1e\u5355\u5468\u671f\uff0c\u4f46\u5176\u5b9e\u73b0\u601d\u8def\u53ef\u4ee5\u501f\u9274\u5230pipelining \u6027\u8d28\uff1a (1)\u5212\u5206\u5b50\u8fc7\u7a0b\uff0c\u6bcf\u4e2a\u9636\u6bb5\u6709\u5bf9\u5e94\u7684\u529f\u80fd\u6a21\u5757\u5b9e\u73b0 (2)\u6bcf\u4e2a\u9636\u6bb5\u7684\u65f6\u957f\u8981\u5c3d\u53ef\u80fd\u76f8\u7b49\u4ee5\u786e\u4fdd\u6548\u7387\uff0c\u74f6\u9888bottleneck\uff1a\u6700\u957f\u7684\u9636\u6bb5\uff0c\u51b3\u5b9a\u65f6\u949f\u5468\u671f (3)\u6bcf\u4e2a\u9636\u6bb5\u7684\u529f\u80fd\u5757\u9700\u8981\u4e00\u4e2abuffer register\uff08\u7f13\u5b58\u5bc4\u5b58\u5668/\u6d41\u6c34\u7ebf\u7684\u9636\u6bb5\u95f4\u5bc4\u5b58\u5668\uff09\u5728\u4e0b\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u6765\u4e34\u524d\u5b58\u50a8\u8fd9\u4e00\u9636\u6bb5\u6570\u636e (4)\u9002\u7528\u8303\u56f4\uff1a\u5927\u91cf\u91cd\u65b0\u6267\u884c\u8fc7\u7a0b\uff1b\u5145\u6ee1 (5)pass time:\u8fdb\u5165\u65f6\u95f4\uff08\u4ece\u5f00\u59cb\u5230\u5145\u6ee1\uff09 empty time:\u6392\u7a7a\u65f6\u95f4\uff08\u4ece\u5145\u6ee1\u5230\u5168\u90e8\u6267\u884c\u5b8c\uff09 \u5206\u7c7b\uff1a (1)\u5355\u529f\u80fd\u4e0e\u591a\u529f\u80fd\uff08\u529f\u80fd\uff1a\u52a0\u51cf\u4e58\u9664\u4e0e\u6216\u975e\uff09  (2)\u9759\u6001\u6d41\u6c34\u7ebf\u4e0e\u52a8\u6001\u6d41\u6c34\u7ebf\uff08\u90fd\u662f\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\uff09 \u9759\u6001\uff1a\u5355\u4e00\u65f6\u95f4\u53ea\u80fd\u5b8c\u6210\u4e00\u4e2a\u529f\u80fd \u52a8\u6001\uff1a\u524d\u4e00\u529f\u80fd\u672a\u6267\u884c\u5b8c\u5c31\u53ef  \u4ee5\u6267\u884c\u53e6\u4e00\u529f\u80fd\u7684\u64cd\u4f5c \u7075\u6d3b\uff0c\u6548\u7387\u9ad8\uff1b\u4f46\u51b2\u7a81\uff0c\u63a7\u5236\u903b\u8f91\u590d\u6742 (3)\u7b97\u672f\u903b\u8f91\u64cd\u4f5c\u5c42\u6d41\u6c34component level\uff0c\u6307\u4ee4\u5c42\u6d41\u6c34processor level\uff0c\u8de8\u5904\u7406\u5668\u6d41\u6c34inter processor level (4)\u7ebf\u6027\u4e0e\u975e\u7ebf\u6027\uff1afeedback loop \u6307\u4ee4\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6570\u636e\u6d41\u52a8\u662f\u5426\u5b58\u5728\u56de\u73af\uff08\u5668\u4ef6\u91cd\u590d\u5229\u7528\uff09 \u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u9700\u8981\u8c03\u5ea6\u4ee5\u907f\u514d\u51b2\u7a81/\u8c03\u5ea6\u8868 (5)\u5faa\u5e8f\u4e0e\u4e71\u5e8f\uff1a\u6307\u4ee4\u7ed3\u675f\u7684\u987a\u5e8f\u662f\u5426\u4e0e\u8fdb\u5165\u7684\u987a\u5e8f\u76f8\u540c (6)\u6807\u91cf\u5904\u7406\u5668\u4e0e\u77e2\u91cf\u5904\u7406\u5668\uff1a\u5904\u7406\u5668\u662f\u5426\u5305\u542b\u77e2\u91cf\u8868\u5f81\u4e0e\u77e2\u91cf\u6307\u4ee4\uff0ce.g.GPU  </p> <p>2.\u6d41\u6c34\u7ebf\u7684\u5b9e\u73b0: IF,ID,EX,MEM,WB  IR:\u53d6\u51fa\u7684\u6307\u4ee4 NPC\uff1aPC + 4\uff08\u540e\u7eed\u9636\u6bb5\u4f7f\u7528\uff09PC\u7684\u5206\u652f\u8df3\u8f6c\uff08\u63d0\u524d\uff09 A,B:\u5bc4\u5b58\u5668\u64cd\u4f5c\u6570 =?:ALU_0SEL ALUoutput:\u6570\u636e/\u5730\u5740 Cond\uff1a\u63a7\u5236\u4fe1\u53f7 LMD\uff1a\u53d6\u5740\u7ed3\u679c  </p> <p>3.\u6d41\u6c34\u7ebf\u7684\u6548\u7387\uff1a\u7edd\u5bf9\u6027\u80fd\u2014\u2014\u65f6\u95f4\u3001\u76f8\u5bf9\u6027\u80fd\u2014\u2014\u5bf9\u6bd4\u5355\u5468\u671fCPU \u65f6\u949f\u5468\u671f\uff1a\u5355\u5468\u671f\uff08\u6700\u957f\u6307\u4ee4\uff09\u3001\u6d41\u6c34\u7ebf\uff08\u6700\u957f\u9636\u6bb5\uff09 n\u6761\u6307\u4ee4\u7684\u6267\u884c\u65f6\u95f4 \u91cf\u5316\u6307\u6807\uff1a (1)Throughput\u541e\u5410\u91cf:\u5355\u4f4d\u65f6\u95f4\u6267\u884c\u7684\u6307\u4ee4\u6761\u6570  </p> <p>\\(TP = \\frac{n}{T} &lt; TP_{max}\\)</p> <p></p> <p>\\(T = (m+n-1)*\u0394t_0\\) </p> <p>\\(TP = \\frac{n}{(m+n-1)*\u0394t_0}\\) </p> <p>\\(TP_{max} = \\frac{1}{\u0394t_0} = TP(n \u2192 \u221e)\\) </p> <p>\u5b9e\u9645\u60c5\u51b5\u9700\u8981\u8003\u8651\u74f6\u9888 e.g. m = 4, s1,s3,s4:\u0394t, s2:3\u0394t  </p> <p>\\(TP = \\frac{n}{(3n+3)*\u0394t}\\)</p> <p>\\(TP_{max} = \\frac{1}{3\u0394t} = TP(n \u2192 \u221e)\\)</p> <p>\\(TP = \\frac{n}{(m-1)\u0394t + nmax(\u0394t_1,\u0394t_2,...,\u0394t_m)}\\) </p> <p>\u63d0\u9ad8\u541e\u5410\u91cf/\u89e3\u51b3\u74f6\u9888\uff1a  </p> <ul> <li>subdivision:divide s2 into s2a,s2b,s2c  </li> <li>repetition:s2:s2a,s2b,s2c   e.g.\u8bd1\u7801\uff0c\u4e00\u6b21\u53ef\u5728\u5bc4\u5b58\u5668\u53d6\u4e24\u4e2a\u64cd\u4f5c\u6570rs1,rs2  </li> </ul> <p>(2)Speedup\u52a0\u901f\u6bd4&gt;1\uff1a  </p> <p>\\(Sp = \\frac{ExecutionTime_{non-pipelined}}{ExecutionTime_{pipelined}}\\)</p> <p>\\(ExecutionTime_{pipelined} \u2248 \\frac{ExecutionTime_{non-pipelined}}{NumberOfStages}\\)</p> <p>\\(Sp = \\frac{n*m*\u0394t_0}{(m+n-1)*\u0394t_0} = \\frac{n*m}{m+n-1} = m (n &gt;&gt; m)\\)</p> <p>\u4e0e\u6d41\u6c34\u7ebf\u7684\u65f6\u949f\u5468\u671f\u957f\u5ea6\u65e0\u5173\uff0c\u53ea\u4e0e\u6d41\u6c34\u7ebf\u7684\u6df1\u5ea6\u548c\u6761\u6570\u6709\u5173 (3)\u6548\u7387\u03b7</p> <p>\\(\u03b7 = \\frac{Sp}{m} = 1 (n &gt;&gt; m)\\)</p> <p>\u7406\u89e3:\u65f6\u7a7a\u56fe\u4e2d\u683c\u5b50\u5360\u65f6\u95f4*\u7a7a\u95f4\u9762\u79ef\u7684\u6bd4\u503c why pipelining:  </p> <ul> <li>decrease CPU time  </li> <li>improve TP  </li> <li>improve effiency for resources  </li> </ul> <p>ideal speedup = number of pipeline stages too many stages:  </p> <ul> <li>lots of complications  </li> <li>should take care of possible dependecies among in-flight instructions  </li> <li>huge control logic  </li> </ul> <p>what affects the efficiency of multi-functional pipeline  </p> <ul> <li>segment in idle time for certain function  </li> <li>idle segments when establishing  </li> <li>clock cycle depends on the bottleneck segment  </li> <li>needs emptied when switch  </li> <li>output of last operation is the input of the next  </li> <li>register delay &amp; overhead of clock skew(\u7531\u5e03\u7ebf\u957f\u5ea6\u548c\u8d1f\u8f7d\u5bfc\u81f4\u7684\u987a\u5e8f\u76f8\u90bb\u5bc4\u5b58\u5668\u7684\u65f6\u949f\u4fe1\u53f7\u5230\u8fbe\u65f6\u95f4\u4e4b\u95f4\u7684\u5dee\u5f02)  </li> </ul> <p>4.\u6d41\u6c34\u7ebf\u5b9e\u73b0\u7684\u56f0\u96be\uff1a \u9636\u6bb5\u6267\u884c\u65f6\u95f4\u4e0d\u540c\u9020\u6210\u65f6\u95f4\u6d6a\u8d39\uff08\u5c3d\u91cf\u8ba9\u5404\u9636\u6bb5\u65f6\u95f4\u957f\u5ea6\u76f8\u540c\uff09 \u51af\u8bfa\u4f9d\u66fc\u67b6\u6784\u5728\u5185\u5b58\u8bbf\u95ee\u65f6\u7684\u51b2\u7a81\uff0cMEM\u548cIF\u9636\u6bb5\u8bbf\u95ee\u540c\u4e00\u5757memory \u89e3\u51b3\uff1a\u54c8\u4f5b\u67b6\u6784/cache/instruction buffer\uff08\u7f13\u5b58\uff09  </p>"},{"location":"fa24/sys2/note/#week3-5","title":"\u6d41\u6c34\u7ebf\u5192\u9669 Week3 - 5","text":"<p>\u6d41\u6c34\u5316\u8bbe\u8ba1\uff1a \u56de\u73af\uff1a\u8df3\u8f6c\u5730\u5740\uff08\u63a7\u5236\u51b2\u7a81\uff09\u3001\u5199\u56de\uff08\u6570\u636e\u51b2\u7a81\uff09 \u52a0\u5165\u9636\u6bb5\u95f4\u5bc4\u5b58\u5668\u5171\u7528\u57fa\u7840\u7ec4\u4ef6  </p> <p>(1)\u7ed3\u6784\u5192\u9669(Structural Hazard):a required resource(\u786c\u4ef6) is busy</p> <p>\u51af\u8bfa\u4f9d\u66fc\u67b6\u6784\u4e0b\uff0ca single memory\uff0cdata access &amp; instruction fetch\u5728\u540c\u4e00\u65f6\u949f\u5468\u671f\u540c\u65f6\u8bbf\u95ee\u5185\u5b58 problem:two or more instructions compete for access to a single physical resource solution1:stall(nop instruction(addi x0,x0,0)) solution2:add more hardware(can always solve structual hazard)  </p> <p>(2)\u6570\u636e\u5192\u9669(Data Hazard):data dependency between instructions <pre><code>add x1,x2,x3 IF-ID-EX-WB(write x1)  \nsub x4,x1,x5    IF-ID(read x1)-EX-WB  \n</code></pre> problem:instruction depends on the result from the previous solution1:stall(severely) solution2:forwarding(\u65c1\u8def:ALU output-&gt;input of EX)  could not solve all the situation:  \u901a\u8fc7\u591a\u8def\u9009\u62e9\u5668\u5f15\u5165&lt;-\u591a\u8def\u9009\u62e9\u5668\u7684\u63a7\u5236\u4fe1\u53f7&lt;-\u51b2\u7a81\u53d1\u751f\u7684\u6761\u4ef6 \u6761\u4ef6\uff1a (1)\u524d\u4e24\u6761\u64cd\u4f5c\u7684\u76ee\u7684\u64cd\u4f5c\u6570 = \u540e\u4e24\u6761\u64cd\u4f5c\u7684\u6e90\u64cd\u4f5c\u6570 (2)EX/MEM.RegWrite == 1\uff1a\u5373\u524d\u4e00\u6761\u6307\u4ee4\u5199\u5165\u4e86\u5bc4\u5b58\u5668 (3)EX/MEM.Rd != 0\uff1a\u5373\u524d\u4e00\u6761\u6307\u4ee4\u5199\u5165\u7684\u4e0d\u662f x0\uff08\u5982\u679c\u662f x0 \u5219\u4e0d\u4f1a\u53d1\u751f\u4efb\u4f55\u53d8\u5316\uff09 \u786c\u4ef6\u5b9e\u73b0:\u589e\u52a0Forwarding unit input rs1,rs2,rd,EX_MEM_rd,MEM_WB_rd output ForwardA,ForwardB to Mux_ALU \u53cc\u91cd\u5192\u9669double hazard <pre><code>add [x1],x1,x2\nadd [x1],[x1],x3\nadd x1,[x1],x4\n</code></pre> revise forwarding condition: MEM hazard  </p> <ul> <li>if(MEM/WB.RegWrite and (MEM/WB.Rd != 0))   and not(EX hazard)   and (MEM/WB.Rd == ID/EX.Rs1)   ForwardA = 01  </li> </ul> <p>Load-Use <pre><code>ld x2,20(x1)\nand x4,x2,x5 //\u65f6\u5e8f\u5012\u7f6e need one cycle to stall\nor x8,x2,x6\nadd x9,x4,x2\n</code></pre> \u63a2\u6d4b\uff1acheck when using instruction is decoded in ID \u5efa\u8bae\u5728ID\u9636\u6bb5\u8fdb\u884c\uff0c\u56e0\u4e3a\u5728EX\u9636\u6bb5\u8fdb\u884c\u4f1a\u9700\u8981\u548cForwarding unit\u524d\u540e\u8fdb\u884c\uff0c\u964d\u4f4e\u6781\u9650\u9891\u7387\uff0c\u4e0d\u80fd\u4ea4\u6362Forwarding\u548chazard detection\uff0c\u56e0\u4e3a\u4e8c\u8005\u6709\u4f9d\u8d56\u5173\u7cfb Load-Use hazard when ID/EX.MemRead and ((ID/EX.Rd == IF/ID.Rs1) or (ID/EX.Rd) == (IF/ID.Rs2)) then stall and insert bubble \u786c\u4ef6\u5b9e\u73b0:\u589e\u52a0Hazard detection unit force ID_EX_control.signal = 0 prevent the update of PC and IF_ID_register  </p> <p>solution3:reorder code </p> <p>(3)\u63a7\u5236\u5192\u9669(Control Hazard):flow of execution depends on previous instruction \u6267\u884c\u6d41\uff0c\u53d6\u54ea\u6761\u5740\u7531\u524d\u4e00\u6307\u4ee4\u786e\u5b9a(b-type/j-type(\u5730\u5740\u8fd8\u672a\u8ba1\u7b97)) solution1:\u5c06\u5206\u652f\u5224\u65ad\u63d0\u524d\u5230 ID \u9636\u6bb5\uff0c\u518d\u6682\u505c </p> <p>reduce stall  </p> <ul> <li>compare registers &amp; compute target  </li> <li>add hardware in ID   why ID\uff1ano data in IF   \u4ea7\u751f\u4e86\u65b0\u7684\u51b2\u7a81 <pre><code>add x1,x2,x3\nadd x4,x5,x6\nbeq stalled\nbeq x1,x4,disp\n</code></pre> <pre><code>lw x1,addr\nbeq stalled\nbeq stalled\nbeq x1,x0,disp\n</code></pre>   can solve by using forwarding (&amp; stall)   branch still causes a stall   \u73b0\u4ee3CPU\uff1a10-15\u9636 stall penalty:5 time cycle  </li> <li>compute the branch target address  </li> <li>judge if the branch process  </li> <li>target address adder  </li> <li>register comparator  </li> </ul> <p>solution2:prediction \u8d2a\u5fc3\uff0c\u9884\u6d4b\u4e0d\u53d1\u751f\uff0c\u7ee7\u7eed\u53d6\u5740 \u53d1\u751f\u65f6\uff1a\u5f3a\u5236\u7f6e0\uff08\u53d8\u4e3anop\uff0c\u60e9\u7f5a\uff09 \u6539\u8fdb\uff1apredicts that some conditional branches will be untaken \u7ecf\u9a8c\u603b\u7ed3/\u52a8\u6001\u8c03\u6574\uff08\u5386\u53f2\u8bb0\u5f55\uff09\uff1a  </p> <ul> <li>branch prediction buffer(history table)  </li> <li>indexed by recent instruction address  </li> <li>outcome(taken or not)  </li> </ul> <p>solution3:dalayed decision delay slot b-type\u6307\u4ee4\u540e\u7a7a\u51fa\u4e00\u4e2a\u6307\u4ee4\u653e\u5165\u4e0d\u5f71\u54cd\u5206\u652f\u7684\u6307\u4ee4  </p>"},{"location":"fa24/sys2/note/#_1","title":"\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u8c03\u5ea6","text":"<p>\u7ebf\u6027\u4e0e\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\uff1a\u662f\u5426\u5b58\u5728\u56de\u73af Task:-&gt;S1-&gt;S2-&gt;S3-&gt;S4-&gt;S2-&gt;S3-&gt;S4-&gt;S3-&gt;EXIT \u8c03\u5ea6:determine when to introduce a new task to the pipelining,so that the tasks will not conflict with each other \u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\u7684\u89c4\u8303\u8868\u793a\uff1aReservation table 1 2 3 4 5 6 7 S1 1 1 1 S2 1 1 S3 1 1 S4 1 </p> <p>\u8c03\u5ea6\u7b97\u6cd5\uff1a initial conflict vector -&gt; update conflict vector -&gt; state transition graph -&gt; circular queue(\u56de\u73af) -&gt; shortest average interval \u7981\u6b62\u96c6(prohibit sets)\uff1a\u5982\u679c\u7ecf\u8fc7m\u4e2a\u65f6\u949f\u5468\u671f\u8fdb\u5165\u6307\u4ee4\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u5219m\u2208\u7981\u6b62\u96c6F 1 2 3 4 5 6 7 8 9 S1 1 1 S2 1 1 1 S3 1 S4 1 1 S5 1 1 </p> <p>\u7531\u8868\u53ef\u77e5\u7981\u6b62\u96c6F = {1,5,6,8}</p> <p>\u521d\u59cb\u51b2\u7a81\u5411\u91cfC<sub>0</sub> = (10110001)(\u7531\u4f4e\u5230\u9ad8\u7684\u4f4d\u5bf9\u5e94\u7981\u6b62\u96c6\u4e2d\u7684\u6570)</p> <p>\u66f4\u65b0\u51b2\u7a81\u5411\u91cf (C<sub>N-1</sub>C<sub>N-2</sub>...C<sub>i</sub>...C<sub>2</sub>C<sub>1</sub>)</p> <p>CCV = current conflict vector</p> IntervalInitial227 CCV1011000110111101(00101100 | 10110001)10111111(\u4ee5\u4e0b\u4e09\u4e2a\u6216)10110001 1-&gt;1011000100101100(10110001 &gt;&gt; 2)0000101100000000 2-&gt;101100010010110000000000 3-&gt;1011000100000001 4-&gt;10110001 <p>state transition graph</p> <p></p> <p>\u5bfb\u627e\u56de\u73af\uff08\u4e0d\u4e00\u5b9a\u56de\u5230\u521d\u59cb\u72b6\u6001\uff0c\u53ea\u8981\u5b50\u56fe\u91cc\u6709\u56de\u73af\u5373\u53ef\uff09 \u8ba1\u7b97\u5e73\u5747\u95f4\u9694\uff1a\u5c06circular queue\u76f8\u52a0\u9664\u4ee5\u6307\u4ee4\u4e2a\u6570</p> <p></p> <p>\u6311\u9009\u5e73\u5747\u95f4\u9694\u6700\u77ed\u7684\u5373\u4e3a\u6700\u4f18\u8c03\u5ea6\u65b9\u6848</p>"},{"location":"fa24/sys2/note/#multiple-issue","title":"\u591a\u53d1\u5c04 Multiple issue","text":"<p>\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u53d1\u5c04\u591a\u6761\u6307\u4ee4 Instruction-Level Parallelism(ILP)  </p> <ul> <li>Deeper pipeline   Less work per stage -&gt; shorter clock cycle  </li> <li>Multiple issue   Replicate pipeline stages -&gt; multiple pipelines   start multiple instructions per clock cycle   CPI &lt; 1,so use instructions per cycle(IPC)   E.g. 4GHz 4-way multiple-issue 16BIPS,peak CPI = 0.25,peak IPC = 4  </li> <li>dependencies reduce this in practice  </li> </ul> <p>\u4f7f\u7528\u573a\u666f\uff1a\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u7684\u591a\u4efb\u52a1\u6267\u884c\uff08\u4f8b\uff1a\u7f51\u6613\u4e91\u97f3\u4e50 &amp; \u5fae\u4fe1 \u65e0\u4fe1\u606f\u4f20\u8f93\uff09</p> <ul> <li>static multiple issue compiler groups instructions to be issued together,packaging them into issue slots   \u9759\u6001\u6307\u4ee4\u8c03\u5ea6 compiler detects and avoid hazards   e.g. the following instructions cannot be put into an issue slot <pre><code>add x1,x2,x3\nadd x1,x1,x2\nadd x5,x1,x2\n</code></pre></li> <li>dynamic multiple issue CPU examines instruction stream and chooses instructions to issue   compiler can help by reordering (\u8f6f\u786c\u534f\u540c)   CPU resolves hazards by using advanced techniques at runtime(\u8fd0\u884c\u65f6\u8c03\u8282)  </li> </ul> <p>\"Guess\":start operation A.S.A.P;check whether the guess is right branch:roll back if path taken is different load:roll back if location is updated(miss in cache)  </p> <p>speculation - compiler   reorder   \"fix-up\" instruction to recover wrong guess - hardware   buffer results until it determines they are actually needed   flush buffers on incorrect speculations  </p> <p>two types of multiple-issue processor - superscalar(general computing)   the number of instructions issued is not fixed(1-8,with upper limit)   the processor is called n-issue if the upper limit is n - VLIW(Very Long Instruction Word)(digital signal processing/multimedia)   the number of instructions issued is fixed(4-16),constituting(\u62fc\u63a5) a long instruction or an instruction packet   scheduling can be only done statically  </p> <p>super-pipeline  </p> <ul> <li>subdivide each pipeline stage  </li> <li>time cycle doesn't change,an instruction is issued every 1/n time cycle </li> </ul> <p>hazard detection in static scheduling  </p> <ul> <li>hazard detection in outgoing package and select  </li> <li>check conflicts during execution 1 integer instruction(load store branch) + 1 floating-point operation instruction(fp)  </li> <li>fetch 2 instructions from memory  </li> <li>determine hazard  </li> <li>send  </li> </ul> <p>hazard in dual-issue EX data hazard <pre><code>add x10,x0,x1\nld x2,0(x10)\n</code></pre> forwarding -&gt; split into 2 packets load-use hazard split into 2 not adjacent packets  </p> <p>e.g. <pre><code>Loop:ld   x31,0(x20)\n     add  x31,x31,x21\n     sd   x31,0(x20)\n     addi x20,x20,-8\n     blt  x22,x20,Loop\n</code></pre></p> ALU/branchLoad/Storecycle Loop:nopld 1 addi x20,x20,-8 nop2 add  x31,x31,x21nop3 blt  x22,x20,Loopsd   x31,8(x20)4 <p>IPC = 1.25(peak IPC = 2)  </p> <p>increase IPC,hazard mitigation:loop unrolling  </p> <ul> <li>replicate loop body to expose more parallelism  </li> <li>use different registers(register renaming)  </li> </ul> <p>limitation:  </p> <ul> <li>Instruction-level parallelism inherent in the program  </li> <li>difficulties in hardware implementation  </li> <li>technical limitation  </li> </ul> <p>static -&gt; dynamic superscalar : transparent to the programmer(\u786c\u4ef6\u515c\u5e95) running time effect will be caused greatly by compiler's optimization solution:  </p> <ul> <li>execute instructions out of order but commit results to registers in order(buffer)  </li> </ul>"},{"location":"fa24/sys2/note/#os","title":"\u4e2d\u65ad\u4e0eOS\u57fa\u7840","text":"<p>\u89e3\u51b3\u51b2\u7a81\uff1a </p> <ul> <li>save PC  </li> <li>supervision exception cause register(SCAUSE)  </li> <li>jump  </li> </ul> <p>handler actions:  </p> <ul> <li>read cause and transfer to relevant handler  </li> <li>determine action required  </li> <li>restartable    take correct action   use SEPC(used for saving PC) to return   </li> <li>otherwise   terminate   report error  </li> </ul> <p>in pipeline:  </p> <ul> <li>control hazard  </li> <li>mispredicted branch  </li> </ul> <p>multiple exceptions:deal with the earliest instruction  </p> <p>trap(soft interrupt):\u8f6f\u4ef6\u4ea7\u751f\uff0c\u8fd0\u884c\u65f6\u9519\u8bef/\u7528\u6237\u663e\u5f0f\u4e2d\u65ad OS is interrupt-driven special interrupt:\u8ba1\u65f6\u5668\u4e2d\u65ad kernal\u4ecb\u5165\u7ba1\u7406  </p> <p>I/O\u5904\u7406: \u7528\u6237\uff1a\u7cfb\u7edf\u8c03\u7528system call \u64cd\u4f5c\u7cfb\u7edf\uff1aMMIO(Memory Mapping I/O) \u540c\u6b65I/O\uff1a\u8fdb\u884c I/O \u7684\u65f6\u5019 block \u6389\u5f53\u524d\u8bf7\u6c42 I/O \u7684\u7a0b\u5e8f\uff0c\u7b49\u5f85 I/O \u7ed3\u675f\uff08\u53ef\u80fd\u4f1a\u8c03\u5ea6\u8fd0\u884c\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff09(\u5e38\u7528) \u5f02\u6b65I/O\uff1a\u5373\u4f7f I/O \u6ca1\u6709\u5b8c\u6210\uff0c\u4ecd\u7136\u7ee7\u7eed\u8fd0\u884c\u539f\u7a0b\u5e8f\uff0c\u5f53 I/O \u5b8c\u6210\u65f6\uff0c\u6267\u884c\u7528\u6237\u6001\u5b9a\u4e49\u7684 callback \u56de\u8c03\u51fd\u6570(\u9ad8\u6548)  </p> <p>DMA(Direct Memory Access):\u642c\u8fd0\u6570\u636e\uff0c\u5b8c\u6210\u540e\u901a\u8fc7\u4e2d\u65ad\u544a\u8bc9CPU\uff0c\u8ba9CPU\u4ece\u65e0\u610f\u4e49\u5de5\u4f5c\u4e2d\u89e3\u653e\uff0cxPU(GPU MPU TPU)\u8bbf\u95ee\u5185\u5b58\u90fd\u7b97DMA UMA\uff1a\u7edf\u4e00\u5185\u5b58\u67b6\u6784  </p> <p>\u4e24\u6a21\u5f0f\u64cd\u4f5c\uff1a  </p> <ul> <li>user mode  </li> <li>kernel mode  </li> </ul> <p>system call  </p> <ul> <li>\u901a\u8fc7trap\u8f6c\u5230\u5185\u6838\u6001  </li> <li>\u5728kernel\u6267\u884c\u6307\u5b9a\u64cd\u4f5c  </li> <li>\u8fd4\u56de\u7528\u6237\u6001  </li> </ul>"},{"location":"fa24/sys2/note/#os-week7-15","title":"OS Week7 - 15","text":""},{"location":"fa24/sys2/note/#introduction-week7","title":"Introduction Week7","text":"<p>set up memory Moore's law\uff1aineffective due to heat emission   SMP system:symmetric multi processors [Definition]resource abstractor and resource allocator BIG for drivers LibOS:\u53ea\u8d1f\u8d23resource allocator Multi-programming:allow multiple jobs to reside in memory simultaneously Time-sharing:Multi-programming with rapid context-switching f<sub>CPU</sub>=400f<sub>memory</sub>=400000f<sub>disk</sub> The kernel is NOT a running programme,but executed when some event occurs/requested kernel size:some memory size spent (10M)  </p> <ul> <li>lean nothing-more  </li> <li>mean single-minded  </li> </ul> <p>hardware -&gt; protected inst -&gt; OS non-hardware -&gt; unprotected inst -&gt; OS/app OS  -&gt; kernel mode app -&gt; user mode determine inst when decoding,raise trap is privileged inst and mode == user start in kernel mode bootstrap program (bootloader)stored in Read Only Memory(ROM) RISC-V modes  </p> <ul> <li>00 user/app   U  </li> <li>01 supervisor S  </li> <li>10 reserved(hipervisor)  </li> <li>11 machine    M  </li> </ul> <p>x86 modes:ring0,ring3(ring1,ring2),hipervisor,...</p> <p>Event:an \"unusual\" change in control flow stop execution -&gt; change mode -&gt; change context  a handler for each event type: interrupts(hardware) &amp; exceptions(traps)(software) \"processEvent()\"  </p> <p>system call [Definition]a special kind of trap when a user program need to do something privileged svc(supervisor call) hvc(hypervisor call) smc(secure monitor call)  </p> <p>timers The timer interrupts the computer regularly </p> <p>OS services  </p> <ul> <li>process management  </li> <li>memory management  </li> <li>storage management  </li> <li>I/O management  </li> <li>protection and security  </li> </ul> <p></p>"},{"location":"fa24/sys2/note/#os-structures-week8-9","title":"OS Structures Week8 - 9","text":"<p>OS features: helpful for users  </p> <ul> <li>program execution  </li> <li>I/O operation  </li> <li>file systems  </li> <li>communication  </li> <li>error detection  </li> </ul> <p>operation and protection  </p> <ul> <li>resource allocation  </li> <li>accounting  </li> <li>protection and security  </li> </ul> <p>interface - GUI - command line interface(CLI) - Touchscreen  </p> <p>system call Application programming interface(API) syscall -&gt; kernel space  </p> <p>1) kernel_entry:save register data 2) write 3) ret to user  </p> <p>syscall table(array):index = syscall No. System-call interface  printf is a privileged instruction(link to device) =&gt; syscall  </p> <p><code>cp a b</code> open and read open and write 0 -&gt; stdin 1 -&gt; stdout 2 -&gt; stderr  </p> <p>183 for small file for large file more reads and writes since single read can only reach 130KB \u79cd\u7c7b\u4e00\u6837\uff0c\u6570\u91cf\u53d8\u591a parameter passing:register(like C)  </p> <p>syscall type  </p> <ul> <li>process control(\u5206\u914d\u5185\u5b58\u8d44\u6e90)  </li> <li>file management  </li> <li>device management  </li> <li>information maintenance  </li> <li>communications  </li> </ul> <p>system service linkers and loaders  static variable -&gt; .data(int a=5;)\u521d\u59cb\u5316 static const -&gt; .rodata(read only) int b; -&gt; .bss\u672a\u521d\u59cb\u5316 filled with 0 .text executable  </p> <p>static linking  </p> <ul> <li>big file(x100 of dynamic linking)  </li> <li>independent of the environment(less syscalls)  </li> <li>no .interp section(loader-path)  </li> <li>no memory mapping segment(dynamic libraries e.g./libc)  </li> </ul> <p>dynamic linking  </p> <ul> <li>small file  </li> <li>need loader resolve library calls  </li> <li>can't execute without proper loader  </li> </ul> <p>Who setups ELF file mapping? Kernel   exec syscall     load_elf_binary  </p> <p>Who setups stack and heap? Kernel   exec syscall  </p> <p>Who setups libraries? Loader   ld-xxx  </p> <p>after <code>./a.out</code> entry point address-&gt;_start(static) loader(dynamic) <code>call&lt;_libc_start_main&gt;</code> statically-linked elf </p> <p>DYN:loader -&gt; interp_elf_ex -&gt; e_entry STA:a.out_elf -&gt; e_entry  </p> <p>dynamically-linked elf </p> <p>Policy:What will be done? Mechanism:How to do it? Separation of policy from mechanism </p> <p>DOS:disk OS LKM:loadable kernel module  </p> <p>Layered approach  </p> <p>Microkernels </p> <p> </p> <ul> <li>benefits:   easier to extend   easier to port OS to new structure   more reliable(less code running in kernel)   more secure  </li> <li>detriments:   performance overhead of user space to kernel space   communication  </li> </ul> <p>Hybrid systems \u6df7\u5408\u7cfb\u7edf  </p> <p>read hello-lkm</p>"},{"location":"fa24/sys2/note/#processes-week10-11","title":"Processes Week10 - 11","text":"<p>[Definition]a unit of resource allocation and protection Process = code(text) + data section + program counter + registers + stack + heap a unit of resource allocation and protection </p> <p> </p> <p>Single- and Multi-Tasking </p> <p>Process Control Block(PCB)\u6570\u7ec4 <pre><code>task_struct{\nProcess state(new running waiting ready terminated)\nProcess number(PID)\nProcess counter\nregisters\nmemory limits\nlist of open files\n...\n}\n</code></pre></p> <p>\u586b\u7a7a</p> <p> </p> <p>create -&gt; pid = 0:swapper/idle fork -&gt; pid = 1:systemd -&gt; all other processes The child can be either a clone of its parent or a new one  </p>"},{"location":"fa24/sys2/note/#new","title":"new","text":"<p>fork() child is a copy of the parent but a different pid and its resource utilization set to 0 returns the child's pid to the parent and 0 to the child e.g. </p> <pre><code>pid1 = fork();//1 -&gt; 2\nprintf(\"hello\\n\");//2 hello\npid2 = fork();//2 -&gt; 4\nprintf(\"hello\\n\");//4 hello\n//total 6 hello\n</code></pre> <pre><code>int main{\n  fork();//2\n  if(fork()){//parent 4\n    fork();//6\n  }\n  fork();//12\n  //no thread\n}\n</code></pre> <p>\u6570\u6570\u91cf</p> <p>execve()(execute argv envp) after a fork() replace the memory space with a new program will not return unless an error occur </p> <p>no_fork</p> <p>ASLR:\u5730\u5740\u968f\u673a\u5316 exec\u4f1a\u62b9\u53bb\u5f53\u524d\u8fdb\u7a0b\u7684\u5185\u5bb9\uff08\u65e0\u8bba\u662f\u5b50\u8fdb\u7a0b\u8fd8\u662f\u7236\u8fdb\u7a0b\uff09  </p>"},{"location":"fa24/sys2/note/#terminate","title":"terminate","text":"<p>exit() SIGINT can be handled signal(SIGINT,my_handler) SIGKILL &amp; SIGSTOP:cannot be handled for safety zombie:\u4e0d\u5360CPU\uff0c\u4f46\u4ecd\u4f7f\u7528\u5185\u5b58\uff0cPCB cannot be deallocated except for the help of its parent a zombie lingers on until:  </p> <ul> <li>its parent calls wait()  </li> <li>its parent dies  </li> <li>a handler to SIGCHLD  </li> </ul> <p>orphan\uff1aadopted by systemd(pid = 1/1763) no zombie orphan exists  </p>"},{"location":"fa24/sys2/note/#ready-running-waiting","title":"ready running waiting","text":"<p>Ready queue and wait queues(list) a queue for every waiting object <pre><code>struct list_head{\n  struct list_head *next,*prev;\n}\nunsigned long tg_offset = offsetof(struct(task_struct),thread_node);\ncurr_thread = (struct task_struct *)(((unsigned long)curr_thread -&gt; thread_node.next) - tg_offset);\n</code></pre></p> <p>context:registers represented in the PCB context switch:state saving  </p> <ul> <li>time is overhead;the system does no useful work while switching   the more complex the OS and the PCB is, the longer the context switch  </li> <li>time-dependent on hardware support  </li> </ul> <p></p> <p>stp = store pair x29 = fp x9 = sp x30 = lr = ra (pc = lr after <code>ret</code>) #16 = x8 + 16 x0 = switch_caller_pcb_pointer x1 = switch_callee_pcb_pointer <code>add x8,x0,x10(offset)</code> x8 = cpu_context pc switch <pre><code>str lr,[x8]\nadd x8,x1,x10\nldr lr,[x8]\nret\n</code></pre></p> <p>stack switch <pre><code>mov x9,sp\n...\nmov sp,x9\n</code></pre></p> <p>code switch  </p> <p><code>str lr,[x8]</code> <code>ldr lr,[x8]</code>\u4e2d\u7684lr\u5206\u522b\u662f\u4ec0\u4e48 lr -&gt; pc0 pc1 -&gt; lr  </p> <p><code>str lr,[x8]</code>\u4e2d\u7684lr\u4ec0\u4e48\u65f6\u5019\u518d\u88ab\u4f7f\u7528 <pre><code>P1_f(){\n  cpu_switch_to(current,P0)\n}\n</code></pre></p> <p>C code is not permitted because of overhead or optimization(lean &amp; mean)  </p> <p> <code>msr sp_e10,x1</code>for safety(thread_info -&gt; cred -&gt; uid(root:0,user:&gt;1000))(x1:task_struct)  </p> <p> </p> <ul> <li>process0 -&gt; kernel  </li> <li>context_switch  </li> <li>kernel -&gt; process1  </li> </ul> <p>When and where are the kernel context been saved?  </p> <ul> <li>when:cpu_switch_to  </li> <li>where:cpu_context in PCB  </li> </ul> <p>When and where are the user context been saved?(before (kernel)context switch) context switch in kernel mode  </p> <ul> <li>when:kernel_entry  </li> <li>pt(process trees)_regs in per_thread kernel stack  </li> </ul> <p>kernel_space_context in PCB user_space_context in pt_regs  </p> <p>user process -&gt; call system call(kernel_entry)-&gt; execute system call(kernel_exit)-&gt; return  </p> <p>Why fork() can return two values? x0 store return_value in arm64  </p> <p>two x0 after clone  </p> <p>When does child process start to run and from where? When forked, child is READY -&gt; context switch to RUN After context switch, run from ret_to_fork ret_from_fork -&gt; ret_to_user -&gt; kernel_exit who restores the pt_regs  </p>"},{"location":"fa24/sys2/note/#scheduling-week11-12","title":"Scheduling Week11 - 12","text":"<p>[Definition] The decisions made by the OS to figure out which ready processes/threads should run and for how long  </p> <p>The policy is the scheduling strategy The mechanism is the dispatcher  </p> <p>CPU-I/O burst cycle  </p> <ul> <li>I/O bound  </li> <li>CPU bound  </li> </ul> <p>non-preemptive scheduling:a process holds the CPU until it is willing  to give it up preemptive scheduling:a process can be preempted(\u62a2\u5360) before end of execution  </p> <p>scheduling decision points:  </p> <ol> <li>RUNNING - WAITING  </li> <li>RUNNING - READY  </li> <li>WAITING - READY  </li> <li>RUNNING - TERMINATED  </li> <li>NEW - READY  </li> <li>READY - WAITING  </li> </ol> <p>non-preemptive:1,3,4,5 preemptive:1,2,3,4,5  </p> <p>scheduling queue:  </p> <ul> <li>Ready Queue:processes in ready state  </li> <li>Device Queue:processes waiting for particular device  </li> </ul> <p>dispatch latency:time it takes for the dispatcher to stop one process and start another to run  </p> <p>criteria:  </p> <ul> <li>CPU utilization  </li> <li>throughput  </li> <li>turnaround time  </li> <li>waiting time  </li> <li>response time  </li> </ul>"},{"location":"fa24/sys2/note/#scheduling-algorithm","title":"scheduling algorithm","text":"<p>First-Come,First-Served(FCFS) </p> <p>arrival time = 0.0  </p> <p>Waiting time = start time - arrival time P1 = 6,P2 = 0,P3 = 3 average waiting time = (6 + 0 + 3)/3 = 3  </p> <p>Turnaround time = finish time - arrival time P1 = 30,P2 = 3,P3 = 6 average turnaround time = (30 + 3 + 6)/3 = 13  </p> <p>Suppose the process arrive in the order:P1,P2,P3  average waiting time = (0 + 24 + 27)/3 = 17 average turnaround time = (24 + 27 + 30) = 27  </p> <p>Convoy Effect:short process behind long process  </p> <p>Shortest-Job-First(SJF) </p> <p>average waiting time = (10 + (12 - 2) + (18 - 4) + (10 - 5))/4 = 7.25 average turnaround time = (10 + (18 - 2) + (25 - 4) + (12 - 5))/4 = 13.5  </p> <p></p> <p>Be sure you can draw the Gantt Chart</p> <p>average waiting time = ((17 - 2) + (7 - 5) + (10 - 4))/4 = 5.75 average turnaround time = (25 + (10 - 2) + (17 - 4) + (7 - 5))/4 = 12  </p> <p>SJF is optimal for average wait time problem:we cannot know the burst duration beforehand  </p> <p>CPU burst duration prediction base on previous CPU bursts </p> <p>Round-Robin scheduling preemptive a time quantum:a fixed time interval(10-100ms)  </p> <p>Unless a process is the only READY process, it never runs for longer than a time quantum before giving control to another ready process</p> <p>It may run for less than the time quantum if its CPU burst is smaller than the time quantum  </p> <p>Scheduling:  </p> <p>1.Pick the first process from the ready queue 2.Set a timer to interrupt the process after 1 quantum 3.Dispatch the process  </p> <p> </p> <p>average waiting time worse than SJF,but better response time no starvation,average waiting time is bounded  </p> <p>The right quantum: short quantum:great response/interactivity but high overhead e.g.Mobile (quick response for users) long quantum:poor response but low overhead e.g.Server(process heavy load)  </p> <p>context-switching time:10\u03bcs  </p> <p>Priority scheduling </p> <p>small priority first in Linux,big first in Windows  </p> <p> </p> <p>average waiting time = (0 + 1 + 6 + 16 + 18)/5 = 8.2  </p> <p>Priority scheduling / Round-Robin </p> <p>High priority finish before low priority start Round-robin in the processes of the same priority  </p> <p>problem:low-priority process will not ever run \u2014\u2014 starvation  </p> <p>solution:priority aging\u2014\u2014increase the priority of a process as it ages  </p> <p>Multilevel Queue Scheduling </p> <p>different scheduling algorithms applied in different queues high-priority could be RR,low-priority could be FCFS scheduling between the queues:  </p> <ul> <li>preemptive priority scheduling  </li> <li>time-slicing among queues  </li> </ul> <p>process can move among the queues </p> <p>Multilevel Feedback queues  </p> <p>What's a good scheduling algorithm </p> <p>1.analytical/theoretical results 2.simulation 3.implementation  </p> <p>Multiple-Processor scheduling Multi-core CPUs Multi-threaded cores  </p> <p> </p> <p>hyperthreading:if one thread has a memory stall,switch to another thread 4-physical core -&gt; 8-logical core  </p> <pre><code>nice -10 ./a.out\n//priority number = 19 - nice\n</code></pre> <p>\u901a\u8fc7\u63d0\u5347\u65f6\u95f4\u7247counter\u63d0\u5347\u4f18\u5148\u7ea7priority O(1)scheduling: active task array &amp; expired task array  </p> <p>bitmap set to 1 when a task of given priority becomes ready find the highest priority for which there is a ready task becomes simple  disadvantage:we cannot change the scheduling algorithm  </p> <p>different scheduling for desktop &amp; server:different target \u2014\u2014 solidity &amp; response   </p>"},{"location":"fa24/sys2/note/#inter-process-communicationipcs-week13","title":"Inter-Process Communication(IPCs) Week13","text":"<p>cooperating processes  </p> <ul> <li>information sharing  </li> <li>computation speedup  </li> <li>modularity  </li> <li>convenience  </li> </ul> <p>multiprocess architecture \u2014\u2014 browser  </p> <p>Models of IPC  </p> <ul> <li>Shared memory  </li> <li>Message passing  </li> <li>Signal  </li> <li>Pipe  </li> <li>Socket  </li> </ul> <p></p> <p></p> <p></p> <p>Implementation of message passing  </p> <ul> <li>Shared memory  </li> <li>Hardware bus  </li> <li>Network  </li> <li>Direct/Indirect  </li> <li>Synchronous/Asynchronous  </li> <li>Automatic/explicit buffering  </li> </ul> <p>Signal High-level software interrupt:^C  </p> <p>Pipes Ordinary pipes(anonymous) cannot be accessed from outside the process that created it.A parent process creates a pipe and uses it to communicate with a child process that it created.  </p> <ul> <li>undirectional  </li> <li>producers write to one end,consumers read from the other  </li> </ul> <p>Named pipes  </p> <ul> <li>bidirectional  </li> <li>no parent-child relationship  </li> </ul> <p>UNIX pipes - mono-directional(\u5355\u5411)  </p> <pre><code>ls | grep pipe\n// |\u5355\u5411pipe \u4ece\u524d\u5f80\u540e\u6d41\n</code></pre> <p>Client-Server Communication  </p> <ul> <li>Socket = ip address + port  </li> <li>RPC:client stub  </li> <li>Java RMI:RPC in Java  </li> </ul>"},{"location":"fa24/sys2/note/#threads-week13","title":"Threads Week13","text":"<p>[Definition]Multiple execution units(\u6267\u884c\u5355\u5143) within a process process:\u8d44\u6e90\u5206\u914d\u4e0e\u4fdd\u62a4\u5355\u5143  </p> <p>process is a resource allocator and protection</p> <p>threads in a process share address space(data,heap,files,page table and signals) &amp; code,but not share pc,registers and stack(variables,function stack)  </p> <p>Advantages  </p> <ul> <li>Creating a thread is cheap  </li> <li>Context-switching is cheap  </li> <li>share memory(dont need IPC)  </li> <li>having concurrent activities in the same address space  </li> <li>more responsive  </li> <li>scalability on a multi-core machine  </li> </ul> <p>Drawbacks  </p> <ul> <li>Weak isolation(process fails if one thread fails)  </li> </ul> <p>Many-to-one model multi-threading:efficient and low-overhead cannot take advantage of multi-core fails if one thread fails  </p> <p>One-to-One model drain memory(easy to manage and cheap) commonly used  </p> <p>Many-to-Many model too complex  </p> <p>Two-Level Model One-to-One + Many-to-Many more complex   </p> <p>pthreads join threads  </p> <pre><code>C code\n#pragma omp parallel\n\u4e3b\u52a8\u6dfb\u52a0\u5e76\u884c\n\nJava\nclass MyThread extend Thread{\n\n}\n</code></pre> <p>fork()  </p> <ul> <li>duplicate \u5f53\u524d\u7ebf\u7a0b  </li> <li>duplicate \u6240\u6709\u7ebf\u7a0b\u4f5c\u4e3a\u4e00\u4e2a\u8fdb\u7a0b  </li> </ul> <p>exec()  </p> <ul> <li>\u66ff\u4ee3\u6240\u6709\u7ebf\u7a0b  </li> </ul> <p>fork() then exec()  </p> <ul> <li>only duplicate current thread(\u53d8\u6210\u4e00\u4e2a)  </li> </ul> <p>Signal \u591a\u7ebf\u7a0b\u5f02\u6b65\u4fe1\u53f7\u53d1\u9001\u7684\u51e0\u79cd\u9009\u62e9\uff1a  </p> <p>1.\u53d1\u9001\u5230\u4fe1\u53f7\u4ea7\u751f\u7684\u7ebf\u7a0b 2.\u53d1\u9001\u5230\u5f53\u524d\u8fdb\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b 3.\u53d1\u9001\u5230\u5f53\u524d\u8fdb\u7a0b\u4e2d\u7684\u67d0\u4e00\u4e2a\u6216\u67d0\u51e0\u4e2a\u7279\u5b9a\u7684\u7ebf\u7a0b 4.\u53d1\u9001\u5230\u8fdb\u7a0b\u4e2d\u6307\u5b9a\u63a5\u6536\u6240\u6709\u4fe1\u53f7\u7684\u4e00\u4e2a\u7279\u5b9a\u7ebf\u7a0b  </p> <p>\u7ec8\u6b62 Cancellation point \u7acb\u5373\u7ec8\u6b62\uff08asynchronous cancellation\uff09  </p> <ul> <li>\u5982\u679c\u76ee\u6807\u7ebf\u7a0b\u6267\u884c\u5230\u4e86\u5173\u952e\u90e8\u5206\uff08critical section\uff09\u65f6\u53ef\u80fd\u4f1a\u9020\u6210\u8bbf\u95ee\u8d44\u6e90\u7684\u7d0a\u4e71  </li> </ul> <p>\u5ef6\u8fdf\u7ec8\u6b62\uff08deferred cancellation\uff09  </p> <ul> <li>\u5141\u8bb8\u7ebf\u7a0b\u5468\u671f\u6027\u68c0\u67e5\u81ea\u5df1\u662f\u5426\u53ef\u4ee5\u7ed3\u675f  </li> <li>should I die?should I die?should I die?  </li> </ul> <p>process-contention-thread system-contention-thread(Linux)  </p> <p>In Linux,thread is called a lightweight process(LWP) <pre><code>int clone(int (*fn)(void *), void *child_stack, int flags, void *arg);\n//flag\u6307\u5b9a\u662f\u5426share(CLONE_VM share memory space)\n//a complex fork()\n</code></pre></p> <p>Linux does not distinguish PCB and TCB no process task_struct the info of process is in the first thread's task_struct PID is the PID of the leading thread 5 threads in a process at most(?)  </p> <p>user thread to kernel thread mapping one user thread maps to one kernel thread(actually the same thread because of same task_struct)  </p> <ul> <li>user code e.g.printf  </li> <li>user space stack  </li> <li>user space context -&gt; pt_regs  </li> <li>kernel code e.g.write  </li> <li>kernel space stack(4pages 16KB limited)  </li> </ul> <p> </p>"},{"location":"fa24/sys2/note/#sychronization-week13-15","title":"Sychronization Week13 - 15","text":"<p>[Motivation]concurrent access to shared data may result in data inconsistency  </p> <p>Race condition:\u7ade\u6001 several processes or threads access and manipulate the same data concurrently and the outcome depends on the particular order e.g.Race in kernel:same pid of different processes if both call fork()  </p> <p><code>pthread_mutex_unlock(&amp;pmutex)</code> </p> <p>[Definition]Critical Section:the text that cannot be done in parallel <pre><code>while(true){\n  entry section\n    critical section\n  exit section\n    remainder section\n}\n</code></pre> At most one process in critical section ask permission in entry section release in exit section  </p> <p>single-core system:prevent interrupts multiple-processor:prevent interrupts is not feasible   preemptive:allows preemption of process when running in kernel mode   non-preemptive:runs until exits kernel mode,blocks,or voluntarily yields CPU  </p> <p>Solution requirements </p> <ul> <li>Mutual Exclusion(\u4e92\u65a5 MS):only one process can execute in CS  </li> <li>Progress(\u7a7a\u95f2\u8ba9\u8fdb \u4e0d\u5361\u6b7b):\u5f53\u6ca1\u6709\u7ebf\u7a0b\u5728\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\u65f6\uff0c\u5fc5\u987b\u5728\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u7684\u7ebf\u7a0b\u4e2d\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5141\u8bb8\u5176\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u6267\u884c\u7684\u8fdb\u5c55  </li> <li>Bounded waiting(\u6709\u9650\u7b49\u5f85):\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u7533\u8bf7\u8fdb\u5165 CS \uff0c\u5fc5\u987b\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u83b7\u5f97\u8bb8\u53ef\uff0c\u4e0d\u80fd\u65e0\u9650\u7b49\u5f85(prevent starvation)  </li> </ul> <p>Peterson's solution:solves two-threads synchronization </p> <ul> <li>Assume LOAD and STORE are atomic(\u539f\u5b50\u6027\uff1a\u4e0d\u53ef\u6253\u65ad)  </li> <li>Two processes share two variables    boolean flag[2]:whether a process is ready to enter CS   int turn:current process in the CS  </li> </ul> <p><pre><code>Process 0:\ndo {\n    flag[0] = true;\n    turn = 1;\n    while (flag[1] &amp;&amp; turn == 1);\n    // critical section\n    flag[0] = false;\n    // remainder section\n} while (true);\nProcess 1:\ndo {\n    flag[1] = true;\n    turn = 0;\n    while (flag[0] &amp;&amp; turn == 0);\n    // critical section\n    flag[1] = false;\n    // remainder section\n} while (true);\n</code></pre> </p> <p>Problem:  </p> <ul> <li>only avaliable for two threads  </li> <li>assume LOAD and STORE are atomic  </li> <li>Instruction reorder is not allowed(commonly happends nowadays)  </li> </ul> <pre><code>flag = False;\nThread 1\n  while(!flag);\n  print(x);\nThread 2\n  x = 100;\n  flag = True\n\nexpected output:100\nreorder thread 2 -&gt; output:0\n</code></pre> <p>Hardware support Uniprocessors(\u5355\u5904\u7406\u5668):disable interrupts Problem:code execute without preemption;inefficient Solution  </p> <ul> <li>Memory Barriers  </li> <li>Hardware Instructions  </li> <li>Atomic Variables  </li> </ul> <p>Memory Barriers </p> <ul> <li>Strongly ordered:a memory modification of one process is immediately visible to other processors(stable but complex,lower performance)  </li> <li>Weakly ordered(high efficiency)  </li> </ul> <p>A memory barrier is an instruction that forces any change in memory to be made visible to all the processors.  </p> <pre><code>flag = False;\nThread 1\n  while(!flag);\n  memory_barrier();//Ensure the value of x is not read prior to seeing the change of flag.\n  print(x);\nThread 2\n  x = 100;\n  memory_barrier();//Ensure that the new value of x is visible to other processors prior to the change offlag.\n  flag = True\n</code></pre> <p>Hardware Instructions 1.Test-and-set <pre><code>bool test_set(bool *target)\n{\n  bool rv = *target;\n  *target = TRUE;\n  return rv;\n  //set and return old value\n}\n\nexample:\nbool lock = FALSE;\ndo{\n  while(test_set(&amp;lock));//busy wait\n  critical section\n  lock = FALSE;\n  remainder section\n}while(TRUE);\n</code></pre></p> <p>For single-core:close interrupt before test_set and open it after For multi-core:lock the bus(\u603b\u7ebf)  </p> <p>Bounded waiting <pre><code>do{\n  waiting[i] = true;\n  while(waiting[i] &amp;&amp; test_and_set(&amp;lock));\n  waiting[i] = false;\n\n  critical section\n\n  j = (i + 1) % n;\n  while((j != i) &amp;&amp; !waiting[j])\n    j = (j + 1) % n;\n  if(j == i)\n    lock = false;\n  else\n    waiting[j] = false;\n\n  remainder section\n}while(true);\n</code></pre></p> <p>2.Compare-and-swap <pre><code>int compare_and_swap(int *value, int expected, int new_value)\n{\n  int temp = *value;\n  if(*value == expected)\n    *value = new_value;\n  return temp;\n}\n\nSolution:(given by Intel x86 cmpxchg(lock the bus))\nwhile(true)\n{\n  while(compare_and_swap(&amp;lock, 0, 1) !=0);\n  /* do nothing */\n  /* critical section */\n  lock =0;\n  /* remainder section */\n}\n</code></pre></p> <p>ARM64:LDXR&amp;SDXR(load-exclusive&amp;store-exclusive)  </p> <p>Atomic Variables <pre><code>void increment(atomic int *v) {\n    int temp;\n    do {\n        temp = *v;\n    } while (temp != compare_and_swap(v, temp, temp + 1));\n}\n</code></pre></p> <p>Mutex Locks\u4e92\u65a5\u9501 Semaphore <pre><code>while(true){\n  acquire lock\n  critical section\n  release lock\n  remainder section\n}\n\n//Definition\n//atomically implemented\nacquire(){\n  while(compare_and_swap(&amp;locked, false, true));//busy waiting\n}\n\nrelease(){\n  lock = false;\n}\n</code></pre> busy waiting:\u5fd9\u7b49\u5f85 spinlock T0 acquires lock -&gt; INTERRUPT-&gt;T1 runs, spin, spin spin... -&gt; INTERRUPT-&gt;T0 runs -&gt; INTERRUPT-&gt;T1 runs, spin, spin spin...INTERRUPT-&gt; T0 runs, release locks -&gt;INTERRUPT-&gt;T1 runs, enters CS T1 busy waits all its CPU time until T0 releases lock T0 holds the lock,but does not get CPU  </p> <p>Reduce busy waiting - just yield(moving from running to sleeping) <pre><code>void init() {\n  flag = 0;\n}\nvoid lock() {\n  while(test_set(&amp;flag, 1) == 1) \n  yield();// give up the CPU\n}\nvoid unlock() {flag = 0;}\n\napply waiting-queue(semaphore(by Dijkstra)(lock-queue))\nwait(S){\n  while(S &lt;= 0) ; //busy wait\n  S --;\n}\nsignal(S){\n  S ++;\n}\n</code></pre></p> <p>semaphore  </p> <ul> <li>binary semaphore  </li> <li>counting semaphore  </li> </ul> <pre><code>typedef struct{\n  int value;//\u7a7a\u95f2\u8d44\u6e90\u6570\n  struct list_head *waiting_queue;\n}semaphore;\n\nwait(semaphore *S){\n  S -&gt; value --;//MS is needed(mutex)\n  while(S -&gt; value &lt; 0) {\n    add this process to S -&gt; list;\n    block();\n  }\n}\nsignal(semaphore *S){\n  S -&gt; value ++;\n  if(S -&gt; value &lt;= 0){\n    remove a proc.P from S-&gt;list;\n    wakeup(P);\n  }\n}\n\n//atomic wait and signal  \n</code></pre> <p>No busy waiting on critical section:they are sleeping for waiting \u2014\u2014save CPU time  </p> <p>final exam</p> <p>choose between Mutex(spinlock) &amp; semaphore:context switch time overhead  </p> <p>Mutex/spinlock  </p> <ul> <li>no blocking  </li> <li>waste CPU on looping  </li> <li>good for short CS  </li> </ul> <p>Semaphore  </p> <ul> <li>no looping  </li> <li>context switch is time-consuming  </li> <li>good for long CS  </li> </ul> <p>Question:How to make wait and signal be atomic? use spinlock  </p> <pre><code>Semaphore sem;\ndo {\n  wait(sem);//busy waiting\n  critical section//no busy waiting\n  signal(sem);//busy waiting\n  remainder section\n}while(TRUE);\n\n//busy waiting is much shorter\n</code></pre> <p> LOAD in thread 3 will prohibit STORE in thread 1,causing thread 1 to wait(\u56de\u6eda)  </p> <p>final exam</p> <p> Question1:18\u548c21\u884c\u7684\u4f5c\u7528\uff1a\u4fdd\u62a4mutex(14-15\u884cspinlock) Question2:21\u548c22\u884c\u80fd\u5426\u4ea4\u6362\uff1a\u4e0d\u80fd\uff0c\u5426\u5219\u4f1a\u62ff\u7740\u9501sleep\u5bfc\u81f4\u5176\u4ed6\u7ebf\u7a0bbusy waiting Question3:\u4e00\u4e2a\u7ebf\u7a0b\u62ff\u7740\u9501sleep\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4f1a\u505c\u5728\u4ec0\u4e48\u5730\u65b9\uff1a14\u884c\uff0c\u56e0\u800c\u662fbusy waiting\u800c\u4e0d\u662fsleep(14\u523018\u884c\u4e5f\u662f\u4e2acritical section) Deadlock and Starvation Deadlock:two or more processes are waiting indefinitely for an event that can be caused by only one of the waiting processes <pre><code>P0:\nwait(S);\n//time interrupt here\nwait(Q);\n\nP1:\nwait(Q);\n//time interrupt\nwait(S);\n</code></pre> Starvation:indefinite blocking(doesn't necessarily mean deadlock,other threads can operate correctly)  </p> <p>Priority inversion:a higher priority process is indirectly preempted by a lower priority task e.g.three processes,P<sub>L</sub>,P<sub>M</sub>,P<sub>H</sub> P<sub>L</sub> holds a lock that was requested by P<sub>H</sub>,P<sub>H</sub> is blocked P<sub>M</sub> ready and preempted P<sub>L</sub> P<sub>M</sub> and P<sub>H</sub> inverted  </p> <p>Solution:priority inheritance temporily assign the highest priority of P<sub>H</sub> to the process holding the block (P<sub>L</sub>)  </p> <p>\u5b9e\u73b0\uff1a\u6bd4\u8f83\u65b0\u8fdb\u5165\u7684\u8fdb\u7a0b\u7684priority\u4e0e\u6301\u9501\u8fdb\u7a0b\u7684priority  </p> <p>In Linux,down() = wait,up() = signal <pre><code>void down(struct semaphore *sem)\n{\n  unsigned long flags;\n\n  raw_spin_lock_irqsave(&amp;sem-&gt;lock,flags);\n  if(likely(sem-&gt;count &gt; 0))\n    sem-&gt;count --;\n  else\n    __down(sem);\n  raw_spin_unlock_irqrestore(&amp;sem-&gt;lock,flags);\n}\n</code></pre> __down(sem) -&gt; __down_common() -&gt; ___down_common() -&gt; unlock,schedule_timeout no sleep while holding spinlock  </p> <p>POSIX Named Semaphores:another process can access the semaphore by referring to its name  </p> <p>Condition Variables(\u4ec5\u4f5c\u4e86\u89e3) <pre><code>while(x != 10) sleep(5);\n</code></pre> while checking is not atomic and cannot support multi-threading <pre><code>wait(condition,lock)\nsignal(condition,lock)\nbroadcast(condition,lock):wake up all waiting threads\n</code></pre></p> <p>Classical synchronization problems </p> <p>\u5fc5\u8003(\u8003\u7814\u9898)</p> <ul> <li>bounded-buffer problem(consumer-producer problem)</li> </ul> <pre><code>//Definition\nn buffer\nsemaphore mutex = 1;\nint full_slots = 0,empty_slots = N;\nThe producer process:\ndo{\n//produce an item\n  ...\n  wait(empty_slots);\n  wait(mutex);\n    //\u8c03\u6362\u987a\u5e8f\u53d1\u751fdeadlock\n  //add the item to the buffer\n  ...\n  signal(mutex);\n  signal(full_slots);\n}while(TRUE);\n\nThe consumer process:\ndo{\n  wait(full_slots);\n    //wake up by signal(full_slots) but not operate immediately until scheduling\n    //move consumer from full_slots_waiting_queue -&gt; ready_queue \n  wait(mutex);\n    //timer interrupt here:producer stops at wait(mutex)\n  //remove an item from the buffer\n  ...\n  signal(mutex);\n  signal(empty_slots)\n  //consume the item\n  ...\n}while(TRUE);\n\nstart from empty_slots,\n</code></pre> <ul> <li>readers-writers problem   allow multiple readers to read at the same time   only one single writer can access the shared time   reader and writer cannot coexist  </li> </ul> <p><pre><code>//Definition\nsemaphore mutex = 1;(protect readcount)\nsemaphore write = 1;\nint readcount = 0;\nThe writer process:\ndo{\n  wait(write);\n  //write the shared data\n  ...\n  signal(write)\n}while(TRUE);\n\nThe reader process:\ndo{\n  wait(mutex);\n  readcount ++;\n  if(readcount == 1)\n    wait(write);\n  //else no writer exist,no need to wait because readers can coexist\n  signal(mutex); //why signal here\n  //reading data\n  ...\n  wait(mutex);\n  readcount --;\n  if(readcount == 0)\n    signal(write);\n  signal(mutex);\n}while(TRUE);\n</code></pre> Reader first   continuous readers come causes writer to starve Writer first  </p> <ul> <li>*dining-philosophers problem multi-resource synchronization semaphore chopstick[5] initialized to 1  </li> </ul> <p><pre><code>Philosopher i:\ndo{\n  wait(chopstick[i]);\n  wait(chopstick[(i+1)%5]);\n  eat\n  signal(chopstick[i]);\n  signal(chopstick[(i+1)%5]);\n  thick\n}\ncausing deadlock\n</code></pre> do nothing -&gt; mutex for each chopstick -&gt; asymmetrical(odd pickup left first,even pickup right first)  </p>"},{"location":"fa24/sys2/note/#deadlocks-week15","title":"Deadlocks Week15","text":"<p>Compare to starvation:deadlock means all the threads cannot process(starvation:some) [Definition]a set of blocked processes each holding a resource and waiting to acquire a resource held by another process in the set  </p> <p>Four conditions of deadlock occurence  </p> <ul> <li>mutual exclusion:a resource cannot be shared  </li> <li>hold and wait  </li> <li>no preemption  </li> <li>circular wait  </li> </ul> <p>Resource-Allocation Graph nodes: P = {P<sub>1</sub>,...,P<sub>n</sub>} set of processes R = {R<sub>1</sub>,...,R<sub>m</sub>} set of resource type edges: request edge P<sub>i</sub> -&gt; R<sub>j</sub> assignment edge R<sub>j</sub> -&gt; P<sub>i</sub> </p> <p> an example of deadlock , no process can move any longer  </p> <p> no deadlock here  </p> <ul> <li>no cycles -&gt; no deadlock  </li> <li>only one instance per resource type -&gt; deadlock  </li> <li>several instances per resource type -&gt; possiblility of deadlock  </li> </ul> <p>Handle deadlock </p> <ul> <li>Prevention:break one of the four conditions  </li> <li>Avoidance:calculate the safe states  </li> <li>Deadlock detection</li> <li>Deadlock recovery  </li> </ul> <p>The OS often does not handle deadlock.</p>"},{"location":"fa24/sys2/note/#prevention","title":"Prevention","text":"<ul> <li>mutual exclusion   cannot prevent if resources are non-sharable  </li> <li>hold and wait   Require process to request all its resources before it begins execution -&gt; starvation  </li> <li>no preemption   Preempted resources are added to the list of resources it waits for -&gt; starvation  </li> <li>circular wait   order the resources   require each process to request resources in increasing order   not avaliable for dynamic requirements and dynamic acquired lock  </li> </ul>"},{"location":"fa24/sys2/note/#avoidance","title":"Avoidance","text":"<p>Each process declares a max number of resources it may need(not practical) Deadlock-avoidance algorithm ensure there can never be a circular-wait condition  </p> <p>[Definition]Safe state:processes are guaranteed to be completed without a deadlock A safe state ensures no deadlock Safe sequence avaliable resources = resources avaliable + resources released by the finished processes  </p> <p>Resources:12 Avaliable is 3  </p> Max needCurrent haveExtra need P01055 P1422 P2927 <p>Safe sequence:P1 P0 P2    </p> <p>Single instance -&gt; resource-allocation  </p> <ul> <li>claim edge:converts to request edge when a process requests a resource   The request can be granted if converting the request edge to an assignment edge does not result in the formation of a cycle</li> </ul> <p>Multiple instance -&gt; banker's algorithm </p>"},{"location":"fa24/sys2/note/#deadlock-detection","title":"Deadlock detection","text":"<p>Single instance </p> <p>Multiple instance Applying Banker's algorithm while operation</p>"},{"location":"fa24/sys2/note/#deadlock-recovery","title":"Deadlock recovery","text":"<p>Option 1 kill one process at a time until the deadlock cycle is eliminated kill/abort order:  </p> <ul> <li>priority  </li> <li>how long has computed  </li> <li>resources the process has used  </li> <li>resources needed  </li> <li>how many processes will need to be terminated  </li> <li>interactive or batch  </li> </ul> <p>Option 2 Resource preemption  </p> <ul> <li>select a victim  </li> <li>rollback  </li> <li>starvation  </li> </ul>"},{"location":"fa24/sys2/note/#final-review-week16","title":"Final Review Week16","text":""},{"location":"fa24/sys2/note/#_2","title":"\u786c\u4ef6","text":""},{"location":"fa24/sys2/note/#instruction-set-principles","title":"Instruction set principles","text":"<p>internal storage(e.g.C = A + B)  </p> <ul> <li>stack   Push A   Push B   Add   Pop C  </li> <li>accumulator   Load A   Add B   Store C  </li> <li>register-memory   Load R1,A   Add R3,R1,B   Store R3,C  </li> <li>Load-Store   Load R1,A   Load R2,B   Add R3,R1,R2   Store R3,C  </li> </ul>"},{"location":"fa24/sys2/note/#risc-v-isa","title":"RISC-V ISA","text":"<p>Address mode operand memory operand:byte addressed,words ... \u516d\u79cd\u6307\u4ee4\u7c7b\u578bR I S B J U  </p>"},{"location":"fa24/sys2/note/#pipelining","title":"Pipelining","text":"<p>[Definition]stage/segment depth(number of segments)  </p> <p>[Charactistic] Bottleneck:longest section -&gt; \u8bbe\u5b9a\u65f6\u949f\u5468\u671f\u7684\u957f\u5ea6 buffer-register pass-time empty-time  </p> <p>[Classes] Single/Multi function:\u662f\u5426\u8fdb\u884c\u591a\u79cd\u8fd0\u7b97  </p> <p>Static/Dynamic (Multi function):\u5355\u4e00\u65f6\u95f4\u662f\u5426\u53ea\u80fd\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u529f\u80fd  </p> <p>Linear/Nonlinear:\u662f\u5426\u6709\u56de\u73affeedback loop,nonlinear\u4e00\u5b9a\u6709\u8c03\u5ea6  </p> <p>[Implementation]  </p>"},{"location":"fa24/sys2/note/#performance-evaluation","title":"Performance evaluation","text":"<p>Increase the instruction throughput  </p> <p>Throughput(TP)(\u6ce8\u610f\u5355\u4f4d) </p> <p>Speedup(Sp):\u4e0e\u5bf9\u5e94\u5355\u5468\u671fCPU\u505a\u5bf9\u6bd4  Sp = m(n &gt;&gt; m) \u7406\u60f3\u52a0\u901f\u6bd4\u7b49\u4e8e\u5207\u5272\u6bb5\u6570  </p> <p>Efficiency(\u03b7)(\u6ce8\u610f\u767e\u5206\u53f7)  \u03b7 -&gt; 1(n -&gt; \u221e)  </p>"},{"location":"fa24/sys2/note/#datapathgraphically-representcontrol","title":"DataPath/Graphically Represent/Control","text":""},{"location":"fa24/sys2/note/#hazard","title":"Hazard","text":"<p>Structural Hazard \u5728\u540c\u4e00\u65f6\u949f\u5468\u671f\u5185\u7ade\u4e89\u6027\u8bbf\u95ee\u540c\u4e00\u7269\u7406\u8d44\u6e90 Solution1:stall(nop) Solution2:Add more hardware  </p> <p>Data Hazard </p> <p>\u91cd\u70b9\u8003\u5bdf</p> <p>\u6570\u636e\u4f9d\u8d56 Solution:Forwarding  Double data hazard  Load-Use:need to stall for one cycle despite forwarding force control values in ID_EX to 0 prevent update of PC and IF_ID  </p>"},{"location":"fa24/sys2/note/#schedule-of-nonlinear-pipeline","title":"Schedule of nonlinear pipeline","text":"<p>Initial conflict vector -&gt; conflict vector -&gt; state transition graph -&gt; circular queue -&gt; shortest average interval  \u7981\u6b62\u96c6F = {1,5,6,8} \u521d\u59cb\u51b2\u7a81\u5411\u91cfC = 10110001 \u53d60\u4f4d\uff0c\u5e76\u96c6\u66f4\u65b0\u51b2\u7a81\u5411\u91cf \u8c03\u5ea6\u8868\u4e0e\u72b6\u6001\u8f6c\u79fb\u56fe  \u5bfb\u627e\u56de\u73af\uff08\u4e0d\u4e00\u5b9a\u56de\u5230\u521d\u59cb\u51b2\u7a81\u5411\u91cf\uff09 \u8ba1\u7b97shortest average interval  </p>"},{"location":"fa24/sys2/note/#multiple-issue_1","title":"Multiple Issue","text":"<p>\u540c\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u53d1\u5c04\u591a\u6761\u6307\u4ee4increase Instruction-Level Parallelism(ILP) evaluation:IPC Static(Compiler)/Dynamic(CPU,\u7f16\u8bd1\u5668\u4ecd\u53c2\u4e0e,CPU\u8f85\u52a9\u515c\u5e95) \u8c03\u5ea6\u7c7b\u578b  \u8c03\u5ea6\u65b9\u5f0f:Superscalar(\u52a8\u6001) VLIW(\u9759\u6001\u56fa\u5b9a\u6570\u91cf) Superpipeline(\u5b50\u65f6\u949f) \u6ce8\u610fSuperscalar VLIW\u7684\u533a\u522b VLIW\u5bf9\u67d0\u4e00\u6307\u4ee4\u540c\u65f6\u53d6\u503c\u8bd1\u7801\uff0c\u53ea\u5728EX\u9636\u6bb5\u5206\u5f00 </p>"},{"location":"fa24/sys2/note/#exceptions-and-interrupts","title":"Exceptions and interrupts","text":"<p>Exception:arise from CPU Interrupt:from external I/O  </p> <p>Exception -&gt; control hazard/mispredicted branch  </p>"},{"location":"fa24/sys2/note/#software-hardware-interface","title":"Software-Hardware Interface","text":"<p>\u8f6f\u786c\u534f\u540c Solution for hazards Code reordering  </p> <p>Application software System software - OS Hardware  </p>"},{"location":"fa24/sys2/note/#_3","title":"\u8f6f\u4ef6","text":""},{"location":"fa24/sys2/note/#computer-architecture","title":"Computer architecture","text":"<p>Von-Neumann Data stored in memory:only bits,no data type  </p> <p>Why Memory Hierarchy work Temporal/Spatial locality  </p>"},{"location":"fa24/sys2/note/#introduction","title":"Introduction","text":"<p>[Definition]resource abstractor and resource allocator  </p> <p>How an OS start? first program:bootloader,then locates and loads the OS kernel into memory  </p> <p>wait for event:syscall interrupt exception  </p> <p>Interrupt:I/O timer  </p> <p>OS operates on privileged instructions(relevant to hardware) A subset of instructions of every CPU is restricted in usage: only the OS can execute them  </p> <p>User mode &amp; kernel mode OS(\u72ed\u4e49):kernel(Linux) OS(\u5e7f\u4e49):user(app) + kernel(Android) Browser is not a part of an OS  </p> <p>RISCV modes:\u4e09\u4e2a\u534a  </p> <p>void ProcessEvent(event)  </p>"},{"location":"fa24/sys2/note/#syscall","title":"Syscall","text":"<p>[Definition]a special kind of trap when a user program need to do something privileged(interface of user and kernel mode) syscall is not a privileged instruction  </p> <p> context_switch when mode change pt_regs in per-thread(one-to-one) kernelstack kernelstack\uff1aPCB &amp; thread-info  </p> <p>5 OS services  </p>"},{"location":"fa24/sys2/note/#structure","title":"Structure","text":""},{"location":"fa24/sys2/note/#syscall_1","title":"Syscall","text":"<p>syscall number:syscall table index kernel_entry saves the context kernel_exit restores   </p>"},{"location":"fa24/sys2/note/#linkers-and-loaders","title":"Linkers and loaders","text":"<p>static linking  </p> <ul> <li>big file(x100 of dynamic linking)  </li> <li>independent of the environment(less syscalls)  </li> <li>no .interp section(loader-path)  </li> <li>no memory mapping segment(dynamic libraries e.g./libc)  </li> </ul> <p>dynamic linking  </p> <ul> <li>small file  </li> <li>need loader resolve library calls  </li> <li>can't execute without proper loader  </li> </ul> <p> static variable -&gt; .data(int a=5;)\u521d\u59cb\u5316 static const -&gt; .rodata(read only) int b; -&gt; .bss\u672a\u521d\u59cb\u5316 filled with 0  .data,.rodata,.bss all store global vars.  .text executable stack:per thread(threads have different return addr) heap:per process  </p> <p>Who setups ELF file mapping Kernel   exec syscall      load_elf_binary  </p> <p>Who setups stack and heap Kernel   exec syscall  </p> <p>Who setups libraries Loader(user process)   ld-xxx  </p> <p>Linux/Windows:monolithic\u5b8f\u5185\u6838 MacOS:\u6df7\u5408\u5185\u6838  </p>"},{"location":"fa24/sys2/note/#processes","title":"Processes","text":"<p>[Definition]a unit of resource allocation and protection  </p> <p>PCB(process control block):register content,pid,pc,state,scheduling info(priority),...  </p> <p> </p> <p>new:fork/execve \u6570\u8fdb\u7a0b\u6570\u91cf Why fork() return two values? it copys two user space context(pt_regs) child\u6539\u53d8\u503c\u4e0d\u5f71\u54cdparent  </p> <p>exec\u4f1a\u62b9\u53bb\u5f53\u524d\u8fdb\u7a0b\u7684\u5185\u5bb9\uff08\u65e0\u8bba\u662f\u5b50\u8fdb\u7a0b\u8fd8\u662f\u7236\u8fdb\u7a0b\uff09  </p> <p>terminate:exit wait waitpid SIGNAL -&gt; zombie orphan PCB must be deallocated by its parent  </p> <p>ready queue &amp; waiting queues(wait\u5bf9\u8c61\u7684\u6570\u91cf)  </p> <p>context switch 1.switch stack(sp) 2.switch pc(ret lr)  </p> <p>must happen in kernel mode:change pc(CPU)  </p> <p>When and where are the kernel context been saved?  </p> <ul> <li>when:cpu_switch_to  </li> <li>where:cpu_context in PCB  </li> </ul> <p>When and where are the user context been saved?(before (kernel)context switch) context switch in kernel mode  </p> <ul> <li>when:kernel_entry  </li> <li>pt(process trees)_regs in per_thread kernel stack  </li> </ul>"},{"location":"fa24/sys2/note/#scheduling","title":"Scheduling","text":"<p>FCFS,SJF(preemptive &amp; nonpreemptive\u4e0d\u5b9e\u7528),RR,priority  </p> <p>Gantt chart average waiting time/turnaround time  </p> <p>\u62a2\u5360\u60c5\u51b5\u4e0b\u5982\u4f55\u8ba1\u7b97average waiting time \u5927\u9898</p>"},{"location":"fa24/sys2/note/#ipc","title":"IPC","text":"<p>shared memory  message passing \u5404\u81ea\u4f18\u7f3a\u70b9  </p>"},{"location":"fa24/sys2/note/#threads","title":"Threads","text":"<p>[Definition]Multiple execution units(\u6267\u884c\u5355\u5143) within a process  threads in a process share address space(data,heap,files and signals) &amp; code,but not share pc,registers and stack(variables,function stack)  </p> <p>Advantages  </p> <ul> <li>Creating a thread is cheap  </li> <li>Context-switching is cheap  </li> <li>share memory(dont need IPC)  </li> <li>having concurrent activities in the same address space  </li> <li>more responsive  </li> <li>scalability on a multi-core machine  </li> </ul> <p>Drawbacks  </p> <ul> <li>Weak isolation(process fails if one thread fails)  </li> </ul> <p>One-to-one model large overhead  </p> <p>fork,execve,SIGNAL,cancellation multiprocess:pid = leader thread pid  </p>"},{"location":"fa24/sys2/note/#sychronization","title":"Sychronization","text":"<p>Solution requirements </p> <ul> <li>Mutual Exclusion(\u4e92\u65a5 MS):only one process can execute in CS  </li> <li>Progress(\u7a7a\u95f2\u8ba9\u8fdb \u4e0d\u5361\u6b7b):\u5f53\u6ca1\u6709\u7ebf\u7a0b\u5728\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\u65f6\uff0c\u5fc5\u987b\u5728\u7533\u8bf7\u8fdb\u5165\u4e34\u754c\u533a\u7684\u7ebf\u7a0b\u4e2d\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5141\u8bb8\u5176\u6267\u884c\u4e34\u754c\u533a\u4ee3\u7801\uff0c\u4fdd\u8bc1\u7a0b\u5e8f\u6267\u884c\u7684\u8fdb\u5c55  </li> <li>Bounded waiting(\u6709\u9650\u7b49\u5f85):\u4ece\u4e00\u4e2a\u8fdb\u7a0b\u505a\u51fa\u8fdb\u5165 CS \u7684\u8bf7\u6c42\uff0c\u76f4\u5230\u8be5\u8bf7\u6c42\u5141\u8bb8\u4e3a\u6b62\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5141\u8bb8\u8fdb\u5165\u5176 CS \u7684\u6b21\u6570\u6709\u4e0a\u9650(prevent starvation)  </li> </ul> <p>Peterson's solution  </p> <p>Hardware support Uniprocessors(\u5355\u5904\u7406\u5668):disable interrupts Problem:code execute without preemption;inefficient Solution  </p> <ul> <li>*Memory Barriers  </li> <li>Hardware Instructions(!!!)  </li> <li>Atomic Variables  </li> </ul> <p>Hardware Instructions 1.Test-and-set 2.Compare-and-swap (x86 lock the bus)  </p>"},{"location":"fa24/sys2/note/#mutex-lockspinlock-semaphore","title":"Mutex lock/spinlock semaphore","text":"<p>busy waiting wastes CPU  </p> <p>\u591a\u5c11\u8fdb\u7a0b\u8dd1\u591a\u5c11\u8fdb\u7a0bsleep</p> <p>Mutex/spinlock  </p> <ul> <li>no blocking  </li> <li>waste CPU on looping  </li> <li>good for short CS  </li> </ul> <p>Semaphore  </p> <ul> <li>no looping  </li> <li>context switch is time-consuming  </li> <li>good for long CS  </li> </ul> <p> Question1:18\u548c21\u884c\u7684\u4f5c\u7528\uff1a\u4fdd\u62a4mutex(14-15\u884cspinlock) Question2:21\u548c22\u884c\u80fd\u5426\u4ea4\u6362\uff1a\u4e0d\u80fd\uff0c\u5426\u5219\u4f1a\u62ff\u7740\u9501sleep\u5bfc\u81f4\u5176\u4ed6\u7ebf\u7a0bbusy waiting Question3:\u4e00\u4e2a\u7ebf\u7a0b\u62ff\u7740\u9501sleep\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4f1a\u505c\u5728\u4ec0\u4e48\u5730\u65b9\uff1a14\u884c\uff0c\u56e0\u800c\u662fbusy waiting\u800c\u4e0d\u662fsleep(14\u523018\u884c\u4e5f\u662f\u4e2acritical section)  </p> <p>Priority inversion  </p>"},{"location":"fa24/sys2/note/#synchronization-examples","title":"synchronization examples","text":"<p>\u8003\u7814\u9898\u7ec3\u4e60  </p>"},{"location":"fa24/sys2/note/#deadlock","title":"Deadlock","text":"<p>Four conditions of deadlock occurence  </p> <ul> <li>mutual exclusion:a resource cannot be shared  </li> <li>hold and wait  </li> <li>no preemption  </li> <li>circular wait  </li> </ul> <p>prevention:\u6253\u7834\u6761\u4ef6 avoidance:\u8ba1\u7b97safe state/resource allocation graph/Banker's algorithm detection:find circle/Banker's recovery:kill/preemption  </p>"},{"location":"fa24/tea/","title":"\u8336\u6587\u5316\u4e0e\u8336\u5065\u5eb7  3.0 \u5b66\u5206","text":""},{"location":"fa24/tea/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u738b\u5cb3\u98de/\u5468\u7ee7\u7ea2</p>"},{"location":"fa24/tea/#_2","title":"\u8ba4\u5b9a","text":"<p>\u901a\u8bc6\u6838\u5fc3\u8bfe</p>"},{"location":"fa24/tea/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u671f\u672b\u5360\u6bd450-60%</li> <li>\u5176\u4f59\u672a\u77e5</li> </ul>"},{"location":"fa24/tea/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8865\u9009\u53ea\u9700\u7b2c\u4e00\u8282\u8bfe\u5230\u573a\u62a2\u5360\u524d\u6392\u5e76\u5411\u8001\u5e08\u7533\u8bf7\u5373\u53ef \u6bcf\u5468\u56db\u8bfe\u65f6\uff0c\u5305\u62ec\u4e24\u8282\u7406\u8bba\u8bfe\u4e0e\u4e24\u8282\u8ba8\u8bba\u8bfe \u7406\u8bba\u8bfe\u6bcf\u8282\u8bfe\u4e0a\u8bfe\u90fd\u4f1a\u6709\u5c0f\u793c\u54c1\uff0c\u51e0\u4e4e\u6bcf\u6b21\u90fd\u4f1a\u5728\u4e0b\u8bfe\u524d\u8981\u6c42\u5b8c\u6210\u51e0\u4e2a\u9898\u76ee\u7528\u4e8e\u70b9\u540d\uff08\u9664\u4e86\u4e09\u6b21\u7ebf\u4e0a\u8bfe\uff0c\u5728\u89c4\u5b9a\u65f6\u95f4\u5185\u89c2\u770b\u89c6\u9891\uff09\uff0c\u7ffb\u9605\u667a\u4e91ppt\u6216\u8be2\u95eegpt\u5373\u53ef \u8ba8\u8bba\u8bfe\u6bcf\u6b21\u96f7\u8fbe\u6216\u624b\u52bf\u7b7e\u5230\uff0c\u5305\u62ec\u4e24\u6b21\u8336\u827a\u8bfe\uff0c8\u7ec4\u6bcf\u7ec4\u4e24\u6b21\u5c0f\u7ec4\u5c55\u793a\uff08\u7b2c\u4e00\u6b21\u9650\u5b9a\u9898\u76ee\uff0c\u7b2c\u4e8c\u6b21\u4e0d\u9650\uff09\uff0c\u6bcf\u4e2a\u4eba\u4e2a\u4eba\u5c55\u793a\u4e00\u6b21\uff08\u8fd9\u610f\u5473\u7740\u8fd9\u95e8\u8bfe\u7a0b\u51e0\u4e4e\u662f\u4e8b\u60c5\u6700\u5c11\u7684\u901a\u6838\u8bfe\uff09 \u4ee3\u4ef7\u4e3a\uff1a\u671f\u672b\u95ed\u5377\u8003\u8bd5\uff0c\u8003\u5bdf\u901f\u8bb0\uff0c\u867d\u7136\u6700\u540e\u4e00\u8282\u8bfe\u4f1a\u7ed9\u51fa\u4e00\u4e9b\u91cd\u70b9\u4f46\u8003\u8bd5\u5bb9\u9519\u7387\u6781\u4f4e\uff0c\u4f9d\u636e\u8eab\u8fb9\u7edf\u8ba1\u5b6624\u79cb\u51ac\u8868\u73b0\u4e3a\u7ee9\u6740\uff08\u5e73\u5747\u57283.6\u5de6\u53f3\uff0c\u4e5f\u8bb8\u662f\u5927\u4e00\u592a\u5377\u4e86\uff09\uff0c\u5982\u5bf9\u7ee9\u70b9\u8981\u6c42\u8f83\u9ad8\u614e\u9009  </p> <p>\u671f\u672b\u590d\u4e601 \u671f\u672b\u590d\u4e602 \u671f\u672b\u590d\u4e60\u4e2a\u4eba\u6574\u7406 P.S. \u6570\u636e\u4e0d\u9700\u8981\u7cbe\u51c6\u8bb0\u5fc6\uff0c\u53ea\u9700\u77e5\u9053\u8303\u56f4\uff0c\u8003\u8bd5\u53ef\u80fd\u6d89\u53ca\u7b80\u5355\u8ba1\u7b97\uff0c\u7b54\u6848\u5728\u8303\u56f4\u5185\u5373\u53ef P.P.S \u4ee5\u4e0a\u6574\u7406\u4e0d\u5168  </p>"},{"location":"research/data/note/","title":"Data Target","text":"<p>Paper list</p>"},{"location":"research/data/note/#a-survey-of-automatic-evaluation-methods-on-testvisual-and-speech-generations","title":"A survey of Automatic Evaluation Methods on Test,Visual and Speech Generations","text":"<p>\u201c\u6570\u636e\u9776\u70b9\u201d\u7efc\u8ff0\u8303\u56f4:\u5728AIGC\u9886\u57df\u751f\u6210\u7684\u6570\u636e\u4e2d\u627e\u6f0f\u6d1e \u8bc4\u4f30\u51fa\u4ef7\u503c\u4f4e\u7684\u6570\u636e \u6570\u636e\u8bc4\u4f30\u7684\u8981\u7d20\uff1acontext(input),criteria,reference answer,model-generated content \u8bc4\u4f30\u534f\u8bae:single-wise,pair-wise,corpus-level(all generation in a test set) \u8bc4\u4f30\u57fa\u672c\u65b9\u5f0f\uff1aheuristic,embedding-based,learning-based,LLM-based,benchmark-based </p>"},{"location":"research/data/note/#nlgneural-text-generation","title":"NLG(neural text generation)","text":"<ul> <li>heuristic evaluation  </li> <li>word-overlap(\u8bcd\u91cd\u53e0)  <ul> <li>\u6587\u672c\u76f8\u4f3c\u6027     BLEU,ROUGE,METEOR:n-gram overlap     chrF,METEOR:combine precision and recall     NIST,CIDEr:n-grams weight  </li> <li>\u6587\u672c\u591a\u6837\u6027     Rep-n,Distinct-N:unique n-gram proportion     Self-BLEU:sentence-level BLEU score calculation     EAD:adjusts(how?) the number of distinct tokens based on statistical expectation for longer texts  </li> <li>\u4e8b\u5b9e\u4e00\u81f4\u6027     QA models + output summary\u4e0esource\u7684\u4e00\u81f4\u6027\u6d4b\u91cf all reference-based(HighRES is reference-free but needs annotation to serve as reference) \u53ef\u4ee5\u5b8c\u5168reference-free\u5417\uff1f  </li> </ul> </li> <li>edit-distance     TER,WER:generated text-&gt;reference text\u9700\u8981\u6539\u53d8\u7684\u8bcd\u6570  </li> <li>generation probability     perplexity(PPL):\u5bf9\u672a\u77e5\u6587\u672c\u7684\u9884\u6d4b\u51c6\u786e\u5ea6\uff0cPPL\u8d8a\u4f4e\uff08\u63a5\u8fd11\uff09\u6a21\u578b\u9884\u6d4b\u7f6e\u4fe1\u5ea6\u8d8a\u9ad8     BARTScore     CTRLEval:designed text infilling tasks(\u5b8c\u5f62\u586b\u7a7a)     GPTScore  </li> <li>other     FACE:\u5bf9\u6587\u672c\u4ea4\u53c9\u71b5\u7684\u5085\u91cc\u53f6\u5206\u6790     Mark-Evaluate:\u4eba\u53e3\u6a21\u578b     Zipf:\u81ea\u7136\u8bed\u8a00\u7684\u8bcd\u6cd5\u89c4\u5f8b     Q<sup>2</sup>:knowledge source&amp;dialogue response  </li> <li>embedding-based evaluation:semantic similarity   ...  </li> <li>learning-based evaluation:train on annotated(\u6807\u6ce8) data  </li> <li>LLM-based evaluation:prompt+reasoning  </li> <li>Benchmark-based evaluation  </li> </ul>"},{"location":"research/data/note/#vision","title":"Vision","text":""},{"location":"research/data/note/#audio-and-speech-related","title":"Audio and Speech-related","text":""},{"location":"research/data/note/#future-work","title":"future work","text":"<p>\u8bc4\u4f30\u504f\u5dee\u3001\u8de8\u9886\u57df\u6cdb\u5316\u548c\u590d\u6742\u751f\u6210\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027</p>"},{"location":"research/data/note/#a-comprehensive-study-of-shapley-value-in-data-analytics","title":"A Comprehensive Study of Shapley Value in Data Analytics","text":"<p>\u6c99\u666e\u5229\u503c\u5728\u6570\u636e\u5206\u6790\u6d41\u6c34\u7ebf\u4e2d\u7684\u5229\u7528\u60c5\u51b5\u4e0e\u524d\u666f \u6c99\u666e\u5229\u503c\u7684\u8ba1\u7b97\uff1a\u6392\u5217/\u7ec4\u5408/\u8499\u7279\u5361\u6d1b\u91c7\u6837\u6cd5\uff08\u6570\u636e\u8981\u7d20\u4ea4\u6613\u57fa\u7840Lab1\uff09</p>"},{"location":"research/data/note/#_1","title":"\u5408\u4f5c\u535a\u5f08\u6a21\u578b","text":"<p>\u5408\u4f5c\u535a\u5f08\u5728\u6570\u636e\u5206\u6790\u5b9e\u8df5\u4e2d\u7684\u5bf9\u5e94\uff1a player-&gt;\u6570\u636e\u7279\u5f81/\u6837\u672c/\u6570\u636e\u96c6/\u6d3e\u751f\u6570\u636e \u6548\u7528-&gt;goodness-of-fit scores(accuracy)/output \u5e94\u7528\u65b9\u9762\uff1a\u6784\u5efa\u516c\u5e73\u7684\u6570\u636e\u8981\u7d20\u5e02\u573a\uff1b\u63d0\u5347\u6570\u636e\u7684\u6027\u4ef7\u6bd4\uff1b\u5c06\u5206\u6790\u7ed3\u679c\u8f6c\u5316\u4e3a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898</p>"},{"location":"research/data/note/#_2","title":"\u6c99\u666e\u5229\u503c\u5e94\u7528\u7684\u6311\u6218\u4e0e\u89e3\u51b3\u65b9\u5f0f","text":""},{"location":"research/data/note/#_3","title":"\u8ba1\u7b97\u6548\u7387\u95ee\u9898","text":"<ul> <li>\u8499\u7279\u5361\u6d1b\u91c7\u6837(MC)  </li> <li>...  </li> </ul>"},{"location":"research/data/note/#_4","title":"\u8fd1\u4f3c\u51fa\u9519","text":""},{"location":"research/data/note/#_5","title":"\u9690\u79c1\u4fdd\u62a4","text":""},{"location":"research/data/note/#_6","title":"\u53ef\u89e3\u91ca\u6027","text":""},{"location":"research/data/note/#svbench","title":"SVBench","text":""},{"location":"research/data/note/#data-swarms-optimizable-generation-of-synthetic-evaluation-data","title":"Data\u00a0Swarms: Optimizable Generation of Synthetic Evaluation\u00a0Data","text":"<p>\u4f18\u5316\u5408\u6210\u8bc4\u4f30\u6570\u636e\u7684\u751f\u6210\u63a8\u8fdbLLM\u7684\u91cf\u5316\u8bc4\u4f30 </p>"},{"location":"research/data/note/#when-dynamic-data-selection-meets-data-augmentation","title":"When Dynamic\u00a0Data\u00a0Selection Meets\u00a0Data\u00a0Augmentation","text":"<p>\u52a8\u6001\u6570\u636e\u9009\u62e9\u548c\u6570\u636e\u589e\u5f3a\u4f18\u5316\u7ed3\u5408\u7684\u8bad\u7ec3\u6846\u67b6 \u4f30\u8ba1\u6837\u672c\u7684\u5c40\u90e8\u5bc6\u5ea6\u4e0e\u591a\u6a21\u6001\u8bed\u4e49\u4e00\u81f4\u6027\u8054\u5408\u5206\u5e03\uff0c\u9488\u5bf9\u6027\u7b5b\u9009\u9002\u5408\u589e\u5f3a\u7684\u6837\u672c\uff0c\u540c\u65f6\u6291\u5236\u566a\u58f0\u6216\u6a21\u7cca\u6570\u636e\uff0c\u5728\u4fdd\u8bc1\u6cdb\u5316\u80fd\u529b\u7684\u524d\u63d0\u4e0b\u7f29\u51cf\u6570\u636e\u96c6\u89c4\u6a21</p>"},{"location":"research/data/note/#_7","title":"\u6838\u5fc3\u6280\u672f","text":"<p>data selection data augmentation combination </p>"},{"location":"research/data/note/#result","title":"result","text":"<p>\u5728ImageNet-1k\u6570\u636e\u96c6\u4e0a\u5b9e\u73b0\u4e86\u8bad\u7ec3\u6210\u672c\u964d\u4f4e50%\u4e14\u6027\u80fd\u65e0\u635f \u589e\u5f3a\u4e86\u6a21\u578b\u7684\u6297\u566a\u80fd\u529b\u548c\u9c81\u68d2\u6027  </p>"},{"location":"research/data/note/#74data-target","title":"7.4\u660e\u786edata target:","text":"<p>\u4e0d\u662f\u5c06\u5927\u90e8\u5206\u6570\u636e\u4f4e\u8d28\u91cf\u90fd\u89c6\u4e3a\u9776\u70b9 \u800c\u662f\u5bfb\u627e\u8d28\u91cf\u4f4e\u6570\u636e\u7684\u4ee3\u8868\u6027\u8303\u672c\uff0c\u4e0a\u6e38\u6570\u636e\u5bf9\u4e0b\u6e38\u4efb\u52a1\uff08\u6027\u80fd\uff09\u6709\u76f4\u63a5\u635f\u5bb3\u7684\u5173\u952e\u6570\u636e \u5bf9\u8fd9\u4e9b\u6570\u636e\u505acluster\uff0c\u7136\u540e\u6027\u80fd\u589e\u5f3a \u9996\u8981\u5173\u6ce8\u76ee\u6807\uff1a\u6587\u672c/\u56fe\u50cf-&gt;\u6570\u503c\u7c7b\u578b\uff08e.g.\u4f20\u611f\u5668\uff0c\u7f3a\u5931\uff0c\u504f\u79fb\uff0c...\uff09 \u81ea\u52a8\u589e\u5f3a\uff08\u540e\u7eed\u8003\u8651\uff09  </p> <p>\u5c3d\u53ef\u80fd\u5728\u5c11\u91cf\u7684\u6761\u76ee\u4e0a\u4fee\u6539\u5bf9\u4e0b\u6e38task\u63d0\u5347 \u589e\u5f3a\u624b\u6cd5\uff1a\u201c\u6cbb\u7597\u201d\uff0cupdate\u800c\u975e\u4f20\u7edfdata augmentation\u901a\u8fc7\u589e\u52a0\u65b0\u7684\u6837\u672c\u7684\u589e\u5f3a\u65b9\u5f0f //\u8c03\u7814\u4f20\u7edfdata augmentation\u7684\u65b9\u5f0f\uff0c\u6bd4\u8f83\u4e0d\u540c\uff08\u53ef\u80fd\u8fd8\u80fd\u7ed3\u5408\uff1f\u6bd4\u5982\u5148\u6cbb\u7597\u518d\u589e\u5f3a\uff09 \u5c11\u91cf\u9ad8\u8d28\u91cf\u7684\u6570\u636e\uff0c\u5927\u91cf\u4f4e\u8d28\u91cf\u7684\u6570\u636e \u4f4e\u8d28\u91cf\u6570\u636e\u9776\u70b9\uff1a\u4ec0\u4e48\u662f\u4f4e\u8d28\u91cf\u7684\uff0c\u6709\u54ea\u4e9b\uff08\u7c7b\u522b\uff09\uff0c\u5982\u4f55\u8bc6\u522b\uff0c\u5982\u4f55\u589e\u5f3a  </p> <p>\u8c03\u7814\u65b9\u5411\uff1a\u6570\u503c\u7c7b\u578b\u6570\u636e \u6570\u503c\u7c7b\u578b\u7684\u6570\u636e\u96c6\uff08\u7ed3\u6784\u5316\u7684\u8868\u683c\u7c7b\u578b\uff09\uff1a\u8d28\u91cf\u662f\u5982\u4f55\u8bc4\u4f30\u7684\uff08\u4f20\u7edf\u6570\u636e\u8bc4\u4f30\u7684\u7b97\u6cd5\uff0c\u7f3a\u5931\u503c\uff0c\u9519\u8bef\u503c\uff09\uff1b\u4f20\u611f\u5668/\u5206\u7c7b\u5668\uff1a\u76ee\u524d\u6570\u636e\u4fee\u6b63\u7684\u65b9\u6cd5 \u4f20\u611f\u5668\u6570\u636e\u505a\u9884\u6d4b/regression\uff0ckaggle\u4e0a\u627e\u4e00\u4e9b\u6570\u636e\u96c6\uff08\u5929\u7136\u6709\u7f3a\u9677\uff09  </p> <p>\u4e0b\u4e00\u6b65\uff1a\u8c03\u7814\u6587\u732e\uff0c\u6536\u96c6\u6570\u636e\u96c6  </p>"},{"location":"research/data/paper/","title":"paper_list","text":"<p>\u7efc\u8ff0</p>"},{"location":"research/data/paper/#_1","title":"\u76ee\u6807","text":"<p>\u4f4e\u8d28\u91cf\u6570\u636e\u9776\u70b9\uff1a\u4ec0\u4e48\u662f\u4f4e\u8d28\u91cf\u7684\uff0c\u6709\u54ea\u4e9b\uff08\u7c7b\u522b\uff09\uff0c\u5982\u4f55\u8bc6\u522b\uff0c\u5982\u4f55\u589e\u5f3a  </p> <p>\u8c03\u7814\u65b9\u5411\uff1a\u6570\u503c\u7c7b\u578b\u6570\u636e \u6570\u503c\u7c7b\u578b\u7684\u6570\u636e\u96c6\uff08\u7ed3\u6784\u5316\u7684\u8868\u683c\u7c7b\u578b\uff09\uff1a\u8d28\u91cf\u662f\u5982\u4f55\u8bc4\u4f30\u7684\uff08\u4f20\u7edf\u6570\u636e\u8bc4\u4f30\u7684\u7b97\u6cd5\uff0c\u7f3a\u5931\u503c\uff0c\u9519\u8bef\u503c\uff09\uff1b\u4f20\u611f\u5668/\u5206\u7c7b\u5668\uff1a\u76ee\u524d\u6570\u636e\u4fee\u6b63\u7684\u65b9\u6cd5 \u4f20\u611f\u5668\u6570\u636e\u505a\u9884\u6d4b/regression\uff0ckaggle\u4e0a\u627e\u4e00\u4e9b\u6570\u636e\u96c6\uff08\u5929\u7136\u6709\u7f3a\u9677\uff09  </p>"},{"location":"research/data/paper/#quality-evaluation","title":"Quality Evaluation(\u4ee5\u4e0b\u6309\u76f8\u5173\u6027\u6392\u5e8f)","text":""},{"location":"research/data/paper/#data-quality-evaluation-of-numeric-data-for-classification-tasks","title":"*Data Quality Evaluation of Numeric Data for Classification Tasks","text":"<p>\u975e\u5e38\u5b8c\u6574\u7684\u7efc\u8ff0 ML basic:pipeline,performance measurement,types of data errors(missing values,duplicates,obsolete\u5e9f\u5f03\u7684 or irrelevant,inconsistencies,mislabels,domain value violations,violations of integrity constraints,syntactic and semantic constraint violations,miscodings,outliers,noise,representation bias) data quality:  </p> <ul> <li>subjective:timeliness,trust  </li> <li>objective:acc,validity(context dependence)  </li> </ul> <p>data repair:  </p> <ul> <li>metadata:denial constraints(HoloClean),knowledge base(Katara)  </li> <li>...  </li> </ul>"},{"location":"research/data/paper/#a-review-on-evaluation-metrics-for-data-classification-evaluations","title":"A review on evaluation metrics for data classification evaluations","text":"<p>evaluation metrics:acc,err,sn,sp,p,r,FM,GM,... MSE,AUC,hybrid  </p>"},{"location":"research/data/paper/#the-challenges-of-data-quality-and-data-quality-assessment-in-the-big-data-era","title":"The challenges of data quality and data quality assessment in the big data era","text":"<ul> <li>diversity of sources  </li> <li>tremendous volumes  </li> <li>fast change (short timeliness)  </li> <li>no unified quality standards  </li> </ul>"},{"location":"research/data/paper/#tabular-data-deep-learning-is-not-all-you-need","title":"Tabular Data: Deep Learning is Not All You Need","text":"<p>an ensemble of deep models and XGBoost performs better \u5bf9\u6bd4\u6811\u6a21\u578b\u4e0e\u6df1\u5ea6\u5b66\u4e60  </p>"},{"location":"research/data/paper/#data-cleaningdetection-repairment","title":"Data cleaning(detection &amp; repairment)","text":""},{"location":"research/data/paper/#data-cleaning-overview-and-emerging-challenges","title":"Data Cleaning: Overview and Emerging Challenges","text":"<p>framework:ML for data cleaning efficiency and accuracy improving, effect evaluation(database query) using statisical analysis aspects:new abstractions,interfaces,approaches of scalability, and crowdsourcing techniques. define data error  </p> <ul> <li>quantitative(outlier detection):abnormal behaviours and errors  </li> <li>qualitative:constraints,rules(Integrity Constraints) and patterns  </li> </ul>"},{"location":"research/data/paper/#qualitative-error-detection","title":"qualitative error detection","text":"<p>challenges:scalability,user engagement,semi-structured and unstructured data,new applications for streaming data,privacy &amp; security  </p>"},{"location":"research/data/paper/#automatic-data-repair-are-we-ready-to-deployzju","title":"*Automatic Data Repair: Are We Ready to Deploy?(ZJU)","text":"<p>12 mainstream data repair algorithms,an effective and unified repair optimization strategy  </p> <p>[Problem] \u662f\u5426\u505a\u5230\u4e86\u52a8\u6001\u7684\u4fee\u590d</p>"},{"location":"research/data/paper/#activeclean-interactive-data-cleaning-for-statistical-modeling","title":"*Activeclean: Interactive data cleaning for statistical modeling","text":"<p>\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0cActiveClean\u4f1a\u6839\u636e\u6570\u636e\u5bf9\u6a21\u578b\u7684\u4ef7\u503c\u4ee5\u53ca\u6570\u636e\u5b9e\u9645\u4e0a\u662f\u810f\u6570\u636e\u7684\u53ef\u80fd\u6027\uff0c\u5efa\u8bae\u8981\u6e05\u7406\u7684\u6570\u636e\u6837\u672c\u3002\u5206\u6790\u5e08\u53ef\u4ee5\u5bf9\u6837\u672c\u5e94\u7528\u503c\u8f6c\u6362\u548c\u8fc7\u6ee4\u64cd\u4f5c\u3002ActiveClean\u5c06\u5b89\u5168\u5730\u589e\u91cf\u66f4\u65b0\u5f53\u524d\u6a21\u578b\uff08\u800c\u4e0d\u662f\u5b8c\u5168\u91cd\u65b0\u8bad\u7ec3\uff09  </p>"},{"location":"research/data/paper/#transformers-for-tabular-data","title":"Transformers for Tabular Data","text":"<p>TODO:Learning transformer for data analysis ...</p>"},{"location":"research/data/paper/#neurips-2021-revisiting-deep-learning-models-for-tabular-data","title":"NeurIPS-2021 Revisiting Deep Learning Models for Tabular Data","text":"<p>Transformer\u67b6\u6784\u5904\u7406\u7efc\u8ff0 tabtransformer\u5904\u7406\u8868\u683c\u6570\u636e  </p>"},{"location":"research/data/paper/#cvpr-2022-table-structure-understanding-with-transformers","title":"CVPR-2022 Table Structure Understanding with Transformers","text":""},{"location":"research/data/paper/#llm-for-data-analytics","title":"LLM for data analytics","text":""},{"location":"research/data/paper/#mle-dojo-interactive-environments-for-empowering-llm-agents-in-machine-learning-engineering","title":"MLE-Dojo: Interactive Environments for Empowering LLM Agents in Machine Learning Engineering","text":""},{"location":"research/data/paper/#datasets","title":"Datasets","text":"<p>\u6570\u503c\u7c7b\u578b\u7684\u6709\u7f3a\u9677\u6570\u636e\u96c6 (from kaggle) Cafe Sales - Dirty Data for Cleaning Training Retail Store Sales: Dirty for Data Cleaning World Development Indicators\u7f3a\u5931\u503c\uff0c\u6570\u636e\u5bf9\u9f50\u95ee\u9898 FIFA 21 messy, raw dataset for cleaning/ exploring</p> <p>(from UCL) Air Quality\u591a\u4f20\u611f\u5668\u51b2\u7a81\u503c\u3001\u8d1f\u503c\u5f02\u5e38  </p>"},{"location":"research/data/paper/#comments","title":"Comments","text":"<p>\u6807\u6ce8\u9519\u8bef Cleanlab \u5f02\u5e38\u503c  Isolation forest \u8fc7\u6ee4\uff08Z-score\uff0cIQR\uff09\uff0cai\u7f16\u8f91 \u7f3a\u5931\u503c Missingno\u77e9\u9635 \u7edf\u8ba1\u586b\u5145\uff0c\u6a21\u578b\u586b\u5145KNN\uff0c\u751f\u6210\u586b\u5145GAN  \u91cd\u590d \u7279\u5f81\u54c8\u5e0c+Jaccard\u76f8\u4f3c\u5ea6 \u4e0d\u4e00\u81f4 scaling,normalization \u504f\u5dee\u6570\u636e SMOTE\u7b97\u6cd5 MOLRL\u6846\u67b6 \u5bf9\u6297\u7f51\u7edc \u6807\u51c6\u5316\u53bb\u504f \u5e73\u5747\u6a21\u578b\u9884\u6d4b\u7387\uff1a\u52a8\u6001\u6d4b\u8bd5\u96c6  \u566a\u58f0 PCA  </p> <p>\u7edf\u8ba1\u7406\u8bba\uff1f  </p>"},{"location":"research/data/paper/#_2","title":"\u5173\u4e8e\u6570\u636e\u9776\u70b9\u5bf9\u8c61\uff08\u4f4e\u8d28\u91cf\u6570\u636e\uff09\u7684\u601d\u8003","text":"<p>define data error:   \u4f4e\u6027\u80fd\u6570\u636e\uff1a\u5f71\u54cd\u9884\u6d4b\u51c6\u786e\u7387\uff08\u504f\u79fb\uff09 \u4f4e\u8d28\u91cf\u6570\u636e\uff1a\u660e\u786e\u4e3a\u5f02\u5e38\u503c\u3001\u566a\u58f0\u3001\u7f3a\u5931\u3001\u6807\u6ce8\u9519\u8bef\u7b49 \u4f4e\u6027\u80fd\u6570\u636e\u5305\u542b\u7279\u6b8a\u60c5\u51b5\uff0c\u662f\u63d0\u9ad8\u6cdb\u5316\u80fd\u529b\u7684\u91cd\u8981\u4fdd\u969c\uff0c\u4e0d\u662f\u6cbb\u7597\u7684\u5bf9\u8c61 \u9700\u8981\u6cbb\u7597\u7684\u53ef\u80fd\u662f\u7279\u5f81\u6784\u5efa\uff0c\u8bad\u7ec3\uff0c\u9a8c\u8bc1\u7684\u6574\u4e2a\u8fc7\u7a0b\uff08\u6570\u636e\u53d8\u5316\u53ef\u80fd\u5f15\u8d77\u7279\u5f81\u53d8\u5316\uff09\u2192\u91cd\u70b9\u4e0a\u4e0b\u6e38\u6027\u80fd\u8868\u73b0\u7684\u6574\u4f53\u63d0\u5347  </p>"},{"location":"research/data/paper/#_3","title":"\u6570\u636e\u9776\u70b9\u5173\u952e\u601d\u8003","text":"<p>1.\u5173\u952e\u6570\u636e\uff08\u75db\u70b9\uff09\u8bc6\u522b\uff08\u5982\u4f55\u91cf\u5316\u8bc4\u4f30/\u7cbe\u51c6\u5b9a\u4f4d\u5173\u952e\u6570\u636e\uff0c\u800c\u4e0d\u662f\u9010\u6761\u5c1d\u8bd5\uff09 2.\u9488\u5bf9\u6027\u589e\u5f3a\uff08\u9009\u7528\u4f55\u79cd\u65b9\u6cd5\uff08Automatic Data Repair\u63d0\u5230\u4e8612\u79cd\u65b9\u6cd5\uff09\uff0c\u5982\u4f55\u9ad8\u6548\u786e\u5b9a\u6700\u4f18\u65b9\u6cd5\uff09  </p> <p>3.\u5bf9\u5404\u79cd\u7c7b\u578b\u6570\u636e\u7684\u9488\u5bf9\u6027\u8c03\u6574\uff08\u6587\u672c\uff0c\u591a\u6a21\u6001\uff09 4.\u81ea\u52a8\u5316\u8fc7\u7a0b  </p>"},{"location":"research/data/paper/#other","title":"Other","text":"<p>\u6570\u636e\u8d28\u91cf\u8bc4\u4f30\u7ef4\u5ea6 - \u5b8c\u6574\u6027\uff1a\u7f3a\u5931\u503c\u6bd4\u4f8b\u3001\u6570\u636e\u8986\u76d6\u5ea6 - \u51c6\u786e\u6027\uff1a\u503c\u57df\u68c0\u67e5\u3001\u4e1a\u52a1\u89c4\u5219\u9a8c\u8bc1 - \u4e00\u81f4\u6027\uff1a\u8de8\u7cfb\u7edf\u4e00\u81f4\u6027\u3001\u65f6\u95f4\u5e8f\u5217\u4e00\u81f4\u6027 - \u65f6\u6548\u6027\uff1a\u6570\u636e\u65b0\u9c9c\u5ea6\u3001\u66f4\u65b0\u9891\u7387 - \u552f\u4e00\u6027\uff1a\u91cd\u590d\u6570\u636e\u68c0\u6d4b  </p> <p>\u5e38\u89c1\u7f3a\u9677\u7c7b\u578b\u53ca\u4fee\u6b63\u65b9\u6cd5 - \u7f3a\u5931\u503c\u5904\u7406\uff1a   \u5220\u9664\u6cd5   \u5747\u503c/\u4e2d\u4f4d\u6570/\u4f17\u6570\u586b\u8865   \u6a21\u578b\u9884\u6d4b\u586b\u8865(\u5982KNN\u3001\u56de\u5f52)   \u591a\u91cd\u63d2\u8865\u6cd5 - \u5f02\u5e38\u503c\u5904\u7406\uff1a   \u7edf\u8ba1\u65b9\u6cd5(3\u03c3\u539f\u5219\u3001IQR)   \u57fa\u4e8e\u8ddd\u79bb\u7684\u65b9\u6cd5   \u57fa\u4e8e\u5bc6\u5ea6\u7684\u65b9\u6cd5(LOF)   \u57fa\u4e8e\u805a\u7c7b\u7684\u65b9\u6cd5   \u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5(\u9694\u79bb\u68ee\u6797\u3001One-Class SVM) - \u4e0d\u4e00\u81f4\u6570\u636e\uff1a   \u6570\u636e\u6807\u51c6\u5316(\u5f52\u4e00\u5316\u3001\u6807\u51c6\u5316)   \u5355\u4f4d\u7edf\u4e00\u5316   \u4e1a\u52a1\u89c4\u5219\u9a8c\u8bc1\u4e0e\u4fee\u6b63 - \u566a\u58f0\u6570\u636e\uff1a   \u5e73\u6ed1\u6280\u672f(\u79fb\u52a8\u5e73\u5747\u3001\u6307\u6570\u5e73\u6ed1)   \u5206\u7bb1\u6280\u672f   \u56de\u5f52\u5206\u6790  </p>"},{"location":"research/data/review/","title":"review","text":"<p>current major focus:numeric data &amp; ML model  </p>"},{"location":"research/data/review/#quality-evaluation","title":"Quality Evaluation","text":"<p>Error Types. The types of data errors(a.k.a low-quality data) in a dataset can be classifies mainly into two categories:quantitative error,which describes the abnormal behaviours and errors(missing values,duplicates,obsolete or irrelevant,inconsistencies,mislabels,miscodings,outliers,noise,representation bias) and qualitative error,which describes the constraints,rules and patterns(domain value violations,violations of integrity constraints,syntactic and semantic constraint violations).[1]  </p> <p>Data Quality Evaluation Metrics. How we evaluate the quality of data is based on both subjective(whether the data is timeliness and trust) and objective(how accurate the prediction is and the validity of the data based on context dependence) view.Commonly used data evaluation metrics including acc,err,sn,sp,p,r,FM,GM,...MSE,AUC and hybrid evaluation.[2]Despite the variety of data evaluation metrics,no unified quality stardards exist,which is a serious challenge especially in the big data era.Other factors affecting the data quality involves diversity of sources,tremendous volumes of data and fast data change(short timeliness).[3]  </p>"},{"location":"research/data/review/#data-cleaning","title":"Data Cleaning","text":"<p>Data cleaning is a method for improving the quality of data so as to achieve the benefitted overall (downstream) performance.For Machine Learning(ML),it can be trained to help boost the efficiency and accuracy of data cleaning.For database,statistical analysis based on database queries gives an insight into the effect evaluation. [4]  </p> <p>Cleaning Algorithm. There're four aspects of data cleaning:new abstractions,interfaces,approaches of scalability, and crowdsourcing techniques(like active learning). [4] Data cleaning algorithm are classified into three categories:constraint(cstr)-driven,data-driven and hybrid-driven,corresponding to the two categories of error types.[5] However,data cleaning also face challenges including the difficulty in scalability,possible user engagement,semi-structured and unstructured data,new applications for streaming data and privacy &amp; security concerns.[4]  </p>"},{"location":"research/data/review/#reference","title":"Reference","text":"<p>[1] Data Quality Evaluation of Numeric Data for Classification Tasks [2] A review on evaluation metrics for data classification evaluations [3] The challenges of data quality and data quality assessment in the big data era [4] Data Cleaning: Overview and Emerging Challenges [5] Automatic Data Repair: Are We Ready to Deploy?  </p>"},{"location":"research/kaggle/","title":"kaggle self-learning","text":"<p>from 2025.7.7</p>"},{"location":"research/kaggle/#courses","title":"Courses","text":"<ul> <li>Intro to Machine Learning \u270c  </li> <li>Intermediate Machine Learning \u270c </li> <li>Python \u270c  </li> <li>Pandas \u270c  </li> <li>Data cleaning \u270c  </li> <li>Data visualization \u270c  </li> <li>Feature engineering \u270c    </li> <li>Deep learning  </li> <li>Computer Vision  </li> <li>Time Series  </li> </ul>"},{"location":"research/kaggle/#competitions","title":"Competitions","text":"<p>Titanic \u270c Housing \u270c </p>"},{"location":"research/kaggle/ml/leakage/","title":"Leakage","text":"<p>data leakage:training data contains information about the target target leakage:\u8bad\u7ec3\u7279\u5f81column\u4e0e\u6d4b\u8bd5\u7279\u5f81\u6709\u65f6\u5e8f\u4e0a\u7684\u5012\u7f6e\u5173\u7cfb(got_pneumonia-&gt;took_antibiotic_medicine) train-test contamination:preprocessing before <code>train_test_split()</code> </p>"},{"location":"research/llm_vuln/kvcache/","title":"KVcache","text":""},{"location":"research/llm_vuln/kvcache/#kvcache_1","title":"KVcache","text":"<p>Key-Value cache\u662f\u4e00\u79cd\u5b58\u50a8\u7ed3\u6784\uff0c\u5b83\u57fa\u4e8e\u201c\u952e\u503c\u5bf9\u201d\uff08Key-Value Pair\uff09\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u5e38\u7528\u4e8e\u63d0\u9ad8\u6570\u636e\u8bbf\u95ee\u901f\u5ea6\u3002 \u5f53\u8bf7\u6c42\u6570\u636e\u65f6\uff0cKVcache \u4f1a\u68c0\u67e5\u8bf7\u6c42\u7684\u952e\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e\u7f13\u5b58\u4e2d\u3002\u5982\u679c\u5b58\u5728\uff0c\u76f4\u63a5\u8fd4\u56de\u7f13\u5b58\u4e2d\u7684\u503c\uff0c\u5426\u5219\u4ece\u6570\u636e\u5e93\u6216\u5176\u4ed6\u6e90\u52a0\u8f7d\u6570\u636e\u5e76\u7f13\u5b58\u3002  </p>"},{"location":"research/llm_vuln/kvcache/#semantic-cache","title":"semantic cache","text":"<p>\u8bed\u4e49\u7f13\u5b58\u662f\u7f13\u5b58\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u5b83\u4e0d\u4ec5\u4ec5\u7f13\u5b58\u6570\u636e\u672c\u8eab\uff0c\u8fd8\u7f13\u5b58\u6570\u636e\u7684\u8bed\u4e49\u4fe1\u606f\u6216\u4e0a\u4e0b\u6587\u3002\u8fd9\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u5728\u68c0\u7d22\u65f6\u57fa\u4e8e\u8bed\u4e49\u7406\u89e3\u6765\u4f18\u5316\u67e5\u8be2\u548c\u54cd\u5e94\u3002 \u8bed\u4e49\u7f13\u5b58\u53ef\u80fd\u4f1a\u5b58\u50a8\u4e0e\u6570\u636e\u76f8\u5173\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u5982\u6807\u7b7e\u3001\u63cf\u8ff0\u3001\u4e0a\u4e0b\u6587\u7b49\uff0c\u8fd9\u6837\u5f53\u7528\u6237\u8fdb\u884c\u67e5\u8be2\u65f6\uff0c\u7cfb\u7edf\u53ef\u4ee5\u6839\u636e\u8bed\u4e49\u4fe1\u606f\u63a8\u65ad\u51fa\u66f4\u51c6\u786e\u7684\u7ed3\u679c\u3002  </p>"},{"location":"research/llm_vuln/kvcache/#timing-side-channel","title":"Timing side channel","text":"<p>\u8ba1\u65f6\u4fa7\u4fe1\u9053\u653b\u51fb\uff08Timing Side Channel\uff09\u662f\u4e00\u79cd\u5229\u7528\u7cfb\u7edf\u5728\u5904\u7406\u6570\u636e\u65f6\u7684\u65f6\u95f4\u5dee\u5f02\u6765\u6cc4\u9732\u654f\u611f\u4fe1\u606f\u7684\u653b\u51fb\u65b9\u5f0f\u3002\u653b\u51fb\u8005\u901a\u8fc7\u6d4b\u91cf\u67d0\u4e9b\u64cd\u4f5c\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u5dee\u5f02\u6765\u63a8\u65ad\u7cfb\u7edf\u5185\u90e8\u7684\u79d8\u5bc6\uff0c\u5982\u52a0\u5bc6\u5bc6\u94a5\u6216\u5176\u4ed6\u654f\u611f\u6570\u636e\u3002  </p>"},{"location":"research/llm_vuln/kvcache/#llm-stages-prefill-decode","title":"LLM Stages: Prefill &amp; Decode","text":"<ul> <li>Prefill (\u9884\u586b\u5145)\uff1a\u5728\u4f7f\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u65f6\uff0c\"\u9884\u586b\u5145\"\u9636\u6bb5\u6307\u7684\u662f\u5411\u6a21\u578b\u8f93\u5165\u63d0\u793a\u6216\u6587\u672c\u7684\u521d\u6b65\u9636\u6bb5\u3002\u5728\u8fd9\u4e00\u9636\u6bb5\uff0c\u6a21\u578b\u5c1a\u672a\u5f00\u59cb\u751f\u6210\u8f93\u51fa\uff0c\u53ef\u80fd\u4f1a\u5bf9\u8f93\u5165\u7684\u6587\u672c\u8fdb\u884c\u4e00\u4e9b\u521d\u6b65\u5904\u7406\uff0c\u5982\u5206\u8bcd\u3001\u7f16\u7801\u7b49\u3002  </li> <li>Decode (\u89e3\u7801)\uff1a\u89e3\u7801\u9636\u6bb5\u662f\u6a21\u578b\u5f00\u59cb\u751f\u6210\u5b9e\u9645\u8f93\u51fa\u7684\u8fc7\u7a0b\u3002\u5728\u8fd9\u4e00\u9636\u6bb5\uff0c\u6a21\u578b\u6839\u636e\u5df2\u7ecf\u5904\u7406\u7684\u8f93\u5165\u5185\u5bb9\uff0c\u901a\u8fc7\u89e3\u7801\u5668\u751f\u6210\u54cd\u5e94\u6587\u672c\u3002\u8fd9\u4e2a\u9636\u6bb5\u6d89\u53ca\u5230\u8bed\u8a00\u6a21\u578b\u7684\u63a8\u7406\u8fc7\u7a0b\uff0c\u6a21\u578b\u57fa\u4e8e\u6982\u7387\u751f\u6210\u6700\u53ef\u80fd\u7684\u4e0b\u4e00\u4e2a\u8bcd\u6216\u6807\u8bb0\uff0c\u9010\u6b65\u6784\u5efa\u5b8c\u6574\u7684\u8f93\u51fa\u3002</li> </ul>"},{"location":"research/llm_vuln/kvcache/#ttft","title":"TTFT","text":"<p>Time to First Token\u6307\u7684\u662f\u4ece\u6a21\u578b\u63a5\u6536\u5230\u8f93\u5165\u5230\u5b83\u5f00\u59cb\u751f\u6210\u7b2c\u4e00\u4e2a\u4ee4\u724c\uff08Token\uff09\u7684\u65f6\u95f4\u3002\u8fd9\u4e2a\u65f6\u95f4\u8d8a\u77ed\uff0c\u8868\u793a\u6a21\u578b\u7684\u54cd\u5e94\u901f\u5ea6\u8d8a\u5feb\u3002</p>"},{"location":"research/llm_vuln/kvcache/#prompt-stealing-attackpsa","title":"prompt stealing attack(PSA)","text":"<p>\u4e00\u79cd\u9488\u5bf9\u57fa\u4e8e\u5927\u578b\u8bed\u8a00\u6a21\u578b\u7684\u7cfb\u7edf\u7684\u653b\u51fb\u3002\u653b\u51fb\u8005\u901a\u8fc7\u6355\u83b7\u548c\u5206\u6790\u6709\u6548\u7684\u63d0\u793a\uff08prompts\uff09\uff0c\u6765\u7a83\u53d6\u751f\u6210\u6587\u672c\u7684\u6838\u5fc3\u4fe1\u606f\u6216\u7406\u89e3\u6a21\u578b\u7684\u884c\u4e3a\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u653b\u51fb\u8005\u201c\u5077\u53d6\u201d\u7528\u6237\u8f93\u5165\u7684\u63d0\u793a\uff0c\u4ece\u800c\u5f71\u54cd\u6216\u7be1\u6539\u751f\u6210\u7684\u8f93\u51fa\u3002</p>"},{"location":"research/llm_vuln/kvcache/#peeping-neighbour-attachpna","title":"peeping neighbour attach(PNA)","text":"<p>\u4e00\u79cd\u4fa7\u4fe1\u9053\u653b\u51fb\uff0c\u653b\u51fb\u8005\u901a\u8fc7\u76d1\u89c6\u6216\u5e72\u9884\u90bb\u5c45\u6216\u540c\u4e00\u7cfb\u7edf\u4e2d\u5176\u4ed6\u7528\u6237\u7684\u6d3b\u52a8\uff0c\u6765\u63a8\u6d4b\u4ed6\u4eec\u7684\u884c\u4e3a\u6216\u6570\u636e\u3002\u5728\u8fd9\u79cd\u653b\u51fb\u4e2d\uff0c\u201c\u90bb\u5c45\u201d\u901a\u5e38\u6307\u7684\u662f\u540c\u4e00\u7269\u7406\u7cfb\u7edf\u6216\u540c\u4e00\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u7528\u6237\u3002</p>"},{"location":"research/llm_vuln/kvcache/#tpr-fpr","title":"TPR FPR","text":"<ul> <li>TPR (True Positive Rate)\uff1a\u771f\u6b63\u7387\uff0c\u4e5f\u53eb\u654f\u611f\u6027\uff0c\u8868\u793a\u6b63\u786e\u8bc6\u522b\u6b63\u6837\u672c\u7684\u6bd4\u4f8b\u3002\u516c\u5f0f\u4e3a\uff1a $$ TPR = \\frac{TP}{TP + FN} $$ \u5176\u4e2d\uff0cTP \u4e3a\u771f\u6b63\u4f8b\uff08\u6b63\u786e\u7684\u6b63\u4f8b\uff09\uff0cFN \u4e3a\u5047\u8d1f\u4f8b\uff08\u9519\u8bef\u7684\u8d1f\u4f8b\uff09\u3002</li> <li>FPR (False Positive Rate)\uff1a\u5047\u6b63\u7387\uff0c\u8868\u793a\u9519\u8bef\u5c06\u8d1f\u6837\u672c\u5224\u5b9a\u4e3a\u6b63\u6837\u672c\u7684\u6bd4\u4f8b\u3002\u516c\u5f0f\u4e3a\uff1a $$ FPR = \\frac{FP}{FP + TN} $$ \u5176\u4e2d\uff0cFP \u4e3a\u5047\u6b63\u4f8b\uff08\u9519\u8bef\u7684\u6b63\u4f8b\uff09\uff0cTN \u4e3a\u771f\u8d1f\u4f8b\uff08\u6b63\u786e\u7684\u8d1f\u4f8b\uff09\u3002</li> </ul>"},{"location":"research/llm_vuln/llm_vulnerability/","title":"llm_vulnerability","text":""},{"location":"research/llm_vuln/llm_vulnerability/#llm-assisted-static-analysis-for-llm-serving-framework-vulnerabilities","title":"LLM-Assisted Static Analysis for LLM Serving Framework Vulnerabilities","text":""},{"location":"research/llm_vuln/llm_vulnerability/#iclr-2025-iris-llm-assisted-static-analysis-for-detecting-security-vulnerabilities","title":"ICLR 2025 IRIS- LLM-ASSISTED STATIC ANALYSIS FOR DETECTING SECURITY VULNERABILITIES","text":"<p>The paper introduces IRIS, a neuro-symbolic approach that combines Large Language Models (LLMs) with static analysis to detect security vulnerabilities. Key features:</p> <ul> <li>Uses LLMs to infer taint specifications and perform contextual analysis</li> <li>Works on whole-repository level for comprehensive security analysis</li> <li>Reduces false positives through systematic filtering</li> </ul> <p>The researchers created a new dataset comprising:</p> <ul> <li>120 manually validated security vulnerabilities</li> <li>Real-world Java projects averaging 300K lines of code</li> <li>Four common vulnerability classes</li> </ul> <p>The evaluation showed significant improvements:</p> <ul> <li>IRIS with GPT-4 detected 55 vulnerabilities (28 more than CodeQL)</li> <li>Improved false discovery rate by 5% points compared to CodeQL</li> <li>Discovered 4 previously unknown vulnerabilities in latest versions of Java projects</li> </ul> <p>This work demonstrates the potential of combining LLMs with traditional static analysis tools to improve vulnerability detection while reducing false positives and manual effort.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#llmsa-a-compositional-neuro-symbolic-approach-to-compilation-free-and-customizable-static-analysis","title":"LLMSA: A Compositional Neuro-Symbolic Approach to Compilation-free and Customizable Static Analysis","text":"<p>We propose LLMSA, a compositional neuro-symbolic approach for compilation-free, customizable static analysis with reduced hallucinations.  Specifically, we propose an analysis policy language to support users decomposing an analysis problem into several sub-problems that target simple syntactic or semantic properties upon smaller code snippets. The problem decomposition enables the LLMs to target more manageable semantic-related sub-problems, while the syntactic ones are resolved by parsing-based analysis without hallucinations. An analysis policy is evaluated with lazy, incremental, and parallel prompting, which mitigates the hallucinations and improves the performance.  It is shown that LLMSA achieves comparable and even superior performance to existing techniques in various clients. For instance, it attains 66.27% precision and 78.57% recall in taint vulnerability detection, surpassing an industrial approach in F1 score by 0.20. </p>"},{"location":"research/llm_vuln/llm_vulnerability/#harnessing-the-power-of-llm-to-support-binary-taint-analysis","title":"Harnessing the Power of LLM to Support Binary Taint Analysis","text":"<ul> <li>First, LATTE is fully automated while prior static binary taint analyzers need rely on human expertise to manually customize taint propagation rules and vulnerability inspection rules.</li> <li>Second, LATTE is significantly effective in vulnerability detection, demonstrated by our comprehensive evaluations.</li> </ul> <p>For example, LATTE has found 37 new bugs in real-world firmware, which the baselines failed to find. Moreover, 10 of them have been assigned CVE numbers.</p> <ul> <li>Lastly, LATTE incurs remarkably low engineering cost, making it a cost-efficient and scalable solution for security researchers and practitioners.</li> </ul>"},{"location":"research/llm_vuln/llm_vulnerability/#lsast-enhancing-cybersecurity-through-llm-supported-static-application-security-testing","title":"LSAST--Enhancing Cybersecurity through LLM-supported Static Application Security Testing","text":"<p>we propose LSAST, a novel approach that integrates LLMs with SAST scanners to enhance vulnerability detection. LSAST leverages a locally hostable LLM, combined with a state-of-the-art knowledge retrieval system, to provide up-to-date vulnerability insights without compromising data privacy. We set a new benchmark for static vulnerability analysis, offering a robust, privacy-conscious solution that bridges the gap between traditional scanners and advanced AI-driven analysis. Our evaluation demonstrates that incorporating SAST results into LLM analysis significantly improves detection accuracy, identifying vulnerabilities missed by conventional methods.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#skipanalyzer-a-tool-for-static-code-analysis-with-large-language-model","title":"SkipAnalyzer: A Tool for Static Code Analysis with Large Language Model","text":"<p>We introduce SkipAnalyzer, a large language model (LLM)-powered tool for static code analysis. SkipAnalyzer has three components:  1) an LLM-based static bug detector that scans source code and reports specific types of bugs,  2) an LLM-based false-positive filter that can identify false-positive bugs in the results of static bug detectors (e.g., the result of step 1) to improve detection accuracy, and  3) an LLM-based patch generator that can generate patches for the detected bugs above. </p> <p>To evaluate SkipAnalyzer, we focus on two types of typical and critical bugs that are targeted by static bug detection, i.e., Null Dereference and Resource Leak as subjects. </p> <p>We employ Infer to aid the gathering of these two bug types from 10 open-source projects. Consequently, our experiment dataset contains 222 instances of Null Dereference bugs and 46 instances of Resource Leak bugs. Our study demonstrates that SkipAnalyzer achieves remarkable performance in the mentioned static analysis tasks, including bug detection, false-positive warning removal, and bug repair. In static bug detection, SkipAnalyzer achieves accuracy values of up to 68.37% for detecting Null Dereference bugs and 76.95% for detecting Resource Leak bugs, improving the precision of the current leading bug detector, Infer, by 12.86% and 43.13%, respectively. For removing false-positive warnings, SkipAnalyzer can reach a precision of up to 93.88% for Null Dereference bugs and 63.33% for Resource   complete automation;improved vulnerability detection with new bug discoveries;low engineLeak bugs. Additionally, SkipAnalyzer surpasses state-of-the-art false-positive warning removal tools. Furthermore, in bug repair, SkipAnalyzer can generate syntactically correct patches to fix its detected bugs with a success rate of up to 97.30%.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#the-emergence-of-large-language-models-in-static-analysis-a-first-look-through-micro-benchmarks","title":"The Emergence of Large Language Models in Static Analysis: A First Look through Micro-Benchmarks","text":""},{"location":"research/llm_vuln/llm_vulnerability/#llm4vuln-a-unified-evaluation-framework-for-decoupling-and-enhancing-llms-vulnerability-reasoning","title":"Llm4vuln: A unified evaluation framework for decoupling and enhancing llms' vulnerability reasoning","text":""},{"location":"research/llm_vuln/llm_vulnerability/#primevul-vulnerability-detection-with-code-language-models-how-far-are-we","title":"PrimeVul--Vulnerability Detection with Code Language Models: How Far Are We?","text":"<p>we introduce PrimeVul, a new dataset for training and evaluating code LMs for vulnerability detection. PrimeVul incorporates a novel set of data labeling techniques that achieve comparable label accuracy to human-verified benchmarks while significantly expanding the dataset. It also implements a rigorous data de-duplication and chronological data splitting strategy to mitigate data leakage issues, alongside introducing more realistic evaluation metrics and settings. </p> <p>This comprehensive approach aims to provide a more accurate assessment of code LMs' performance in real-world conditions. Evaluating code LMs on PrimeVul reveals that existing benchmarks significantly overestimate the performance of these models. For instance, a state-of-the-art 7B model scored 68.26% F1 on BigVul but only 3.09% F1 on PrimeVul. Attempts to improve performance through advanced training techniques and larger models like GPT-3.5 and GPT-4 were unsuccessful, with results akin to random guessing in the most stringent settings. These findings underscore the considerable gap between current capabilities and the practical requirements for deploying code LMs in security roles, highlighting the need for more innovative research in this domain.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#aibughunter-a-practical-tool-for-predicting-classifying-and-repairing-software-vulnerabilities","title":"AIBugHunter: A Practical tool for predicting, classifying and repairing software vulnerabilities","text":"<p>we propose in this article AIBugHunter, a novel Machine Learning-based software vulnerability analysis tool for C/C++ languages that is integrated into the Visual Studio Code (VS Code) IDE. AIBugHunter helps software developers to achieve real-time vulnerability detection, explanation, and repairs during programming. In particular, AIBugHunter scans through developers\u2019 source code to</p> <p>(1) locate vulnerabilities, </p> <p>(2) identify vulnerability types, </p> <p>(3) estimate vulnerability severity, and</p> <p>(4) suggest vulnerability repairs. </p> <p>We integrate our previous works (i.e., LineVul and VulRepair) to achieve vulnerability localization and repairs. In this article, we propose a novel multi-objective optimization (MOO)-based vulnerability classification approach and a transformer-based estimation approach to help AIBugHunter accurately identify vulnerability types and estimate severity. </p> <p>Our empirical experiments on a large dataset consisting of 188K+ C/C++ functions confirm that our proposed approaches are more accurate than other state-of-the-art baseline methods for vulnerability classification and estimation. Furthermore, we conduct qualitative evaluations including a survey study and a user study to obtain software practitioners\u2019 perceptions of our AIBugHunter tool and assess the impact that AIBugHunter may have on developers\u2019 productivity in security aspects. Our survey study shows that our AIBugHunter is perceived as useful where 90% of the participants consider adopting our AIBugHunter during their software development.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#llbezpeky-leveraging-large-language-models-for-vulnerability-detection","title":"LLbezpeky: Leveraging Large Language Models for Vulnerability Detection","text":"<p>We dive into the efficacy of LLMs for detecting vulnerabilities in the context of Android security. We focus on building an AI-driven workflow to assist developers in identifying and rectifying vulnerabilities. Our experiments show that LLMs outperform our expectations in finding issues within applications correctly flagging insecure apps in 91.67% of cases in the Ghera benchmark. We use inferences from our experiments towards building a robust and actionable vulnerability detection system and demonstrate its effectiveness. Our experiments also shed light on how different various simple configurations can affect the True Positive (TP) and False Positive (FP) rates.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#llmdfa-analyzing-dataflow-in-code-with-large-language-models","title":"LLMDFA: Analyzing Dataflow in Code with Large Language Models","text":"<p>This paper presents LLMDFA, an LLM-powered compilation-free and customizable dataflow analysis framework. To address hallucinations for reliable results, we decompose the problem into several subtasks and introduce a series of novel strategies. Specifically, we leverage LLMs to synthesize code that outsources delicate reasoning to external expert tools, such as using a parsing library to extract program values of interest and invoking an automated theorem prover to validate path feasibility. Additionally, we adopt a few-shot chain-of-thought prompting to summarize dataflow facts in individual functions, aligning the LLMs with the program semantics of small code snippets to mitigate hallucinations.</p> <p>We evaluate LLMDFA on synthetic programs to detect three representative types of bugs and on real-world Android applications for customized bug detection. On average, LLMDFA achieves 87.10% precision and 80.77% recall, surpassing existing techniques with F1 score improvements of up to 0.35. We have open-sourced LLMDFA at https://github.com/chengpeng-wang/LLMDFA.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#enhancing-static-analysis-for-practical-bug-detection-an-llm-integrated-approach","title":"Enhancing Static Analysis for Practical Bug Detection: An LLM-Integrated Approach","text":"<p>we present LLift, a pioneering framework that synergizes static analysis and LLMs, with a spotlight on identifying use-before-initialization (UBI) bugs within the Linux kernel. Drawing from our insights into variable usage conventions in Linux, we enhance path analysis using post-constraint guidance. This approach, combined with our methodically crafted procedures, empowers LLift to adeptly handle the challenges of bug-specific modeling, extensive codebases, and the unpredictable nature of LLMs. </p> <p>Our real-world evaluations identified four previously undiscovered UBI bugs in the mainstream Linux kernel, which the Linux community has acknowledged. This study reaffirms the potential of marrying static analysis with LLMs, setting a compelling direction for future research in this area.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#interleaving-static-analysis-and-llm-prompting","title":"Interleaving Static Analysis and LLM Prompting","text":"<p>This paper presents a new approach for using Large Language Models (LLMs) to improve static program analysis. Specifically, during program analysis, we interleave calls to the static analyzer and queries to the LLM: the prompt used to query the LLM is constructed using intermediate results from the static analysis, and the result from the LLM query is used for subsequent analysis of the program. We apply this novel approach to the problem of error-specification inference of functions in systems code written in C; i.e., inferring the set of values returned by each function upon error, which can aid in program understanding as well as in finding error-handling bugs.</p> <ul> <li>Building Prompts</li> </ul> <p>we construct a prompt that consists of the Common Context, Function Context, and Question</p> <ul> <li>Error Specification Inference algorithm</li> </ul> <p>We evaluate our approach on real-world C programs, such as MbedTLS and zlib, by incorporating LLMs into EESI, a state-of-the-art static analysis for error-specification inference. Compared to EESI, our approach achieves higher recall across all benchmarks (from average of 52.55% to 77.83%) and higher F1-score (from average of 0.612 to 0.804) while maintaining precision (from average of 86.67% to 85.12%).</p>"},{"location":"research/llm_vuln/llm_vulnerability/#llm-enhanced-static-analysis-for-precise-identification-of-vulnerable-oss-versions","title":"LLM-Enhanced Static Analysis for Precise Identification of Vulnerable OSS Versions","text":"<p>This paper presents Vercation, an approach designed to identify vulnerable versions of OSS written in C/C++. Vercation combines program slicing with a Large Language Model (LLM) to identify vulnerability-relevant code from vulnerability patches. It then backtraces historical commits to gather previous modifications of identified vulnerability-relevant code. We propose semantic-level code clone detection to compare the differences between pre-modification and post-modification code, thereby locating the vulnerability-introducing commit (vic) and enabling to identify the vulnerable versions between the patch commit and the vic.</p> <p>We curate a dataset linking 74 OSS vulnerabilities and 1013 versions to evaluate Vercation. On this dataset, our approach achieves the F1 score of 92.4%, outperforming current state-of-the-art methods. More importantly, Vercation detected 134 incorrect vulnerable OSS versions in NVD reports.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#vulnhuntrzero-shot-vulnerability-discovery-using-llms","title":"vulnhuntr:Zero shot vulnerability discovery using LLMs","text":"<p>https://github.com/protectai/vulnhuntr</p> <p>Vulnhuntr leverages the power of LLMs to automatically create and analyze entire code call chains starting from remote user input and ending at server output for detection of complex, multi-step, security-bypassing vulnerabilities that go far beyond what traditional static code analysis tools are capable of performing.  This tool is designed to analyze a GitHub repository for potential remotely exploitable vulnerabilities.   </p> <ul> <li>Context windows</li> </ul> <p>constraints make it impossible to feed entire projects or even just multiple files into one LLM request Vulnhuntr breaks down the code in small, manageable chunks,smartly requests only the relevant portions of the code. It automatically searches the project files for files that are likely to be the first to handle user input. Then it ingests that entire file and responds with all the potential vulnerabilities. Using this list of potential vulnerabilities, it moves on to complete the entire function call chain from user input to server output for each potential vulnerability all throughout the project one function/class at a time until it\u2019s satisfied it has the entire call chain for final analysis. </p> <ul> <li>LLM-powered Call Chain Search</li> </ul> <p>Vulnhuntr analyzes and reanalyzes in a loop as it requests functions, classes, or other related snippets of code it needs to confirm or deny a vulnerability. This goes on until Vulnhuntr has seen enough code to map out the complete path from user input to server output. </p> <p>Once the full picture is clear, it returns a detailed final analysis, pointing out trouble spots, providing a proof-of-concept exploit, and attaching a confidence rating for each vulnerability.  The beauty of this approach is that even when Vulnhuntr is not 100% certain there\u2019s a vulnerability, it explicitly tells the user exactly why it\u2019s concerned about certain areas of the code. This analysis has shown extremely accurate results in narrowing down entire projects\u2019 worth of code to just a few simple functions that bug hunters should be focusing on when looking for vulnerabilities. </p> <ul> <li>Advanced Prompt Engineering   Best practices prompt engineering to guide the LLM efficiently.   XML-based prompts to keep responses structured.   Chain of thought prompting to walk the model through complex reasoning.   Prefilled responses for standard output formats.</li> </ul>"},{"location":"research/llm_vuln/llm_vulnerability/#the-hitchhikers-guide-to-program-analysis-part-ii-deep-thoughts-by-llms","title":"The Hitchhiker's Guide to Program Analysis, Part II: Deep Thoughts by LLMs","text":"<p>We introduce BugLens, a post-refinement framework that significantly improves static analysis precision. BugLens guides an LLM to follow traditional analysis steps by assessing buggy code patterns for security impact and validating the constraints associated with static warnings. </p> <p>Evaluated on real-world Linux kernel bugs, BugLens raises precision from 0.10 (raw) and 0.50 (semi-automated refinement) to 0.72, substantially reducing false positives and revealing four previously unreported vulnerabilities. Our results suggest that a structured LLM-based workflow can meaningfully enhance the effectiveness of static analysis tools. </p>"},{"location":"research/llm_vuln/llm_vulnerability/#llm-driven-multi-step-translation-from-c-to-rust-using-static-analysis","title":"LLM-Driven Multi-step Translation from C to Rust using Static Analysis","text":"<p>we propose SACTOR, an LLM-driven C-to-Rust zero-shot translation tool using a two-step translation methodology: an \"unidiomatic\" step to translate C into Rust while preserving semantics, and an \"idiomatic\" step to refine the code to follow Rust's semantic standards. SACTOR utilizes information provided by static analysis of the source C program to address challenges such as pointer semantics and dependency resolution. To validate the correctness of the translated result from each step, we use end-to-end testing via the foreign function interface to embed our translated code segment into the original code. We evaluate the translation of 200 programs from two datasets and two case studies, comparing the performance of GPT-4o, Claude 3.5 Sonnet, Gemini 2.0 Flash, Llama 3.3 70B and DeepSeek-R1 in SACTOR. Our results demonstrate that SACTOR achieves high correctness and improved idiomaticity, with the best-performing model (DeepSeek-R1) reaching 93% and (GPT-4o, Claude 3.5, DeepSeek-R1) reaching 84% correctness (on each dataset, respectively), while producing more natural and Rust-compliant translations compared to existing methods</p>"},{"location":"research/llm_vuln/llm_vulnerability/#knighter-transforming-static-analysis-with-llm-synthesized-checkers","title":"KNighter: Transforming Static Analysis with LLM-Synthesized Checkers","text":"<p>We present KNighter, the first approach that unlocks practical LLM-based static analysis by automatically synthesizing static analyzers from historical bug patterns.  our key insight is leveraging LLMs to generate specialized static analyzers guided by historical patch knowledge.  KNighter implements this vision through a multi-stage synthesis pipeline that validates checker correctness against original patches and employs an automated refinement process to iteratively reduce false positives. Our evaluation on the Linux kernel demonstrates that KNighter generates high-precision checkers capable of detecting diverse bug patterns overlooked by existing human-written analyzers. To date, KNighter-synthesized checkers have discovered 70 new bugs/vulnerabilities in the Linux kernel, with 56 confirmed and 41 already fixed. 11 of these findings have been assigned CVE numbers. </p>"},{"location":"research/llm_vuln/llm_vulnerability/#can-llm-prompting-serve-as-a-proxy-for-static-analysis-in-vulnerability-detection","title":"Can LLM Prompting Serve as a Proxy for Static Analysis in Vulnerability Detection","text":"<p>We investigate various prompting strategies for vulnerability detection and, as part of this exploration, propose a prompting strategy that integrates natural language descriptions of vulnerabilities with a contrastive chain-of-thought reasoning approach, augmented using contrastive samples from a synthetic dataset. Our study highlights the potential of LLMs to detect vulnerabilities by integrating natural language descriptions, contrastive reasoning, and synthetic examples into a comprehensive prompting framework.  Our results show that this approach can enhance LLM understanding of vulnerabilities. On a high-quality vulnerability detection dataset such as SVEN, our prompting strategies can improve accuracies, F1-scores, and pairwise accuracies by 23%, 11%, and 14%, respectively. </p>"},{"location":"research/llm_vuln/llm_vulnerability/#feasibility-study-for-supporting-static-malware-analysis-using-llm","title":"Feasibility Study for Supporting Static Malware Analysis Using LLM","text":""},{"location":"research/llm_vuln/llm_vulnerability/#effectiveness-of-chatgpt-for-static-analysis-how-far-are-we","title":"Effectiveness of ChatGPT for Static Analysis: How Far Are We?","text":"<p>In static bug detection, ChatGPT achieves accuracy and precision values of up to 68.37% and 63.76% for detecting\u00a0Null Dereference\u00a0bugs and 76.95% and 82.73% for detecting\u00a0Resource Leak\u00a0bugs, improving the precision of the current leading bug detector, Infer by 12.86% and 43.13% respectively. For removing false-positive warnings, ChatGPT can reach a precision of up to 93.88% for\u00a0Null Dereference\u00a0bugs and 63.33% for\u00a0Resource Leak\u00a0bugs, surpassing existing state-of-the-art false-positive warning removal tools.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#assisting-static-analysis-with-large-language-models-a-chatgpt-experiment","title":"Assisting Static Analysis with Large Language Models: A ChatGPT Experiment","text":"<p>In this paper, we investigate where and how LLMs can assist static analysis by asking appropriate questions.  In particular, we target a specific bug-finding tool, which produces many false positives from the static analysis. </p> <p>In our evaluation, we find that these false positives can be effectively pruned by asking carefully constructed questions about function-level behaviors or function summaries. Specifically, with a pilot study of 20 false positives, we can successfully prune 8 out of 20 based on GPT-3.5, whereas GPT-4 had a near-perfect result of 16 out of 20, where the four failed ones are not currently considered/supported by our questions, e.g., involving concurrency. Additionally, it also identified one false negative case (a missed bug).</p>"},{"location":"research/llm_vuln/llm_vulnerability/#better-debugging-combining-static-analysis-and-llms-for-explainable-crashing-fault-localization","title":"Better Debugging: Combining Static Analysis and LLMs for Explainable Crashing Fault Localization","text":"<p>we propose an explainable crashing fault localization approach by combining static analysis and LLM techniques. Our primary insight is that understanding the semantics of exception-throwing statements in the framework code can help find and apprehend the buggy methods in the app code. Based on this idea,  - first, we design the exception-thrown summary (ETS) that describes the key elements related to each framework-specific exception and extract ETSs by performing static analysis.  - Then we make data-tracking of its key elements to identify and sort buggy candidates for the given crash.  - After that, we introduce LLMs to improve the explainability of the localization results.  - To construct effective LLM prompts, we design the candidate information summary (CIS) that describes multiple types of explanation-related contexts and then extract CISs via static analysis. </p> <p>We apply our approach to one typical scenario, i.e., locating Android framework-specific crashing faults, and implement a tool CrashTracker. For fault localization, it exhibited an overall MRR value of 0.91 in precision. For fault explanation, compared to the naive one produced by static analysis only, the LLM-powered explanation achieved a 67.04% improvement in users' satisfaction score.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#grace-empowering-llm-based-software-vulnerability-detection-with-graph-structure-and-in-context-learning","title":"GRACE: Empowering LLM-based software vulnerability detection with graph structure and in-context learning","text":"<p>we propose a novel vulnerability detection approach GRACE that empowers LLM-based software vulnerability detection by incorporating graph structural information in the code and in-context learning. We also design an effective demonstration retrieval approach that identifies highly relevant code examples by considering semantic, lexical, and syntactic similarities for the target code to provide better demonstrations for in-context learning.</p> <p>To evaluate the effectiveness of GRACE, we conducted an empirical study on three vulnerability detection datasets (i.e., Devign, Reveal, and Big-Vul). The results demonstrate that GRACE outperforms six state-of-the-art vulnerability detection baselines by at least 28.65% in terms of the F1 score across these three datasets.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#vulnerability-detection-and-monitoring-using-llm","title":"Vulnerability Detection and Monitoring Using LLM","text":"<p>The current study has used the capabilities of the GPT-3.5- Turbo model to conduct a detailed assessment of various code snippets to find any vulnerabilities. The main objective of the experiment was to introduce continuous monitoring technologies to enhance software security and release control. To obtain reliable results, we used a classification report and a confusion matrix. Out of these validation methods we choose accuracy as an important metric for this validation because in this experiment we need our model to predict the vulnerabilities that are present in the 2740 test cases and we would need our model to focus more on true positives(TP). The ideal goal of this experiment was to predict any kind of vulnerability from the real-world data. </p> <p>Out of all test cases, we were able to have an accuracy of 0.77. This demonstrates the approach's potential efficacy in discovering vulnerabilities. Nonetheless, the study found certain parts that require improvement, emphasizing the importance of continual refinement in the model's methodology to ensure more thorough security assessments. This study lays the groundwork for future research into the use of powerful machine learning models in the assessment of software vulnerabilities.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#lprotector-an-llm-driven-vulnerability-detection-system","title":"LProtector: An LLM-driven Vulnerability Detection System","text":"<p>This paper presents LProtector, an automated vulnerability detection system for C/C++ codebases driven by the large language model (LLM) GPT-4o and Retrieval-Augmented Generation (RAG). LProtector leverages GPT-4o's powerful code comprehension and generation capabilities to perform binary classification and identify vulnerabilities within target codebases.  We conducted experiments on the Big-Vul dataset, showing that LProtector outperforms two state-of-the-art baselines in terms of F1 score, demonstrating the potential of integrating LLMs with vulnerability detections.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#outside-the-comfort-zone-analysing-llm-capabilities-in-software-vulnerability-detection","title":"Outside the comfort zone: Analysing llm capabilities in software vulnerability detection","text":"<p>This paper thoroughly analyses LLMs' capabilities in detecting vulnerabilities within source code by testing models beyond their usual applications to study their potential in cybersecurity tasks. We evaluate the performance of six open-source models that are specifically trained for vulnerability detection against six general-purpose LLMs, three of which were further fine-tuned on a dataset that we compiled. Our dataset, alongside five state-of-the-art benchmark datasets, were used to create a pipeline to leverage a binary classification task, namely classifying code into vulnerable and non-vulnerable. The findings highlight significant variations in classification accuracy across benchmarks, revealing the critical influence of fine-tuning in enhancing the detection capabilities of small LLMs over their larger counterparts, yet only in the specific scenarios in which they were trained. Further experiments and analysis also underscore the issues with current benchmark datasets, particularly around mislabeling and their impact on model training and performance, which raises concerns about the current state of practice. We also discuss the road ahead in the field suggesting strategies for improved model training and dataset curation.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#vul-rag-enhancing-llm-based-vulnerability-detection-via-knowledge-level-rag","title":"Vul-RAG: Enhancing LLM-based Vulnerability Detection via Knowledge-level RAG","text":"<p>In this work, we propose a novel LLM-based vulnerability detection technique Vul-RAG, which leverages knowledge-level retrieval-augmented generation (RAG) framework to detect vulnerability for the given code in three phases. </p> <ul> <li>First, Vul-RAG constructs a vulnerability knowledge base by extracting multi-dimension knowledge via LLMs from existing CVE instances;</li> <li>second, for a given code snippet, Vul-RAG} retrieves the relevant vulnerability knowledge from the constructed knowledge base based on functional semantics;</li> <li>third, Vul-RAG leverages LLMs to check the vulnerability of the given code snippet by reasoning the presence of vulnerability causes and fixing solutions of the retrieved vulnerability knowledge.</li> </ul> <p>Our evaluation of Vul-RAG on our constructed benchmark PairVul shows that Vul-RAG substantially outperforms all baselines by 12.96\\%/110\\% relative improvement in accuracy/pairwise-accuracy. In addition, our user study shows that the vulnerability knowledge generated by Vul-RAG can serve as high-quality explanations which can improve the manual detection accuracy from 0.60 to 0.77.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#datasets","title":"Datasets","text":""},{"location":"research/llm_vuln/llm_vulnerability/#a-vulnerability-code-intent-summary-dataset","title":"A Vulnerability Code Intent Summary Dataset","text":"<p>The dataset contains X code examples which cover Y categories of vulnerability. Our data are from Z open-source projects and CVE entries, and compared to existing work, our dataset not only contains original code but also code function summary and security intent summary, providing context information for research in code security analysis. All information is in CSV format. The contributions of this paper are four-fold: the establishment of a high-quality, multi-perspective Code Intent Summary Dataset; an innovative method in data collection and processing; A new multi-perspective code analysis framework that promotes cross-disciplinary research in the fields of software engineering and cybersecurity; improving the practicality and scalability of the research outcomes by considering the code length limitations in real-world applications. Our dataset and related tools have been publicly released on GitHub.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#castle-benchmarking-dataset-for-static-code-analyzers-and-llms-towards-cwe-detection","title":"CASTLE: Benchmarking Dataset for Static Code Analyzers and LLMs towards CWE Detection","text":"<p>We assess 13 static analysis tools, 10 LLMs, and 2 formal verification tools using a hand-crafted dataset of 250 micro-benchmark programs covering 25 common CWEs. We propose the CASTLE Score, a novel evaluation metric to ensure fair comparison. Our results reveal key differences: ESBMC (a formal verification tool) minimizes false positives but struggles with vulnerabilities beyond model checking, such as weak cryptography or SQL injection. Static analyzers suffer from high false positives, increasing manual validation efforts for developers. LLMs perform exceptionally well in the CASTLE dataset when identifying vulnerabilities in small code snippets. However, their accuracy declines, and hallucinations increase as the code size grows. These results suggest that LLMs could play a pivotal role in future security solutions, particularly within code completion frameworks, where they can provide real-time guidance to prevent vulnerabilities. The dataset is accessible at CASTLE-Benchmark (CASTLE Benchmark)</p>"},{"location":"research/llm_vuln/llm_vulnerability/#diversevul-a-new-vulnerable-source-code-dataset-for-deep-learning-based-vulnerability-detection","title":"DiverseVul: A New Vulnerable Source Code Dataset for Deep Learning Based Vulnerability Detection","text":"<p>We propose and release a new vulnerable source code dataset. We curate the dataset by crawling security issue websites, extracting vulnerability-fixing commits and source codes from the corresponding projects. Our new dataset contains 18,945 vulnerable functions spanning 150 CWEs and 330,492 non-vulnerable functions extracted from 7,514 commits. Our dataset covers 295 more projects than all previous datasets combined. Combining our new dataset with previous datasets, we present an analysis of the challenges and promising research directions of using deep learning for detecting software vulnerabilities. We study 11 model architectures belonging to 4 families. Our results show that deep learning is still not ready for vulnerability detection, due to high false positive rate, low F1 score, and difficulty of detecting hard CWEs. In particular, we demonstrate an important generalization challenge for the deployment of deep learning-based models. We show that increasing the volume of training data may not further improve the performance of deep learning models for vulnerability detection, but might be useful to improve the generalization ability to unseen projects. We also identify hopeful future research directions. We demonstrate that large language models (LLMs) are a promising research direction for ML-based vulnerability detection, outperforming Graph Neural Networks (GNNs) with code-structure features in our experiments. Moreover, developing source code specific pre-training objectives is a promising research direction to improve the vulnerability detection performance.</p>"},{"location":"research/llm_vuln/llm_vulnerability/#llm-agents-can-autonomously-exploit-one-day-vulnerabilities","title":"LLM Agents can Autonomously Exploit One-day Vulnerabilities","text":"<p>In this work, we show that LLM agents can autonomously exploit one-day vulnerabilities in real-world systems. To show this, we collected a dataset of 15 one-day vulnerabilities that include ones categorized as critical severity in the CVE description.  When given the CVE description, GPT-4 is capable of exploiting 87% of these vulnerabilities compared to 0% for every other model we test (GPT-3.5, open-source LLMs) and open-source vulnerability scanners (ZAP and Metasploit). Fortunately, our GPT-4 agent requires the CVE description for high performance: without the description, GPT-4 can exploit only 7% of the vulnerabilities. Our findings raise questions around the widespread deployment of highly capable LLM agents.</p>"},{"location":"research/llm_vuln/mcp/","title":"mcp","text":"<p>\u200cMCP\uff08Model Context Protocol\uff0c\u6a21\u578b\u4e0a\u4e0b\u6587\u534f\u8bae\uff09\u200c\u662f\u7531Anthropic\u5f00\u53d1\u7684\u5f00\u6e90\u534f\u8bae\uff0c\u65e8\u5728\u5b9e\u73b0\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u4e0e\u5916\u90e8\u6570\u636e\u6e90\u548c\u5de5\u5177\u7684\u6807\u51c6\u5316\u4ea4\u4e92\u3002 client-server\u67b6\u6784  MCP client \u9996\u5148\u4ece MCP server \u83b7\u53d6\u53ef\u7528\u7684\u5de5\u5177\u5217\u8868\u3002 \u5c06\u7528\u6237\u7684\u67e5\u8be2\u8fde\u540c\u5de5\u5177\u63cf\u8ff0\u901a\u8fc7 function calling \u4e00\u8d77\u53d1\u9001\u7ed9 LLM\u3002 LLM \u51b3\u5b9a\u662f\u5426\u9700\u8981\u4f7f\u7528\u5de5\u5177\u4ee5\u53ca\u4f7f\u7528\u54ea\u4e9b\u5de5\u5177\u3002 \u5982\u679c\u9700\u8981\u4f7f\u7528\u5de5\u5177\uff0cMCP client \u4f1a\u901a\u8fc7 MCP server \u6267\u884c\u76f8\u5e94\u7684\u5de5\u5177\u8c03\u7528\u3002 \u5de5\u5177\u8c03\u7528\u7684\u7ed3\u679c\u4f1a\u88ab\u53d1\u9001\u56de LLM\u3002 LLM \u57fa\u4e8e\u6240\u6709\u4fe1\u606f\u751f\u6210\u81ea\u7136\u8bed\u8a00\u54cd\u5e94\u3002 \u6700\u540e\u5c06\u54cd\u5e94\u5c55\u793a\u7ed9\u7528\u6237\u3002</p> <p>\u534f\u8bae\u7684\u670d\u52a1\u5668\u7aef\uff0c\u8d1f\u8d23\uff1a</p> <p>\u66b4\u9732\u5ba2\u6237\u7aef\u53ef\u4ee5\u53d1\u73b0\u548c\u6267\u884c\u7684\u5de5\u5177 \u7ba1\u7406\u57fa\u4e8eURI\u7684\u8d44\u6e90\u8bbf\u95ee\u6a21\u5f0f \u63d0\u4f9b\u63d0\u793a\u6a21\u677f\u5e76\u5904\u7406\u63d0\u793a\u8bf7\u6c42 \u652f\u6301\u4e0e\u5ba2\u6237\u7aef\u7684\u80fd\u529b\u534f\u5546 \u5b9e\u73b0\u670d\u52a1\u5668\u7aef\u534f\u8bae\u64cd\u4f5c \u7ba1\u7406\u5e76\u53d1\u5ba2\u6237\u7aef\u8fde\u63a5 \u63d0\u4f9b\u7ed3\u6784\u5316\u65e5\u5fd7\u548c\u901a\u77e5</p> <p>SQLite\u7684\u4f8b\u5b50 \u8fde\u63a5\u6570\u636e\u5e93</p> <ol> <li>\u4e0a\u4e0b\u6587\u6570\u636e\u6cc4\u9732 MCP\u4f9d\u8d56\u4e8e\u5927\u91cf\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u6765\u63d0\u9ad8\u6a21\u578b\u7684\u6027\u80fd\uff0c\u7136\u800c\u8fd9\u4e9b\u6570\u636e\u53ef\u80fd\u6d89\u53ca\u5230\u654f\u611f\u4fe1\u606f\uff08\u4f8b\u5982\u4f4d\u7f6e\u3001\u4e2a\u4eba\u884c\u4e3a\u3001\u5065\u5eb7\u6570\u636e\u7b49\uff09\u3002\u5982\u679c\u6ca1\u6709\u4e25\u683c\u7684\u9690\u79c1\u4fdd\u62a4\u63aa\u65bd\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9690\u79c1\u6cc4\u9732\u3002</li> </ol> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u52a0\u5bc6\u4e0a\u4e0b\u6587\u6570\u636e\uff0c\u786e\u4fdd\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u88ab\u7a83\u53d6\u3002\u91c7\u7528 \u540c\u6001\u52a0\u5bc6 \u6216 \u5dee\u5206\u9690\u79c1 \u7b49\u6280\u672f\u6765\u4fdd\u62a4\u654f\u611f\u6570\u636e\u3002</p> <ol> <li>\u6a21\u578b\u6ee5\u7528 \u901a\u8fc7MCP\u4f20\u9012\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u53ef\u4ee5\u88ab\u653b\u51fb\u8005\u5229\u7528\u6765\u201c\u6b3a\u9a97\u201d\u6a21\u578b\uff0c\u5c24\u5176\u662f\u5f53\u653b\u51fb\u8005\u80fd\u591f\u64cd\u63a7\u67d0\u4e9b\u4e0a\u4e0b\u6587\u8f93\u5165\u65f6\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u6076\u610f\u7528\u6237\u53ef\u80fd\u4f1a\u8f93\u5165\u865a\u5047\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u6765\u5bfc\u81f4\u6a21\u578b\u505a\u51fa\u9519\u8bef\u51b3\u7b56\u3002</li> </ol> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u589e\u5f3a\u6a21\u578b\u7684\u9c81\u68d2\u6027\uff0c\u4f7f\u7528 \u5bf9\u6297\u8bad\u7ec3 \u548c \u8f93\u5165\u9a8c\u8bc1 \u6280\u672f\u6765\u51cf\u5c11\u6b64\u7c7b\u98ce\u9669\u3002</p> <ol> <li>\u4e0a\u4e0b\u6587\u6570\u636e\u7684\u4f2a\u9020 \u5982\u679cMCP\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u662f\u7531\u591a\u4e2a\u6765\u6e90\u63d0\u4f9b\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u67d0\u4e9b\u4fe1\u606f\u6e90\u88ab\u653b\u51fb\u6216\u7be1\u6539\u3002\u653b\u51fb\u8005\u53ef\u4ee5\u4f2a\u9020\u4e0a\u4e0b\u6587\u6570\u636e\uff0c\u5bfc\u81f4\u6a21\u578b\u9519\u8bef\u63a8\u65ad\u3002</li> </ol> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u786e\u4fdd\u4e0a\u4e0b\u6587\u6570\u636e\u6765\u6e90\u7684\u771f\u5b9e\u6027\u4e0e\u53ef\u9760\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528 \u533a\u5757\u94fe \u7b49\u6280\u672f\u786e\u4fdd\u6570\u636e\u7684\u4e0d\u53ef\u7be1\u6539\u6027\u3002</p> <ol> <li>\u6570\u636e\u548c\u6a21\u578b\u7684\u9690\u79c1\u95ee\u9898 \u5728\u591a\u4efb\u52a1\u7cfb\u7edf\u4e2d\uff0c\u6a21\u578b\u7684\u4e0a\u4e0b\u6587\u6570\u636e\u4e0d\u4ec5\u4ec5\u6765\u81ea\u5355\u4e00\u6765\u6e90\uff0c\u53ef\u80fd\u8de8\u591a\u4e2a\u7ec4\u7ec7\u6216\u8bbe\u5907\u3002\u5982\u4f55\u5728\u4fdd\u8bc1\u9690\u79c1\u7684\u540c\u65f6\u5171\u4eab\u6570\u636e\uff0c\u662f\u5f53\u524d\u7684\u4e00\u4e2a\u6311\u6218\u3002</li> </ol> <p>\u89e3\u51b3\u65b9\u6848\uff1a\u91c7\u7528 \u8054\u5408\u5b66\u4e60\uff08Federated Learning\uff09 \u7b49\u9690\u79c1\u4fdd\u62a4\u6280\u672f\uff0c\u5728\u4e0d\u5171\u4eab\u539f\u59cb\u6570\u636e\u7684\u524d\u63d0\u4e0b\u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u3002</p> <p></p> <p>[Evaluation Report on MCP Servers] MCPBench Red Teaming(RT)\u7ea2\u961f\u6f14\u7ec3\u88ab\u7528\u4e8e\u8bc4\u4f30AI\u6a21\u578b\u7684\u5b89\u5168\u6027\u548c\u53ef\u9760\u6027\u3002\u200b\u4e13\u5bb6\u901a\u8fc7\u6a21\u62df\u653b\u51fb\uff0c\u6d4b\u8bd5AI\u7cfb\u7edf\u5728\u9762\u5bf9\u6076\u610f\u8f93\u5165\u65f6\u7684\u53cd\u5e94\uff0c\u8bc6\u522b\u53ef\u80fd\u7684\u504f\u89c1\u3001\u9519\u8bef\u4fe1\u606f\u6216\u6709\u5bb3\u5185\u5bb9\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u52a9\u4e8e\u786e\u4fddAI\u7cfb\u7edf\u7684\u5b89\u5168\u6027\u3001\u4f26\u7406\u6027\u548c\u4e0e\u4e1a\u52a1\u4ef7\u503c\u7684\u5bf9\u9f50\u3002 [Enterprise-Grade Security for the Model Context Protocol (MCP): Frameworks and Mitigation Strategies] [MCP Safety Audit: LLMs with the Model Context Protocol Allow Major Security Exploits] [MCP:Landscape,Security Threats,and Future Research Directions]</p> <p>\u9632\uff1ainstead of sandbox,what can we do?\u6587\u4ef6\u767d/\u9ed1\u540d\u5355 \u6c99\u7bb1\u89c4\u5219\u914d\u7f6e \u6bd4docker\u9694\u79bb\u66f4\u5f31\u7684configure shadow stack</p> <p>\u7b26\u5408\u60c5\u666f\u7684\u901a\u7528\u767d\u540d\u5355 \u653b\u51fb\u6295\u6bd2(TPA):\u901a\u8fc7prompt\uff08\u6ce8\u91ca\uff09\u6076\u610f\u6267\u884c</p> <p>A2A \u6a21\u5f0f\u5339\u914d\u68c0\u6d4b\uff0c\u9ed1\u540d\u5355\u767d\u540d\u5355\uff0c trust\u5382\u5546url</p> <p>gguf_load</p>"},{"location":"sp24/","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5927\u5b66\u5927\u6982\u662f\u6700\u6076\u5fc3\u7684\u4e00\u4e2a\u5b66\u671f\uff0c30\u5b66\u5206\u6253\u5e95\uff0c\u4e14\u5305\u62ec\u6570\u5206\u3001\u666e\u7269\u3001sys\u3001\u79bb\u6563\u3001fds\u3001\u666e\u7269\u5b9e\u9a8c\u7b49\u6216\u96be\u6216\u70e6\u7684\u786c\u8bfe \u9009\u8bfe\u7406\u8bba\u4e0a\u4ee5\u6bcf\u5b66\u671f25\u5b66\u5206\u4e3a\u5b9c(\u4e0d\u8fc7\u8fd9\u5728\u5927\u4e8c\u4e0b\u4e4b\u524d\u663e\u7136\u662f\u505a\u4e0d\u5230\u7684) \u9664\u4f53\u80b2\u4e0e\u9884\u7f6e\u8bfe\u81f3\u591a\u989d\u5916\u9009\u62e9\u4e00\u95e8 \u5982\u679c\u60f3\u6bcf\u95e8\u8bfe\u7a0b\u90fd\u8bfb\u597d\u90a3\u6076\u5fc3\u7a0b\u5ea6\u582a\u6bd4\u9ad8\u4e09\uff0c\u5982\u679c\u4e0d\u60f3\u8fc7\u7684\u592a\u60e8\u8bf7\u5c3d\u91cf\u6311\u91cd\u70b9\u5b66\u4e60\uff08\u4e8b\u5b9e\u4e0a\uff0c\u5373\u4f7f\u8fd9\u6837\u4f9d\u65e7\u975e\u5e38\u6298\u78e8\uff09\uff0c\u91c7\u7528\u5408\u9002\u7684\u7b56\u7565\u63d0\u9ad8\u5b66\u4e60\u7684\u6548\u7387 \u4e00\u822c\u800c\u8a00\u8ba4\u4e3a\u7684\u91cd\u70b9\uff1a(\u4ee5\u4e0b\u6309\u987a\u5e8f\u6392\u5217)  </p> <ul> <li>\u611f\u5174\u8da3\u7684\u8bfe\u7a0b</li> <li>\u4e3b\u4fee\u8bfe\u7a0b</li> <li>\u5b66\u5206\u22652.5\u7684\u8bfe\u7a0b</li> </ul> <p>\u5982\u679c\u964d\u4f4e\u8be5\u5b66\u671f\u7684\u75db\u82e6\uff0c\u5728\u6b64\u63a8\u8350\u5408\u7406\u5229\u7528\u4ee5\u4e0b\u6280\u672f\uff1a  </p> <ul> <li>\u4f53\u80b2\u6253\u5361   \u82f9\u679c   \u7231\u601d\u52a9\u624b   AutoMacroRecorder   Github\u4e0a\u7684fakerun  </li> <li>\u96f7\u8fbe\u7b7e\u5230   \u5b89\u5353   fake location  </li> <li>\u6709\u95ee\u9898\u79c1\u4fe1\u6c9f\u901a  </li> </ul> <p>\u5176\u4ed6\u63a8\u8350\u7684\u5de5\u5177:(98/\u6735\u6735)  </p> <ul> <li>celechron(\u67e5\u5206\u548c\u4ed8\u6b3e\u7801\u5f88\u597d\u7528)  </li> <li>ZTA  </li> <li>ZJU Connect  </li> <li>SpaceSniffer (on github)  </li> </ul> <p>\u6b64\u5916\uff0c\u4ece\u8fd9\u5b66\u671f\u5f00\u59cb\uff0c\u6240\u6709\u7684\u4e13\u4e1a\u8bfe(sys,fds\u7b49)\u5b9e\u9a8c\u76f8\u5173\u7684\u95ee\u9898\u90fd\u53ef\u4ee5\u8be2\u95ee\u6211\uff0c\u76f8\u5173\u5185\u5bb9\u90fd\u6709\u505a\u7559\u5b58\uff0c\u4e0d\u8fc7\u66f4\u5177\u4f53\u7684\u5185\u5bb9\u8fd8\u662f\u79ef\u6781\u6c42\u52a9\u8bfe\u7a0b\u52a9\u6559\uff08\u6216\u8bb8\u5c31\u662f\u6211~\uff1f\uff09</p> <p>\u5269\u4e0b\u7684\u5c31\u662f\u826f\u597d\u7684\u5fc3\u6001\u3001\u5408\u7406\u7684\u5b89\u6392\u4ee5\u53ca\u8db3\u591f\u7684\u4fe1\u606f  </p> <p>\u795d\u597d\u8fd0  </p>"},{"location":"sp24/ctf/","title":"\u8bfe\u7a0b\u7efc\u5408\u5b9e\u8df5I\u2014\u2014\u5b89\u5168\u653b\u9632\u5b9e\u8df5\u57fa\u7840(CTF)  2.5 \u5b66\u5206","text":""},{"location":"sp24/ctf/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>AAA\u6218\u961f\u6210\u5458</p>"},{"location":"sp24/ctf/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u5fc5\u4fee\u8bfe(\u77ed\u5b66\u671f\u8bfe\u7a0b)  </p> <p>\u8fd9\u95e8\u8bfe\u867d\u7136\u5728\u6559\u52a1\u7684\u8bfe\u7a0b\u5206\u7c7b\u4e2d\u5f52\u4e3a\u79cb\u51ac\u5b66\u671f\u8bfe\u7a0b\uff0c\u4f46\u5b9e\u9645\u4e0a\u8bfe\u65f6\u95f4\u4e3a7\u6708\u521d\uff0c\u56e0\u6b64\u5f52\u5230sp24\u4e2d</p>"},{"location":"sp24/ctf/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u51fa\u52e4 5% \uff08\u6bcf\u6b21\u8bfe\u90fd\u4f1a\u70b9\u540d\uff0c\u4e0d\u8fc7\u8bf7\u5047\u90fd\u4f1a\u6279\u51c6\uff09</li> <li>Lab0 5% \uff08\u9700\u63d0\u524d\u5b8c\u6210\u7528\u4e8e\u62a5\u540d\uff09</li> <li>\u4e94\u4e2a\u57fa\u7840\u4e13\u9898 10% * 5 = 50%</li> <li>\u81ea\u9009\u81f3\u5c11\u4e24\u4e2a\u4e13\u9898\u8fdb\u9636\uff0c\u56db\u6b21\u4f5c\u4e1a 10% * 4 = 40%</li> <li>\u6bcf\u4e2a\u4e13\u9898\u90fd\u6709bonus 15\u5206\uff08\u603b\u8bc41.5%\uff09\uff0c\u57fa\u7840\u4e13\u9898\u4e0e\u8fdb\u9636\u4e13\u9898\u4e0d\u53ef\u76f8\u4e92\u6ea2\u51fa\uff0c\u4e5f\u4e0d\u53ef\u6ea2\u51fa\u51fa\u52e4\uff09</li> <li>\u8fdb\u9636\u4e13\u9898\u6bcf\u8fdf\u4ea4\u4e00\u5929\u6263\u9664\u8be5\u4e13\u98985%</li> </ul>"},{"location":"sp24/ctf/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8fd9\u662f\u4e00\u95e8\u76f8\u5f53\u56f0\u96be\u7684\u8bfe\u7a0b\uff0c\u5f53\u7136\u4e5f\u662f\u6536\u76ca\u9887\u4e30\u7684\u8bfe\u7a0b\uff0c\u7b2c\u4e00\u5468\u4e3a\u5bfc\u8bba\uff0c\u5b66\u4e60web,misc,reverse,pwn,crypto\u4e94\u4e2a\u65b9\u5411\u7684\u57fa\u7840\uff0c\u7b2c\u4e8c\u5468\u4e3a\u4e13\u9898\u8bfe\u7a0b\uff0c\u5728\u4e0a\u8ff0\u4e94\u4e2a\u4e13\u9898\u4e2d\u9009\u62e9\u81f3\u5c11\u4e24\u4e2a\u5404\u518d\u4e0a\u4e24\u6b21\u8fdb\u9636\u8bfe\u7a0b\uff0c\u6bcf\u6b21\u8bfe\u7a0b\u5747\u9700\u8981\u5b8c\u6210\u76f8\u5173\u4e60\u9898\uff0c\u63d0\u4ea4\u5b9e\u9a8c\u62a5\u544a\uff0c\u6bcf\u4e2a\u5b9e\u9a8c\u62a5\u544addl\u5747\u4e3a\u4e24\u5468\uff0c\u5171\u8ba1\u9700\u8981\u63d0\u4ea45+2*2 = 9\u4e2a\u5b9e\u9a8c\u62a5\u544a\uff08\u4e5f\u5c31\u662f\u7b2c\u4e8c\u5468\u8bfe\u7a0b\u7ed3\u675f\u540e\u8fd8\u9700\u8981\u505a\u4e24\u5468\u4f5c\u4e1a\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u95e8\u8bfe\u7a0b\u6301\u7eed\u81f3\u5c11\u56db\u5468\uff0c\u4e8b\u5b9e\u8bc1\u660e\u5373\u4f7f\u6709\u4e24\u5468\u7684ddl\u65f6\u95f4\u4f9d\u7136\u975e\u5e38\u7d27\uff0c\u5982\u679c\u60f3\u8981\u8f7b\u677e\u6109\u5feb\u7684\u77ed\u5b66\u671f\u5efa\u8baerun\uff09 \u8bfe\u7a0b\u8981\u6c42\uff1a  </p> <ul> <li>\u81ea\u5b66python\uff08\u5176\u5b9e\u6240\u6709\u5185\u5bb9\u90fd\u8981\u81ea\u5b66\uff09</li> <li>web,misc,crypto\u4e09\u4e2a\u4e13\u9898\u51e0\u4e4e\u4e0d\u9700\u8981\u57fa\u7840\uff08\u5982\u5df2\u4fee\u8bfb\u5bc6\u7801\u5b66\u5bf9crypto\u4e13\u9898\u6709\u5e2e\u52a9\uff09\uff0creverse\u4e13\u9898\u9700\u8981\u4e00\u4e9b\u6c47\u7f16\u77e5\u8bc6\uff0cpwn\u8fdb\u9636\u51e0\u4e4e\u8981\u6c42\u5fc5\u987b\u5148\u4fee\u6c47\u7f16\u8bed\u8a00</li> </ul> <p>\u4e0a\u8bfe\u7c7b\u4f3c\u4e8e\u81ea\u5b66\u5bfc\u8bba\uff0c\u5b8c\u6210\u4f5c\u4e1a\u5927\u90e8\u5206\u4f9d\u9760\u81ea\u4e3b\u63a2\u7d22\uff0c\u4f46\u53ea\u8981\u7aed\u5c3d\u5168\u529b\u7ed9\u5206\u8fd8\u662f\u76f8\u5f53\u597d\u7684\uff08\u672c\u4ebacrypto\u4e13\u9898\u53ea\u505a\u51fa45\u5206\u7684\u9898\u76ee\uff0c\u5176\u4f59\u9898\u76ee\u51e0\u4e4e\u53ea\u662f\u53d9\u8ff0\u4e86\u4e00\u4e9b\u601d\u8def\u6700\u540e\u83b7\u5f97\u4e8695\u7684\u7ed9\u5206\uff09</p> <p>\u5207\u52ff\u6284\u88ad\uff01\u5207\u52ff\u6284\u88ad\uff01\u5207\u52ff\u6284\u88ad\uff0123\u7ea7\u56e0\u6284\u88ad\u5bfc\u81f4\u6302\u79d1\u4eba\u6570\u4f17\u591a</p> <p>2024\u5b9e\u9a8c\u6587\u6863</p> <p>P.S. \u5982\u679c\u5e0c\u671b\u5728\u6bcf\u5e7410\u6708\u4e3e\u884c\u7684CTF\u6821\u8d5b\u4e0a\u4e00\u5c55\u98ce\u91c7\u4e43\u81f3\u66f4\u8fdb\u4e00\u6b65\uff0c\u4f60\u5e94\u8be5\u77e5\u9053\u8be5\u600e\u4e48\u505a</p>"},{"location":"sp24/cyber_security/","title":"\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\u5bfc\u8bba  1.5 \u5b66\u5206","text":""},{"location":"sp24/cyber_security/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u4efb\u594e \u5f20\u79c9\u665f \u7f57\u68a6 \u5f20\u660e\u96ea</p>"},{"location":"sp24/cyber_security/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe-&gt;\u4e13\u4e1a\u9009\u4fee\u8bfe</p>"},{"location":"sp24/cyber_security/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5927\u6c34\u8bfe\uff0c\u4e0d\u70b9\u540d\u4e0d\u8003\u8bd5 \u671f\u672b\u9009\u5b9a\u4efb\u610f\u4e13\u9898\u63d0\u4ea4\u8bba\u6587\u4e00\u7bc7\uff0c\u8f7b\u677e89  </p>"},{"location":"sp24/discrete_math/","title":"\u79bb\u6563\u6570\u5b66\u7406\u8bba\u57fa\u7840  4.0 \u5b66\u5206","text":""},{"location":"sp24/discrete_math/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u90d1\u6587\u5ead</p>"},{"location":"sp24/discrete_math/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"sp24/discrete_math/#_3","title":"\u6559\u6750","text":"<p>\u8fc7\u4e8e\u539a\u91cd\u800c\u4e0d\u5efa\u8bae\u643a\u5e26 Discrete mathematics and its applications</p>"},{"location":"sp24/discrete_math/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u4e00\u95e8\u4e00\u8a00\u96be\u5c3d\u7684\u8bfe\u7a0b\uff0c\u5b9e\u7528\u6027\u4e0a\u8fdc\u4e0d\u53cafds\u6709\u7528\uff1b\u8bfe\u7a0b\u5185\u5bb9\u4e0a\u88ab\u9ad8\u4e2d\u6570\u5b66\uff0c\u6570\u5206\uff0cfds\uff0c\u7b49\u5b8c\u5168\u8986\u76d6\uff1b\u6388\u8bfe\u4e0a\u4e24\u4e2a\u65e9\u516b\u8ba9\u4eba\u5f88\u96be\u63d0\u8d77\u5174\u81f4\uff0c\u8bb2\u8bfe\u9605\u8bfbppt\uff0c\u597d\u6d88\u606f\u662fzwt\u4ece\u4e0d\u70b9\u540d\uff0c\u56e0\u6b64\u5efa\u8bae\u5168\u90e8\u81ea\u5b66 \u4f46\u8fd9\u662f\u4e00\u95e84\u5b66\u5206\u7684\u8bfe\u7a0b\uff0c\u56e0\u6b64\u9700\u8981\u8db3\u591f\u5730\u91cd\u89c6 \u5c0f\u6d4b\u4e0e\u671f\u672b\u524d\u8ba4\u771f\u5b8c\u6210\u5386\u5e74\u9898\uff08\u89c1TuringCourses\uff09\uff0c\u505a\u597d\u68b3\u7406\u662f\u975e\u5e38\u5fc5\u8981\u7684  </p>"},{"location":"sp24/discrete_math/#_5","title":"\u4f5c\u4e1a\u7b54\u6848","text":"<p>\u5947\u6570\u9898\u7b54\u6848 \u5076\u6570\u9898\u7b54\u6848Chap01 \u5076\u6570\u9898\u7b54\u6848Chap02 \u5076\u6570\u9898\u7b54\u6848Chap03 \u5076\u6570\u9898\u7b54\u6848Chap04 \u5076\u6570\u9898\u7b54\u6848Chap05 \u5076\u6570\u9898\u7b54\u6848Chap06 \u5076\u6570\u9898\u7b54\u6848chap07 \u5076\u6570\u9898\u7b54\u6848chap08 \u5076\u6570\u9898\u7b54\u6848chap09 \u5076\u6570\u9898\u7b54\u6848chap10 \u5076\u6570\u9898\u7b54\u6848chap11 \u5076\u6570\u9898\u7b54\u6848chap12 \u5076\u6570\u9898\u7b54\u6848chap13</p>"},{"location":"sp24/fds/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840  2.5 \u5b66\u5206","text":""},{"location":"sp24/fds/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u6768\u5b50\u797a</p>"},{"location":"sp24/fds/#_2","title":"\u6559\u6750","text":"<p>\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 \u7b97\u6cd5\u5bfc\u8bba</p>"},{"location":"sp24/fds/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u6700\u540e\u4e00\u95e8\u8003\uff0c\u52a1\u5fc5\u575a\u6301\u4f4f(\u672c\u4eba\u66fe\u56e0\u4e3a\u6700\u540e\u4e00\u95e8\u8003\u8bd5\u8003\u524d\u665a\u4e0a\u53bb\u5403\u6d77\u5e95\u635e\u5bfc\u81f4\u671f\u672b\u7206\u70b8)   \u5403\u900fppt\u662f\u6700\u5173\u952e\u7684\uff0c\u4e0d\u8981\u9057\u6f0f\u77e5\u8bc6\u70b9 \u7f16\u7a0b\u9898\u89c6\u60c5\u51b5\u6218\u672f\u653e\u5f03\uff08\u53ef\u4ee5\u5077\u7b54\u6848\uff0c\u5927\u80c6\u5077\uff09\uff0c\u4e0d\u8981\u82b1\u8d39\u592a\u591a\u65f6\u95f4 project\u9009\u53d6normal\u96be\u5ea6\u5373\u53ef\uff0chard\u591a\u7684\u4e94\u5206\u5e73\u65f6\u5206\u9274\u5b9a\u4e3a\u6ca1\u7528\uff0c\u9898\u76ee\u8bbe\u8ba1\u4e5f\u6709\u4e9b\u4e0d\u5408\u7406\uff0c\u4e0d\u5efa\u8bae\u6311\u6218\uff08\u9009\u96be\u5ea6\u7684\u8bc4\u7ea7\u8003\u8bd5\u4e5f\u53ef\u80fd\u4e0d\u53bb\uff09 quiz\u5171\u4e09\u6b21\uff0c\u5c11\u4e00\u6b21-3\u5206\uff0c\u975e\u5e38\u4e8f\uff0c\u5efa\u8bae\u5230\u8bfe\uff0cquiz\u90fd\u662f\u4f5c\u4e1a\u539f\u9898\uff0cpta\u7ffb\u51fa\u6765\u67e5\u4e00\u4e0b\u5c31\u884c\uff0c\u53ef\u80fd\u4f1a\u8fde\u7eedquiz bonus\u5c3d\u91cf\u5b8c\u6210\uff0c\u8003\u8651\u5230\u6709\u53ef\u80fd\u8fd0\u7528\u5230\u54c8\u5e0c\u8868\uff0c\u63a8\u8350\u5728\u7ed3\u8bfe\u5468\u5b8c\u6210\uff0c\u63d0\u65e9\u5c1d\u8bd5\u53ef\u80fd\u96be\u5ea6\u8f83\u5927  </p> <p>24\u771f\u9898</p>"},{"location":"sp24/fds/struct/","title":"\u5e38\u7528\u7ed3\u6784\u4f53","text":""},{"location":"sp24/fds/struct/#_2","title":"\u94fe\u8868","text":"<p><pre><code>typedef struct Node *PtrToNode;//\u5c06struct Node*\u7c7b\u578b\u5b9a\u4e49\u4e3aPtrToNode,\u8868\u793a\u6307\u5411Node\u7684\u4e00\u4e2a\u6307\u9488\nstruct Node {\n    int key; \n    PtrToNode next; \n};//\u6bcf\u4e2aNode\u4e2d\u5305\u542b\u4e00\u4e2a\u952e\u503ckey\u548c\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2aNode\u7684\u6307\u9488next\ntypedef PtrToNode list;//\u5c06PtrToNode\u7c7b\u578b\u5b9a\u4e49\u4e3alist,\u8868\u793alist\u4e5f\u662f\u4e00\u4e2a\u6307\u5411Node\u7684\u6307\u9488\n</code></pre> <pre><code>typedef struct Node {\n    int key;\n    struct Node *next;\n    struct Node *prev;\n} Node;\n\ntypedef struct {\n    Node *head;\n    Node *tail;\n} List;//\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\uff0c\u5305\u542b\u4e24\u4e2a\u6307\u5411Node\u7684\u6307\u9488\n</code></pre></p>"},{"location":"sp24/fds/struct/#_3","title":"\u6811","text":"<pre><code>typedef struct TreeNode *PtrTreeNode;\ntypedef struct TreeNode {\n    int key;\n    struct TreeNode *left;\n    struct TreeNode *right;\n} TreeNode;\ntypedef PtrTreeNode BST;//BST\u7c7b\u578b\u662f\u4e00\u4e2a\u6307\u5411\u6811\u6839\u8282\u70b9\u7684\u6307\u9488\n</code></pre>"},{"location":"sp24/fds/struct/#_4","title":"\u5806","text":"<p><pre><code>typedef struct {\n    int data[MAX_SIZE];  \n    int size;  \n} Heap;\n</code></pre> <pre><code>typedef struct TreeNode {\n    int key;            \n    struct TreeNode *left; \n    struct TreeNode *right;\n} TreeNode;\ntypedef struct {\n    TreeNode* root; \n} Heap;\n</code></pre></p>"},{"location":"sp24/fds/struct/#_5","title":"\u56fe","text":"<pre><code>typedef struct AdjVNode *PtrToAdjVNode; \nstruct AdjVNode{\n    int AdjV;//\u6307\u5411\u8282\u70b9\u7f16\u53f7\n    int Weight;\n    PtrToAdjVNode Next;//\u6307\u5411\u4e0b\u4e00\u6761\u8fb9\n};//\u8fb9\n\ntypedef struct Vnode{\n    PtrToAdjVNode FirstEdge;//\u6307\u5411\u7b2c\u4e00\u6761\u8fb9\n} AdjList[MaxVertexNum];//\u8282\u70b9\n\ntypedef struct GNode *PtrToGNode;\nstruct GNode{  \n    int Nv;//\u8282\u70b9\u6570\n    int Ne;//\u8fb9\u6570\n    AdjList G;//\u8282\u70b9\u7ed3\u6784\u6570\u7ec4\uff0c\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7b2c\u4e00\u6761\u8fb9\u7684\u6307\u9488\n    //\u901a\u8fc7Graph-&gt;G[Seq[N]].FirstEdge\u8bbf\u95ee\n};//\u56fe\ntypedef PtrToGNode LGraph;\n</code></pre>"},{"location":"sp24/fds/project1/project1_files/Report%20of%20Project%201%20Performance%20Measurement%28Search%29/","title":"Report of Project 1 Performance Measurement(Search)","text":""},{"location":"sp24/fds/project1/project1_files/Report%20of%20Project%201%20Performance%20Measurement%28Search%29/#performance-measurementsearch","title":"Performance Measurement(Search)","text":"<p>\u6768\u4ebf\u916c 3230105697</p> <p>2024-3-9</p>"},{"location":"sp24/fds/project1/project1_files/Report%20of%20Project%201%20Performance%20Measurement%28Search%29/#chapter-1-introduction","title":"Chapter 1 Introduction","text":"<p>\u200b   The project aims at learning about the time complexity of the four different methods for searching a number in a list of integers.</p> <p>\u200b   In order to test the overall effect of the four searching methods,the programme is designed to test the worst time complexity of the four methods. To make the time complexity worst,we can create a list of integers from 0 to N-1 and trying to find N in the list.</p> <p>\u200b   The four searching methods are Sequential Search(iterative version),Sequential Search(recursive version),Binary Search(iterative version) and Binary Search(recursive version) respectively,where sequential search scans through the list from left to right and binary search repeatedly divides the search interval in half to narrow down the interval until it becomes small enough to determine if the search key is present or not. Binary search starts with an interval covering the whole array and if the value of the search key is less than the item in the middle of the interval, the algorithm continues on the lower half;otherwise, it continues on the upper half. </p> <p>\u200b   We choose to search N in a list of integers from 0 to N-1 because it takes the four functions the most time to operate and give the result that N is not found. As for the sequential search,to find N,the programme must compare N with all the number in the list so that the total time spent is no smaller than any other number that is going to be found. For the binary search,the programme has to divide the list into half for many times until the interval remains only one integer and by comparing the integer with N,the programme gives out the answer that N is not found.</p> <p>\u200b   Though the searching method is almost the same,different version of the methods spends different time,which will be explained in Chapter 4 detailedly.</p>"},{"location":"sp24/fds/project1/project1_files/Report%20of%20Project%201%20Performance%20Measurement%28Search%29/#chapter-2-algorithm-specification","title":"Chapter 2 Algorithm Specification","text":"<p>\u200b   To achieve the target mentioned in Chapter 1,I finished the following work:</p> <ul> <li> <p>Including  to record the time running the functions. By calling the function 'start=clock()','stop=clock()' and defining 'double duration=stop-start',the time starts to be recorded once the function starts and stops to be recorded once the function stops. <li> <p>Repeating the function K times so as to make the duration large enough for reducing errors. In order to make the elapsed ticks meet the requirement of at least 10,the programme is set to stop repeating until duration is larger than 10. However,due to the fact that when testing binary search methods,the executing time is far shorter than that of sequential time,and that without enough repeating times,the duration difference won't be apparent enough to show the slight different between the two adjacent N, the duration limit is changed to 1000 for more accurate time records.</p> </li> <li> <p> is written for storing the 4 functions to be tested in the project. When executing ,main.c calls  and automatically runs the function that isn't commented out, and prints out the repetition times K as well as the duration. <p>\u200b   The following is the pseudo code of the 4 functions for searching: \u200b   Function iterative_sequential(a[], N) \u200b      For i from 0 to N-1 \u200b          If i equals N \u200b              Return 1 \u200b      Return 0   End Function</p> <p>Function recursive_sequential(a[], N, n)     If a[N] equals 0 and n does not equal a[N]         Return 0     If n does not equal a[N-1]         Return recursive_sequential(a, N-1, n)     If n equals a[N-1]         Return 1 End Function</p> <p>Function iterative_binary(a[], N)     low = a[0]     high = a[N-1]     mid = (low + high) / 2     While mid does not equal high and mid does not equal low         If a[mid] equals N             Return 1         If a[mid] is less than N             low = mid             mid = (low + high) / 2         If a[mid] is greater than N             high = mid             mid = (low + high) / 2     Return 0 End Function</p> <p>Function recursive_binary(low, high, N)     mid = (low + high) / 2     If low equals mid or mid equals high         Return 0     If mid equals N         Return 1     If mid is less than N         Return recursive_binary(mid, high, N)     If mid is greater than N         Return recursive_binary(low, mid, N) End Function</p> <p>\u200b   The main data structure used in the programme is an array of integers a[],which is used to create a list of integers from 0 to N-1.Meanwhile,integer low=a[0] and high=a[N-1],which changes while executing the functions of binary search.</p>"},{"location":"sp24/fds/project1/project1_files/Report%20of%20Project%201%20Performance%20Measurement%28Search%29/#chapter-3-testing-results","title":"Chapter 3 Testing Results","text":"<p>\u200b   The table below displays the results of the worst case performances of the above four functions for N = 100, 500, 1000, 2000, 4000, 6000, 8000, 10000.</p> <p></p> <p>\u200b   According to the table,we can use a coordinate system to show the relation between N and duration under different methods clearly. The graph is drawn below:</p> <p> </p> <p>SI=Sequential search(interative version) SR=Sequential search(recursive version) BI=Binary search(interative version) BR=Binary search(recursive version)</p> <p>\u200b   It can be easily seen from the chart that the lines of sequential search is closest to y=kx,meaning that the time complexity of sequential search is O(N);the lines of binary search is closest to y=logx,meaning that the time complexity of binary search is O(logN).</p> <p>\u200b   Meanwhile,recursive version is slower than the iterative version under sequential search for the usage of stacks but under binary search, the difference isn't apparent enough because stacks need for binary search aren't as many as those need for sequential search.</p>"},{"location":"sp24/fds/project1/project1_files/Report%20of%20Project%201%20Performance%20Measurement%28Search%29/#chapter-4-analysis-and-comments","title":"Chapter 4: Analysis and Comments","text":"<p>Time complexity:</p> <p>\u200b   The sequential search is to compare N with i,who travels from 0 to N-1,hence the time complexity of this searching method is O(N);</p> <p>\u200b   The binary search method is to cut the searching area by half and compare the result to be found with the mid of the area. For a list whose length is N,under the worst case,it should be cut by n times making the area consists only one element,and by comparing the single element with N,finding that N is not in the list. Therefore,the time complexity of the binary search method is O(logN); </p> <p>\u200b   Through the experiments,we can obtain the roughly changing of time spent relevant to N and the results are not much different from the theory.</p> <p>Space complexity:</p> <p>\u200b   Both the iterative versions use only one unit of the space,hence the space complexity is O(1).</p> <p>\u200b   The recursive version of sequential search uses as many as N stacks,for each call of the function use one unit of space,hence the space complexity is O(N).</p> <p>\u200b   The recursive version of binary search uses logN stacks,for each call of the function use one unit of space and the call times is logN,hence the space complexity is O(logN).</p> <p>\u200b   The recursive version of sequential search use much space and each call of stacks takes some time,thus the total duration is obviously larger than the iterative version according to the chart.</p> <p>\u200b   Errors occur due to the different environment the computer is under when running the programme and the number of N and K.</p> <p>\u200b   Therefore,further research on the choice of K and the error of the duration(especially the error of duration that affects the comparison between the iterative version and recursive version of binary search) is needed to show the run time-N relation more clearly.</p> <p>\u200b   In addition,the code only covers the occasion of finding N in a list of integers from 0 to N-1,which is not enough for more complicated practice in real life.</p> <p>\u200b   Hope the project can give us a rough but more intuitive understanding of the time complexity of different codes solving the same problem.</p>"},{"location":"sp24/fds/project1/project1_files/Report%20of%20Project%201%20Performance%20Measurement%28Search%29/#declaration","title":"Declaration","text":"<p>I hereby declare that all the work done in this project titled  \"Performance Measurement(Search)\" is of my independent effort.</p>"},{"location":"sp24/fds/project1/project1_files/code/readme/","title":"Readme","text":"<pre><code>The programme is used for comparing the time complexity of 4 searching methods,\n</code></pre> <p>namely iterative_sequential,recursive_sequential,iterative_binary and recursive_binary. The target is to find N in a list of numbers ranging from 0 to N-1 and print out the worst time spent of each searching method. By including ,the programme is able to record the time spent running the functions and by repeating the functions K times,the duration can be large enough to lower the margin of error. The total time spent of running each function K times is recorded in the table in the report.  <p>\u200b   The whole programme is run under gcc.exe version 13.1.0</p> <p>Run the programme by 1.executing command </p> <p><pre><code>gcc ./main.c -o ./main.exe\n</code></pre> 2.executing command </p> <pre><code>./main.exe\n</code></pre> <p>3.Inputs:N,the function number to be tested j(where j=0 represents iterative version of sequential search,j=1 represents recursive version of sequential search,j=2 represents iterative version of binary search and j=3 represents recursive version of binary search) and the minimum time of duration mintime(required to be larger than 10 and for more accurate outputs,larger than 1000 when testing binary search) </p> <p>Outputs:K and duration</p> <p>sample input\uff1a 100 3 1000 sample output: 14308728 1.001000</p> <p>sample input\uff1a 1000 1 10 sample output: 2731 0.011000</p>"},{"location":"sp24/fds/project1/project1_submit/code/readme/","title":"Readme","text":"<pre><code>The programme is used for comparing the time complexity of 4 searching methods,\n</code></pre> <p>namely iterative_sequential,recursive_sequential,iterative_binary and recursive_binary. The target is to find N in a list of numbers ranging from 0 to N-1 and print out the worst time spent of each searching method. By including ,the programme is able to record the time spent running the functions and by repeating the functions K times,the duration can be large enough to lower the margin of error. The total time spent of running each function K times is recorded in the table in the report.  <p>\u200b   The whole programme is run under gcc.exe version 13.1.0</p> <p>Run the programme by 1.executing command </p> <p><pre><code>gcc ./main.c -o ./main.exe\n</code></pre> 2.executing command </p> <pre><code>./main.exe\n</code></pre> <p>3.Inputs:N,the function number to be tested j(where j=0 represents iterative version of sequential search,j=1 represents recursive version of sequential search,j=2 represents iterative version of binary search and j=3 represents recursive version of binary search) and the minimum time of duration mintime(required to be larger than 10 and for more accurate outputs,larger than 1000 when testing binary search) </p> <p>Outputs:K and duration</p> <p>sample input\uff1a 100 3 1000 sample output: 14308728 1.001000</p> <p>sample input\uff1a 1000 1 10 sample output: 2731 0.011000</p>"},{"location":"sp24/fds/project2/project2_files/code/readme/","title":"Readme","text":"<p>The programme is used for finding whether an integer N can be written as A+B whether A is an element in Tree T1 and B is an element in Tree T2. The programme takes advantage of the characteristic of binary search tree(BST) where the left subtree of nodes contains only nodes smaller than the node's element while the right subtree of nodes contains only nodes equal to or bigger than the node's element.</p> <p>\u200b   The whole programme is run under gcc.exe version 13.1.0</p> <p>In windows powershell 1.executing the following command to compile</p> <pre><code>gcc ./main.c -o ./main.exe\n</code></pre> <p>2.executing the following command to run the programme </p> <pre><code>./main.exe\n</code></pre> <p>3.Inputs: a number n1:the number of nodes in T1 an 2D array a[][2] where the first column is the element and the second column is the parent_index used for constructing the relation between the children and the parent a number n2:the number of nodes in T2 an 2D array b[]2 a number N which is to be found </p> <p>Outputs: if N can be written as A+B,where A is in T1 and B is in T2 print true some equations:N = A + B     note that the same equation only appears once then print the preorder traversal of T1 and the preorder traversal of T2</p> <p>if N cannot be written as A+B simply print false then print the preorder traversal of T1 and the preorder traversal of T2</p> <p>the programme requires that all the elements involved in the project is in the range of -20000000000 - 2000000000 both the tree T1 and T2 are not an empty tree</p> <p>if you want to test the given inputs(written in 1-5.txt),after compiling,executing <pre><code>Get-Content .\\@.txt |./main\n</code></pre> replace @ with 1-5 for the input you want to test </p> <p>e.g. if you want to test the input in 4.txt,then executing <pre><code>Get-Content .\\4.txt |./main\n</code></pre></p> <p>sample input1\uff1a 8 12 2 16 5 13 4 18 5 15 -1 17 4 14 2 18 3 7 20 -1 16 0 25 0 13 1 18 1 21 2 28 2 36 sample output1: true 36 = 15 + 21 36 = 16 + 20 36 = 18 + 18 15 13 12 14 17 16 18 18 20 16 13 18 25 21 28 //the same as the sample given by pta sample input2\uff1a 5 10 -1 5 0 15 0 2 1 7 1 3 15 -1 10 0 20 0 40 sample output2: false 10 5 2 7 15 15 10 20 //the same as the sample given by pta sample input3\uff1a 4 0 -1 -2000000000 0 1000000000 0 2000000000 2 3 -1000000000 -1 -2000000000 0 0 0 0 sample output3: true 0 = 0 + 0 0 = 1000000000 + -1000000000 0 = 2000000000 + -2000000000 0 -2000000000 1000000000 2000000000 -1000000000 -2000000000 0 //used for testing whether the programme can execute if the value k is very large sample input4: 7 18 -1  17 0 17 1 18 0  18 2 18 3  18 4 5 17 -1 16 0 16 1 17 0 17 3 34 sample output4: true 34 = 17 + 17 34 = 18 + 16 18 17 17 18 18 18 18 17 16 16 17 17 //used for testing the condition that many nodes share the same element sample input5: 1 20 -1 1 15 -1 30 sample output5: false 20 15 //used for testing trees with only the head node </p>"},{"location":"sp24/fds/project2/project2_files/documents/Report%20of%20Project%202%20A%2BB%20with%20Binary%20Search%20Trees/","title":"Report of Project 2 A+B with Binary Search Trees","text":"A+B with Binary Search Trees       \u6768\u4ebf\u916c 3230105697 2024-3-27"},{"location":"sp24/fds/project2/project2_files/documents/Report%20of%20Project%202%20A%2BB%20with%20Binary%20Search%20Trees/#chapter-1-introduction","title":"Chapter 1 Introduction","text":"<p>Binary search tree(BST) is a tree which has the following properties: 1.Binary search tree is a binary tree 2.The left subtree contains nodes whose element is smaller than that of the node 3.The right subtree contains nodes whose element is equal to or bigger than that of the node</p> <p>Our task is to find an integer N by taking advantage of the properties of BST above.The main target is to see whether N can be written as A+B where A is an element in Tree1 and B is an element in Tree2. We input two trees,T1 and T2 and an integer N which to be found. If N can be written as A+B,where A is an element in T1 and B is an element in T2,then we print true and all the equations N = A + B,else we simply print false. After that,we print the preorder traversal of T1 and T2.</p>"},{"location":"sp24/fds/project2/project2_files/documents/Report%20of%20Project%202%20A%2BB%20with%20Binary%20Search%20Trees/#chapter-2-algorithm-specification","title":"Chapter 2 Algorithm Specification","text":"<ul> <li>BuildTree First find the node whose parent_index is -1,defining it as the head of the tree. Then find the nodes whose parent_index points to the head of the tree,defining them as the left child or the right child of the head. After that,defining them as the head of the left subtree or the right subtree and repeat the operations above using recursive method. The following is the pseudo code of the function BuildTree and Build_subtree: <pre><code>function Build_subtree(parent_index, n, a):\n    if parent_index == -1:\n        return NULL\n\n    Node = create_new_node(a[parent_index][0])\n    Node.Left = NULL\n    Node.Right = NULL\n\n    left_child_index = -1\n    right_child_index = -1\n\n    for i in range(n):\n        if a[i][1] == parent_index:\n            if a[i][0] &lt; Node.Element:\n                left_child_index = i\n            else:\n                right_child_index = i\n\n    Node.Left = Build_subtree(left_child_index, n, a)\n    Node.Right = Build_subtree(right_child_index, n, a)\n\n    return Node\n\nfunction BuildTree(n, a):\n    root_index = -1\n\n    for i in range(n):\n        if a[i][1] == -1:\n            root_index = i\n            break\n\n    return Build_subtree(root_index, n, a)\n</code></pre></li> <li>FindNumber First find the maximum number and the minimum number of T2,then use function Findbyinorder to find N. In function Findbyinorder,to avoid unnecessary recursions we can simply return if N-T1-&gt;Element &gt; maxT2||N-T1-&gt;Element &lt; minT2,because it is impossible to find an equation under such circumstances. if N-T1-&gt;Element&lt;=maxT2&amp;&amp;N-T1-&gt;Element&gt;=minT2 then first inorder traverse T1 and for each node of T1,use the function Compare to find equations. In function Compare,we judge whether X+T-&gt;Element is larger,equal to or smaller than N,and use recursive method to attempt to find the proper element in T2 such that X+T2-&gt;Element == N.During this process,we take advantage of the property of THE binary search tree that the worst time complexity is only logN when judging whether a proper element is exist for a certain X such that X+T-&gt;Element == N. The following is the pseudo code of the function FindNumber,Findbyinorder and Compare: <pre><code>function Compare(N, X, T):\n    if T != null:\n        if X + T.Element == N:\n            mark \u2190 mark + 1\n            if mark == 1:\n                print(\"true\")\n            print(N, \" = \", X, \" + \", T.Element)\n        else if X + T.Element &lt; N:\n            Compare(N, X, T.Right)\n        else:\n            Compare(N, X, T.Left)\n\nfunction Findbyinorder(T1, T2, N, maxT2, minT2):\n    if T1 != null:\n        if T1.Left != null and T1.Left.Element == T1.Element:\n            T1 \u2190 T1.Left\n        Findbyinorder(T1.Left, T2, N, maxT2, minT2)\n        if N - T1.Element &lt;=&gt; maxT2 and N - T1.Element &gt;= minT2:\n            Compare(N, T1.Element, T2)\n        if T1.Right != null and T1.Right.Element == T1.Element:\n            T1 \u2190 T1.Right\n        Findbyinorder(T1.Right, T2, N, maxT2, minT2)\n\nfunction FindNumber(N, T1, T2):\n    maxT2 \u2190 Findmax(T2)\n    minT2 \u2190 Findmin(T2)\n    Findbyinorder(T1, T2, N, maxT2, minT2)\n    if mark == 0:\n        print(\"false\")\n</code></pre></li> <li>Preorder     print the elements of T1 and T2 in preorder <pre><code>function Preorder(T,n)\n    if T != NULL then\n        if cnt != n then\n            print(T.Element, \" \")\n            cnt \u2190 cnt + 1\n            Preorder(T.Left, n)\n            Preorder(T.Right, n)\n        else\n            print(T.Element)\n</code></pre></li> </ul> <p>Data structure analysis: - 2D array</p> <p>Two 2D arrays each have n1 and n2 rows and both have two columns are used for building the Tree T1 and T2,where the first column is used for storing the elements of the nodes and the second column is used for storing the head_index which points to the parent of the node.</p> <ul> <li>Binary search tree(BST):the main data structure of the programme</li> </ul> <p>The definition of a binary search tree: 1.Every node has an element which is an integer, and the elements are distinct. 2.The elements in a nonempty left subtree must be smaller than the element in the root of the subtree. 3.The elements in a nonempty right subtree must be larger than the element in the root of the subtree. 4.The left and right subtrees are also binary search trees. Note that the binary search tree we use in the programme is a bit different from the definition above,because in the programme,nodes having the same element is allowed(if two nodes share the same element,then one node is the right child of the other,if more nodes share the same element,then each one is the right child of another) The advantage of a binary search tree is that it can quickly perform search(the main task of the programme), insertion, and deletion operations, with a time complexity of O(logN), where N is the number of nodes in the tree.    </p>"},{"location":"sp24/fds/project2/project2_files/documents/Report%20of%20Project%202%20A%2BB%20with%20Binary%20Search%20Trees/#chapter-3-testing-results","title":"Chapter 3 Testing Results","text":"input output corresponding purpose 1          8 12 2 16 5 13 4 18 5 15 -1 17 4 14 2 18 3 7 20 -1 16 0 25 0 13 1 18 1 21 2 28 2 36 true 36 = 15 + 21 36 = 16 + 20 36 = 18 + 18 15 13 12 14 17 16 18 18 20 16 13 18 25 21 28 comprehensive sample when the result is true 2 5 10 -1 5 0 15 0 2 1 7 1 3 15 -1 10 0 20 0 40 false 10 5 2 7 15 15 10 20 comprehensive sample when the result is false 3 4 0 -1 -2000000000 0 1000000000 0 2000000000 2 3 -1000000000 -1 -2000000000 0 0 0 0 true 0 = 0 + 0 0 = 1000000000 + -1000000000 0 = 2000000000 + -2000000000 0 -2000000000 1000000000 2000000000 -1000000000 -2000000000 0 testing whether the programme can execute if the value k is very large 4 7 18 -1 17 0 17 1 18 0  18 2 18 3  18 4 5 17 -1 16 0 16 1 17 0 17 3 34 true 34 = 17 + 17 34 = 18 + 16 18 17 17 18 18 18 18 17 16 16 17 17 testing the condition that many nodes share the same element 5 1 20 -1 1 15 -1 30 false 20 15 testing the trees with only the head node 6 see in 6.txt see in 6.answer.txt testing the condition that n1,n2 is very large"},{"location":"sp24/fds/project2/project2_files/documents/Report%20of%20Project%202%20A%2BB%20with%20Binary%20Search%20Trees/#chapter-4-analysis-and-comments","title":"Chapter 4: Analysis and Comments","text":"<ul> <li>Time complexity:</li> </ul> <p>The worst time complexity of the functions is as follows: BuildTree:O(N<sup>2</sup>) The function first iterates through the array a (of size N) to find the root index. This takes O(N) time. Then it calls Build_subtree.The function Build_subtree recursively builds the left and right subtrees of the tree. For each node, it iterates through the entire array a (of size N) to find the left and right child indices. Therefore, the time complexity is O(N<sup>2</sup>). The overall time complexity is O(N<sup>2</sup>).</p> <p>FindNumber:O(NlogN) Function Findmax and Findmin share the time complexity of both O(logN) Function Findbyinorder uses the inorder traversal method to traverse T1;therefore,the time complexity of this function is O(Nthe time complexity of function Compare) Function Compare compares N-T1-&gt;Element with the elements in T2* by taking advantage of the properties of binary search tree,whose worst time complexity is O(logN) Therefore,the total time complexity of the function FindNumber is O(NlogN) Note that when the tree degenerates to a linked list,the time complexity is O(N) correspondingly</p> <p>Preorder:O(N) The function performs a preorder traversal of the tree. For each node, it prints the element and recursively visits its left and right children. Since each node is visited once, the time complexity is O(N).</p> <p>Total time complexity of the programme is O(N<sup>2</sup>)</p> <ul> <li>Space complexity:</li> </ul> <p>The worst space complexity of the functions is as follows: BuildTree:O(N) The recursive calls create a new stack frame for each node. Since the maximum depth of the recursion is the height of the tree (which can be at most N for a skewed tree), the space complexity is O(N).</p> <p>FindNumber:O(NlogN) Function Findmax and Findmin share the space complexity of both O(logN) Function Findbyinorder uses the inorder traversal method to traverse T1;therefore,the space complexity of this function is O(Nthe space complexity of function Compare) unction Compare compares N-T1-&gt;Element with the elements in T2* by taking advantage of the properties of binary search tree,whose worst space complexity is O(logN) Therefore,the total time complexity of the function FindNumber is O(NlogN)</p> <p>Preorder:O(N) Each call of the function prints one element of the tree,since the tree has n nodes,the total time complexity of the function if O(N).</p> <p>Total space complexity of the programme is O(NlogN)</p> <p>Through the project,we could more detailedly understand the advantages of the binary search tree. \u200b    Hope the project can give us a rough but more intuitive understanding of the binary search tree.</p>"},{"location":"sp24/fds/project2/project2_files/documents/Report%20of%20Project%202%20A%2BB%20with%20Binary%20Search%20Trees/#declaration","title":"Declaration","text":"<p>I hereby declare that all the work done in this project titled \"A+B with Binary Search Trees\" is of my independent effort.</p>"},{"location":"sp24/fds/project2/project2_submit/codes/readme/","title":"Readme","text":"<p>The programme is used for finding whether an integer N can be written as A+B whether A is an element in Tree T1 and B is an element in Tree T2. The programme takes advantage of the characteristic of binary search tree(BST) where the left subtree of nodes contains only nodes smaller than the node's element while the right subtree of nodes contains only nodes equal to or bigger than the node's element.</p> <p>\u200b   The whole programme is run under gcc.exe version 13.1.0</p> <p>In windows powershell 1.executing the following command to compile</p> <pre><code>gcc ./main.c -o ./main.exe\n</code></pre> <p>2.executing the following command to run the programme </p> <pre><code>./main.exe\n</code></pre> <p>3.Inputs: a number n1:the number of nodes in T1 an 2D array a[][2] where the first column is the element and the second column is the parent_index used for constructing the relation between the children and the parent a number n2:the number of nodes in T2 an 2D array b[]2 a number N which is to be found </p> <p>Outputs: if N can be written as A+B,where A is in T1 and B is in T2 print true some equations:N = A + B     note that the same equation only appears once then print the preorder traversal of T1 and the preorder traversal of T2</p> <p>if N cannot be written as A+B simply print false then print the preorder traversal of T1 and the preorder traversal of T2</p> <p>the programme requires that all the elements involved in the project is in the range of -20000000000 - 2000000000 both the tree T1 and T2 are not an empty tree</p> <p>4.the output can be seen in result.txt</p> <p>if you want to test the given inputs(written in 1-6.txt),after compiling,executing <pre><code>Get-Content .\\@.txt |./main\n</code></pre> replace @ with 1-6 for the input you want to test </p> <p>e.g. if you want to test the input in 4.txt,then executing <pre><code>Get-Content .\\4.txt |./main\n</code></pre></p>"},{"location":"sp24/fds/project3/project3_files/code/readme/","title":"Readme","text":"<p>The programme is used for checking whether a sequence for a graph is a dijkstra sequence or not,if it is,print yes,while no otherwise.</p> <p>\u200b   The whole programme is run under gcc.exe version 13.1.0</p> <p>In windows powershell 1.executing the following command to compile</p> <pre><code>gcc ./main.c -o ./main.exe\n</code></pre> <p>2.executing the following command to run the programme </p> <pre><code>./main.exe\n</code></pre> <p>3.Inputs: two positive integers,Nv(\u226410<sup>3</sup>)(the vertices are numbered from 1 to N ),Ne(\u226410<sup>5</sup>),followed by Ne lines. Each line describes an edge by giving the two vertices linked by the edge and an positive integer weight(\u2264100). Then an integer K(\u2264100),followed by K lines of sequences,each is a permutation of the Nv vertices.</p> <p>Outputs: for each of the K sequence,print yes if it is a dijkstra sequence,while no otherwise.</p> <p>the programme requires that the graph is undirected and connected </p> <p>if you want to test the given inputs(written in 1-5.txt),after compiling,executing <pre><code>Get-Content .\\@.txt |./main\n</code></pre> replace @ with 1-5 for the input you want to test </p> <p>e.g. if you want to test the input in 4.txt,then executing <pre><code>Get-Content .\\4.txt |./main\n</code></pre></p>"},{"location":"sp24/fds/project3/project3_files/document/Report%20of%20Project%203%20Dijkstra%20Sequence/","title":"Report of Project 3 Dijkstra Sequence","text":"Dijkstra Sequence       \u6768\u4ebf\u916c 3230105697 2024-5-12"},{"location":"sp24/fds/project3/project3_files/document/Report%20of%20Project%203%20Dijkstra%20Sequence/#chapter-1-introduction","title":"Chapter 1 Introduction","text":"<p>\u00a0\u00a0\u00a0\u00a0The shortest path problem is a classic computational problem that deals with finding the shortest paths between vertices in a graph. It has wide applications in areas such as transportation, logistics, communications, and network routing. \u00a0\u00a0\u00a0\u00a0Dijkstra\u2019s algorithm is a popular greedy algorithm for finding the shortest path between nodes in a graph. It was conceived by computer scientist Edsger W. Dijkstra in 1956. The algorithm operates by building a set of nodes that have minimum distance from the source,which is efficient for sparse graphs. \u00a0\u00a0\u00a0\u00a0Our job is find whether a given sequence is a dijkstra sequence,namely,whether the sequence covers all the vertices of a graph and is a shortest path from the source.If is does,we call it a dijkstra sequence. \u00a0\u00a0\u00a0\u00a0To do this,we first input a graph by inputting the number of vertices and edges and the vertices connected by the edges,as well as the weight of the edges.Then we input several sequences,and we output yes if the given sequence is a dijkstra sequence,while output no otherwise.</p>"},{"location":"sp24/fds/project3/project3_files/document/Report%20of%20Project%203%20Dijkstra%20Sequence/#chapter-2-algorithm-specification","title":"Chapter 2 Algorithm Specification","text":"<ul> <li>Dijkstra Algorithm Initialization: The function starts by initializing an array weight that will store the shortest distance from the already visited vertices to the remaining vertices in the graph. First Vertex Processing: It then processes the first vertex in the sequence, updating the weight array for all vertices adjacent to this first vertex. Sequence Processing: The function enters a loop that iterates over the rest of the vertices in the sequence. For each vertex, it checks if the shortest distance to the already visited vertices is equal to the shortest distance to the next vertex in the sequence. If not, it returns false, indicating that the sequence is not a valid Dijkstra sequence. Vertex Inclusion: If the shortest distances match, the function includes the vertex in the set of already visited vertices and updates the weight array accordingly for all vertices adjacent to this newly included vertex. Result: If the function successfully processes all vertices in the sequence without returning false, it returns true at the end, indicating that the sequence is a valid Dijkstra sequence.</li> </ul> <p>The following is a diagram analysis of the algorithm: Initialization: </p> <p>Add the 'min' to Known and update the edges and weight[]: </p> <p>Repeat until an the vertices are Known.</p> <p>The following is an example used for explaining how to update the edges: Initialization: </p> <p>Add '1' to Known and update the edges: </p> <p>Add '3' to Known and update the edges: </p> <p>Add '4' to Known and update the edges: </p> <p>Add '2' to Known and end the algorithm.</p> <p>The following is the pseudocode of function IsDijkSeq: <pre><code>FUNCTION IsDijkSeq(G, Seq)\n    DECLARE i, j\n    DECLARE weight ARRAY OF SIZE G-&gt;Nv+1\n    weight[0] = -1\n    FOR i FROM 1 TO G-&gt;Nv+1 DO\n        weight[i] = MaxWeight\n    END FOR\n    DECLARE TempEdge = G-&gt;G[Seq[0]].FirstEdge\n    weight[Seq[0]] = MaxWeight+1\n    WHILE TempEdge IS NOT NULL DO\n        weight[TempEdge-&gt;AdjV] = TempEdge-&gt;Weight\n        TempEdge = TempEdge-&gt;Next\n    END WHILE\n    FOR i FROM 1 TO G-&gt;Nv-1 DO\n        DECLARE temp = 0\n        TempEdge = G-&gt;G[Seq[0]].FirstEdge\n        WHILE TempEdge IS NOT NULL DO\n            IF TempEdge-&gt;AdjV == Seq[i] THEN\n                temp = TempEdge-&gt;Weight\n                BREAK\n            END IF\n            TempEdge = TempEdge-&gt;Next\n        END WHILE\n        DECLARE min = MaxWeight\n        FOR j FROM 1 TO G-&gt;Nv+1 DO\n            IF weight[j] &lt; min THEN\n                min = weight[j]\n            END IF\n        END FOR\n        IF temp != min THEN\n            RETURN false\n        ELSE\n            weight[Seq[i]] = MaxWeight+1\n            DECLARE TempEdge2 = G-&gt;G[Seq[i]].FirstEdge\n            WHILE TempEdge2 IS NOT NULL DO\n                DECLARE TempEdge1 = G-&gt;G[Seq[0]].FirstEdge\n                IF weight[TempEdge2-&gt;AdjV] == MaxWeight+1 THEN\n                    TempEdge2 = TempEdge2-&gt;Next\n                END IF\n                IF TempEdge2 IS NULL THEN\n                    BREAK\n                END IF\n                DECLARE cnt = 0\n                WHILE TempEdge1 IS NOT NULL DO\n                    IF TempEdge1-&gt;AdjV == TempEdge2-&gt;AdjV THEN\n                        cnt = 1\n                        BREAK\n                    END IF\n                    TempEdge1 = TempEdge1-&gt;Next\n                END WHILE\n                IF cnt == 1 THEN\n                    IF temp + TempEdge2-&gt;Weight &lt; TempEdge1-&gt;Weight THEN\n                        TempEdge1-&gt;Weight = temp + TempEdge2-&gt;Weight&lt;br&gt;\n                    END IF\n                ELSE\n                    DECLARE NewEdge\n                    NewEdge-&gt;AdjV = TempEdge2-&gt;AdjV\n                    NewEdge-&gt;Weight = temp + TempEdge2-&gt;Weight\n                    NewEdge-&gt;Next = G-&gt;G[Seq[0]].FirstEdge\n                    G-&gt;G[Seq[0]].FirstEdge = NewEdge\n                END IF\n                TempEdge2 = TempEdge2-&gt;Next\n            END WHILE\n            DECLARE TempEdge1_ = G-&gt;G[Seq[0]].FirstEdge\n            WHILE TempEdge1_ IS NOT NULL DO\n                IF weight[TempEdge1_-&gt;AdjV] &lt;= MaxWeight THEN\n                    weight[TempEdge1_-&gt;AdjV] = TempEdge1_-&gt;Weight\n                END IF\n                TempEdge1_ = TempEdge1_-&gt;Next\n            END WHILE\n        END IF\n    END FOR\n    RETURN true\nEND FUNCTION\n</code></pre></p> <p>Data structure analysis: - Graph(Weighted undirected connected graph)   The data structure:Graph shares the following properties: 1.Vertices and Edges: A graph consists of a set of vertices (or nodes) and a set of edges. Each edge connects a pair of vertices. In a weighted graph, each edge has an associated weight, which could represent quantities like distance, cost, etc. 2.Undirected: In an undirected graph, an edge from vertex A to vertex B is identical to an edge from vertex B to vertex A. That is, the graph is bidirectional. 3.Connected: A connected graph is a graph where there is a path from any point to any other point in the graph. This means all vertices are reachable. 4.No Loops or Multiple Edges: In a simple graph, there are no loops (edges connected at both ends to the same vertex) and no multiple edges (more than one edge connecting the same pair of vertices). By using a Graph data structure, we can indeed access the vertices through the edges. This allows us to model many real-world problems, such as routing, scheduling, and social networking, among others.</p>"},{"location":"sp24/fds/project3/project3_files/document/Report%20of%20Project%203%20Dijkstra%20Sequence/#chapter-3-testing-results","title":"Chapter 3 Testing Results","text":"input output corresponding purpose 1 5 7 1 2 2 1 5 1 2 3 1 2 4 1 2 5 2 3 5 1 3 4 1 4 5 1 3 4 2 5 3 1 2 4 2 3 4 5 1 3 2 1 5 4 Yes Yes Yes No simple sample 1(given by pta) 2 6 8 1 2 3 1 3 2 2 4 5 2 5 2 3 4 1 3 6 4 4 5 2 5 6 3 3 1 2 5 4 6 3 1 3 4 2 5 6 1 3 6 4 2 5 No Yes No simple sample 2(gengerated by myself) 3 10 15 1 2 1 1 3 2 2 4 1 2 5 2 3 6 1 3 7 2 4 8 1 4 9 2 5 10 1 6 8 2 7 9 1 8 10 2 9 10 1 5 6 2 7 8 1 3 1 2 4 8 10 5 3 6 7 9  1 3 6 8 4 2 5 10 7 9 1 3 7 9 10 5 2 4 8 6 No             No             No a bit larger sample 4 3 3 1 2 1 2 3 1 1 3 2 2 1 2 3 1 3 2 Yes           No small sample  5 see in 5.txt No           No           No           No           No very large samplemax Nv,max Ne,max Weight"},{"location":"sp24/fds/project3/project3_files/document/Report%20of%20Project%203%20Dijkstra%20Sequence/#chapter-4-analysis-and-comments","title":"Chapter 4: Analysis and Comments","text":"<p>Let V and E represents the number of vertices and edges in the graph respectively.   - Time complexity:</p> <p>The time complexity of this function mainly depends on nested loops. The outer loop traverses each vertex in the graph, so its complexity is O(V), where V is the number of vertices. The inner loop1,in the worst case,traverses the vertices and records the weight between the Known graph and the other vertices,so it's time complexity is O(V).The inner loop2, in the worst case, may need to traverse all the edges in the graph, so its complexity is O(E), where E is the number of edges. Therefore, the overall time complexity of the function is O(V<sup>2</sup>+V*E).  - Space complexity:</p> <p>The space complexity of this function depends on the spatial areas applied for storing the information of the vertices and the edges.Therefore,it is obvious that the space complexity of the algorithm is O(V+E).  As for why Dijkstra\u2019s algorithm is more effective on sparse graphs, the main reason is that the time complexity of Dijkstra\u2019s algorithm is related to the number of edges in the graph. In a sparse graph, the number of edges is much less than the square of the number of vertices, so the running time of Dijkstra\u2019s algorithm on a sparse graph will be shorter than on a dense graph. In addition, Dijkstra\u2019s algorithm is a greedy algorithm, which always chooses the shortest edge at each step, which allows it to find the shortest path more quickly on a sparse graph. </p>"},{"location":"sp24/fds/project3/project3_files/document/Report%20of%20Project%203%20Dijkstra%20Sequence/#declaration","title":"Declaration","text":"<p>I hereby declare that all the work done in this project titled \"Dijkstra Sequence\" is of my independent effort.</p>"},{"location":"sp24/fds/project3/project3_submit/code/readme/","title":"Readme","text":"<p>The programme is used for checking whether a sequence for a graph is a dijkstra sequence or not,if it is,print yes,while no otherwise.</p> <p>\u200b   The whole programme is run under gcc.exe version 13.1.0</p> <p>In windows powershell 1.executing the following command to compile</p> <pre><code>gcc ./main.c -o ./main.exe\n</code></pre> <p>2.executing the following command to run the programme </p> <pre><code>./main.exe\n</code></pre> <p>3.Inputs: two positive integers,Nv(\u226410<sup>3</sup>)(the vertices are numbered from 1 to N ),Ne(\u226410<sup>5</sup>),followed by Ne lines. Each line describes an edge by giving the two vertices linked by the edge and an positive integer weight(\u2264100). Then an integer K(\u2264100),followed by K lines of sequences,each is a permutation of the Nv vertices.</p> <p>Outputs: for each of the K sequence,print yes if it is a dijkstra sequence,while no otherwise.</p> <p>the programme requires that the graph is undirected and connected </p> <p>if you want to test the given inputs(written in 1-5.txt),after compiling,executing <pre><code>Get-Content .\\@.txt |./main\n</code></pre> replace @ with 1-5 for the input you want to test </p> <p>e.g. if you want to test the input in 4.txt,then executing <pre><code>Get-Content .\\4.txt |./main\n</code></pre></p>"},{"location":"sp24/fitness/","title":"\u8eab\u4f53\u7d20\u8d28\u8bfe  0.0 \u5b66\u5206","text":""},{"location":"sp24/fitness/#_1","title":"\u8bfe\u7a0b\u6559\u5e08","text":"<p>\u7a0b\u8def\u660e</p>"},{"location":"sp24/fitness/#_2","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8d85\u7ea7\u6c34<sub>~</sub>\uff0c\u4e0b\u8bfe\u65f6\u4f1a\u62a5\u6570\u4f46\u53d1\u73b0\u5c11\u4eba\u4e5f\u4e0d\u4f1a\u7b7e\u9000\uff0c\u7b2c\u5341\u8282\u7b49\u7b2c\u4e5d\u8282\u4e0b\u8bfe10\u5206\u949f\uff0c\u51c6\u5907\u6d3b\u52a810\u5206\u949f\uff0c\u62c9\u4f38\uff0c\u8dd1\u8df3\u953b\u70bc\u7b4915-20\u5206\u949f\uff0c\u6574\u7406\u6d3b\u52a8-&gt;\u4e0b\u8bfe  </p>"},{"location":"sp24/linear_algebra2/","title":"\u7ebf\u6027\u4ee3\u6570II(H)  3.0 \u5b66\u5206","text":""},{"location":"sp24/linear_algebra2/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5434\u5fd7\u7965</p>"},{"location":"sp24/linear_algebra2/#_2","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"sp24/linear_algebra2/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u4e0e\u7ebf\u4ee3I\u540c\u7406\uff0c\u6700\u91cd\u8981\u7684\u4e00\u70b9\u5728\u4e8e\u586b\u6ee1\u8bd5\u5377 \u7ebf\u4ee3II\u5168\u90e8\u5b66\u4e60\u5b8c\u6210\u540e\uff0c\u5728\u671f\u672b\u8003\u524d\u5e94\u5f53\u7406\u89e3\u7ebf\u4ee3\u5b66\u4e86\u4e24\u4e2a\u5b66\u671f\u7a76\u7adf\u8981\u5b8c\u6210\u4e00\u4ef6\u4ec0\u4e48\u4e8b\u60c5 \u7ebf\u4ee3\u7a76\u7adf\u5b66\u4e86\u70b9\u4ec0\u4e48? \u56de\u5fc6\u5377\u53c2\u89c1TuringCourses</p>"},{"location":"sp24/math_analysis2/","title":"\u6570\u5b66\u5206\u6790(\u7532)II(H)  5.5\u5b66\u5206","text":""},{"location":"sp24/math_analysis2/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u59dc\u6d77\u76ca</p>"},{"location":"sp24/math_analysis2/#_2","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"sp24/math_analysis2/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u4e0e\u6570\u5206I\u4e0d\u540c\u7684\u662f\uff0c\u6570\u5206II\u7edd\u5927\u90e8\u5206\u4fa7\u91cd\u4e8e\u8ba1\u7b97\uff0c\u638c\u63e1\u8bfe\u540e\u4e60\u9898\u4e0e\u4e0a\u8bfe\u7684\u4f8b\u5b50\u5c31\u80fd\u83b7\u5f97\u7edd\u5927\u90e8\u5206\u7684\u5206\u6570\uff0c\u96be\u9898\u6765\u6e90\u4e8e\u7ea7\u6570\u4e0e\u591a\u5143\u51fd\u6570\u7684\u5fae\u5206\u5b66\u7684\u8bc1\u660e\uff0c\u8fd9\u4e00\u90e8\u5206\u6570\u5206I\u7684\u7ecf\u9a8c\u5b8c\u5168\u9002\u7528\uff0c\u552f\u4e00\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728\u671f\u672b\u5468\u5b89\u6392\u597d\u590d\u4e60\u7684\u65f6\u95f4\uff0c\u81f3\u5c11\u786e\u4fdd5\u5929\u7684\u6570\u5206\u590d\u4e60\u65f6\u95f4</p>"},{"location":"sp24/physics1/","title":"\u666e\u901a\u7269\u7406\u5b66I(H)  4.0 \u5b66\u5206","text":""},{"location":"sp24/physics1/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5218\u948a</p>"},{"location":"sp24/physics1/#_2","title":"\u8ba4\u5b9a","text":"<p>\u6570\u7406\u57fa\u7840\u8bfe</p>"},{"location":"sp24/physics1/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5218\u948a\u3001\u8def\u6b23\u3001GENTARO WATANABE\u3001Go Ogiya\u4e0eMICHAEL SMIDMAN\u90fd\u5c5e\u4e8e\u5916\u6559\u73ed\uff0c\u91c7\u7528\u76f8\u540c\u7684ppt\uff0c\u4f5c\u4e1a\uff0cquiz\uff0c\u671f\u4e2d\u671f\u672b\u8003\u8bd5 \u5916\u6559\u73ed\u90fd\u6709\u4e00\u4e2a\u6700\u91cd\u8981\u7684\u5171\u540c\u7279\u70b9\uff1a \u671f\u672b\u8003\u8bd5\u4e2d\u671f\u4e2d\u524d\u4e0e\u671f\u4e2d\u540e\u7684\u6bd4\u4f8b\u4e3a1:2 \u671f\u672b\u8003\u8bd510\u4e2a\u9009\u62e9+\u56db\u4e2a\u5927\u9898\uff0c\u5927\u9898\u5206\u522b\u4e3a\u884c\u661f\u8fd0\u52a8\u4e0e\u91cd\u529b\u52bf\u80fd\u3001\u6d1b\u4f26\u5179\u53d8\u6362\u3001\u76f8\u5bf9\u8bba\u4e0b\u7684\u80fd\u91cf\u5b88\u6052\u3001\u70ed\u673a \u671f\u4e2d\u6709\u5b66\u957f\u7684\u56de\u5fc6\u5377\uff0c\u627e\u4e0d\u5230\u4e86\uff0c\u5927\u6982\u505a\u4e86\u4e5f\u662f\u8d77\u4e2a\u5b89\u6170\u4f5c\u7528\uff0c\u6b64\u5904\u4e0d\u8868   \u671f\u672b\u56de\u5fc6\u5377 \u52a1\u5fc5\u5403\u900fppt\u5c24\u5176\u662f\u671f\u672b\u590d\u4e60ppt quiz\u8981\u5b8c\u6210\uff0c\u4f46\u6b63\u786e\u7387\u4e0d\u5360\u5206\u6570\uff0c\u4f5c\u4e1a\u7684\u6b63\u786e\u7387\u5206\u6570\u5360\u6bd4\u8f83\u5c11\uff0c\u53ea\u8981\u63d0\u4ea4\u5c31\u80fd\u83b7\u5f97\u5927\u90e8\u5206\u5206\u6570 \u671f\u4e2d\u8003\u8bd5\u8d77\u8c03\u5206\u4e0e\u53c2\u8003\u4f5c\u7528\uff0c\u5982\u679c\u671f\u4e2d\u597d\u671f\u672b\u4e0d\u597d\u7684\u8bdd\u4f1a\u88ab\u635e\u4e00\u4e0b\uff08\u4f46\u6548\u679c\u6709\u9650\uff09 \u5927\u7269\u5bf9\u666e\u7269\u6ca1\u6709\u5e2e\u52a9  </p>"},{"location":"sp24/physics1_lab/","title":"\u666e\u901a\u7269\u7406\u5b66\u5b9e\u9a8cI  1.5 \u5b66\u5206","text":""},{"location":"sp24/physics1_lab/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>/</p>"},{"location":"sp24/physics1_lab/#_2","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u9009\u8bfe\u5efa\u8bae\uff1a\u7535\u5b66&gt;\u529b\u5b66&gt;&gt;\u70ed\u5b66&gt;&gt;&gt;\u5149\u5b66 \u76f8\u5f53\u6298\u78e8\u7684\u8bfe\u7a0b\uff0c1.5\u5b66\u5206\u5efa\u8bae\u5c3d\u5168\u529b\u6c34\uff0c\u5b9e\u9a8c\u62a5\u544a\u968f\u4fbf\u6284\uff0c\u4e0d\u4f1a\u7684\u5c31\u4e71\u5199 \u63a8\u8350\u4f7f\u7528\u8f6f\u4ef6Origin\uff0c\u53ef\u514d\u8d39\u4f7f\u7528\u4e0e\u7eed\u671f Origin\u5b98\u7f51 \u671f\u672b\u8003\u524d\u627e\u4e00\u595798\u5386\u5e74\u9898\u5373\u53ef\uff0c\u53ea\u8003\u9644\u9875\u968f\u673a\u8bef\u5dee\u4e0e\u4e0d\u786e\u5b9a\u5ea6\u76f8\u5173\u3001\u793a\u6ce2\u5668\u3001\u5206\u5149\u8ba1\u548c\u5b9e\u9a8c\u8bbe\u8ba1\uff08sp24\u4e3a\u6d4b\u91cf\u96e8\u6ef4\u901f\u5ea6\uff09\u6216\u611f\u60f3\uff08\uff1f\uff09</p>"},{"location":"sp24/piano/","title":"\u6253\u5f00\u827a\u672f\u4e4b\u95e8\u2014\u2014\u94a2\u7434  2.0\u5b66\u5206","text":""},{"location":"sp24/piano/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u9648\u5217</p>"},{"location":"sp24/piano/#_2","title":"\u8ba4\u5b9a","text":"<p>\u901a\u8bc6\u57fa\u7840\u8bfe\uff1a\u535a\u96c5\u6280\u827a \u7f8e\u80b2\u7c7b</p>"},{"location":"sp24/piano/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u795e\u4e2d\u795e\u8bfe\u7a0b\uff0c\u671f\u4e2d\u97f3\u9636+\u4e2a\u4eba\u5c55\u793a\uff0c\u671f\u672b\u542c\u6b4c/\u770b\u8c31\u8bc6+\u5c0f\u7ec4\u5c55\u793a+\u4e2a\u4eba\u5c55\u793a\uff0c\u4f1a\u6309\u7167\u57fa\u7840\u533a\u5206\uff0c\u4e0a\u8bfe\u4ece\u96f6\u5f00\u59cb\uff0c\u9009\u4e0a\u5c31\u662f\ud83d\udc4d  </p> <p>\u770b\u8c31\u8bc6\u66f2</p>"},{"location":"sp24/situation_policy1/","title":"\u5f62\u52bf\u4e0e\u653f\u7b56I  1.0 \u5b66\u5206","text":""},{"location":"sp24/situation_policy1/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u9879\u6dd1\u82b3\uff08\u79cb\u51ac\uff09 \u5434\u7ef4\u4e1c\uff08\u6625\u590f\uff09</p>"},{"location":"sp24/situation_policy1/#_2","title":"\u8ba4\u5b9a","text":"<p>\u601d\u653f\u519b\u4f53\u8bfe</p>"},{"location":"sp24/situation_policy1/#_3","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>1\u5b66\u5206\uff0c\u5efa\u8bae\u7eaf\u6446\uff0c\u671f\u672b\u8003\u524d\u590d\u4e60\u51e0\u4e2a\u5c0f\u65f6\uff0c\u4f5c\u4e1a\u968f\u4fbf\u505a 3\u5206\u9760\u52aa\u529b\uff0c7\u5206\u9760\u6253\u62fc\uff0c\u8fd8\u670990\u5206\u770b\u8001\u5e08 wwd\u8001\u5e08\u7684\u7ed9\u5206\u76f8\u5f53\u4e0d\u9519</p>"},{"location":"sp24/situation_policy1/#_4","title":"\u590d\u4e60\u63d0\u7eb2","text":"<p>\u671f\u672b\u590d\u4e60</p>"},{"location":"sp24/swimming/","title":"\u6e38\u6cf3(\u521d\u7ea7)  1.0 \u5b66\u5206","text":""},{"location":"sp24/swimming/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u59da\u5e73</p>"},{"location":"sp24/swimming/#_2","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u6700\u6c34\u6c34\u6c34\u6c34\u6c34\u6c34\u6c34\u7684\u4f53\u80b2\uff0c\u5982\u679c\u60f3\u8981\u8f7b\u677e\u6c34\u8fc7\uff0c\u6e38\u6cf3\u51c6\u6ca1\u9519\uff08\u65f1\u9e2d\u5b50\u7a0d\u5fae\u6709\u70b9\u56f0\u96be\u4f46\u7af9\u56ed\u5fc5\u4fee~\uff09</p>"},{"location":"sp24/sys1/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edfI  5.5 \u5b66\u5206","text":""},{"location":"sp24/sys1/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u51af\u535a</p>"},{"location":"sp24/sys1/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"sp24/sys1/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u4f5c\u4e1a 10%</li> <li>\u5b9e\u9a8c 60%  </li> <li>Lab0 \u73af\u5883\u914d\u7f6e 6%  </li> <li>Lab1 \u591a\u8def\u9009\u62e9\u5668+\u4e03\u6bb5\u8bd1\u7801\u7ba1 10%  </li> <li>Lab2 \u52a0\u51cf\u6cd5\u5668 6%  </li> <li>Lab3 \u65f6\u5e8f\u7535\u8def\uff1a\u6709\u9650\u72b6\u6001\u673a\u3001\u8ba1\u6570\u5668\u3001\u4e58\u6cd5\u5668 8%  </li> <li>Lab4-1 \u5377\u79ef\u6838 8%  </li> <li>Lab4-2(Bonus)\u4e32\u53e3  </li> <li>Lab5 \u6c47\u7f16\u7a0b\u5e8f\u8bbe\u8ba1\u4e0e\u8c03\u8bd5 10%  </li> <li>Project \u5355\u5468\u671fCPU 12%  </li> <li>Project(Bonus) \u591a\u5468\u671fCPU   Bonus total 10% -------total &lt;= 70---------</li> <li>\u671f\u672b 30%   \u5355\u9009\uff1a15 * 2% = 30%   Q&amp;A\uff1a70%  </li> </ul>"},{"location":"sp24/sys1/#_4","title":"\u8bfe\u7a0b\u4ecb\u7ecd","text":"<p>\u8ba1\u7b97\u673a\u7cfb\u7edfI\u3001II\u3001III\u662f\u8ba1\u9662\u8bfe\u6539\u7684\u4ea7\u7269\uff0c\u4e09\u95e85.5\u5b66\u5206\u7684\u8bfe\u7a0b\u6709\u6548\u5730\u5c06\u4f20\u7edf\u8ba1\u7b97\u673a\u4e13\u4e1a\u5272\u88c2\u7684\u8ba1\u903b\u3001\u8ba1\u7ec4\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u4f53\u7cfb\u7ed3\u6784\u56db\u95e8\u8bfe\u7a0b\u8d2f\u901a\u8d77\u6765\uff0c\u96be\u5ea6\u4e0a\u7565\u6709\u524a\u51cf\uff0c\u5b9e\u9a8c\u4e0a\u66f4\u4e3a\u8fde\u8d2f\uff0c\u5305\u62ec\u4e0d\u9700\u8981\u91cd\u65b0\u914d\u7f6e\u73af\u5883\uff0c\u76f4\u63a5\u4f7f\u7528\u4e4b\u524d\u5b8c\u6210\u7684\u5b9e\u9a8c\uff0c\u574f\u5904\u5728\u4e8e\u524d\u7f6e\u5b9e\u9a8c\u5982\u679c\u6ca1\u6709\u5b8c\u6210\u59a5\u5f53\u4f1a\u76f4\u63a5\u5f71\u54cd\u540e\u7eed\u5b9e\u9a8c\u7684\u8fdb\u884c\uff0c\u5e76\u4e0d\u65ad\u7275\u8fdesys2\u4e0esys3\uff0c\u5982\u679c\u771f\u6709\u8fd9\u79cd\u60c5\u51b5\u7684\u51fa\u73b0\uff0c\u8bf7\u5229\u7528\u5bd2\u6691\u5047\u4e0e\u521a\u5f00\u5b66\u8f83\u4e3a\u7a7a\u95f2\u7684\u65f6\u95f4\u5b8c\u5584\u524d\u4e00\u5b66\u671f\u7684\u5b9e\u9a8c\u5185\u5bb9\uff0c\u5f53\u7136\u66f4\u5efa\u8bae\u4e00\u6b21\u6027\u5b8c\u6210 sys1\u5305\u62ec\u8ba1\u903b\u7684\u5168\u90e8\u5185\u5bb9\u4e0e\u8ba1\u7ec4\u7684\u90e8\u5206\u5185\u5bb9\uff1a\u6570\u5b57\u7f16\u7801\u3001\u903b\u8f91\u95e8\u3001\u7ec4\u5408\u903b\u8f91\u3001\u65f6\u5e8f\u903b\u8f91\u3001RISCV\u6c47\u7f16\u3001RISCV\u6307\u4ee4\u96c6\u67b6\u6784\u3001\u5355\u5468\u671f\u4e0e\u591a\u5468\u671fCPU  </p>"},{"location":"sp24/sys1/#_5","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u7531\u4e8e\u8fd9\u95e8\u8bfe\u5b9e\u9a8c\u7684\u5de8\u5927\u5360\u6bd4\uff0c\u52a0\u4e0a\u524d\u534a\u5b66\u671f\u8ba1\u903b\u90e8\u5206\u96be\u5ea6\u4e0d\u9ad8\uff0c\u8fd9\u95e8\u8bfe\u7a0b\u5728\u6625\u5b66\u671f\u4f1a\u7ed9\u4eba\u4ee5\u4e00\u4e2a\u9519\u89c9\uff0c\u7406\u8bba\u8bfe\u65e0\u7528\uff0c\u4e8b\u5b9e\u4e5f\u786e\u5b9e\u5982\u6b64\uff0c\u4f46\u4ec5\u9650\u4e8e\u6625\u5b66\u671f\uff0c\u4ece\u590f\u5b66\u671f\u5f00\u59cb\u5305\u62ecsys2\u4e0esys3\uff0c\u7406\u8bba\u8bfe\u7684\u91cd\u8981\u6027\u53ea\u4f1a\u8d8a\u6765\u8d8a\u91cd\u8981\uff0c\u4f46fb\u8001\u5e08\u7684\u8bb2\u8bfe\u7740\u5b9e\u4ee4\u4eba\u4e00\u8a00\u96be\u5c3d\uff0c\u5373\u4f7f\u52a0\u5165\u4e86\u4e0d\u5b9a\u671f\u7684\u70b9\u540d\u4e5f\u4e0d\u80fd\u633d\u655110%\u7684\u5230\u8bfe\u7387\uff0c\u4e0d\u8fc7\u4f5c\u4e3a\u4e00\u95e85.5\u5b66\u5206\u7684\u5927\u8bfe\uff0c\u540c\u65f6\u4e5f\u662fsys2\u4e0esys3\u7684\u57fa\u7840\uff0c\u8fd9\u95e8\u8bfe\u7a0b\u7684\u5b66\u4e60\u5c24\u5176\u662f\u7406\u8bba\u4e5f\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u56e0\u6b64\u7ed9\u51fa\u4ee5\u4e0b\u5efa\u8bae\uff1a  </p> <ul> <li>\u590f\u5b66\u671f\u5728\u667a\u4e91\u8bfe\u5802\u542c\u5362\u7acb\u8001\u5e08\u8bb2\u6388\u7684\u90e8\u5206</li> <li>\u671f\u672b\u590d\u4e60\u53ef\u53c2\u7167sys2\u7b2c\u4e00\u3001\u4e8c\u8282\u8bfe\u7684\u5185\u5bb9</li> <li>\u6210\u7ee9\u4e0a\u9650\u9760\u671f\u672b\uff0c\u7406\u8bba\u90e8\u5206\u671f\u672b\u5168\u90fd\u4f1a\u8003\uff0c\u4e0d\u4ec5\u9650\u4e8e\u5fc5\u505a\u5b9e\u9a8c\u90e8\u5206\uff0c\u56e0\u6b64\u591a\u5468\u671fCPU\u7684\u7406\u8bba\u4e5f\u8981\u6c42\u638c\u63e1</li> <li>\u671f\u672b\u4e94\u4e2a\u5927\u9898\uff0c\u5305\u62ec\u6570\u5b57\u903b\u8f91\u3001\u7ec4\u5408\u7535\u8def\u3001\u65f6\u5e8f\u7535\u8def\u3001\u5355\u5468\u671fCPUcontroller\u8bbe\u8ba1\u4e0e\u591a\u5468\u671fCPU\u7684\u76f8\u5173\u8ba1\u7b97</li> <li>\u8fd9\u95e8\u8bfe\u7a0b\u7684\u52a9\u6559\u975e\u5e38\u91cd\u8981\uff0c\u8bf7\u59a5\u5584\u5229\u7528issue\u3001\u9489\u9489\u3001\u7ebf\u4e0bP2P\u7684\u65b9\u5f0f\u89e3\u51b3\u4f60\u5728\u5b9e\u9a8c\u4e2d\u9047\u5230\u7684\u5404\u79cd\u5947\u5999\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u95ee\u6211  </li> </ul> <p>\u672c\u8bfe\u7a0b\u5b9e\u9a8c\u6309\u96be\u5ea6\u6392\u5e8f\u4f9d\u6b21\u4e3a\uff1aProject &gt; Lab4 &gt; Lab0 &gt; \u5176\u4ed6 Lab0\u914d\u7f6e\u73af\u5883\u5176\u5b9e\u662f\u4e00\u4e2a\u5f88\u590d\u6742\u7684\u6d3b\uff0c\u6709\u95ee\u9898\u52e4\u95eegpt\u4e0e\u52a9\u6559 Lab4\u5b9e\u9a8c\u7684\u96be\u5ea6\u4f1a\u9661\u7136\u4e0a\u5347\uff0c\u5728verilog\u5c1a\u4e0d\u719f\u7ec3\u7684\u60c5\u51b5\u4e0b\u60f3\u8981\u5feb\u901f\u7406\u89e3valid-ready\u534f\u8bae\u4e0e\u5377\u79ef\u64cd\u4f5c\u5e76\u5b9e\u73b0\u662f\u76f8\u5f53\u56f0\u96be\u7684\uff0c\u6ce8\u610f\u5408\u7406\u5b89\u6392\u65f6\u95f4\uff08\u672c\u4eba\u56e0\u9a8c\u6536\u524d\u71ac\u591c\u505alab4\u9519\u8fc7\u4e86\u65e9\u516b\u7684\u7b7e\u5230\uff09\uff0c\u5fc5\u8981\u65f6\u52a9\u6559\u4f1a\u5ef6\u8fdflab\u7684\u9a8c\u6536ddl\uff0c\u5373\u4f7fdelay\u4e86\u4e5f\u4e0d\u5fc5\u60a3\u5f97\u60a3\u5931 Lab4-2\u662f\u4e00\u4e2a\u6bd4\u8f83\u7b80\u5355\u7684bonus\uff0c\u5efa\u8bae\u5b8c\u6210 Project\u7684\u5355\u5468\u671fCPU\u662f\u4e00\u4e2a\u4ece0\u52301\u7684\u8fc7\u7a0b\uff0c\u8981\u5728\u8bfe\u4e1a\u538b\u529b\u6781\u5176\u7e41\u91cd\u7684\u671f\u672b\u57287-10\u5929(\u53ef\u80fd\u66f4\u77ed)\u7684\u65f6\u95f4\u5185\u72ec\u7acb\u5b8c\u6210\u6574\u4e2aCPU\u7684\u8bbe\u8ba1\u662f\u76f8\u5f53\u56f0\u96be\u7684\uff0c\u56e0\u6b64\u5728\u4e0b\u4e00\u8282\u7ed9\u51fa\u4e86\u4e00\u4e9b\u6307\u5bfc  </p> <p>Homework</p>"},{"location":"sp24/sys1/CPU/","title":"\u5355\u5468\u671fCPU\u8bbe\u8ba1\u6307\u5bfc","text":"<p>\u4e0d\u8981\u6284\u88ad \u4e0d\u8981\u6284\u88ad \u4e0d\u8981\u6284\u88ad</p> <p>\u4ee5\u4e0b\u4ec5\u4e3a\u8f85\u52a9\u6750\u6599\uff0c\u4ec5\u4f9b\u53c2\u8003</p> <p>\u6307\u4ee4\u96c6\u624b\u518c \u5355\u5468\u671fCPU\u8bbe\u8ba1\u6700\u5927\u7684\u56f0\u96be\u5728\u4e8e\u7406\u8bba\u7684\u532e\u4e4f\u4e0e\u4f8b\u5b50\u7684\u7f3a\u5c11\uff0c\u56e0\u6b64\u4ee5\u4e0b\u4f1a\u8865\u5145\u4e00\u4e9b\u5355\u5468\u671fCPU\u8bbe\u8ba1\u76f8\u5173\u7684\u7406\u8bba\u5e76\u4ee5R-Type\u4e3a\u4f8b\u7ed9\u51fa\u5355\u5468\u671fCPU\u8bbe\u8ba1\u7684\u65b9\u5f0f  </p>"},{"location":"sp24/sys1/CPU/#cpu_1","title":"\u5355\u5468\u671fCPU\u76f8\u5173\u7406\u8bba","text":""},{"location":"sp24/sys1/CPU/#riscv","title":"RISCV\u6307\u4ee4\u96c6\u67b6\u6784","text":"<p>sys1-proj\u8981\u5b9e\u73b0\u7684\u6307\u4ee4\u7c7b\u578b\u6709R/I/S/B/U/J Type\u5171\u516d\u7c7b\uff0c\u6bcf\u6761\u6307\u4ee4\u90fd\u753132\u4f4d\u7684inst\u786e\u5b9a\uff0c\u8fd932\u4f4d\u5b58\u50a8\u4e86\u6307\u4ee4\u7684\u7c7b\u578b\uff0c\u6570\u636e\u4fe1\u606f\uff0c\u9700\u8981\u8bfb\u6216\u5199\u7684\u5bc4\u5b58\u5668\u7f16\u53f7\uff0c\u4f8b\u5982 <pre><code>0x0000000000000010 (0x00628e33) add     t3, t0, t1\n# \u5176\u4e2dpc\u4e3a0x0000000000000010 inst\u4e3a0x00628e33\n</code></pre> pc\u8868\u793a\u5f53\u524d\u6267\u884c\u7684\u4f4d\u7f6e\uff0c\u6bcf\u6761\u6307\u4ee4\u5360\u7528\u56db\u4f4d\u5b58\u50a8\u7a7a\u95f4\uff0c\u9664\u9047\u5230B Type(\u5206\u652f\u8df3\u8f6c)\u6216J Type(\u8df3\u8f6c)\u6307\u4ee4\uff0c\u5176\u4f59\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u5b8c\u540e\u5207\u6362\u4e0b\u4e00\u6761\u6307\u4ee4pc\u9700\u8981+4 inst\u7684\u5185\u5bb9\u662f\u901a\u8fc7\u53d6\u6307(Instuction Fetch)\u5f97\u5230\u7684\uff0cInstruction memory\u4e2d\u4ee5pc\u503c\u4e3a\u7d22\u5f15\u5b58\u50a8\u4e86\u6240\u6709\u6211\u4eec\u9700\u8981\u7684\u6307\u4ee4\uff0c\u5728\u53d6\u6307\u9636\u6bb5\uff0c\u901a\u8fc7\u5411imem_ift\u8f93\u5165pc\uff0cinstruction memory\u4f1a\u8fd4\u56de\u5bf9\u5e94\u7684inst\uff0c\u8fd9\u4e00\u8fc7\u7a0b\u662f\u901a\u8fc7valid-ready\u534f\u8bae\u8fbe\u6210\u7684(\u4e0d\u8fc7\u5728sys1\u4e2d\uff0c\u6211\u4eec\u53ea\u9700\u77e5\u9053\u5411imem\u8f93\u5165pc\uff0c\u4f1a\u5f97\u5230\u8fd4\u56deinst)\uff0c\u7531\u4e8e\u5b58\u50a8\u5355\u5143\u7684\u95ee\u9898\uff0c\u8fd4\u56de\u7684inst\u662f64\u4f4d\u7684\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7pc[2]\u9009\u62e9\u9ad832\u4f4d\u6216\u4f4e32\u4f4d\u4e3a\u6211\u4eec\u9700\u8981\u7684\u6307\u4ee4\u3002 \u6307\u4ee4\u96c6\u624b\u518c\u4e2d\u5199\u6709\u6bcf\u7c7b\u6307\u4ee4\u4e0e\u6bcf\u6761\u6307\u4ee4\u7684\u6784\u6210\uff0c\u5728Controller.sv\u4e2d\u6211\u4eec\u901a\u8fc7inst\u5224\u65ad\u6307\u4ee4\u7c7b\u578b\u5e76\u8f93\u51fa\u5bf9\u5e94\u9009\u62e9\u5668\u7684\u9009\u62e9\u4fe1\u53f7\u63a7\u5236Core\u6267\u884c\u3002 \u5982\u4e0b\u56fe\uff0c\u5bf9\u4e8e\u4e00\u6761R-type\u7c7b\u578b\u7684ADD\u6307\u4ee4\uff0c\u6307\u4ee4\u7c7b\u578b\u5982\u4e0b\u786e\u5b9a <pre><code>funct7 = inst[31:25] == 7'b0000000;\nfunct3 = inst[14:12] == 3'b000;\nopcode = inst[6:0] == 7'b0110011;\n</code></pre> opcode:\u51b3\u5b9a\u6307\u4ee4Type(R Type,I Type...) funct7(funct3):\u51b3\u5b9a\u5177\u4f53\u6307\u4ee4\u7c7b\u578b(ADD,SUB,...) rs1,rs2(register source):\u6e90\u5bc4\u5b58\u5668\uff08\u5bf9\u4e8eADD\u6307\u4ee4\u5c31\u662f\u4e24\u4e2a\u52a0\u6570\u7684\u503c\u5b58\u50a8\u7684\u5bc4\u5b58\u5668\uff09 rd(register destination):\u76ee\u7684\u5bc4\u5b58\u5668\uff08\u5bf9\u4e8eADD\u6307\u4ee4\u5c31\u662f\u6c42\u5f97\u7684\u548c\u8981\u5b58\u653e\u7684\u5bc4\u5b58\u5668\uff09</p>"},{"location":"sp24/sys1/CPU/#cpu_2","title":"CPU\u7ec4\u6210","text":"<p> CPU\u7684\u6570\u636e\u901a\u8def\u56fe\u5982\u4e0a\uff0c\u672c\u8d28\u4e0aCore.sv\u4e2d\u9700\u8981\u5b8c\u6210\u7684\u5c31\u662f\u7ebf\u8def\u7684\u8fde\u63a5\uff08\u9700\u8981\u628a\u4e0a\u56fe\u4e2d\u6240\u6709\u7684\u7ebf\u90fd\u5b9a\u4e49\u5e76\u8fde\u63a5\u8d77\u6765\uff09\uff0c\u800cController.sv\u5373Control Logic\uff0c\u5b8c\u6210\u7684\u662f\u6839\u636e\u6307\u4ee4(inst)\u8f93\u51fa\u5bf9\u5e94\u9009\u62e9\u5668\u7684\u63a7\u5236\u4fe1\u53f7 ALU.sv,Cmp.sv,Regfile.sv\u4e3a\u5c01\u88c5\u7684\u6a21\u5757\uff0c\u5bf9\u5e94\u56fe\u4e2d\u7684ALU\uff0cBranchComp\uff0cReg[]\uff0c\u8fd9\u4e9b\u6a21\u5757\u7684\u8bbe\u8ba1\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u6ce8\u610fx0\u662f\u6052\u4e3a0\u7684\uff0c\u56e0\u6b64regfile\u8981\u7981\u6b62\u5bf9x0\u7684\u5199\u64cd\u4f5c IMEM,DMEM\u662frepo\u7ed9\u51fa\u7684\u5185\u5b58\u6a21\u5757\uff0c\u53ea\u9700\u5c06 <pre><code>imem_ift.r_request_bits.raddr  \nimem_ift.r_reply_bits.rdata  \ndmem_ift.r/w_request_bits.raddr/waddr  \ndmem_ift.r/w_reply_bits.rdata/wdata  \ndmem_ift.w_request_bits.wmask  \n</code></pre> \u6b63\u786e\u63a5\u7ebf\u5373\u53ef ImmGen,DataPkg,MaskGen\u6a21\u5757\u8981\u81ea\u884c\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u5177\u4f53\u5728Data Package,Mask Generation,Data Trunc\u8bbe\u8ba1\u4f1a\u8be6\u7ec6\u89e3\u91ca cosim\u662f\u4eff\u771f\u6d4b\u8bd5\uff0c\u5c06pc,inst,wdata\u7b49\u63a5\u5165cosim\u7528\u4e8e\u6d4b\u8bd5\u4ee3\u7801\u7684\u6b63\u786e\u6027(\u867d\u7136\u7ed9\u51fa\u7684cosim\u8fde\u7ebf\u5f88\u591a\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u6211\u4eec\u901a\u5e38\u53ea\u5173\u5fc3pc,inst,wdata\u7684\u6b63\u786e\u6027\uff0c\u56e0\u4e3a\u53ea\u8981\u8fd9\u4e9b\u90fd\u6b63\u786e\u4e86\uff0c\u6307\u4ee4\u6267\u884c\u5c31\u57fa\u672c\u6b63\u786e\u4e86)</p>"},{"location":"sp24/sys1/CPU/#_1","title":"\u6307\u4ee4\u6267\u884c\u9636\u6bb5","text":"<p>\u6307\u4ee4\u6267\u884c\u5206\u4e3a\u4e94\u4e2a\u9636\u6bb5\uff0c\u5177\u4f53\u4e3a\uff1a</p> <ul> <li>IF(Instruction Fetch)  </li> <li>ID(Instruction Decode)  </li> <li>EX(Execute)  </li> <li>MEM(Memory)  </li> <li>WB(Write Back)  </li> </ul> <p>\u5982\u679c\u533a\u5206\u9636\u6bb5\uff0c\u5219\u6570\u636e\u901a\u8def\u56fe\u5982\u4e0b(\u4ee5\u4e0b\u662fsys2-lab1\u7684\u6570\u636e\u901a\u8def\u56fe)  \u56db\u4e2aReg\u5c06\u901a\u8def\u56fe\u5207\u5206\u4e3a\u4e94\u4e2a\u9636\u6bb5\uff08\u8be5\u56fe\u4ec5\u4f9b\u533a\u5206\u9636\u6bb5\u53c2\u8003\u7528\uff0c\u5b9e\u9645\u8fde\u63a5\u4f7f\u7528CPU\u7ec4\u6210\u90e8\u5206\u7ed9\u51fa\u7684\u901a\u8def\u56fe\uff09  </p>"},{"location":"sp24/sys1/CPU/#if","title":"IF","text":"<p>Instruction Fetch\u9636\u6bb5\u8981\u5b8c\u6210\u53d6\u6307\u64cd\u4f5c\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u5c31\u662f\u5c06\u4e0b\u4e00\u6761\u6307\u4ee4\u4eceIMEM(Instruction Memory)\u4e2d\u53d6\u51fa\u6765\uff0c\u65b9\u6cd5\u4e3a\uff0c\u5411imem.raddr\u4f20\u5165pc\uff0cimem.rdata\u4f20\u51fainst \u5b8c\u6210\u53d6\u6307\u540e\u8981\u5bf9pc\u8fdb\u884c\u66f4\u65b0\uff0c\u5bf9\u4e8e\u4e00\u822c\u6307\u4ee4\uff0cpc\u9700\u8981+4\uff0c\u5bf9\u4e8e\u6761\u4ef6\u7b26\u5408\uff08Cmp.sv\u8fd4\u56decmp_res\u4e3atrue\uff09\u7684B\u578b\u6307\u4ee4\u548cJ\u578b\u6307\u4ee4\uff0c\u9700\u8981\u5c06pc\u66f4\u65b0\u4e3aALU\u7684\u8ba1\u7b97\u7ed3\u679c\uff08\u8ba1\u7b97\u51fa\u7684\u8df3\u8f6c\u5730\u5740\uff09  </p>"},{"location":"sp24/sys1/CPU/#id","title":"ID","text":"<p>Instruction Decode\u9636\u6bb5\u8981\u5b8c\u6210\u5bf9\u53d6\u51fa\u7684\u6307\u4ee4\u89e3\u7801\u7684\u64cd\u4f5c\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u5c31\u662f\u5224\u65ad\u53d6\u51fa\u7684\u6307\u4ee4\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u4ec0\u4e48\u6307\u4ee4\uff0crs1,rs2,rd\u662f\u4ec0\u4e48\uff0c\u9700\u8981\u54ea\u4e9b\u63a7\u5236\u4fe1\u53f7\uff08\u5728Controller.sv\u4e2d\u5b8c\u6210\uff09 \u968f\u540e\u901a\u8fc7rs1,rs2(\u5bc4\u5b58\u5668\u7684\u7f16\u53f7)\u4eceRegfile\u4e2d\u53d6\u51fa\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679cRegfile\u7f16\u5199\u6b63\u786e\uff0c\u90a3\u4e48\u53ea\u9700\u8f93\u5165rs1,rs2\uff0cRegfile\u8f93\u51fa\u7684read_data_1\u548cread_data_2\u5c31\u662f\u8bfb\u51fa\u7684\u503c  ImmGen\u8bbe\u8ba1\u5728\u4e4b\u540e\u8be6\u7ec6\u4ecb\u7ecd  </p>"},{"location":"sp24/sys1/CPU/#ex","title":"EX","text":"<p>Execute\u9636\u6bb5\u8981\u5b8c\u6210\u6267\u884c\u64cd\u4f5c\uff0c\u4e3b\u8981\u662fALU\u7684\u8fd0\u7b97\u64cd\u4f5c\uff0cALU\u8981\u6839\u636e\u6307\u4ee4\u7c7b\u578b\u9009\u62e9\u6027\u5730\u8bfb\u51650/read_data_1/pc\u548c0/read_data_2/imm\uff0c\u5e76\u6839\u636e\u63a7\u5236\u4fe1\u53f7\u9009\u62e9\u8ba1\u7b97\u7684\u65b9\u5f0f\uff08\u52a0/\u51cf/\u4e0e\u6216\u975e\u7b49\uff09\uff0cB\u578b\u6307\u4ee4\u9700\u8981CMP\u6267\u884c\u6bd4\u8f83\u64cd\u4f5c\uff0c\u8ba1\u7b97\u5f97\u5230alu_res\u6839\u636e\u4e0d\u540c\u7684\u6307\u4ee4\u6709\u4e0d\u540c\u7684\u7528\u9014\uff08\u4f8b\u5982add\u6307\u4ee4\u8981\u5c06alu_res\u5199\u5165rd\u5bc4\u5b58\u5668\uff0csd\u6307\u4ee4\u8981\u5c06alu_res\u5b58\u5165dmem\uff0cj\u6307\u4ee4\u8981\u5c06alu_res\u8d4b\u503c\u7ed9pc\uff09</p>"},{"location":"sp24/sys1/CPU/#mem","title":"MEM","text":"<p>Memory\u9636\u6bb5\u8981\u6267\u884c\u8bbf\u5b58\u64cd\u4f5c\uff0c\u4e5f\u5c31\u662f\u8bbf\u95ee\u5185\u5b58\uff0c\u4ece\u5185\u5b58\u4e2d\u53d6\u503c\u6216\u5b58\u5165\u503c\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u53ea\u6709ld(lw,lb,...)\u548csd(sw,sb,...)\u6307\u4ee4\u53c2\u4e0e\u8bbf\u5b58\u9636\u6bb5\uff0c\u56e0\u4e3a\u5176\u4f59\u6307\u4ee4\u6d89\u53ca\u7684\u90fd\u662f\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\uff0c\u8fd9\u662f\u8ba1\u7b97\u673a\u7684\u5b58\u50a8\u7ed3\u6784\u51b3\u5b9a\u7684\uff08\u5bc4\u5b58\u5668-&gt;\u7f13\u5b58-&gt;\u5185\u5b58-&gt;\u78c1\u76d8\uff09 \u8bbf\u5b58\u9636\u6bb5\u8981\u505a\u7684\u662f\u5411DMEM\u63d0\u4f9b\u9700\u8981\u8bfb\u6216\u5199\u7684\u5185\u5b58\u5730\u5740\uff0c\u5982\u679c\u662f\u8bfb(ld)DMEM\u4f1a\u8fd4\u56de\u8bfb\u53d6\u7684\u503c\uff0c\u5982\u679c\u662f\u5199(sd)\u5219\u8fd8\u9700\u8981\u5411DMEM\u63d0\u4f9b\u5199\u5165\u503c  </p>"},{"location":"sp24/sys1/CPU/#wb","title":"WB","text":"<p>Write Back\u9636\u6bb5\u6267\u884c\u5199\u56de\u64cd\u4f5c\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u5c31\u662f\u6839\u636e\u6307\u4ee4\u7c7b\u578b\u6267\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u5982add\u6307\u4ee4\u8981\u5c06\u8ba1\u7b97\u7ed3\u679calu_res\u901a\u8fc7regfile\u5199\u5165rd\u5bc4\u5b58\u5668\uff0cj\u6307\u4ee4\u8981\u5c06\u8ba1\u7b97\u7ed3\u679calu_res\u8d4b\u503c\u7ed9pc\uff0cld\u6307\u4ee4\u8981\u5c06\u8bfb\u51fa\u7684dmem_ift.r_reply_bits.rdata\uff08\u901a\u8fc7datatrunc\u5904\u7406\u540e\uff09\u5199\u56deregfile\uff0csd\u6307\u4ee4\u6ca1\u6709\u5199\u56de</p>"},{"location":"sp24/sys1/CPU/#r-type","title":"R-Type\u6570\u636e\u901a\u8def\u4e0e\u63a7\u5236\u5668\u8bbe\u8ba1","text":"<p>\u4ee5\u4e0b\u4e3b\u8981\u4ee5ADD\u6307\u4ee4\u4e3a\u4f8b \u4e0eR-Type\u6307\u4ee4\u76f8\u5173\u7684\u63a7\u5236\u4fe1\u53f7\u6709\uff1a inst_reg(\u7531opcode\u786e\u5b9a) we_reg(\u7531inst_reg\u786e\u5b9a,regfile\u7684\u4f7f\u80fd\u4fe1\u53f7) alu_op(\u7531funct3\u4e0efunct7\u786e\u5b9a,ALU\u7684\u9009\u62e9\u4fe1\u53f7) \u5199\u6cd5\u4e3e\u4f8b\u5982\u4e0b <pre><code>    always_comb begin\n        if (inst_reg) begin\n            case(funct3)\n            3'b000:alu_op = ...\n            ...\n            endcase\n        end\n        else if ...\n    end\n</code></pre> alu_asel(\u7531inst_reg\u786e\u5b9a\u4e3aASEL_REG) alu_bsel(\u7531inst_reg\u786e\u5b9a\u4e3aBSEL_REG) \u8868\u793aalu\u8fdb\u884c\u7684\u662f\u4e24\u4e2a\u5bc4\u5b58\u5668\u7684\u52a0\u6cd5 wb_sel(\u7531inst_reg\u786e\u5b9a\u4e3aWB_SEL_ALU)\u8868\u793a\u5199\u56de\u503c\u662falu_res \u5176\u4f59\u6307\u4ee4\u7684\u4fe1\u53f7\u8bf7\u5c1d\u8bd5\u81ea\u884c\u8bbe\u8ba1\uff0c\u5982\u679c\u4e0d\u592a\u6e05\u695a\u6bcf\u4e2a\u6307\u4ee4\u662f\u505a\u4ec0\u4e48\u7684\uff0c\u8bf7\u9605\u8bfb\u624b\u518c\u6216\u5584\u7528LLM \u76f8\u5173\u591a\u8def\u9009\u62e9\u5668\u5177\u4f53\u9009\u62e9\u5982\u4e0b <pre><code>assign alu_data_1 = \n    alu_asel == ASEL_REG ? read_data_1 : ...\n...\n</code></pre> \u63a7\u5236\u4fe1\u53f7\u7684\u9009\u9879\u53ef\u901a\u8fc7\u67e5\u770brepo/sys-project/include/core_struct.sv\u5f97\u5230 \u5404\u7c7b\u4fe1\u53f7\u7684opcode,funct3\u4e5f\u53ef\u4ee5\u5728\u91cc\u9762\u627e\u5230(\u4f46\u8bf7\u4e0d\u8981\u7701\u7565\u67e5\u8be2\u624b\u518c\u8fd9\u4e00\u6b65\uff0c\u52a1\u5fc5\u5b8c\u6574\u7406\u89e332\u4f4dinst\u6bcf\u4e00\u90e8\u5206\u7684\u4f5c\u7528)</p>"},{"location":"sp24/sys1/CPU/#imm-generationdata-packagemask-generationdata-trunc","title":"Imm Generation,Data Package,Mask Generation,Data Trunc\u8bbe\u8ba1","text":""},{"location":"sp24/sys1/CPU/#immgen","title":"ImmGen","text":"<p>\u8fd9\u4e2a\u6a21\u5757\u7684\u4f5c\u7528\u7684\u901a\u8fc7\u6307\u4ee4\u7c7b\u578b\uff0c\u4e0d\u540c\u6307\u4ee4\u5bf9\u5e94\u4e0d\u540cimm_op\u4fe1\u53f7\uff0c\u4eceinst\u4ea7\u751f\u4e0d\u540c\u957f\u5ea6\u7684\u7acb\u5373\u6570 \u4e0d\u540c\u9009\u9879\u8868\u793a\u4e0d\u540c\u7684\u6307\u4ee4\u7c7b\u578b\uff0c\u4f8b\u5982I_IMM\u8868\u793aI-Type\u6307\u4ee4\uff0cS_IMM\u8868\u793aS-Type <pre><code>B_IMM:imm = {{51{inst[24]}},inst[24],inst[0],inst[23:18],inst[4:1],1'b0};\n</code></pre> \u5bf9B-Type\uff0cinst[24]\u548cinst[0]\u4f5c\u6807\u5fd7\u4f4d\uff0c\u9ad8\u4f4d\u586b\u514551\u4e2ainst[24]\u4f5c\u7b26\u53f7\uff0cinst[23:18]\u4e0einst[4:1]\u62fc\u63a5\u5f62\u621012\u4f4d\u504f\u79fb\u91cf\uff0c\u6700\u540e\u8865\u4e0a1'b0\u786e\u4fddimm\u662f64\u4f4d\u5bf9\u9f50 \u5176\u4f59\u9009\u9879\u5bf9\u5e94\u7684\u7acb\u5373\u6570\u4ea7\u751f\u65b9\u5f0f\u8bf7\u81ea\u884c\u67e5\u9605\u624b\u518c\u6216\u5584\u4e8eLLM  </p>"},{"location":"sp24/sys1/CPU/#datapkg","title":"DataPkg","text":"<p>\u8fd9\u4e2a\u6a21\u5757\u7684\u4f5c\u7528\u662f\u6839\u636e\u6307\u4ee4\u5185\u5b58\u64cd\u4f5c\u7c7b\u578b(Double Word,Word,Half,Byte\u4ee5\u53ca\u662f\u5426\u662funsigned\u9009\u62e9\u6709\u6548\u7684\u4f4d\u6570) \u4e00\u4e2aword\u662f32\u4f4d\uff0chalf-word\u662f16\u4f4d\uff0c\u5bf9Half-word\u7c7b\u578b\uff0c\u901a\u8fc7\u5c06\u4f4e16\u4f4d\u91cd\u590d\u56db\u6b21\u7ec4\u621064\u4f4d\u8f93\u51fa \u4e8b\u5b9e\u4e0a\uff0c\u5728DataPkg\u6a21\u5757\u4e2d\uff0c\u65e0\u7b26\u53f7\u4e0e\u6709\u7b26\u53f7\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684(why?)  </p>"},{"location":"sp24/sys1/CPU/#maskgen","title":"MaskGen","text":"<p>\u8fd9\u4e2a\u6a21\u5757\u7684\u4f5c\u7528\u662f\u751f\u6210\u63a9\u7801\uff0c\u5177\u4f53\u800c\u8a00\uff0c\u5c31\u662f\u6307\u9009\u53d6\u8f93\u5165\u7684\u54ea\u51e0\u4f4d\u662f\u6709\u6548\u7684 <pre><code>MEM_UH:  rw_wmask = 8'b0000_0011 &lt;&lt; (alu_res[2:1]*2);\n</code></pre> \u5bf9Half-word\u7c7b\u578b\uff0c\u7531alu_res[2:1]\u51b3\u5b9a\u6709\u6548\u4f4d\u662f\u54ea\u4e24\u4f4d\uff0c\u4f8b\u5982\u82e5alu_res[2:1] == 2'b00\u5219\u6709\u6548\u4f4d\u4e3a\u6700\u4f4e\u4e24\u4f4d\uff0c\u82e5alu_res[2:1] == 2'b10\u5219re_wmask = 8'b0000_0011 &lt;&lt; 4 = 8'b0011_0000\uff0c\u6709\u6548\u4f4d\u4e3a\u7b2c\u4e09\u7b2c\u56db\u4f4d \u540c\u6837\uff0c\u5728MaskGen\u6a21\u5757\u4e2d\uff0c\u65e0\u7b26\u53f7\u4e0e\u6709\u7b26\u53f7\u7684\u5904\u7406\u65b9\u5f0f\u662f\u76f8\u540c\u7684(why?)  </p>"},{"location":"sp24/sys1/CPU/#datatrunc","title":"DataTrunc","text":"<p>\u7c7b\u4f3cMaskGen\uff0c\u901a\u8fc7alu\u7684\u4f4e\u4e09\u4f4d\u622a\u53d6\u76f8\u5e94\u7684\u6709\u6548\u4f4d\u6570 \u6839\u636e\u5185\u5b58\u64cd\u4f5c\u7c7b\u578b\u51b3\u5b9a\u622a\u53d6\u503c\u7684\u957f\u5ea6\uff0c\u6839\u636ealu\u7684\u4f4e\u4e09\u4f4d\uff08\u6216\u4e24\u4f4d\u6216\u4e00\u4f4d\uff0c\u4e0eMaskGen\u5bf9\u5e94\uff09\u51b3\u5b9a\u622a\u53d6\u7684\u5177\u4f53\u4f4d\u7f6e \u7279\u522b\u7684\uff0c\u5bf9\u65e0\u7b26\u53f7\u6570\u800c\u8a00\uff0c\u9ad8\u4f4d\u5e94\u5168\u90e8\u7f6e0\u800c\u5bf9\u4e8e\u6709\u7b26\u53f7\u6570\uff0c\u9ad8\u4f4d\u5e94\u5168\u90e8\u7f6e\u4e3a\u6709\u6548\u4f4d\u6570\u7684\u6700\u9ad8\u4f4d\u7684\u503c \u4ee5\u4e0a\u4e0d\u7ed9\u51fa\u5177\u4f53\u793a\u4f8b\u7684\u90e8\u5206\u90fd\u662f\u7531\u4e8e\u5982\u679c\u7ed9\u51fa\u793a\u4f8b\uff0c\u5219\u6a21\u5757\u7f16\u5199\u8fc7\u4e8e\u7b80\u5355\uff0c\u8bf7\u591a\u5c1d\u8bd5\u81ea\u884c\u601d\u8003  </p>"},{"location":"sp24/sys1/CPU/#_2","title":"\u5b9e\u9a8c\u6b65\u9aa4","text":"<p>\u63a8\u8350\u7684\u7f16\u5199\u987a\u5e8f\u5982\u4e0b\uff1a 1.\u5148\u5b8c\u6210ALU.sv,Cmp.sv,Regfile.sv 2.\u6309\u7167\u901a\u8def\u56fe\u52065\u4e2a\u9636\u6bb5\u5b8c\u6210\u63a5\u7ebf\u5e76\u63a5\u5165ALU,Cmp,Regfile\u6a21\u5757\uff0c\u660e\u786e\u6bcf\u4e2a\u9636\u6bb5\u9700\u8981\u505a\u4ec0\u4e48 3.\u5b8c\u6210R-Type\u901a\u8def\uff0c\u7f16\u5199\u76f8\u5e94\u7684\u8bd1\u7801\uff0c\u63a7\u5236\u4fe1\u53f7\uff0c\u4e0e\u591a\u8def\u9009\u62e9\u5668\u7684\u9009\u9879(ImmGen,DataPkg,MaskGen,DataTrunc\u5168\u90e8\u7f6e0\u5373\u53ef) \u4eff\u771f\u901a\u8fc7<code>make verilate TESTCASE=rtype</code> 4.\u5b8c\u6210ImmGen,DataPkg,MaskGen,DataTrunc\u7684\u7f16\u5199 5.\u6839\u636eI,S,B,U,J\u7684\u987a\u5e8f\u7f16\u5199\uff0c\u4f9d\u6b21\u5b8c\u6210\u7acb\u5373\u6570\u751f\u6210\uff0c\u8bbf\u5b58\uff0c\u5206\u652f\u5904\u7406\uff0c\u5b8c\u6210\u6bcf\u9879\u540e\u8fdb\u884c\u5bf9\u5e94type\u7684\u4eff\u771f\u6d4b\u8bd5\uff0c\u5982\u679c\u51fa\u9519\u6309\u4ee5\u4e0b\u65b9\u5f0f\u8c03\u8bd5  </p>"},{"location":"sp24/sys1/CPU/#_3","title":"\u8c03\u8bd5\u4e0e\u8fd0\u884c","text":"<p>1.\u8bed\u6cd5\u9519\u8bef \u5e38\u89c1\u8bed\u6cd5\u9519\u8bef illegal assignment to wire,perhaps intended var \u610f\u601d\u662f\u5728\u65f6\u5e8f\u903b\u8f91\u4e2d\u5bf9wire\u7c7b\u578b\u8fdb\u884c\u4e86\u8d4b\u503c \u8fd9\u662f\u521d\u5b66\u8005\u5f88\u5bb9\u6613\u72af\u7684\u9519\u8bef wire\u7c7b\u578b\u662f\u7ebf\u8def\uff0c\u53ea\u80fd\u901a\u8fc7assign \u800creg\u7c7b\u578b\u662f\u5bc4\u5b58\u5668\uff0c\u53ea\u80fd\u5728\u65f6\u5e8f\u903b\u8f91\u4e2d\u8d4b\u503c \u867d\u7136\u4f7f\u7528logic\u7c7b\u578b\u7f16\u8bd1\u65f6\u4f1a\u81ea\u52a8\u5224\u65ad\u662fwire\u8fd8\u662freg(\u4e5f\u63a8\u8350\u8fd9\u6837\u7f16\u5199)\uff0c\u4f46\u53d8\u91cf\u4e00\u5b9a\u662fwire\u6216reg\u7c7b\u578b\uff0c\u800c\u4e0d\u80fd\u540c\u65f6\u662f\u4e8c\u8005\uff0c\u56e0\u6b64\u5bf9\u4efb\u610f\u53d8\u91cf\u65e2\u4f7f\u7528assign\u53c8\u5728\u65f6\u5e8f\u903b\u8f91\u4e2d\u8d4b\u503c\u4e00\u5b9a\u662f\u9519\u8bef\u7684 2.<code>make wave</code>\u4eff\u771f\u6d4b\u8bd5 \u5173\u6ce8\u91cd\u70b9\uff1apc,inst,wb_val(WDATA)\u7684DUT(Device Under Test)\u4e0eSIM(Simulation)\u662f\u5426\u4e00\u81f4 \u5728GTKWave\u4e2dFile&gt;Write/Read Save File\u53ef\u4ee5\u5b9e\u73b0\u4fdd\u5b58\u548c\u8bfb\u53d6\u529f\u80fd\uff0c\u907f\u514d\u6bcf\u6b21\u90fd\u8981\u62d6\u52a8\u4fe1\u53f7\u624d\u80fd\u89c2\u770b\u6ce2\u5f62 \u4f8b\u5982\u51fa\u73b0\u4ee5\u4e0b\u62a5\u9519  \u8868\u793a\u5728\u6267\u884cli\u6307\u4ee4\u65f6\uff0cpc\u4e0einst\u9519\u8bef\uff0c\u5373\u6ca1\u6709\u6b63\u786e\u7684\u8bfb\u5165li\u6307\u4ee4\uff0c\u5b9e\u9645\u53d1\u751f\u9519\u8bef\u7684\u662f\u4e0a\u4e00\u6761j\u6307\u4ee4\uff0c\u89c2\u5bdf\u6ce2\u5f62\u5982\u4e0b  \u4eff\u771f\u7ed9\u51fa\u768400000354\u7684\u4e0b\u4e00\u6761\u5e94\u8be5\u4e3a0000035c\u4f46\u6ce2\u5f62\u663e\u793a\u7684\u662f00000358\uff0c\u89c2\u5bdfalu_res\u662f\u6b63\u786e\u76840000035c\uff0cnext_pc\u4e5f\u662f\u6b63\u786e\u76840000035c\uff0c\u90a3\u4e48\u8bf4\u660e\u95ee\u9898\u5728\u4e8e\u6b63\u786e\u7684next_pc\u6ca1\u6709\u5728is_j\u4fe1\u53f7\u4e3a1\u7684\u60c5\u51b5\u4e0b\u4f20\u9012\u7ed9pc \u4e8b\u5b9e\u4e0a\u9519\u8bef\u662f\u7531\u4e8e <pre><code>    if(is_b&amp;cmp_res)begin //\u5e94\u4e3ais_j|(is_b&amp;cmp_res)\n        pc &lt;= next_pc;\n    end\n    else begin\n        pc &lt;= pc + 4;\n    end\n</code></pre></p>"},{"location":"sp24/sys1/CPU/#_4","title":"\u5199\u5728\u6700\u540e","text":"<p>\u672a\u6765\u7684\u5de5\u4f5c\u79d1\u7814\u4e2d\u5927\u591a\u662f\u6ca1\u6709\u6307\u5bfc\u751a\u81f3\u8fde\u76ee\u6807\u90fd\u4e0d\u660e\u786e\u7684\u4efb\u52a1\uff0c\u8fd9\u7bc7\u6587\u6863\u5e76\u4e0d\u662f\u4e00\u7bc7\u5fc3\u5f97\u6216\u662f\u653b\u7565\uff0c\u4f60\u53ef\u4ee5\u5c06\u5176\u8ba4\u4e3a\u662f\u4e00\u5957\u8865\u5145\u6750\u6599\uff0c\u672c\u8d28\u7684\u76ee\u7684\u5728\u4e8e\u5e2e\u52a9\u5927\u5bb6\u72ec\u7acb\u81ea\u4e3b\u7684\u5b8c\u6210CPU\u7684\u8bbe\u8ba1\uff0c\u4e3a\u7cfb\u7edf2\u4e0e\u7cfb\u7edf3\u6253\u597d\u57fa\u7840\uff0c\u672a\u6765\u7684\u6307\u5bfc\u4e5f\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u4f46\u6b64\u5904\uff0c\u8bf7\u5148\u5b66\u4f1a\u5229\u7528\u624b\u5934\u7684\u8d44\u6e90\u3002 \u4ece\u65e0\u5230\u6709\u7684\u8fc7\u7a0b\u5f80\u5f80\u662f\u6700\u56f0\u96be\u7684\uff0c\u8fd9\u4e5f\u6b63\u56e0\u5982\u6b64\uff0c\u5982\u679c\u80fd\u591f\u72ec\u7acb\u5b8c\u6210\uff0c\u4e00\u5b9a\u4f1a\u52a0\u6df1\u5bf9\u6570\u5b57\u903b\u8f91\u4e0eCPU\u7ec4\u6210\u624e\u5b9e\u6df1\u539a\u7684\u8ba4\u8bc6\uff0c\u4efb\u4f55\u95ee\u9898\u52e4\u95ee\u52a9\u6559\u4e0eLLM\uff0c\u52a0\u6cb9\uff01</p>"},{"location":"sp25/","title":"\u5b66\u4e60\u5efa\u8bae","text":""},{"location":"sp25/#_2","title":"\u9009\u5bfc","text":""},{"location":"sp25/#_3","title":"\u642c\u5bdd","text":""},{"location":"sp25/data_market/","title":"\u8bfe\u7a0b\u7efc\u5408\u5b9e\u8df5II\u2014\u2014\u6570\u636e\u8981\u7d20\u4ea4\u6613\u57fa\u7840  2.5 \u5b66\u5206","text":""},{"location":"sp25/data_market/#_1","title":"\u52a9\u6559","text":"<p>\u5434\u4e00\u822a</p>"},{"location":"sp25/data_market/#_2","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5218\u91d1\u98de</p>"},{"location":"sp25/data_market/#_3","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u5fc5\u4fee\u8bfe(\u77ed\u5b66\u671f\u8bfe\u7a0b)  </p>"},{"location":"sp25/data_market/#_4","title":"\u5206\u6570\u6784\u6210","text":"\u6a21\u5757 \u7406\u8bba \u5b9e\u8df5 \u8bfe\u5802\u53c2\u4e0e \u8bfe\u5802\u7ec3\u4e60\uff0810%\uff09 \u8bfe\u5802\u4e92\u52a8\uff085%\uff09 \u5e73\u65f6\u7ec3\u4e60 \u4f5c\u4e1a\uff082 * 10  = 20%\uff09 \u5b9e\u9a8c\uff082 * 10  = 20%\uff09 \u7efc\u5408\u8bc4\u4ef7 \u671f\u672b\u7ec3\u4e60\uff0820%\uff09 \u5927\u4f5c\u4e1a\uff0825%\uff09 <p>\u8bfe\u5802\u53c2\u4e0e\uff1a\u7f3a\u52e4\u4e24\u6b21\u4ee5\u5185\u4e0d\u6263\u5206 \u671f\u672b\u7ec3\u4e60\uff1a1.5h\uff0c\u5f00\u5377\u4e0d\u5141\u8bb8\u4f7f\u7528\u5927\u6a21\u578b\uff0c\u524d\u5341\u540d\u540c\u5b66\u7ed9\u6ee1\u5206\uff0c\u5269\u4e0b\u7ebf\u6027\u63d0\u9ad8  </p> <ul> <li>\u540d\u8bcd\u89e3\u91ca\uff1a5*2'  </li> <li>\u9009\u62e9\u9898\uff1a9*2'  </li> <li>\u5927\u9898\uff08\u7b80\u5355+\u8ba1\u7b97\uff0c\u65e0\u8bc1\u660e\uff09\uff1a14'+15'+13'  </li> <li>\u8bfe\u7a0b\u53cd\u9988\uff1a30'\uff08\u4e0e\u53bb\u5e74\u76f8\u540c\uff09  </li> </ul> <p>\u5f15\u8a00\uff1a\u57fa\u672c\u6982\u5ff5\uff08\u7b80\u7b54\uff09 \u5b89\u5168\uff1a\u4e86\u89e3\u5b89\u5168\u65b9\u6cd5 \u975e\u5408\u4f5c\u535a\u5f08\uff1a\u7eb3\u4ec0\u5747\u8861\u8ba1\u7b97 \u5408\u4f5c\u535a\u5f08\uff1a\u4e09\u4eba\u6c99\u666e\u5229\u503c\u7684\u8ba1\u7b97 \u591a\u81c2\u8001\u864e\u673a\uff1a\u6982\u5ff5\u4e0e\u6027\u8d28\uff08MWU\u662f\u65e0\u61be\u7b97\u6cd5\u7b49\u7ed3\u8bba\uff09\uff08\u7b80\u7b54\uff09 \u62cd\u5356\uff08\u4e0d\u540c\u4e8e\u4f5c\u4e1a\uff09\uff1aVCG,\u8bfe\u4ef6\u63d0\u95ee(\u62cd\u5356\u4e0e\u6570\u636e\u5b9a\u4ef7\u90e8\u5206\u4e0d\u8003) \u7248\u672c\u5316\u5b9a\u4ef7\uff1a\u65e0\u5957\u5229\u6982\u5ff5+\u53bb\u5e74\u4f5c\u4e1a\u9898 \u8d1d\u53f6\u65af\u529d\u8bf4 \u6700\u540e\u4e00\u8bb2\uff1a\u9009\u62e9\u4e00\u9898  </p>"},{"location":"sp25/data_market/#_5","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u8fd9\u95e8\u8bfe\u7a0b\u5bf9\u6570\u5b66\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u6d89\u53ca\u8f83\u591a\u6982\u7387\u8bba\u4e0e\u5fae\u79ef\u5206\u7684\u91cd\u8981\u77e5\u8bc6\uff0c\u4f46\u6b64\u8bfe\u7a0b\u6d89\u53ca\u7684\u535a\u5f08\u8bba\u3001\u62cd\u5356\u3001\u5b9a\u4ef7\u7b49\u77e5\u8bc6\u4e5f\u662f\u76f8\u5f53\u6709\u8da3\u7684\uff0c\u8fd9\u95e8\u8bfe\u7a0b\u4e5f\u9002\u5408\u68c0\u9a8c\u662f\u5426\u81f4\u529b\u4e8e\u6570\u636e\u65b9\u5411\u7684\u7406\u8bba\u7814\u7a76 \u5b9e\u9a8c\u975e\u5e38\u7b80\u5355\uff0c\u5355\u4e2a\u4efb\u52a1\u4ee3\u7801\u91cf\u5747\u4e0d\u8d85\u8fc7\u4e8c\u5341\u884c\uff0c\u4f5c\u4e1a\u76f8\u5bf9\u9ebb\u70e6\u4e00\u4e9b\uff0c\u5efa\u8bae\u6bcf\u5929\u53ca\u65f6\u5b8c\u5168 \u671f\u672b\u6d4b\u8bd5\u65f6\u95f4\u975e\u5e38\u7d27\u5f20\uff0c\u5efa\u8bae\u4ece\u5927\u9898\u505a\u8d77 \u53ea\u8981\u4e13\u6ce8\u8bfe\u7a0b\u5185\u5bb9\u5c31\u80fd\u6536\u83b7\u4e0d\u9519\u7684\u4f53\u9a8c\uff08wyy\uff0cyyds\uff09</p>"},{"location":"sp25/data_market/note/","title":"\u8bfe\u7a0b\u7efc\u5408\u5b9e\u8df5II\u2014\u2014\u6570\u636e\u8981\u7d20\u4ea4\u6613\u57fa\u7840","text":""},{"location":"sp25/data_market/note/#_1","title":"\u8003\u8bd5\u91cd\u70b9","text":"<p>\u5f15\u8a00\uff1a\u57fa\u672c\u6982\u5ff5\uff08\u7b80\u7b54\uff09 \u5b89\u5168\uff1a\u4e86\u89e3\u5b89\u5168\u65b9\u6cd5 \u975e\u5408\u4f5c\u535a\u5f08\uff1a\u7eb3\u4ec0\u5747\u8861\u8ba1\u7b97 \u5408\u4f5c\u535a\u5f08\uff1a\u4e09\u4eba\u6c99\u666e\u5229\u503c\u7684\u8ba1\u7b97 \u591a\u81c2\u8001\u864e\u673a\uff1a\u6982\u5ff5\u4e0e\u6027\u8d28\uff08MWU\u662f\u65e0\u61be\u7b97\u6cd5\u7b49\u7ed3\u8bba\uff09\uff08\u7b80\u7b54\uff09 \u62cd\u5356\uff08\u4e0d\u540c\u4e8e\u4f5c\u4e1a\uff09\uff1aVCG,\u8bfe\u4ef6\u63d0\u95ee(\u62cd\u5356\u4e0e\u6570\u636e\u5b9a\u4ef7\u90e8\u5206\u4e0d\u8003) \u7248\u672c\u5316\u5b9a\u4ef7\uff1a\u65e0\u5957\u5229\u6982\u5ff5+\u53bb\u5e74\u4f5c\u4e1a\u9898 \u8d1d\u53f6\u65af\u529d\u8bf4 \u6700\u540e\u4e00\u8bb2\uff1a\u9009\u62e9\u4e00\u9898  </p>"},{"location":"sp25/data_market/note/#lec-01","title":"Lec 01:\u6570\u636e\u8981\u7d20\u5e02\u573a\u6982\u8ff0","text":""},{"location":"sp25/data_market/note/#_2","title":"\u751f\u4ea7\u8981\u7d20","text":"<p>\u4f01\u4e1a\uff1a\u751f\u4ea7\u5e76\u51fa\u552e\u4ea7\u54c1\uff0c\u96c7\u4f63\u5e76\u4f7f\u7528\u751f\u4ea7\u8981\u7d20 \u5bb6\u5ead\uff1a\u8d2d\u4e70\u670d\u52a1\u548c\u5546\u54c1\uff0c\u62e5\u6709\u5e76\u51fa\u552e\u751f\u4ea7\u8981\u7d20 \u751f\u4ea7\u8981\u7d20\uff1a\u52b3\u52a8\u529b\u3001\u571f\u5730\u3001\u8d44\u672c\uff08\u94b1\u4e0d\u662f\u8d44\u672c\uff09\u3001\u4f01\u4e1a\u5bb6\u624d\u80fd\uff08\u6280\u672f\uff09 \u6570\u636e\u7684\u7279\u6027\uff1a\u96f6\u6210\u672c\u590d\u5236\u6027\uff0c\u4ef7\u503c\u4e0d\u786e\u5b9a\u6027 </p>"},{"location":"sp25/data_market/note/#_3","title":"\u6570\u636e\u5e02\u573a\u7684\u7ecf\u6d4e\u5b66\u539f\u7406","text":"<p>\u6570\u636e\u7684\u4e58\u6570\u6548\u5e94\uff1a\u6570\u636e-&gt;\u4ea7\u54c1-&gt;\u66f4\u591a\u7684\u6570\u636e \u6570\u636e\u5b9a\u4ef7 \u7edd\u5bf9\u4f18\u52bf\uff1a\u751f\u4ea7\u8005\u751f\u4ea7\u4e00\u79cd\u7269\u54c1\u6240\u9700\u6295\u5165\u8f83\u5c11 \u673a\u4f1a\u6210\u672c\uff1a\u4e3a\u4e86\u5f97\u5230\u67d0\u79cd\u4e1c\u897f\u800c\u5fc5\u987b\u653e\u5f03\u7684\u4e1c\u897f \u6bd4\u8f83\u4f18\u52bf\uff1a\u5982\u679c\u4e00\u4e2a\u751f\u4ea7\u8005\u5728\u751f\u4ea7 X \u7269\u54c1\u65f6\u653e\u5f03\u4e86\u8f83\u5c11\u7684\u5176\u4ed6\u7269\u54c1\uff0c\u5373\u751f\u4ea7 X \u7269\u54c1\u7684\u673a\u4f1a\u6210\u672c\u8f83\u5c0f\uff0c\u5c31\u53ef\u4ee5\u8bf4\u4ed6\u5728\u751f\u4ea7\u8be5\u7269\u54c1\u4e0a\u5177\u6709\u6bd4\u8f83\u4f18\u52bf\uff1b\uff08\u6bd4\u8f83\u673a\u4f1a\u6210\u672c\uff0c\u4e00\u4e2a\u4eba\u4e0d\u53ef\u80fd\u5728\u4e24\u8fb9\u90fd\u62e5\u6709\u6bd4\u8f83\u4f18\u52bf\uff09 \u673a\u4f1a\u6210\u672c\uff1a\u4e3a\u4e86\u5f97\u5230\u67d0\u79cd\u4e1c\u897f\u800c\u5fc5\u987b\u653e\u5f03\u7684\u4e1c\u897f  \u8fb9\u9645\u6548\u7528\uff1a\u589e\u52a0\u4e00\u4e2a\u5355\u4f4d\u7684\u6548\u7528 \u8fb9\u9645\u6210\u672c\uff1a\u589e\u52a0\u4e00\u4e2a\u5355\u4f4d\u6240\u9700\u8981\u7684\u6210\u672c\uff08\u822a\u7a7a\u516c\u53f8\u5bf9\u7b49\u9000\u7968\u4e58\u5ba2\u6536\u53d6\u7684\u4ef7\u683c\uff09 Quiz1 <pre><code>A\u56fd\u751f\u4ea71\u5355\u4f4d\u8ba1\u7b97\u673a\uff0c\u653e\u5f0326\u5355\u4f4d\u5c0f\u9ea6\uff0c\nB\u56fd\u751f\u4ea71\u5355\u4f4d\u8ba1\u7b97\u673a\uff0c\u653e\u5f0320\u5355\u4f4d\u5c0f\u9ea6\uff0cB\u56fd\u5728\u751f\u4ea7\u8ba1\u7b97\u673a\u4e0a\u7684\u673a\u4f1a\u6210\u672c\u66f4\u4f4e \u00a0 \u00a0\nA\u56fd\u751f\u4ea71\u5355\u4f4d\u5c0f\u9ea6\uff0c\u653e\u5f031/26\u5355\u4f4d\u8ba1\u7b97\u673a\uff0c\nB\u56fd\u751f\u4ea71\u5355\u4f4d\u5c0f\u9ea6\uff0c\u653e\u5f031/20\u5355\u4f4d\u5c0f\u9ea6\uff0cA\u56fd\u5728\u751f\u4ea7\u5c0f\u9ea6\u4e0a\u7684\u673a\u4f1a\u6210\u672c\u66f4\u4f4e \u00a0 \u00a0\n1)B\u56fd\u5728\u751f\u4ea7\u8ba1\u7b97\u673a\u4e0a\u5177\u6709\u6bd4\u8f83\u4f18\u52bf\uff0cA\u56fd\u5728\u751f\u4ea7\u5c0f\u9ea6\u4e0a\u5177\u6709\u6bd4\u8f83\u4f18\u52bf\uff0c\nA\u56fd\u5e94\u8be5\u51fa\u53e3\u5c0f\u9ea6\uff0c\u8fdb\u53e3\u8ba1\u7b97\u673a\uff0cB\u56fd\u5e94\u8be5\u51fa\u53e3\u8ba1\u7b97\u673a\uff0c\u8fdb\u53e3\u5c0f\u9ea6 \u00a0\n2)1\u5355\u4f4d\u8ba1\u7b97\u673a\u548c20-26\u5355\u4f4d\u5c0f\u9ea6\u4ea4\u6362\u65f6\u5408\u7406\u7684\u8303\u56f4 \u00a0 \u00a0\n</code></pre></p>"},{"location":"sp25/data_market/note/#_4","title":"\u6570\u636e\u5e02\u573a\u57fa\u672c\u6982\u5ff5","text":"<p>\u5206\u7c7b\uff1a\u539f\u59cb\u6570\u636e\u3001\u67e5\u8be2\u670d\u52a1\u3001\u6a21\u578b\u6570\u636e \u6570\u636e\u4ea4\u6613\u6d41\u7a0b\uff1a\u6570\u636e\u6536\u96c6\u3001\u6570\u636e\u5b58\u50a8\u3001\u6570\u636e\u4ea7\u54c1\u5316\uff08\u5173\u7cfb\u578b\u6570\u636e\u5e93\u3001\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff09\u3001\u6570\u636e\u5408\u89c4\u3001\u6570\u636e\u5b9a\u4ef7\u3001\u6570\u636e\u6eaf\u6e90\u3001\u6570\u636e\u9500\u6bc1  </p>"},{"location":"sp25/data_market/note/#_5","title":"\u6570\u636e\u5e02\u573a\u8bbe\u8ba1\u8981\u6c42","text":""},{"location":"sp25/data_market/note/#_6","title":"\u4ea7\u6743\u95ee\u9898","text":""},{"location":"sp25/data_market/note/#_7","title":"\u5b9a\u4ef7\u95ee\u9898","text":"<p>\u6210\u672c\u6cd5\uff08\u96f6\u6210\u672c\u590d\u5236\u6027\uff0c\u4ef7\u503c\u4e0d\u786e\u5b9a\u6027\uff09 \u6536\u76ca\u6cd5\uff08\u5185\u5728\u4ef7\u503c&amp;\u5de5\u5177\u4ef7\u503c\uff09 \u5e02\u573a\u6cd5  </p>"},{"location":"sp25/data_market/note/#_8","title":"\u516c\u5e73\u548c\u9690\u79c1\u95ee\u9898","text":""},{"location":"sp25/data_market/note/#lec-02","title":"Lec 02:\u6570\u636e\u5408\u89c4\u4e0e\u5b89\u5168","text":""},{"location":"sp25/data_market/note/#_9","title":"\u5b89\u5168\u591a\u65b9\u8ba1\u7b97","text":"<p>\u767e\u4e07\u5bcc\u7fc1\u95ee\u9898\uff1a\u4fdd\u5bc6\u6bd4\u8f83\u8d22\u5bcc \u9999\u8549\u4e0e\u82f9\u679c\u7684solution A\u6784\u9020n\u628a\u9501\uff0cB\u4ec5\u6709\u7b2cj\u628a\u9501\u7684\u94a5\u5319\uff0cA\u7ed9\u5b9an\u628a\u9501\u7684\u6807\u5fd7\u4f4d\uff0cB\u68c0\u67e5\u7b2cj\u628a\u9501\u7684\u6807\u5fd7\u4f4d\uff0c\u5f97\u5230\u7ed3\u679c  </p>"},{"location":"sp25/data_market/note/#_10","title":"\u8054\u90a6\u5b66\u4e60","text":"<p>\u4f20\u7edf\u673a\u5668\u5b66\u4e60\uff1a\u62ff\u8349\uff08\u6570\u636e\uff09\u7ed9\u7f8a\uff08\u6a21\u578b\uff09\u5403\uff08\u8bad\u7ec3\uff09 \u8054\u90a6\u5b66\u4e60\uff1a\u7f8a\u5230\u5404\u4e2a\u8349\u573a\u5403 \u8054\u90a6\u5b66\u4e60\uff1a\u4e00\u79cd\u5177\u5907\u6570\u636e\u9690\u79c1\u4fdd\u62a4\u7684\u5206\u5e03\u5f0f\u673a\u5668\u5b66\u4e60\u6280\u672f\uff0c\u6570\u636e\u62e5\u6709\u65b9\u5728\u4e0d\u516c\u5f00\u672c\u5730\u6570\u636e\u7684\u524d\u63d0\u4e0b\u901a\u8fc7\u52a0\u5bc6\u4f20\u8f93\u6a21\u578b\u5b9e\u73b0\u5171\u540c\u8bad\u7ec3 - \u6a2a\u5411\u8054\u90a6\u5b66\u4e60\uff1a\u5355\u4e00\u6570\u636e\u5e93\u7528\u6237\u91cf\u4e0d\u8db3  - \u7eb5\u5411\u8054\u90a6\u5b66\u4e60\uff1a\u5355\u4e00\u6570\u636e\u5e93\u5c5e\u6027\u7ef4\u5ea6\u4e0d\u8db3 - \u8fc1\u79fb\u8054\u90a6\u5b66\u4e60\uff1a\u6570\u636e\u5e93\u4e4b\u95f4\u6837\u672c\u548c\u5c5e\u6027\u91cd\u53e0\u5747\u8f83\u5c11  </p>"},{"location":"sp25/data_market/note/#_11","title":"\u6570\u636e\u8131\u654f","text":"<p>\u6570\u636e\u8131\u654f\uff1a\u6839\u636e\u5236\u5b9a\u7684\u8131\u654f\u89c4\u5219\uff0c\u9488\u5bf9\u654f\u611f\u4fe1\u606f\u8fdb\u884c\u6570\u636e\u53d8\u5f62\u6216\u906e\u853d  </p> <ul> <li>\u52a8\u6001\u6570\u636e\u8131\u654f\uff1a\u4e0d\u8131\u79bb\u751f\u4ea7\u73af\u5883\u7684\u5b9e\u65f6\u8131\u654f\uff0c\u8bbf\u95ee\u65f6\u5904\u7406  </li> <li>\u9759\u6001\u6570\u636e\u8131\u654f\uff1a\u8131\u79bb\u751f\u4ea7\u73af\u5883\uff0c\u8131\u654f\u540e\u5206\u53d1\uff0c\u8131\u654f\u540e\u6570\u636e\u4e0e\u751f\u4ea7\u73af\u5883\u76f8\u9694\u79bb  </li> </ul> <p>\u8131\u654f\u65b9\u6cd5  </p> <ul> <li>\u65e0\u6548\u5316\uff1a\u622a\u65ad\u3001\u52a0\u5bc6\u3001\u9690\u85cf\u3001\u6253*   </li> <li>\u968f\u673a\u5316  </li> <li>\u6570\u636e\u66ff\u6362  </li> <li>\u5bf9\u79f0\u52a0\u5bc6  </li> <li>\u5e73\u5747\u503c\uff1a\u91cd\u65b0\u968f\u673a\u5206\u5e03  </li> <li>\u504f\u79fb\u4e0e\u53d6\u6574  </li> </ul>"},{"location":"sp25/data_market/note/#_12","title":"\u5dee\u5206\u9690\u79c1","text":"<p>\u201c\u9690\u79c1\u201d\u7684\u6570\u5b66\u6a21\u578b \u5bf9\u771f\u5b9e\u6570\u636e\u589e\u52a0\u566a\u58f0\u6270\u52a8\u5b9e\u73b0\u9690\u79c1\u7684\u91cf\u5316\u4fdd\u62a4 input one row\u7684\u53d8\u5316\uff0c\u653b\u51fb\u8005\u65e0\u6cd5\u6839\u636eoutput\u533a\u5206input\u7684\u53d8\u5316 \u9690\u79c1\u5ea6\u03b5\uff0c\u03b5\u8d8a\u5c0f\uff08\u8d8b\u8fd10\uff09\uff0cprivacy\u8d8a\u5f3a\uff0cutility\u53ef\u7528\u6027\u8d8a\u5dee Laplace\u673a\u5236\uff1aquery q\u7684\u771f\u5b9e\u7ed3\u679c\u4e3aq(D)\uff0c\u8fd4\u56deq(D) + \u03b7\uff0c\u03b7\u670d\u4eceLaplace\u5206\u5e03 \u5bc6\u5ea6\u51fd\u6570f(x|\u03bc,b)\uff0c\u03bc=0\uff0cf = Lap(b),\u65b9\u5dee2b\u00b2 \u654f\u611f\u5ea6\uff1a|q(D)-q(D')|&lt;=S(q),A(D) = q(D) + Lab(S(q)/\u03b5)\u6ee1\u8db3\u03b5-\u5dee\u5206\u9690\u79c1\uff0c\u5373\u03b7=Lab(S(q)/\u03b5) quiz2 \u5168\u5c40\u5dee\u5206\u9690\u79c1\uff1a\u6570\u636e\u62e5\u6709\u8005-&gt;\u53ef\u4fe1\u7684\u6570\u636e\u7ba1\u7406\u8005-&gt;\u6270\u52a8 \u672c\u5730\u5dee\u5206\u9690\u79c1\uff1a\u6570\u636e\u62e5\u6709\u8005\u6dfb\u52a0\u566a\u58f0-&gt;\u4e0d\u53ef\u4fe1\u7684\u6570\u636e\u7ba1\u7406\u8005  </p>"},{"location":"sp25/data_market/note/#_13","title":"\u5168\u540c\u6001\u52a0\u5bc6","text":"<p>\u5bc6\u6587\u57df\u7684\u64cd\u4f5c\u7b49\u6548\u4e8e\u660e\u6587\u57df\u7684\u5bf9\u5e94\u64cd\u4f5c\uff0c\u652f\u6301\u52a0\u6cd5\u4e0e\u4e58\u6cd5\u7684\u64cd\u4f5c \u53ef\u7528\u4e0d\u53ef\u89c1\uff0c\u4f46\u8ba1\u7b97\u6210\u672c\u9ad8  </p>"},{"location":"sp25/data_market/note/#_14","title":"\u96f6\u77e5\u8bc6\u8bc1\u660e","text":"<p>\u8bc1\u660e\u8005\u80fd\u591f\u4e0d\u5411\u9a8c\u8bc1\u8005\u63d0\u4f9b\u4efb\u4f55\u6709\u7528\u7684\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\uff0c\u4f7f\u9a8c\u8bc1\u8005\u76f8\u4fe1\u67d0\u4e2a\u8bba\u65ad\u662f\u6b63\u786e\u7684 \u6d1e\u7a74\u5f00\u95e8\u7684\u4f8b\u5b50  </p>"},{"location":"sp25/data_market/note/#_15","title":"\u6570\u636e\u5408\u89c4","text":"<p>Watermark\uff1a\u6c34\u5370 embedding:noise range partition(red&amp;green domain) detection:difference\u90fd\u6765\u6e90\u4e8e\u540c\u4e00\u4e2adomain  </p>"},{"location":"sp25/data_market/note/#lec-03","title":"Lec 03:\u975e\u5408\u4f5c\u535a\u5f08\u8bba\u57fa\u7840\uff08\u4e00\uff09","text":""},{"location":"sp25/data_market/note/#_16","title":"\u5fae\u89c2\u7ecf\u6d4e\u5b66\u57fa\u7840","text":"<p>\u504f\u597d\uff1a\u5bf9\u53ef\u9009\u65b9\u6848\u7684\u6392\u5e8f \u4e3a\u504f\u597d\u8d4b\u4e88\u5e38\u6570\uff0c\u79f0\u4e3a\u6d88\u8d39\u7ec4\u5408\u5bf9\u6d88\u8d39\u8005\u7684\u6548\u7528 \u6548\u7528\u51fd\u6570\u5c31\u662f\u5c06\u6d88\u8d39\u675f\u6620\u5c04\u5230\u6ee1\u610f\u7a0b\u5ea6\u7684\u51fd\u6570u:R<sup>n</sup>-&gt;R,u(\u4e00\u65a4\u82f9\u679c\uff0c-6\u5143\u94b1) = 0 \u7406\u6027\u4eba\u5047\u8bbe\uff1a\u6548\u7528\u6700\u5927\u5316\uff08\u4e0d\u7406\u6027\u4eba\uff1a\u884c\u4e3a\u7ecf\u6d4e\u5b66\uff09 \u8d1d\u53f6\u65af\u516c\u5f0f \u6548\u7528\u51fd\u6570\uff1a  </p> <ul> <li>\u67ef\u5e03-\u9053\u683c\u62c9\u65af\u6548\u7528$ u(x1,x2)=x_1^{\\alpha}x_2^{1-\\alpha}\uff0c\\alpha\\in(0,1)$   \u8fb9\u9645\u6548\u7528\u9012\u51cf,\u8fb9\u9645\u6548\u7528\u662f\u6307\u6d88\u8d39\u8005\u5bf9\u67d0\u79cd\u7269\u54c1\u7684\u6d88\u8d39\u91cf\u6bcf\u589e\u52a0\u4e00\u5355\u4f4d\u6240\u589e\u52a0\u7684\u989d\u5916\u6ee1\u8db3\u7a0b\u5ea6  </li> <li>\u51af\u8bfa\u4f9d\u66fc-\u6469\u6839\u65af\u5766\u6548\u7528\\(u(L)=pu(x)+(1-p)u(y)\\),L:\u5f69\u7968,p:\u4e2d\u5956\u6982\u7387   u\u662f\u4e25\u683c\u51f9\u51fd\u6570-&gt;\u98ce\u9669\u538c\u6076\uff0cu\u662f\u4e25\u683c\u51f8\u51fd\u6570-&gt;\u98ce\u9669\u504f\u597d\uff0cu\u662f\u7ebf\u6027\u51fd\u6570-&gt;\u98ce\u9669\u4e2d\u6027  </li> <li>\u62df\u7ebf\u6027\u6548\u7528\u51fd\u6570\uff1a\\(u(x,p)=u(x)-p\\),\u901a\u8fc7\u4ef7\u683cp\u8d2d\u4e70\u6d88\u8d39\u675fx\u540e\u7684\u6548\u7528  </li> </ul> <p>\u6548\u7528\u6700\u5927\u5316\u95ee\u9898\uff1a \u6548\u7528\u51fd\u6570u(x1,x2),\u4e24\u79cd\u5546\u54c1\u4ef7\u683cp1,p2,\u6d88\u8d39\u8005\u6536\u5165\u4e3ap \\(max u(x1,x2),s.t.p_1x_1,p_2x_2 &lt;= p\\),u\u5173\u4e8ex1,x2\u9012\u589e\uff0c\u56e0\u6b64u\u53d6\u6700\u5927\u503c\u65f6\u7b49\u53f7\u6210\u7acb \u4ee4\u6548\u7528\u51fd\u6570\u4e3a\u67ef\u5e03-\u9053\u683c\u62c9\u65af\u6548\u7528\u51fd\u6570\uff0c\u4e0d\u96be\u53d1\u73b0\u9700\u6c42\u4e0e\u4ef7\u683c\u4e4b\u95f4\u5448\u53cd\u76f8\u5173  </p>"},{"location":"sp25/data_market/note/#_17","title":"\u5e02\u573a\u51fa\u6e05","text":"<p>\u9700\u6c42\u5b9a\u5f8b:\u5546\u54c1\u7684\u9700\u6c42\u91cf\u4e0e\u4ef7\u683c\u4e4b\u95f4\u6210\u53cd\u65b9\u5411\u53d8\u52a8 \u4f9b\u7ed9\u5b9a\u5f8b:\u5546\u54c1\u4ef7\u683c\u4e0e\u4f9b\u7ed9\u91cf\u6210\u6b63\u65b9\u5411\u53d8\u52a8  \u5e02\u573a\u51fa\u6e05\uff1a\u5e02\u573a\u673a\u5236\u81ea\u53d1\u6d88\u9664\u8d85\u989d\u4f9b\u7ed9\u6216\u8d85\u989d\u9700\u6c42 \u7ade\u4e89\u5747\u8861\uff1a\u6bcf\u4e2a\u4eba\u5404\u81ea\u7684\u884c\u52a8\u65e0\u6cd5\u6539\u53d8\u5e02\u573a\u4ef7\u683c  </p>"},{"location":"sp25/data_market/note/#_18","title":"\u793e\u4f1a\u798f\u5229","text":"<p>\u798f\u5229:\u8d44\u6e90\u914d\u7f6e\u6709\u6548\u6027\u7684\u8861\u91cf\u6807\u51c6  \u6d88\u8d39\u8005\u5269\u4f59=\u4e70\u5230\u7684\u5546\u54c1\u6548\u7528-\u652f\u4ed8\uff0c\u5382\u5546\u5269\u4f59=\u51fa\u552e\u7684\u6548\u7528-\u6210\u672c \u652f\u4ed8 = \u51fa\u552e\u7684\u6548\u7528\uff0c\u798f\u5229\u6700\u5927\u5316\uff1a\u5546\u54c1\u6548\u7528-\u6210\u672c\u6700\u5927\u5316 \u798f\u5229\u7ecf\u6d4e\u5b66\u7b2c\u4e00\u5b9a\u5f8b\uff1a\u7ade\u4e89\u5e02\u573a\u4e2d\uff0c\u5e02\u573a\u4f9b\u7ed9\u8fbe\u5230\u5747\u8861\u65f6\uff0c\u5e02\u573a\u8d44\u6e90\u914d\u7f6e\u662f\u798f\u5229\u6700\u5927\u5316\u7684\uff08\u770b\u4e0d\u89c1\u7684\u624b\uff09  </p>"},{"location":"sp25/data_market/note/#_19","title":"\u5e02\u573a\u5931\u7075","text":""},{"location":"sp25/data_market/note/#_20","title":"\u5784\u65ad","text":"<p>\u5784\u65ad:\u4e00\u4e2a\u4ea7\u54c1\u53ea\u6709\u4e00\u5bb6\u5382\u5546\u751f\u4ea7 \u5784\u65ad\u5382\u5546\u901a\u8fc7\u63d0\u9ad8\u4ef7\u683c\u652b\u53d6\u66f4\u591a\u7684\u6d88\u8d39\u8005\u5269\u4f59  </p>"},{"location":"sp25/data_market/note/#_21","title":"\u5916\u90e8\u6027","text":"<p>\u4e00\u4e2a\u4eba\u6216\u4e00\u7fa4\u4eba\u7684\u884c\u52a8\u548c\u51b3\u7b56\u4f7f\u53e6\u4e00\u4e2a\u4eba\u6216\u4e00\u7fa4\u4eba\u53d7\u635f\u6216\u53d7\u76ca\u7684\u60c5\u51b5\uff0c\u5373\u793e\u4f1a\u6210\u5458\u4ece\u4e8b\u7ecf\u6d4e\u6d3b\u52a8\u65f6\u5176\u6210\u672c\u4e0e\u540e\u679c\u4e0d\u5b8c\u5168\u7531\u8be5\u884c\u4e3a\u4eba\u627f\u62c5\uff1b\u8d1f\u5916\u90e8\u6027\uff1a\u4e0a\u6e38\u6392\u6c61\u4e0b\u6e38\u53d7\u635f\uff0c\u6b63\u5916\u90e8\u6027\uff1a\u690d\u6811\u9020\u6797\u4f18\u5316\u5c45\u6c11\u73af\u5883\uff08\u516c\u5171\u7269\u54c1\uff09  </p>"},{"location":"sp25/data_market/note/#_22","title":"\u4fe1\u606f\u4e0d\u5bf9\u79f0","text":"<p>\u67e0\u6aac\u5e02\u573a\uff08\u6b21\u54c1\u5e02\u573a\uff09 \u597d\u8d27\u4e0e\u6b21\u8d27\u65e0\u6cd5\u5206\u8fa8-&gt;\u652f\u4ed8\u610f\u613f\u4e0b\u964d-&gt;\u597d\u8d27\u5356\u5bb6\u4e0d\u613f\u51fa\u552e-&gt;\u9000\u51fa\u5e02\u573a-&gt;\u6b21\u8d27\u5360\u9886\u5e02\u573a\uff0c\u5373\u201c\u52a3\u5e01\u9a71\u9010\u826f\u5e01\u201d-&gt;\u964d\u4f4e\u4e70\u5356\u53cc\u65b9\u798f\u5229-&gt;\u5e02\u573a\u5931\u7075 \u89e3\u51b3\u65b9\u6848\uff1a\u76d1\u7ba1\u3001\u4fdd\u4fee\uff08\u65af\u5bbe\u585e\u52b3\u52a8\u529b\u5e02\u573a\u6a21\u578b\uff0c\u5b66\u5386\u7684\u7b5b\u9009\u4f5c\u7528\uff09\uff0c\u4fdd\u9669\u7684\u9006\u5411\u9009\u62e9\uff08\u4e70\u5bb6\u9009\u62e9\u8d2d\u4e70\uff09\uff0c\u9053\u5fb7\u98ce\u9669\uff08\u5df2\u7ecf\u8d2d\u4e70\u4fdd\u9669\uff09  </p>"},{"location":"sp25/data_market/note/#_23","title":"\u6570\u636e","text":"<p>\u5356\u5bb6\u5784\u65ad\uff0c\u96f6\u6210\u672c\u590d\u5236\u6027\uff1a\u4f9b\u7ed9\u66f2\u7ebf\u5931\u6548\uff08P=0,\u9700\u6c42Q=0,P&gt;0,Q=+\u221e\uff09\uff0c\u5916\u90e8\u6027\uff08\u7ade\u4e89\u5382\u5bb6\u7684\u8d2d\u4e70\uff09\uff0c\u6570\u636e\u4ea7\u6743\uff0c\u4fe1\u606f\u4e0d\u5bf9\u79f0\uff08\u4e70\u5bb6\u4e0d\u77e5\u9053\u6548\u7528\uff0c\u5356\u5bb6\u4e0d\u786e\u5b9a\u4e70\u5bb6\uff09 \u4ef7\u683c\u6b67\u89c6  </p> <ul> <li>\u4e00\u7ea7\uff08\u5b8c\u5168\uff09\u4ef7\u683c\u6b67\u89c6\uff1a\u5b8c\u5168\u638c\u63e1\u6d88\u8d39\u8005\u504f\u597d  </li> <li>\u4e09\u7ea7\u4ef7\u683c\u6b67\u89c6\uff1a\u6839\u636e\u6d88\u8d39\u8005\u7279\u5f81\u6536\u53d6\u4e0d\u540c\u4ef7\u683c\uff08\u5927\u6570\u636e\u6740\u719f\uff0c\u5b66\u751f\u534a\u4ef7\uff09  </li> <li>\u4e8c\u7ea7\u4ef7\u683c\u6b67\u89c6\uff1a\u6309\u4e0d\u540c\u4ef7\u683c\u51fa\u552e\u4e0d\u540c\u6570\u91cf\u7684\u5546\u54c1\uff08\u4ef7\u76ee\u8868\uff09\uff08\u5927\u5ba2\u6237\uff0c\u4fe1\u606f\u7504\u522b\uff0c\u7248\u672c\u5316\uff09  </li> </ul>"},{"location":"sp25/data_market/note/#_24","title":"\u535a\u5f08\u8bba\u57fa\u7840","text":"<p>\\(max u(x) \\rightarrow max u(x_i,x_{-i}),x_{-i} = (x_1,...,x_{i-1},x_{i+1},...,x_n)\\) \u5784\u65ad\uff08\u5355\u4e2a\uff09\uff0c\u5be1\u5934\u5784\u65ad\uff08\u5c11\u6570\u5382\u5546\uff09\uff0c\u4f2f\u5ddd\u5fb7\u7ade\u4e89\uff0c\u4ef7\u683c=\u6210\u672c \u534f\u8bae\uff08\u5784\u65ad\u534f\u8bae\uff09\uff0c\u4e66\u5e97\u6784\u6210\u5361\u7279\u5c14\uff08\u53cd\u5784\u65ad\u6cd5\uff09 \u535a\u5f08\u7684\u57fa\u672c\u8981\u7d20\uff1a\u591a\u4e2a\u4eba\u7684\u51b3\u7b56\uff0c\u535a\u5f08\u7684\u884c\u4e3a\u76f8\u4e92\u5f71\u54cd \u4e09\u5143\u7ec4G=(N,S,u),\u53c2\u4e0e\u4ebaN\uff0c\u7b56\u7565\uff1a\u96c6\u5408S\uff0c\u62a5\u916c\u51fd\u6570u \u535a\u5f08\u7684\u89e3/\u89e3\u6982\u5ff5 \u535a\u5f08\u7684\u5206\u7c7b  </p> <ul> <li>\u975e\u5408\u4f5c  </li> <li>\u5b8c\u5168\u4fe1\u606f/\u975e\u5b8c\u5168\u4fe1\u606f  </li> <li>\u9759\u6001/\u52a8\u6001  </li> <li>\u5408\u4f5c  </li> </ul>"},{"location":"sp25/data_market/note/#_25","title":"\u5360\u4f18\u7b56\u7565\u5747\u8861","text":"<p>\u4e25\u683c\u52a3\u7b56\u7565\uff1a\u65e0\u8bba\u5bf9\u65b9\u9009\u62e9\u4ec0\u4e48\uff0c\u81ea\u5df1\u9009\u62e9\u8fd9\u4e2a\u7b56\u7565\u90fd\u662f\u6700\u5dee\u7684\uff08\u88ab\u4e25\u683c\u5360\u4f18\uff09 \u51fa\u4e8e\u4e2a\u4eba\u7406\u6027\u7684\u51b3\u7b56\u65e0\u6cd5\u8fbe\u5230\u793e\u4f1a\u6700\u4f18 \u89e3\u51b3\u56da\u5f92\u56f0\u5883\uff1a\u5f3a\u5236\u529b\uff0c\u673a\u5236\u8bbe\u8ba1\uff0c\u957f\u671f\u5173\u7cfb... \u535a\u5f08\u8bba\u6c42\u89e3\uff1a\u91cd\u590d\u5254\u9664\u4e25\u683c\u52a3\u7b56\u7565 \u5982\u679c\u6ca1\u6709\u4e25\u683c\u52a3\u7b56\u7565-&gt;\u5f31\u5360\u4f18\uff08\u5728\u6240\u6709\u60c5\u51b5\u5927\u4e8e\u7b49\u4e8e\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5927\u4e8e\uff09 \u98a4\u6296\u7684\u624b\u539f\u5219\uff1a\u8003\u8651\u5404\u60c5\u51b5\u90fd\u6709\u6982\u7387\u53d6\u5230 \u91cd\u590d\u5254\u9664\u5f31\u52a3\u7b56\u7565\u7684\u987a\u5e8f\u4f1a\u5f71\u54cd\u7ed3\u679c\uff08\u4e25\u683c\u52a3\u7b56\u7565\u4e0d\u5f71\u54cd\uff09 quiz3.1  </p>"},{"location":"sp25/data_market/note/#_26","title":"\u7eb3\u4ec0\u5747\u8861","text":"<p>\u7a33\u5b9a\u7b56\u7565\uff1a\u6ca1\u6709\u4eba\u613f\u610f\u504f\u79bb\u7684\u7b56\u7565\uff0c\u6b64\u65f6\u7684\u7b56\u7565\u5bf9\u6bcf\u4e2a\u4eba\u6765\u8bf4\u662f\u4e00\u4e2a\u5bf9\u7ed9\u5b9a\u7b56\u7565\u7684\u6700\u4f73\u5e94\u5bf9 \u79bb\u6563\u7b56\u7565\u6c42\u89e3\uff1a\u4e92\u4e3a\u6700\u4f18\u53cd\u5e94 quiz3.2  \u4e24\u4e2a\u5706\u5708\u5708\u51fa\u7684\u90fd\u662f\u7eb3\u4ec0\u5747\u8861 \u8fde\u7eed\u7b56\u7565\u6c42\u89e3\uff1a\u53e4\u8bfa\u7ade\u4e89\uff08\u7ade\u4e89\u4ea7\u91cf\uff09 \u6700\u4f18\u53cd\u5e94-&gt;\u504f\u5bfc\u6570\u4e3a0\uff08\u8bb0\u5f97\u9a8c\u8bc1\u4e8c\u9636\u5bfc\uff09 \u7eb3\u4ec0\u5747\u8861\uff1a\u5747\u8861\u7b56\u7565\u65e0\u4eba\u6539\u53d8\uff0c\u5360\u4f18\u7b56\u7565\u5747\u8861\uff1a\u5bf9\u5bf9\u65b9\u4efb\u610f\u7b56\u7565\u90fd\u5360\u4f18 \u534f\u8c03\u535a\u5f08\uff1a\u535a\u5f08\u53cc\u65b9\u534f\u8c03\u5404\u81ea\u7684\u7b56\u7565\u5bf9\u53cc\u65b9\u90fd\u6709\u5229  </p>"},{"location":"sp25/data_market/note/#lec-04","title":"Lec 04:\u975e\u5408\u4f5c\u535a\u5f08\u8bba\u57fa\u7840\uff08\u4e8c\uff09","text":""},{"location":"sp25/data_market/note/#_27","title":"\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861","text":"<p>\u7a33\u5b9a\u7684\u7b56\u7565\u5e26\u6709\u968f\u673a\uff0c\u6df7\u5408\u7b56\u7565\u5373\u4e3a\u9009\u62e9\u7b56\u7565\\(s_i\\)\u7684\u6982\u7387\u5206\u5e03\uff0c\u7eaf\u7b56\u7565\uff1a\u67d0\u4e00\u4e2a\u7b56\u7565\u6982\u7387\u4e3a1 \u7b56\u7565\u578b\u535a\u5f08\u7684\u6df7\u5408\u6269\u5c55\uff0c\u7b56\u7565-&gt;\u6982\u7387\u5206\u5e03\uff0c\u6548\u7528-&gt;\u671f\u671b\uff08\u51af\u8bfa\u4f9d\u66fc-\u6469\u6839\u65af\u5766\u6548\u7528\uff09 \u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\uff1a\u6548\u7528\uff08\u671f\u671b\uff09\u6700\u9ad8\u7684\u6df7\u5408\u7b56\u7565\u5411\u91cf\uff08\u6982\u7387\u5206\u5e03\uff09 \u7b49\u4ef7\u5b9a\u4e49\uff1a\u53ea\u9700\u8981\u4e0e\u7eaf\u7b56\u7565\u76f8\u6bd4\uff08\u4e0d\u504f\u5411\u4efb\u4f55\u4e00\u4e2a\u7eaf\u7b56\u7565\uff09 **\u8ba1\u7b97\uff1a\u6700 </p> <p>\u4f18\u53cd\u5e94\uff0c\u65e0\u5dee\u5f02\u539f\u5219\uff08\u5bf9\u5e94\u6c42\u5bfc\u7b49\u4e8e0\uff0c\u7eaf\u7b56\u7565\u4e4b\u95f4\u65e0\u5dee\u5f02\uff09 \u63a8\u8bba\uff1a\u88ab\u4e25\u683c\u5360\u4f18\u7684\u7b56\u7565\u4e0d\u53ef\u80fd\u5c5e\u4e8e\u6df7\u5408\u7b56\u7565\u7684\u652f\u6491\u96c6\u5408\uff08\u88ab\u8d4b\u4e88\u6b63\u6982\u7387\uff09 \u65e0\u5dee\u5f02\u4f46\u4ecd\u9009\u53d6\u67d0\u4e00\u4e2a\u56fa\u5b9a\u7b56\u7565\u6982\u7387\u662f\u4e3a\u4e86\u8fbe\u5230\u7a33\u5b9a\u72b6\u6001\uff08\u4e0d\u7136\u5bf9\u65b9\u4f1a\u4fee\u6539\u7b56\u7565\uff09 note:\u65e0\u5dee\u5f02\u539f\u5219\u53ea\u662f\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\u7684\u5fc5\u8981\u6761\u4ef6\uff0c\u9700\u8981\u9a8c\u8bc1\u662f\u5426\u5b58\u5728\u66f4\u9ad8\u6548\u7528\uff08\u7eaf\u7b56\u7565\uff09** \u7eb3\u4ec0\u5b9a\u7406\uff08\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\u7684\u5b58\u5728\u6027\uff09\uff1a\u6bcf\u4e00\u4e2a\u7b56\u7565\u578b\u535a\u5f08G\uff0c\u5982\u679c\u53c2\u4e0e\u4eba\u6570\u6709\u9650\uff0c\u7eaf\u7b56\u7565\u6570\u76ee\u6709\u9650\uff0c\u90a3\u4e48G\u81f3\u5c11\u6709\u4e00\u4e2a\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861  </p>"},{"location":"sp25/data_market/note/#_28","title":"\u5b8c\u5168\u4fe1\u606f\u52a8\u6001\u535a\u5f08","text":"<p>\u6269\u5c55\u5f0f\u535a\u5f08\uff0c\u7b56\u7565\u4e3a\u5411\u91cf\uff08\u5373\u4f7f\u5728\u67d0\u5904\u505c\u4e0b\uff09 \u5b50\u535a\u5f08\uff1a\u5b50\u6811 \u5b8c\u7f8e\u4fe1\u606f\u535a\u5f08\uff1a\u6bcf\u4e2a\u53c2\u4e0e\u4eba\u5728\u884c\u52a8\u65f6\uff0c\u90fd\u77e5\u9053\u4ed6\u4f4d\u4e8e\u535a\u5f08\u6811\u7684\u54ea\u4e2a\u8282\u70b9\u4e0a\uff08e.g\u8c61\u68cb&amp;\u6597\u5730\u4e3b\uff09 \u5b50\u535a\u5f08\u5b8c\u7f8e\u5747\u8861 \u5747\u8861\u7cbe\u70bc\uff08\u9009\u62e9\u67d0\u4e00\u4e9b\u5747\u8861\uff09 \u5b58\u5728\u4e0d\u662f\u5b50\u535a\u5f08\u5b8c\u7f8e\u5747\u8861\u7684\u7eb3\u4ec0\u5747\u8861\uff08\u5168\u5c40\u5747\u8861\u5728\u67d0\u4e00\u4e2a\u5b50\u535a\u5f08\u4e0a\u4e0d\u518d\u5b8c\u7f8e\u5747\u8861\uff09 \u56e0\u4e3a\u5a01\u80c1\u7684\u5b58\u5728\u6240\u4ee5\u67d0\u4e00\u5747\u8861\u662f\u7eb3\u4ec0\u5747\u8861\uff0c\u4f46\u8fd9\u4e00\u5a01\u80c1\u53ef\u80fd\u662f\u4e0d\u53ef\u7f6e\u4fe1\u7684\uff08\u4e0d\u7406\u6027\u7684\uff09 \u6b64\u65f6\u5b50\u535a\u5f08\u5b8c\u7f8e\u5747\u8861\u662f\u7eb3\u4ec0\u5747\u8861\u7684\u7cbe\u70bc \u5b8c\u5168\u6df7\u5408\u7684\u7eb3\u4ec0\u5747\u8861\u662f\u5b50\u535a\u5f08\u5b8c\u7f8e\u5747\u8861\uff08\u6bcf\u4e2a\u7b56\u7565\u90fd\u6709\u6b63\u6982\u7387\uff0c\u5b58\u5728\u5a01\u80c1\uff09 \u8ba1\u7b97\u5b50\u535a\u5f08\u5b8c\u7f8e\u5747\u8861\uff1a\u9006\u5411\u5f52\u7eb3\u6cd5 \u6bcf\u4e2a\u6709\u9650\u5b8c\u7f8e\u4fe1\u606f\u6269\u5c55\u5f0f\u535a\u5f08\u90fd\u81f3\u5c11\u6709\u4e00\u4e2a\u5b50\u535a\u5f08\u5b8c\u7f8e\u7eaf\u7b56\u7565\u5747\u8861 \u4ea7\u91cf\u9886\u5bfc\u6a21\u578b\uff08\u65af\u5854\u514b\u5c14\u4f2f\u683c\u6a21\u578b\uff09\uff1a\u53cc\u5c42\u4f18\u5316\u95ee\u9898  </p>"},{"location":"sp25/data_market/note/#_29","title":"\u4e0d\u5b8c\u5168\u4fe1\u606f\u535a\u5f08","text":"<p>\u884c\u4e1a\u535a\u5f08\u5747\u8861\u8ba1\u7b97\uff1a\u5148\u9a8c\u6982\u7387\uff0c\u52a3\u7b56\u7565/\u65e0\u5dee\u5f02\u539f\u5219 \u7b56\u7565\u5f0f\u535a\u5f08\uff1a\u4e94\u5143\u7ec4\uff08\u6dfb\u52a0\u53c2\u4e0e\u4eba\u7c7b\u578b\u4e0e\u5148\u9a8c\u5206\u5e03p\uff09\uff0c\u5148\u9a8c\u5206\u5e03p\u662f\u7ed9\u7c7b\u578b\u5411\u91cf\u8d4b\u4e88\u4e00\u4e2a\u6982\u7387 \u6548\u7528\u4e0e\u6240\u6709\u4eba\u7684\u7c7b\u578b\u76f8\u5173\uff08\u53ef\u4ee5\u8003\u8651\u4f60\u548c\u4e00\u4e2a\u80fd\u529b\u672a\u77e5\u7684\u4eba\u5339\u914d\u6253\u6e38\u620f\uff09\uff0c\u800c\u7b56\u7565\u53ea\u4e0e\u81ea\u5df1\u7684\u7c7b\u578b\u76f8\u5173 \u8d1d\u53f6\u65af\u5747\u8861\uff1a\u5bf9\u6bcf\u4e00\u4e2a\u53c2\u4e0e\u4ebai\uff0c\u6bcf\u4e2a\u7c7b\u578bti\uff0c\u6bcf\u4e2a\u53ef\u80fd\u7684\u7eaf\u7b56\u7565si\uff0c\u90fd\u6709\u6548\u7528\u6700\u5927 \u4e09\u9636\u6bb5  </p> <ul> <li>\u81ea\u7136\u8d4b\u4e88\u7684\u7c7b\u578b\uff08\u4e8b\u524d\u9636\u6bb5ex ante\uff09  </li> <li>\u66f4\u65b0\u5206\u5e03\u9009\u62e9\u5f62\u540c\uff08\u4e8b\u4e2d\u9636\u6bb5interim\uff09  </li> <li>\u5f97\u5230\u6536\u76ca\uff08\u4e8b\u540e\u9636\u6bb5ex post)  </li> </ul> <p>\u4f7f\u7528\u65e0\u5dee\u5f02\u539f\u5219\u524d\u8981\u68c0\u9a8c\u662f\u5426\u5b58\u5728\u7eaf\u7b56\u7565\u5747\u8861 2024-HW4-4.2  </p>"},{"location":"sp25/data_market/note/#lec-06","title":"Lec 06:\u591a\u81c2\u8001\u864e\u673a\u7b97\u6cd5\u57fa\u7840\u4e0e\u5e94\u7528","text":""},{"location":"sp25/data_market/note/#_30","title":"\u968f\u673a\u591a\u81c2\u8001\u864e\u673a","text":"<p>\u673a\u5668\u5b66\u4e60\uff1a\u7279\u6027-&gt;\u6807\u7b7e\u5b66\u4e60\u6620\u5c04 \u57fa\u4e8e\u8bc6\u522b\u7684\uff1a\u56de\u5f52\uff0c\u805a\u7c7b \u57fa\u4e8e\u76d1\u7763\u7684\uff1a\u591a\u81c2\u8001\u864e\u673a \u63a2\u7d22\u4e0e\u5229\u7528  </p> <ul> <li>\u5b8c\u5168\u53cd\u9988\uff1a\u770b\u5230\u6240\u6709\u81c2\u7684\u6536\u76ca\uff08\u80a1\u7968\uff09  </li> <li>\u90e8\u5206\u53cd\u9988\uff1a\u90e8\u5206\u81c2\u7684\u5956\u52b1\uff08\u5b9a\u4ef7\uff09  </li> <li>\u8001\u864e\u673a\u53cd\u9988\uff1a\u53ea\u80fd\u770b\u5230\u9009\u62e9\u81c2\u7684\u5956\u52b1\uff08\u65b0\u95fb\uff09  </li> </ul> <p>\u9057\u61be\u5206\u6790 \u4f2a\u9057\u61be\uff0c\u671f\u671b\u9057\u61be Hoeffding \u4e0d\u7b49\u5f0f  </p>"},{"location":"sp25/data_market/note/#_31","title":"\u8d2a\u5fc3\u7b97\u6cd5","text":"<p>\u59cb\u7ec8\u9009\u62e9\u5f53\u524d\u4f30\u8ba1\u5956\u52b1\u6700\u9ad8\u7684\u81c2\uff0c\u5e76\u5229\u7528\u5386\u53f2\u7ecf\u9a8c\u66f4\u65b0\u5bf9\u6bcf\u4e2a\u81c2\u7684\u5956\u52b1\u4f30\u8ba1\u503c \u9057\u61be\u5206\u6790\uff1a\\(O(T^{\\frac{2}{3}}(KlogT)^\\frac{1}{3}\\)(K\u662f\u81c2\u7684\u6570\u91cf\uff0c\u6240\u6709\u7684\u6536\u76ca\u90fd\u57280\uff0c1\u4e4b\u95f4)  </p>"},{"location":"sp25/data_market/note/#-","title":"\\(\u03b5\\)-\u8d2a\u5fc3\u7b97\u6cd5","text":"<p>\u4ee5\\(1-\u03b5\\)\u7684\u6982\u7387\u9009\u62e9\u5f53\u524d\u4f30\u8ba1\u5956\u52b1\u6700\u9ad8\u7684\u81c2\uff0c\u4ee5\\(\u03b5\\)\u7684\u6982\u7387\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u81c2 HW1.7</p>"},{"location":"sp25/data_market/note/#ucb","title":"\u4e0a\u7f6e\u4fe1\u754c\u7b97\u6cd5\uff08UCB\uff09","text":"<p>\u9996\u5148\u5c06\u6bcf\u4e00\u4e2a\u5019\u9009\u81c2\u90fd\u9009\u62e9\u4e00\u904d\uff0c\u4f5c\u4e3a\u521d\u59cb\u5316\uff1b\u7136\u540e\u5728\u540e\u7eed\u7684\u65f6\u95f4\u6b65\u4e2d\uff0c\u9009\u62e9\u5956\u52b1\u5747\u503c\u4f30\u8ba1\u91cf\u7684\u4e0a\u7f6e\u4fe1\u754c\u6700\u5927\u7684\u81c2 \u8be5\u503c\u8d8a\u5927\u5219\u8bf4\u660e\u4f30\u8ba1\u7684\u4e0d\u786e\u5b9a\u6027\u8d8a\u5927\uff0c\u56e0\u6b64\u80fd\u8fc7\u9f13\u52b1\u73a9\u5bb6\u5c1d\u8bd5\u8f83\u5c11\u88ab\u9009\u62e9\u7684\u81c2\uff0c\u907f\u514d\u9677\u5165\u6b21\u4f18 UCB \u7b97\u6cd5\u7684\u9057\u61be\u754c\u4e3a\\(O(\\sqrt{KT\\log T})\\)</p>"},{"location":"sp25/data_market/note/#_32","title":"\u6c64\u666e\u68ee\u91c7\u6837\u7b97\u6cd5","text":"<p>\u91c7\u7528\u8d1d\u53f6\u65af\u65b9\u6cd5\uff0c\u4e3a\u6bcf\u4e2a\u81c2\u7ef4\u62a4\u4e00\u4e2a\u5148\u9a8c\u6982\u7387\u5206\u5e03\uff0c\u8868\u793a\u5bf9\u8be5\u81c2\u5956\u52b1\u6982\u7387\u7684\u4fe1\u5ff5\u3002\u6bcf\u6b21\u9009\u62e9\u81c2\u65f6\uff0c\u4ece\u6bcf\u4e2a\u81c2\u7684\u540e\u9a8c\u6982\u7387\u5206\u5e03\u4e2d\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u9009\u62e9\u91c7\u6837\u503c\u6700\u9ad8\u7684\u81c2\u3002\u6700\u540e\uff0c\u6839\u636e\u83b7\u5f97\u7684\u5956\u52b1\u66f4\u65b0\u6240\u9009\u81c2\u7684\u540e\u9a8c\u6982\u7387\u5206\u5e03\uff0c\u4ece\u800c\u5728\u63a2\u7d22\u548c\u5229\u7528\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002 \u4f7f\u7528Beta\u5206\u5e03\u5728\u83b7\u5f97\u5956\u52b1\u540e\u8c03\u6574\u6982\u7387\u5206\u5e03 TS \u7b97\u6cd5\u7684\u9057\u61be\u754c\u4e3a\\(O(\\sqrt{KT\\log T})\\)</p>"},{"location":"sp25/data_market/note/#_33","title":"\u5bf9\u6297\u6027\u591a\u81c2\u8001\u864e\u673a","text":"<p>\u5bf9\u624b\u5728\u5df2\u77e5\u6982\u7387\u5206\u5e03\u7684\u60c5\u51b5\u4e0b\u9009\u62e9\u4e00\u4e2a\u4ee3\u4ef7\u5411\u91cf \u73a9\u5bb6\u53ef\u4ee5\u5b66\u5230\u6240\u6709\u4ee3\u4ef7\u4ee5\u8c03\u6574\u7b56\u7565\uff08\u5168\u53cd\u9988\uff09 \u5b9a\u4e49\u9057\u61be\uff1a\u548c\u6bcf\u8f6e\u90fd\u9009\u62e9\u540c\u4e00\u884c\u52a8\u7684\u6700\u4f18\u7684\u56fa\u5b9a\u884c\u52a8\u7684\u4ee3\u4ef7\u4e4b\u5dee \u65e0\u61be\uff1a\u5e73\u5747\u9057\u61be\u8d8b\u4e8e0 \u8ddf\u98ce\u7b97\u6cd5\uff08Follow-The-Leader,FTL\uff09\uff1a\u5728\u6bcf\u4e00\u4e2a\u65f6\u95f4\u70b9t\uff0c\u9009\u62e9\u6700\u5c0f\u7d2f\u8ba1\u4ee3\u4ef7\u7684\u884c\u52a8i \u8ddf\u98ce\u7b97\u6cd5\u4e0d\u662f\u65e0\u61be\u7684 \u968f\u673a\u5316\u662f\u65e0\u61be\u7684\u5fc5\u8981\u6761\u4ef6\uff08\u901a\u4fd7\u800c\u8a00\uff0c\u5982\u679c\u4e0d\u968f\u673a\uff0c\u5bf9\u624b\u53ef\u4ee5\u6bcf\u6b21\u8bbe\u7f6e\u7b56\u7565\u5bf9\u5e94\u884c\u52a8\u7684\u4ee3\u4ef7\u4e3a1\uff09 \u7b80\u5355\u60c5\u51b5\uff08\u5b58\u5728\u4e00\u4e2a\u5b8c\u7f8e\u7684\u884c\u52a8\uff0c\u5176\u4ee3\u4ef7\u6c38\u8fdc\u4e3a 0\uff0c\u4e14\u4ee3\u4ef7\u53ea\u6709\u53ef\u80fd\u4e3a0\u62161\uff09 \u5bf9\u6bcf\u4e00\u6b65 \ud835\udc61 = 1, 2, ..., \ud835\udc47 \uff0c\u8bb0\u5f55\u622a\u81f3\u76ee\u524d\u4ece\u6ca1\u51fa\u73b0\u8fc7\u4ee3\u4ef7 1 \u7684\u884c\u52a8\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u884c\u52a8\u4e2d\u6839\u636e\u5747\u5300\u5206\u5e03\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u884c\u52a8 \u65e0\u61be\u7b97\u6cd5\uff1a\u4e58\u6027\u6743\u91cd\u7b97\u6cd5 \u4ee3\u4ef7\u53ef\u4ee5\u662f[0,1]\u4e2d\u7684\u4efb\u610f\u503c\uff0c\u4e0d\u5b58\u5728\u5b8c\u7f8e\u7b56\u7565\uff0c\u5219\u7ef4\u62a4\u6743\u91cd\u51fd\u6570\uff1a\\(w_{t+1}(i)=w_t(i)(1-\\epsilon c_t(i))\\) \u9057\u61be\u4e0a\u754c\\(O(\\sqrt{T\\ln n})\\) Hedge\u7b97\u6cd5\uff0cExp3\u7b97\u6cd5\uff08\u8001\u864e\u673a\u53cd\u9988\uff09  </p>"},{"location":"sp25/data_market/note/#_34","title":"\u591a\u81c2\u8001\u864e\u673a\u7684\u5e94\u7528","text":"<p>\u52a8\u6001\u5b9a\u4ef7\u95ee\u9898 \u4e8c\u5206\u641c\u7d22\uff1a\u5411\u4e0a\u63a2\u7d22\u65f6\u8fc7\u4e8e\u6fc0\u8fdb \u6539\u8fdb\u7b97\u6cd5\uff1a\u4f7f\u7528\u5e73\u65b9\u7f29\u5c0f \u6539\u8fdb\u7b97\u6cd5\u7684\u9057\u61be\u4e3a1+2loglogN  </p>"},{"location":"sp25/data_market/note/#lec-05","title":"Lec 05:\u5408\u4f5c\u535a\u5f08\u4e0e\u6570\u636e\u4f30\u503c","text":""},{"location":"sp25/data_market/note/#_35","title":"\u5408\u4f5c\u535a\u5f08","text":"<p>\u5206\u644a\u7f8e\u5143\u535a\u5f08\uff1a\u516c\u5e73\u3001\u6548\u7387  \u53ef\u8f6c\u79fb\u6548\u7528\u7684\u5408\u4f5c\u535a\u5f08\uff08TU\u535a\u5f08\uff09\uff1a\u53c2\u4e0e\u4eba\u7684\u5b50\u96c6\u6210\u4e3a\u8054\u76df\uff0cv\u662f\u8054\u76df\u7684\u7279\u5f81\u51fd\u6570\uff0cv(S)\u8868\u793a\u8054\u76dfS\u7684\u4ef7\u503c \u89e3\u6982\u5ff5\uff1a\u4e00\u4e2a\u5c06\u6bcf\u4e2a\u535a\u5f08\u90fd\u6620\u5c04\u5230\u4e00\u4e2a\u53ef\u884c\u7684\u6536\u5165\u5206\u914d\u96c6\u5408\u7684\u51fd\u6570 \u5982\u679c\u5bf9\u4e8e\u4efb\u610f\u7684\u535a\u5f08\u89e3\u6982\u5ff5\u90fd\u662f\u4e00\u4e2a\u5355\u70b9\u96c6\uff0c\u5219\u79f0\u8fd9\u4e00\u89e3\u6982\u5ff5\u4e3a\u5355\u70b9\u89e3  </p>"},{"location":"sp25/data_market/note/#_36","title":"\u6838","text":"<p>\u5b9a\u4e49\uff1a\u6ee1\u8db3\u6709\u6548\u7387\u7684\uff0c\u8054\u76df\u7406\u6027\uff08\u5bf9\u4e8e\u4efb\u4f55\u8054\u76df\u800c\u8a00\uff0c\u4ed6\u4eec\u5728\u5927\u8054\u76df\u4e2d\u5206\u914d\u5230\u7684\u6536\u5165\u4e00\u5b9a\u4e0d\u4f1a\u6bd4\u79bb\u5f00\u5927\u8054\u76df\u7ec4\u6210\u5c0f\u8054\u76df\u83b7\u5f97\u7684\u6536\u5165\u5c11\uff09\u7684\u5408\u4f5c\u535a\u5f08\u7684\u89e3\u6982\u5ff5</p>"},{"location":"sp25/data_market/note/#_37","title":"\u6570\u636e\u4f30\u503c","text":"<p>Shapley\u503c\u6027\u8d28\uff1a\u6709\u6548\u7387\u7684\uff0c\u53c2\u4e0e\u4eba\u5bf9\u79f0\u7684\uff08\u4e24\u4e2a\u4e0d\u540c\u53c2\u4e0e\u4eba\u7684\u52a0\u5165\u4e3a\u8054\u76df\u589e\u52a0\u7684\u6536\u5165\u4e00\u81f4\uff09\uff0c\u89e3\u6982\u5ff5\u5bf9\u79f0\u7684\uff08\u4e0d\u540c\u53c2\u4e0e\u4ebai\u548cj\u7684\u89e3\u6982\u5ff5\u76f8\u540c\uff09\uff0c\u96f6\u53c2\u4e0e\u4eba\uff08\u5982\u679c\u4e00\u4e2a\u53c2\u4e0e\u4eba\u5bf9\u4e8e\u4efb\u4f55\u8054\u76df\u7684\u52a0\u5165\u90fd\u4e0d\u4f1a\u589e\u52a0\u8054\u76df\u7684\u6548\u7528\uff0c\u90a3\u4e48\u4ed6\u7684\u6536\u5165\u4e3a0\uff09 Shapley\u503c\u5b9a\u4e49\uff1a\u5bf9\u6240\u6709\u53ef\u80fd\u7684\u6392\u5217\uff0c\u6c42\u51fa\u5206\u914d\u5411\u91cf\u7684\u52a0\u6743\u5e73\u5747 \u6392\u5217\uff08n!\uff09\uff0c\u7ec4\u5408\uff082<sup>n-1</sup>\uff09 $$ v(S)= \\begin{cases} 0 &amp; S=\\varnothing  \\ 17 &amp; S=\\left{A\\right} \\ 15 &amp; S=\\left{B\\right} \\ 18 &amp; S=\\left{C\\right} \\ 35 &amp; S=\\left{A,B\\right} \\ 36 &amp; S=\\left{B,C\\right} \\ 38 &amp; S=\\left{A,C\\right} \\ 56 &amp; S=\\left{A,B,C\\right}  \\end{cases} $$</p> \u6392\u5217 A B C ABC 17 18 21 ACB 17 18 21 BAC 20 15 21 BCA 20 15 21 CAB 20 18 18 CBA 20 18 18 avg 19 17 20 <p>\u7559\u4e00\u6cd5\uff08leave-one-out,LOO\uff09\uff1a\u6570\u636eDi\u7684\u6548\u7528\uff08\u63a7\u5236\u53d8\u91cf\uff09T=O(n) *Data Shapley:Di \u5bf9\u5927\u5c0f\u4e3a j \u7684\u8054\u76df\u7684\u8fb9\u9645\u8d21\u732e Beta Shapley:\u8d4b\u4e88\u6743\u91cd\uff0c\u66f4\u91cd\u89c6\u8f83\u5c0f\u8054\u76df\u7684\u8fb9\u9645\u8d21\u732e Data Banzhaf:\u964d\u4f4e\u8f93\u5165\u987a\u5e8f\u7684\u5f71\u54cd T=O(2<sup>n</sup>)  </p>"},{"location":"sp25/data_market/note/#shapley","title":"Shapley\u503c\u8ba1\u7b97","text":"<p>\u6392\u5217\u91c7\u6837\uff1a\u8fb9\u9645\u8d21\u732e\u3001\u4e92\u8865\u8d21\u732e \u52a8\u6001Shapley\u503c\uff08\u589e\u5220\u67d0\u4e9b\u6570\u636e\u7684Shapley\u503c\u53d8\u5316\uff09  </p>"},{"location":"sp25/data_market/note/#lec-07","title":"Lec 07:\u62cd\u5356\u4e0e\u673a\u5236\u8bbe\u8ba1\u57fa\u7840","text":""},{"location":"sp25/data_market/note/#_38","title":"\u62cd\u5356\u7406\u8bba\u57fa\u7840","text":"<ul> <li>posted price  </li> <li>auction:bid(\u6295\u6807)  </li> <li>open-bid auction  <ul> <li>English auction(open ascending price)\uff1a\u4e8c\u4ef7\uff08\u4f46\u5b58\u5728\u76f8\u4e92\u4f9d\u8d56\u4ef7\u503c\uff09  </li> <li>Dutch auction(open descending price)\uff1a\u4e00\u4ef7  </li> </ul> </li> <li>sealed-bid auction  <ul> <li>first-price auction(\u4e00\u4ef7\u62cd\u5356):\u652f\u4ed8\u81ea\u5df1\u7684\u62a5\u4ef7  </li> <li>second-price auction(\u4e8c\u4ef7\u62cd\u5356):\u652f\u4ed8\u7b2c\u4e8c\u9ad8\u7684\u62a5\u4ef7 reserve price,entry fee  </li> </ul> </li> <li>bargaining(double-auction)  </li> <li>reverse auction  </li> <li>\u591a\u7269\u54c1\uff08\u9891\u8c31\uff09/\u7ec4\u5408\u62cd\u5356  </li> </ul> <p>\u6295\u6807\u89c4\u5219\uff0c\u4ea4\u6613\u89c4\u5219\uff0c\u4fe1\u606f\u89c4\u5219</p>"},{"location":"sp25/data_market/note/#_39","title":"\u5355\u7269\u54c1\u5bc6\u5c01\u62cd\u5356","text":"<p>\u5206\u914d\u89c4\u5219\uff08\u67d0\u6295\u6807\u4e0b\u83b7\u5f97\u7269\u54c1\u7684\u6982\u7387\uff09\uff0c\u652f\u4ed8\u89c4\u5219\uff08\u67d0\u6295\u6807\u4e0b\u9700\u8981\u652f\u4ed8\u7684\u4ef7\u683c\uff09  </p>"},{"location":"sp25/data_market/note/#_40","title":"\u4e8c\u4ef7\u62cd\u5356","text":"<p>\u4e8c\u4ef7\u62cd\u5356\u662f\u8bda\u5b9e\u5360\u4f18\u7684 \u793e\u4f1a\u798f\u5229\uff1a \u4e70\u5bb6:\\(t_i-p,0,...,0\\) \u5356\u5bb6:\\(p\\) \u798f\u5229\uff1a\u6700\u9ad8\u62a5\u4ef7\\(t_i\\) \u4e8c\u4ef7\u62cd\u5356\u7684\u7f3a\u9677\uff1a\u8c0e\u62a5\u7b2c\u4e8c\u4ef7\u683c \u4e8c\u4ef7\u62cd\u5356\u8bda\u5b9e\u7684\u5173\u952e\uff1a\u62a5\u4ef7\u4e0e\u81ea\u5df1\u7684\u4f30\u503c\u65e0\u76f4\u63a5\u5173\u8054 \u5927\u4e8e\u7b49\u4e8e\u4e09\u4ef7\u62cd\u5356\u90fd\u662f\u4e0d\u8bda\u5b9e\u7684\uff0c\u4ee5\u4e09\u4ef7\u62cd\u5356\u4e3a\u4f8b\uff0c\u7ade\u62cd\u8005\u6709\u52a8\u673a\u5938\u5927\u62a5\u4ef7\uff0c\u56e0\u4e3a\u652f\u4ed8\u7684\u662f\u7b2c\u4e09\u9ad8\u4ef7\u800c\u975e\u81ea\u5df1\u7684\u62a5\u4ef7\uff0c\u7ade\u62cd\u8005\u53ef\u4ee5\u6709\u610f\u63d0\u9ad8\u62a5\u4ef7\u4ee5\u786e\u4fdd\u83b7\u80dc\uff0c\u53ea\u8981\u7b2c\u4e09\u9ad8\u4ef7\u5c0f\u4e8e\u4f30\u503c\u5c31\u4ecd\u7136\u53ef\u4ee5\u76c8\u5229\uff0c\u4e0d\u540c\u4e8e\u4e8c\u4ef7\u62cd\u5356\uff0c\u56e0\u4e3a\u5728\u4e8c\u4ef7\u62cd\u5356\u4e2d\uff0c\u5982\u679c\u7ade\u62cd\u8005\u63d0\u9ad8\u62a5\u4ef7\u53ef\u80fd\u652f\u4ed8\u9ad8\u4e8e\u81ea\u5df1\u4f30\u503c\u7684\u4ef7\u503c\u5bfc\u81f4\u4e8f\u635f  </p>"},{"location":"sp25/data_market/note/#_41","title":"\u4e00\u4ef7\u62cd\u5356","text":"<p>\u5bf9\u79f0\u9012\u589e\u5747\u8861\u7b56\u7565\\(\u03b2(t)=t/2\\)</p>"},{"location":"sp25/data_market/note/#_42","title":"\u6536\u5165\u7b49\u4ef7\u5b9a\u7406","text":"<p>\u5047\u8bbe\u7ade\u62cd\u8005\u4f30\u4ef7\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u90a3\u4e48\u53ea\u8981\u4f30\u4ef7\u4e3a 0 \u7684\u7ade\u62cd\u8005\u7684\u671f\u671b\u652f\u4ed8\u4e3a0\uff0c\u4e14\u62cd\u5356\u89c4\u5219\u4e3a\u62a5\u4ef7\u6700\u9ad8\u8005\u5f97\u5230\u7269\u54c1\uff0c\u5219\u62cd\u5356\u7684\u9012\u589e\u5bf9\u79f0\u5747\u8861\u90fd\u4f1a\u4f7f\u5f97\u5356\u5bb6\u83b7\u5f97\u76f8\u7b49\u7684\u671f\u671b\u6536\u5165\u3002 \u6ce8\uff1a\u671f\u671b\u652f\u4ed8=\u5747\u8861\u51fa\u4ef7*\u6982\u7387\uff0c\u671f\u671b\u6536\u5165=\u671f\u671b\u652f\u4ed8\u7684\u79ef\u5206\u548c\uff08P20\uff09  </p>"},{"location":"sp25/data_market/note/#_43","title":"\u673a\u5236\u8bbe\u8ba1\u57fa\u7840","text":"<p>\u5b9a\u4e49\uff1a\u5bf9\u4e0d\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\uff0c\u4e00\u4e2a\u673a\u5236\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4(S,M)\uff0cS\u662f\u53c2\u4e0e\u4eba\u7684\u7eaf\u7b56\u7565\u96c6\u5408\uff0cM\u662f\u5c06\u7eaf\u7b56\u7565\u5411\u91cf\u6620\u5c04\u5230\u7ed3\u679c\u96c6\u5408\u7684\u6982\u7387\u5206\u5e03\u7684\u6620\u5c04 \u786e\u5b9a\u6027\uff1aM\u6620\u5c04\u5230\u786e\u5b9a\u7684\u7ed3\u679c\u96c6\u5408O  </p>"},{"location":"sp25/data_market/note/#_44","title":"\u663e\u793a\u539f\u7406","text":"<p>\u76f4\u63a5\uff08\u663e\u793a\uff09\u673a\u5236\uff1a\u7b56\u7565=\u7c7b\u578b\uff0c\u62a5\u544a\u4f30\u503c \u6fc0\u52b1\u76f8\u5bb9\uff1a\u8bda\u5b9e\u62a5\u544a\uff0c\u5360\u4f18\u7b56\u7565\u6fc0\u52b1\u76f8\u5bb9\uff08dominant-strategy incentive compatib,DISC\uff09\uff08\u8bda\u5b9e\u7b56\u7565\u662f\u5360\u4f18\u5747\u8861\uff09\uff0c\u8d1d\u53f6\u65af\u6fc0\u52b1\u76f8\u5bb9\uff08BIC\uff09\uff08\u8bda\u5b9e\u7b56\u7565\u662f\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\uff09 \u663e\u793a\u539f\u7406\uff1a\u7ed9\u5b9a\u4efb\u610f\u4e00\u4e2a\u673a\u5236\u53ca\u5176\u5747\u8861\u7b56\u7565\uff08\u5360\u4f18\u7b56\u7565\u5747\u8861\u6216\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\uff09\uff0c\u90fd\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u6fc0\u52b1\u76f8\u5bb9\u7684\u76f4\u63a5\u673a\u5236\uff0c\u4f7f\u5f97\u4e24\u4e2a\u673a\u5236\u7684\u7ed3\u679c\u4e00\u81f4 \u4f8b\uff1a\u5c06\u4e00\u4ef7\u62cd\u5356\u53d8\u8bda\u5b9e \u62a5\u4ef7\u9ad8\u83b7\u5f97\u7269\u54c1\u4f46\u53ea\u9700\u652f\u4ed8\u62a5\u4ef7\u4e00\u534a \u673a\u5236\u8bbe\u8ba1\u8005\u66ff\u4ee3\u53c2\u4e0e\u4eba\u505a\u4e86\u6c42\u89e3\u5747\u8861\u7684\u5de5\u4f5c </p>"},{"location":"sp25/data_market/note/#_45","title":"\u8fc8\u5c14\u68ee\u5f15\u7406","text":"<p>\u4e00\u4e2a\u62cd\u5356\u673a\u5236\u662fDSIC\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5176\u5206\u914d\u89c4\u5219\u548c\u652f\u4ed8\u89c4\u5219(x,p)\u6ee1\u8db3\uff0cx\u662f\u5355\u8c03\u4e0d\u51cf\uff08\u62a5\u4ef7\u8d8a\u9ad8\u6982\u7387\u8d8a\u9ad8\uff09\uff1b\u7ed9\u5b9ax\uff0cp\u7684\u8868\u8fbe\u5f0f\u552f\u4e00\u786e\u5b9a\\(p_i(b_i)=p_i(0)+b_i\\cdot x_i(b_i)-\\int_0^{b_i}x_i(s)ds\\)\uff08\u8fc8\u5c14\u68ee\u652f\u4ed8\u516c\u5f0f\uff09\uff08\u4e3a\u4e86\u8ba9\u522b\u4eba\u8bda\u5b9e\u9700\u8981\u635f\u5931\u4e00\u5b9a\u7684\u5229\u6da6\uff0c\u4e00\u4ef7\u62cd\u5356\u4e0d\u8bda\u5b9e\u7684\u539f\u56e0\uff09 \u4e8c\u4ef7\u62cd\u5356\u7684\u9a8c\u8bc1 critical value \u5bf9m\u4e2a\u76f8\u540c\u6570\u636e\u8bbe\u8ba1DSIC\u62cd\u5356\uff0cm+1\u4ef7\u62cd\u5356 \u8fc8\u5c14\u68ee\u5f15\u7406\u7684\u8bc1\u660e\uff1a\u8fde\u4e0d\u7b49\u5f0f\uff0c\u540c\u9664z-y\u5e76\u4ee4z-&gt;y  </p>"},{"location":"sp25/data_market/note/#_46","title":"\u798f\u5229\u6700\u5927\u5316\u673a\u5236\u8bbe\u8ba1","text":"<p>\u798f\u5229\u6700\u5927\u5316\u673a\u5236\uff1a\u62cd\u5356\u673a\u5236\u9009\u62e9\u7684\u5206\u914d\u65b9\u6848\uff0c\u4f7f\u5f97\u793e\u4f1a\u798f\u5229\u8fbe\u5230\u6700\u5927\uff0c\u5373\u6240\u6709\u8d62\u5bb6\u5bf9\u5206\u914d\u5230\u7269\u54c1\u7684\u4f30\u503c\u4e4b\u548c\u6700\u5927 \uff08\u8fc8\u5c14\u68ee\u5f15\u7406\u65e0\u6cd5\u89e3\u51b3\u7684\u60c5\u51b5\uff1a\u591a\u7ef4\uff09 VCG\u673a\u5236\uff1a\u5047\u8bbe\u8bda\u5b9e\uff0c\u5206\u914d\u89c4\u5219\uff1a\u6240\u6709\u4eba\u6536\u76ca\u6700\u5927\u5316\u7684\u5206\u914d\\(\\omega^*=argmax_{\\omega\\in\\Omega}\\sum_{i=1}^nb_i(\\omega)\\)\uff0c\u652f\u4ed8\u89c4\u5219\uff1a\u4e0d\u5305\u542b\u53c2\u4e0e\u4ebai\u7684\u6700\u5927\u798f\u5229-\u6240\u6709\u53c2\u4e0e\u4eba\uff08i\u4e5f\u53c2\u4e0e\u62cd\u5356\uff09\u7684\u6700\u5927\u798f\u5229\u518d\u5254\u9664i\uff08\u5916\u90e8\u6027\uff0c\u52a0\u5165\u62cd\u5356\u7684\u5f71\u54cd\uff09\\(p_i(b)=\\sum_{j\\neq i}b_j(\\omega_{-i}^*)-\\sum_{j\\neq i}b_j(\\omega^*)\\)\uff0c\u53ef\u80fd\u6709\u591a\u79cd\u5206\u914d\u65b9\u5f0f\uff0c\u9700\u8981\u5206\u522b\u8ba1\u7b97 \u4e8c\u4ef7\u62cd\u5356\u7684\u4f8b\u5b50 VCG\u662fDSIC\uff08\u8bda\u5b9e\uff09\u7684\uff1b\u798f\u5229\u6700\u5927\u5316\u7684\uff08\u4e8b\u540e\u6709\u6548\u7387\u7684/\u5e15\u7d2f\u6258\u6700\u4f18\u7684\uff1a\u6240\u6709\u53c2\u4e0e\u8005\u771f\u5b9e\u4fe1\u606f\uff08\u5982\u4f30\u503c\uff09\u5df2\u77e5\u7684\u60c5\u51b5\u4e0b\uff0c\u8d44\u6e90\u7684\u5206\u914d\u65b9\u5f0f\u80fd\u591f\u5b9e\u73b0\u793e\u4f1a\u798f\u5229\u6700\u5927\u5316\uff0c\u5373\u6ca1\u6709\u4efb\u4f55\u5176\u4ed6\u5206\u914d\u65b9\u5f0f\u80fd\u8ba9\u81f3\u5c11\u4e00\u4e2a\u4eba\u53d8\u5f97\u66f4\u597d\uff0c\u800c\u4e0d\u8ba9\u5176\u4ed6\u4eba\u53d8\u5dee\uff09\uff1b\u652f\u4ed8\u975e\u8d1f\u7684\uff1b\u4e8b\u540e\u4e2a\u4eba\u7406\u6027\uff08\u53c2\u4e0e\u673a\u5236\u4e2a\u4eba\u6548\u7528\u975e\u8d1f\uff09 \u7f3a\u9677\uff1a\u8ba1\u7b97\u56f0\u96be\u6027\uff0c\u589e\u52a0\u7ade\u62cd\u8005\u5bfc\u81f4\u5356\u5bb6\u6536\u76ca\u964d\u4f4e\uff08\u524a\u5f31\u5356\u5bb6\u7684\u53c2\u4e0e\u610f\u613f\uff09 \u589e\u52a0\u7ade\u62cd\u8005\u53ef\u80fd\u964d\u4f4eVCG\u673a\u5236\u7684\u6536\u76ca\uff0c\u4f46\u589e\u52a0\u7ade\u62cd\u8005\u4e0d\u4f1a\u964d\u4f4e\u4e8c\u4ef7\u62cd\u5356\u7684\u6536\u76ca   </p>"},{"location":"sp25/data_market/note/#lec-08","title":"Lec 08:\u6700\u4f18\u673a\u5236","text":"<p>\u5356\u5bb6\u7684\u6536\u76ca\u6700\u5927\u5316\u7684\u62cd\u5356\u673a\u5236</p>"},{"location":"sp25/data_market/note/#_47","title":"\u865a\u62df\u798f\u5229\u6700\u5927\u5316","text":"<p>\u4e0d\u540c\u73a9\u5bb6\u7684\u4f30\u503c\u5206\u5e03\u662f\u72ec\u7acb\u7684\uff08\u4f46\u4e0d\u4e00\u5b9a\u662f\u540c\u5206\u5e03\u7684\uff09</p>"},{"location":"sp25/data_market/note/#bic","title":"BIC\u8fc8\u5c14\u68ee\u5f15\u7406","text":"<p>\u8bda\u5b9e\u662f\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861 \u7528\u671f\u671b\u6982\u7387\u4e0e\u671f\u671b\u652f\u4ed8\u66ff\u6362DISC\u60c5\u51b5\u4e0b\u7684\u6982\u7387\u4e0e\u652f\u4ed8  </p>"},{"location":"sp25/data_market/note/#ir","title":"IR\u4e2a\u4eba\u7406\u6027","text":"<p>\u7ade\u62cd\u8005\u4f30\u503c\u4e3a\u6700\u4f4e\u503c\u65f6\u7684\u671f\u671b\u652f\u4ed8\u5c0f\u4e8e\u7b49\u4e8e0</p>"},{"location":"sp25/data_market/note/#_48","title":"\u8f6c\u5316\u4e3a\u865a\u62df\u798f\u5229\u6700\u5927\u5316\u95ee\u9898","text":"<p>\u865a\u62df\u4f30\u503c\\(c_i(t_i)=t_i-\\frac{1-F_i(t_i)}{f_i(t_i)}\\) \u865a\u62df\u798f\u5229\u6700\u5927\u5316\u65f6\uff0c\u62cd\u5356\u673a\u5236\u80fd\u540c\u65f6\u517c\u987e\u6536\u76ca\u548c\u6548\u7387</p>"},{"location":"sp25/data_market/note/#_49","title":"\u6700\u4f18\u673a\u5236","text":"<p>\u6700\u5927\u5316\u865a\u62df\u4f30\u503c\u7684\u52a0\u6743\u5e73\u5747 \u6b63\u5219\u5316\u6761\u4ef6\uff1a\u865a\u62df\u4f30\u503c\\(c_i(t_i)\\)\u662f\u5355\u8c03\u9012\u589e\u7684 \u7ed9\u6700\u5927\u865a\u62df\u4f30\u503c\u8005\u8d4b\u6982\u73871\uff08\u5982\u679c\u865a\u62df\u4f30\u503c\u90fd\u5c0f\u4e8e0\uff0c\u5168\u8d4b\u6982\u73870\uff0c\u4e0d\u5356\u4e86\uff09 \u4e0e\u4e8c\u4ef7\u62cd\u5356\u7684\u533a\u522b\uff1a\\(c^{-1}(0)\\)\u4fdd\u7559\u4ef7\uff0c\u4f4e\u4e8e\u4e0d\u5356\uff08\u72ec\u7acb\u540c\u5206\u5e03\uff09 \u6700\u4f18\u673a\u5236\u7684\u6761\u4ef6\uff1a\u865a\u62df\u4f30\u503c\u6700\u5927\u4e14\u5927\u4e8e\u7b49\u4e8e0\uff0c\\(c_i(t_i)=max_{j\\neq i}c_j(t_j)\\ge 0\\) \u7f3a\u9677\uff1a\u4f30\u503c\u5206\u5e03\u96be\u4ee5\u68c0\u6d4b\uff0c\u975e\u5bf9\u79f0\u6a21\u578b\u62a5\u4ef7\u6700\u9ad8\u7684\u4e0d\u4e00\u5b9a\u83b7\u5f97\u7269\u54c1\uff08\u4e0d\u7b26\u5408\u4e8b\u540e\u6709\u6548\uff09\uff0c\u5b58\u5728\u4fdd\u7559\u4ef7\u7269\u54c1\u4e0d\u4e00\u5b9a\u80fd\u5356\u51fa\uff08\u4e0d\u7b26\u5408\u798f\u5229\u6700\u5927\u5316\uff0c\u8fd9\u662f\u663e\u7136\u7684\uff0c\u5229\u6da6\u6700\u5927\u5316\u548c\u798f\u5229\u6700\u5927\u5316\u662f\u4f1a\u6709\u51b2\u7a81\u7684\uff09 \u591a\u7269\u54c1\u5355\u4f4d\u9700\u6c42\u62cd\u5356\uff1a\u865a\u62df\u4f30\u503c\u5927\u4e8e\u4fdd\u7559\u4ef7\u5c31\u5356  </p>"},{"location":"sp25/data_market/note/#_50","title":"*\u62cd\u5356\u4e0e\u6570\u636e\u5b9a\u4ef7","text":"<p>\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff1a\u5355\u4f4d\u9884\u6d4b\u51c6\u786e\u5ea6\u7684\u4f30\u503c\uff0c\u6a21\u578b\u9884\u6d4b\u7684\u51c6\u786e\u7387\uff08\u6dfb\u52a0\u566a\u58f0\uff09 \u7ade\u4e89\u6bd4\uff1a\u65e0\u5148\u9a8c\u62cd\u5356\u673a\u5236\u7684\u6536\u76ca\u4e0e\u56fa\u5b9a\u4ef7\u683c\u7684\u6700\u4f18\u6536\u76ca\u7684\u6bd4\uff0c2.42 \u5dee\u5206\u9690\u79c1\u4e0e\u8fd1\u4f3c\u8bda\u5b9e \u6307\u6570\u673a\u5236</p>"},{"location":"sp25/data_market/note/#lec-09","title":"Lec 09:\u6570\u636e\u7248\u672c\u5316\u5b9a\u4ef7","text":""},{"location":"sp25/data_market/note/#_51","title":"\u6570\u636e\u4ea4\u6613\u57fa\u672c\u6846\u67b6","text":""},{"location":"sp25/data_market/note/#_52","title":"\u6570\u636e\u5b9a\u4ef7\u57fa\u672c\u65b9\u6cd5","text":"<p>\u6210\u672c\u6cd5\u3001\u6536\u76ca\u6cd5\u3001\u5e02\u573a\u6cd5</p>"},{"location":"sp25/data_market/note/#_53","title":"\u6570\u636e\u5b9a\u4ef7\u57fa\u672c\u7b56\u7565","text":"<p>\u6570\u636e\u5b9a\u4ef7\u57fa\u672c\u8981\u6c42\uff1a  </p> <ul> <li>\u4f20\u7edf\u5e02\u573a\u5b9a\u4ef7\u8981\u6c42  </li> <li>\u6548\u7528\u6700\u5927\u5316/\u5e15\u7d2f\u6258\u6700\u4f18/\u9884\u7b97\u7ea6\u675f/\u793e\u4f1a\u798f\u5229\u6700\u5927\u5316  </li> <li>\u5e73\u8861\u9884\u7b97  </li> <li>\u4e2a\u4eba\u7406\u6027  </li> <li>\u65e0\u5ac9\u5992  </li> <li>\u6570\u636e\u9690\u79c1\u6027  </li> <li>\u52a8\u6001\u6027\uff08\u6570\u636e\u66f4\u65b0\uff09  </li> <li>\u65e0\u5957\u5229\u539f\u5219  </li> <li>\u8bda\u5b9e\u6027/\u6fc0\u52b1\u76f8\u5bb9  </li> <li>\u516c\u5e73\u5206\u914d  </li> <li>\u9ad8\u6548  </li> </ul> <p>\u4e2a\u4eba\u7406\u6027\uff0c\u6fc0\u52b1\u76f8\u5bb9\uff0c\u5e73\u8861\u9884\u7b97\u4e0e\u793e\u4f1a\u798f\u5229\u6700\u5927\u5316\u56db\u8005\u4e0d\u53ef\u517c\u5f97 \u73b0\u5b9e\u4e2d\u7684\u5b9a\u4ef7\u7b56\u7565\uff1a  </p> <ul> <li>\u514d\u8d39\u6570\u636e  </li> <li>\u6839\u636e\u4f7f\u7528\u6b21\u6570\u51b3\u5b9a\u4ef7\u683c  </li> <li>\u6253\u5305\u5b9a\u4ef7  </li> <li>\u8ba2\u9605\u5236  </li> <li>\u514d\u8d39\u589e\u503c  </li> </ul> <p>\u7279\u70b9\uff1a\u9700\u6c42\u5bfc\u5411 \u514d\u8d39\u589e\u503c\u7684\u65b9\u5f0f\uff1a\u7248\u672c\u5316  </p> <ul> <li>\u539f\u59cb\u6570\u636e\u7248\u672c\u5316\uff1a\u6570\u636e\u5206\u5757\u51fa\u552e\uff0c\u6839\u636e\u6570\u636e\u5173\u952e\u6027\u7279\u5f81\u5206\u7ea7\u5206\u7c7b\u51fa\u552e\uff0c\u6dfb\u52a0\u566a\u58f0\u6784\u9020\u65b0\u7248\u672c  </li> <li>\u67e5\u8be2\u6570\u636e\u7248\u672c\u5316\uff1a\u4e3a\u4efb\u610fSQL\u67e5\u8be2\u5b9a\u4ef7  </li> <li>\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7248\u672c\u5316\uff1a\u6dfb\u52a0\u566a\u58f0\u5f71\u54cd\u6a21\u578b\u51c6\u786e\u6027\uff0c\u4ece\u800c\u751f\u6210\u4e0d\u540c\u7248\u672c\u7684\u6a21\u578b  </li> </ul> <p>\u95ee\u9898\uff1a\u5957\u5229\uff08\u5229\u7528\u5e02\u573a\u4ef7\u683c\u5dee\u5f02\u65e0\u98ce\u9669\u8d5a\u53d6\u5229\u6da6\uff09 \u5356\u9999\u85493\u7f8e\u5143\u4e00\u6839\uff0c10\u7f8e\u5143\u4e09\u6839 \u5148\u5206\u4e09\u6b21\u501f\u5230\u4e09\u6839\u9999\u8549\uff08\u505a\u7a7a\uff09\uff0c\u6346\u7ed1\u51fa\u552e\u518d\u5206\u4e09\u6b21\u8fd8\u94b1  </p>"},{"location":"sp25/data_market/note/#_54","title":"\u67e5\u8be2\u6570\u636e\u7684\u7248\u672c\u5316\u5b9a\u4ef7","text":"<p>\u4fe1\u606f\u65e0\u5957\u5229\uff1a\u5982\u679c\u67d0\u67e5\u8be2Q1\u7684\u7ed3\u679c\u662f\u53e6\u4e00\u4e2a\u67e5\u8be2Q2\u7ed3\u679c\u7684\u5b50\u96c6\uff0c\u90a3\u4e48Q1\u7684\u4ef7\u683c\u4f4e\u4e8eQ2 \u7ec4\u5408\u65e0\u5957\u5229\uff1a\u5982\u679c\u4e00\u6b21\u67e5\u8be2\u53ef\u4ee5\u62c6\u6210\u4e24\u6b21\u5b8c\u6210\uff0c\u90a3\u4e48\u4e00\u6b21\u67e5\u8be2\u7684\u4ef7\u683c\u4e0d\u80fd\u5927\u4e8e\u4e24\u6b21\u67e5\u8be2\u7684\u4ef7\u683c\u4e4b\u548c\uff0c\u5426\u5219\u4e70\u5bb6\u53ef\u4ee5\u901a\u8fc7\u4e24\u6b21\u67e5\u8be2\u7ed5\u8fc7\u4e00\u6b21\u67e5\u8be2\u5b9e\u73b0\u5957\u5229 \u5355\u8c03\u6027\uff1a\\(\\forall A\\subseteq B,f(A)\\le f(B)\\) \u6b21\u53ef\u52a0\u6027\uff1a\\(f(x+y)\\le f(x)+f(y)\\) \u6216\\(v(A\\cup B)\\le v(A)+v(B)\\)\u7ade\u62cd\u8005\u5bf9\u7269\u54c1\u7ec4\u5408\u7684\u4f30\u503c\u4e0d\u8d85\u8fc7\u5355\u72ec\u4f30\u503c\u4e4b\u548c</p>"},{"location":"sp25/data_market/note/#_55","title":"\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u7248\u672c\u5316\u5b9a\u4ef7","text":"<p> \u6570\u636e\u62e5\u6709\u8005compensation function:\u9690\u79c1\u95ee\u9898\u4e0e\u6536\u5165\u5206\u914d \u6a21\u578b\u8d2d\u4e70\u8005price function:\u6570\u636e\u4ea7\u54c1\u7684\u6548\u7528 \u4e2d\u95f4\u5546:\u5212\u5206\u6a21\u578b\u7248\u672c\u4f7f\u5f97\u6536\u5165\u6700\u5927\u5316\uff0c\u5e76\u5b9e\u73b0\u516c\u5e73\u5206\u914d\u3001\u65e0\u5957\u5229\u3001\u6a21\u578b\u6548\u7528\u6700\u5927\u5316 Revenue Maximization\uff1aQ-NP\u95ee\u9898\uff0c\u5b58\u57282-\u8fd1\u4f3c\u7b97\u6cd5  </p>"},{"location":"sp25/data_market/note/#lec-10","title":"Lec 10:\u8d1d\u53f6\u65af\u529d\u8bf4","text":""},{"location":"sp25/data_market/note/#_56","title":"\u4f8b\u5b50","text":"<p>1.\u53c2\u4e0e\u4eba\uff1a\u5bfc\u5e08\u3001\u4f01\u4e1a 2.\u7b56\u7565\uff1a\u5199\u63a8\u8350\u4fe1\uff0c$A=\\left{\u96c7\uff0c\u4e0d\u96c7\\right}  $ 3.\u7c7b\u578b\uff1a\u5b66\u751f\\(\\Omega = \\left\\{ex,av\\right\\},\\omega \\in \\Omega\\) 4.\u5148\u9a8c\uff1a\\(\\mu_0(ex)=0.25,\\mu_0(av)=0.75\\) 5.\u6548\u7528\uff1a  </p> <ul> <li>\u5bfc\u5e08\uff1a\\(v(\u96c7,\\omega)=1,v(\u4e0d\u96c7,\\omega)=0\\) </li> <li>\u4f01\u4e1a\uff1a\\(v(\u96c7,ex)=1,v(\u96c7,av)=-0.5,v(\u4e0d\u96c7)=0\\) </li> </ul> <p>\u5bfc\u5e08\u7684\u7b56\u7565(\u4f01\u4e1a\u5df2\u77e5) \\(S=\\left\\{e,a\\right\\}\\) \\(\\pi(e|ex),\\pi(a|ex),\\pi(e|av),\\pi(a|av)\\):\u5bf9\u597d/\u4e00\u822c\u540c\u5b66\u5199\u597d/\u4e00\u822c\u63a8\u8350\u4fe1\u7684\u6982\u7387 \u8bda\u5b9e\u7b56\u7565\uff1a\\(\\pi(e|ex)=1,\\pi(a|ex)=0,\\pi(e|av)=0,\\pi(a|av)=1\\) \u4f01\u4e1a\uff1ae-&gt;hiring,a-&gt;not \\(u=0.25\\) \u5bfc\u5e08\uff1a\\(u=0.25\\) \u5b8c\u5168\u4e0d\u8bda\u5b9e\uff1a\\(\\pi(e|ex)=1,\\pi(e|av)=1,\\pi(a|ex)=0,\\pi(a|av)=0\\) \u4f01\u4e1a\uff1a \u96c7\uff1a\\(0.25*1-0.75-0.5=-0.125\\) \u4e0d\u96c7\uff1a\\(u=0\\) \u5bfc\u5e08\uff1a\\(u=0\\) \u90e8\u5206\u8bda\u5b9e\uff1a\\(\\pi(e|ex)=1,\\pi(e|av)=\\frac{2}{3},\\pi(a|ex)=0,\\pi(a|av)=\\frac{1}{3}\\) \u4f01\u4e1a\uff1a \\(\\mu_a(ex)=0,\\mu_a(av)=1\\)\uff08\u63a8\u8350\u4fe1\u4e00\u822c\u7684\u60c5\u51b5\u4e0b\uff0c\u5b66\u751f\u7c7b\u578b\u7684\u6982\u7387\uff0c\u540e\u9a8c\u5206\u5e03\\(\\mu(ex|a)\\)\uff09 \\(\\mu_e(ex)=\\frac{1}{3},\\mu_e(av)=\\frac{2}{3}\\) \u8d1d\u53f6\u65af\u516c\u5f0f\uff1a\\(\\mu(\\omega|s)\\stackrel{\\Delta}{=}\\mu_s(\\omega)=\\frac{\\pi(s|\\omega)\\mu_0(\\omega)}{\\sum_{\\omega' \\in \\Omega}\\pi(s|\\omega')\\mu_0(\\omega')}\\) \u96c7|e\uff1a\\(\\frac{1}{3}*1-\\frac{2}{3}*0.5=0\\)\uff0c\u4e0d\u96c7:0 \u4e0d\u96c7|a:\\(0\\) (\u96c7\u548c\u4e0d\u96c7\u65e0\u5dee\u5f02) \\(u=0\\) \u5bfc\u5e08\uff1a\\(u=0.75\\) </p>"},{"location":"sp25/data_market/note/#_57","title":"\u6a21\u578b\u63cf\u8ff0\u4e0e\u95ee\u9898\u8f6c\u5316","text":""},{"location":"sp25/data_market/note/#_58","title":"\u4e00\u822c\u6a21\u578b","text":"<p>1.\u53c2\u4e0e\u4eba\uff1a\u4fe1\u53f7\u53d1\u9001\u65b9\u3001\u63a5\u6536\u65b9 2.\u7b56\u7565\uff1a  </p> <ul> <li>\u53d1\u9001\u65b9\uff1a\\((S,\\pi(S|\\omega))\\)-&gt;\u4fe1\u53f7\u673a\u5236\uff0c\u5176\u4e2d\\(S\\)\u662f\u4fe1\u53f7\u5b9e\u73b0\u7a7a\u95f4\uff0c\\(s\\in S\\)\u662f\u4fe1\u53f7\u5b9e\u73b0  </li> <li>\u63a5\u6536\u65b9\uff1a\\(A\\left\\{a_1,...,a_n\\right\\}\\) </li> </ul> <p>3.\u6548\u7528\u51fd\u6570\uff1a\u53d1\u9001\u65b9\\(v(a,\\omega)\\)\uff0c\u63a5\u6536\u65b9\\(u(a,\\omega)\\) 4.\u7c7b\u578b\u548c\u5148\u9a8c\u5206\u5e03\\(\\Omega=\\left\\{\\omega_1,...,\\omega_n\\right\\}\\)\uff0c\\(\\mu_0 \\in int(\\Delta(\\Omega))\\)\uff08\\(\\Omega\\)\u4e0a\u6982\u7387\u5206\u5e03\u7684\u5185\u70b9\uff09 \u884c\u52a8\u987a\u5e8f\uff1a 1.\u53d1\u9001\u65b9\u516c\u5f00\uff08\u627f\u8bfa\uff09\u4e00\u4e2a\u4fe1\u53f7\u673a\u5236\\((S,\\pi(S|\\omega))\\) 2.\u81ea\u7136\u4ece\\(\\mu_0(\\omega)\\)\u62bd\u53d6\u4e00\u4e2a\\(\\omega \\in \\Omega\\) 3.\u5bfc\u5e08\u6839\u636e\u4fe1\u53f7\u673a\u5236\\(\\pi(s|\\omega)\\)\uff0c\u53d1\u9001\\(s \\in S\\) 4.\u63a5\u6536\u65b9\u6536\u5230\\(s\\)\u540e\uff0c\u8ba1\u7b97\\(\\mu_s\\)\uff0c\u9009\u62e9\u6700\u4f18\u884c\u52a8 5.\u8ba1\u7b97\u63a5\u6536\u65b9\\(u(a,\\omega)\\)\uff0c\u53d1\u9001\u65b9\\(v(a,\\omega)\\) \u76ee\u6807\uff1a 1.\u53d1\u9001\u65b9\u53d1\u9001\u4fe1\u53f7\u662f\u5426\u53ef\u4ee5\u4f7f\u6548\u7528\u63d0\u5347\uff1f\u4ec0\u4e48\u6837\u7684\u60c5\u51b5\u4f1a\u63d0\u5347\uff1f 2.\u6700\u4f18\u7684\u4fe1\u53f7\u673a\u5236\u662f\u4ec0\u4e48\uff1f 3.\u63a5\u6536\u8005\u662f\u5426\u613f\u610f\u63a5\u6536\u8fd9\u6837\u7684\u4fe1\u53f7\uff1f  </p>"},{"location":"sp25/data_market/note/#_59","title":"\u95ee\u9898\u8f6c\u5316","text":"<p>\u540e\u9a8c\u6982\u7387\u5206\u5e03\u7684\u5206\u5e03\\(\\tau\\)\uff0c\u6709\u652f\u6491\u96c6\\(\\left\\{\\mu_e,\\mu_a\\right\\}\\)\uff0c\\(\\tau(\\mu_e)=0.75=P(e),\\tau(\\mu_a)=0.25\\) \u671f\u671b\\(\\mathbb{E}(\\tau)=0.75(\\frac{1}{3},\\frac{2}{3})+0.25(0,1)=(0.25,0.75)=\\mu_0\\) \u5b9a\u4e49\uff1a 1.\\(\\tau\\)\u7531\u4fe1\u53f7\u673a\u5236\u5bfc\u81f4 2.\u8d1d\u53f6\u65af\u53ef\u884c(Beyasian plausible): $$ \\sum_{\\mu}\\tau(\\mu)\\cdot\\mu=\\mu_0 $$ \u5b9a\u7406:\u4e00\u4e2a\u8d1d\u53f6\u65af\u53ef\u884c\u7684\u540e\u9a8c\u6982\u7387\u5206\u5e03\u7684\u5206\u5e03\\(\\tau\\)\\(\\iff\\)\\(\\tau\\)\u7531\u4fe1\u53f7\u673a\u5236\u5bfc\u81f4 \u8bc1\u660e\uff1a\\(\\Leftarrow:S=\\left\\{s_1,...,s_n\\right\\}\\) \\(\\forall s\\in S,\\omega \\in \\Omega,\\mu_s(\\omega)=\\frac{\\pi(s|\\omega)\\cdot\\mu_0(\\omega)}{\\sum_{\\omega'}\\pi(s|\\omega')\\cdot\\mu_0(\\omega')}\\) \\(\\tau(\\mu_s)=P(s)=\\sum_{\\omega'}\\pi(s|\\omega')\\cdot\\mu_0(\\omega')\\) \\(\\Rightarrow\\sum_{s\\in S}\\tau(\\mu_s)\\cdot \\mu_s=\\sum_{s\\in S}\\pi(s|\\omega)\\cdot\\mu_0(\\omega)=\\mu_0(\\omega)\\) \\(\\Rightarrow:\\tau(\\mu_s),\\mu_0(\\omega),\\mu_s(\\omega)\\rightarrow\\pi(s|\\omega)\\) \\((\\tau(\\mu_s)\\cdot\\mu_s(\\omega)=\\pi(s|\\omega)\\cdot\\mu_0(\\omega))\\) \u4ee4\\(\\pi(s|\\omega)=\\frac{\\tau(\\mu_s)\\mu_s(\\omega)}{\\mu_0(\\omega)}\\rightarrow\\sum_{s\\in S}\\frac{\\tau(\\mu_s)\\mu_s(\\omega)}{\\mu_0(\\omega)}=1\\) \u4fe1\u53f7\u673a\u5236\\(\\iff\\)\u8d1d\u53f6\u65af\u53ef\u884c\u7684\u540e\u9a8c\u6982\u7387\u5206\u5e03\u7684\u5206\u5e03\\(\\iff\\)\u6700\u4f18\u884c\u52a8\u7684\u5206\u5e03\\(\\iff\\)\u53d1\u9001\u8005\u671f\u671b\u6548\u7528 \u95ee\u9898\u8f6c\u5316\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u8d1d\u53f6\u65af\u53ef\u884c\u7684\u540e\u9a8c\u6982\u7387\u5206\u5e03\u7684\u5206\u5e03\\(\\tau\\)\u4f7f\u5f97\u63a5\u6536\u8005\u6548\u7528\u6700\u5927\u5316  </p>"},{"location":"sp25/data_market/note/#_60","title":"\u6700\u4f18\u4fe1\u53f7\u673a\u5236","text":"<p>\u8bbe\u540e\u9a8c\u6982\u7387\u5206\u5e03\u4e3a\\(\\mu\\)\u65f6\uff0c\u63a5\u6536\u65b9\u6700\u4f18\u884c\u52a8\u4e3a\\(\\hat{a}(\\mu)\\) \\(\\hat{v}(\\mu)=E_{\\mu}v(\\hat{a}(\\mu),\\omega)\\) \u6700\u4f18\u5316\u7684\u76ee\u6807\uff1a\\(max E_{\\tau}\\hat{v}(\\mu),s.t.\\sum_{\\mu}\\tau(\\mu)\\cdot\\mu=\\mu_0\\) \u5b9a\u7406\uff08\u4fe1\u606f\u8bbe\u8ba1\u7684\u663e\u793a\u539f\u7406\uff09\uff1a\u53ea\u9700\u8981\u8003\u8651\\(S \\subseteq A\\)\uff0c\u4e14\u4e00\u4e2a\\(s\\in S\\)\u5bf9\u5e94\u4e00\u4e2a\u6700\u4f18\\(a\\in A\\)\u7684\u673a\u5236\uff08\u5bfc\u5e08\u53d1\u9001\u7684\u4fe1\u53f7\u5bf9\u5e94\u4f01\u4e1a\u7684\u6700\u4f18\u884c\u52a8\uff09\uff0c\u5373\u4fe1\u53f7\u53ef\u5408\u5e76  </p>"},{"location":"sp25/data_market/note/#_61","title":"\u6700\u4f18\u4fe1\u53f7\u673a\u5236\u7684\u89e3","text":""},{"location":"sp25/data_market/note/#_62","title":"\u51f9\u5305\u7edc","text":"<p>\u5b9a\u4e49(\u51fd\u6570\\(\\hat{v}\\))\u7684\u51f9\u5305\u7edc\\(V(\\mu)=sup\\left\\{z|(\\mu,z)\\in co(\\hat{v})\\right\\}\\)\u3002\u5176\u4e2d\\(co(\\hat{v})\\)\u662f\\(\\hat{v}\\)\u56fe\u50cf\u7684\u51f8\u5305\uff08\u5927\u4e8e\u7b49\u4e8e\\(\\hat{v}\\)\u7684\u6700\u5c0f\u51f9\u51fd\u6570\uff09 \u51f8\u5305\uff1a\u5c06\u67d0\u4e2a\u96c6\u5408\u8865\u6210\u51f8\u96c6\uff08\u4efb\u610f\u4e24\u70b9\u8fde\u7ebf\u5728\u96c6\u5408\u5185\uff09 </p>"},{"location":"sp25/data_market/note/#_63","title":"\u5bfc\u5e08\u5199\u63a8\u8350\u4fe1\u7684\u89e3","text":"<p>\\(\\mu(excellent)\\ge\\frac{1}{3}\\)\u65f6\uff0c\\(\\hat{a}(\\mu)=hiring\\)\uff0c\u5bfc\u5e08\u7684\u6548\u7528\\(\\hat{v}(\\mu)=1\\)\uff0c\u53cd\u4e4b\u4e3a\\(0\\) \\(\\mu_1(ex)=0,\\mu_1(av)=1,\\tau(\\mu_1)=\\frac{1}{4}\\) \\(\\mu_2(ex)=\\frac{1}{3},\\mu_2(av)=\\frac{2}{3},\\tau(\\mu_2)=\\frac{3}{4}\\) \\(\\pi(1|ex)=\\frac{\\tau(\\mu_1)\\cdot\\mu_1(ex)}{\\mu_0(ex)}=0\\) \\(\\pi(1|av)=\\frac{\\tau(\\mu_1)\\cdot\\mu_1(av)}{\\mu_0(av)}=\\frac{1}{3}\\) \\(\\pi(2|ex)=\\frac{\\tau(\\mu_2)\\cdot\\mu_2(ex)}{\\mu_0(ex)}=1\\) \\(\\pi(2|av)=\\frac{\\tau(\\mu_2)\\cdot\\mu_2(av)}{\\mu_0(av)}=\\frac{2}{3}\\) </p>"},{"location":"sp25/data_market/note/#_64","title":"\u63a5\u6536\u8005\u662f\u5426\u613f\u610f\u63a5\u6536\u4fe1\u53f7","text":"<p>\u5b9a\u7406\uff1a\u5728\u6700\u4f18\u4fe1\u53f7\u673a\u5236\u4e0b\uff0c\u63a5\u6536\u65b9\u7684\u6536\u76ca\u63d0\u9ad8\u4e86 \u8bc1\u660e\uff1a\\((S,\\pi(s|\\omega)\\)\uff0c\u63a5\u6536\u65b9\u770b\u5230\\(s\\)\uff0c\u66f4\u65b0\\(\\mu_s(\\omega)=\\frac{\\pi(s|\\omega)\\cdot\\mu_0(\\omega)}{\\sum_{\\omega'\\in\\Omega}\\pi(s|\\omega')\\cdot\\mu_0(\\omega')}\\) \\(max_{a\\in A}E_{\\mu_s}u(a,\\omega)=max_{a\\in A}\\sum_{\\omega\\in\\Omega}\\mu_s(\\omega)\\cdot u(a,\\omega)\\) $$ \\begin{aligned} &amp;\\sum_{s\\in S}P(s)\\cdot max_{a\\in A}E_{\\mu_s}u(a,\\omega)=\\sum_{s\\in S}max_{a\\in A}\\sum_{\\omega\\in\\Omega}\\pi(s|\\omega)\\mu_0(\\omega)u(a,\\omega) \\ &amp;\\quad \\ge max_{a\\in A}\\sum_{s\\in S}\\sum_{\\omega\\in S}\\pi(s|\\omega)\\cdot\\mu_0(\\omega)\\cdot u(a,\\omega) \\ &amp;\\quad =max_{a\\in A}\\sum_{\\omega\\in\\Omega}(\\sum_{s\\in S}\\pi(s|\\omega))\\cdot\\mu_0(\\omega)u(a,\\omega) \\ &amp;\\quad =max_{a\\in A}\\sum_{\\omega\\in\\Omega}\\mu_0(\\omega)u(a,\\omega) \\ &amp;\\quad =max_{a\\in A}E_{\\mu_0}u(a,\\omega) \\end{aligned} $$ \u5356\u51fa\u4fe1\u606f\u80fd\u591f\u63d0\u5347\u4f01\u4e1a\u7684\u6548\u7528\uff08\u6548\u7528\u4e4b\u5dee\u5373\u4e3a\u4fe1\u606f\u7684\u4ef7\u503c\uff09  </p>"},{"location":"sp25/data_market/note/#lec-11","title":"Lec 11:\u4fe1\u606f\u5b9a\u4ef7\u673a\u5236\u8bbe\u8ba1(\u7279\u9080\u8bb2\u5ea7)","text":""},{"location":"sp25/data_market/note/#lec-12","title":"Lec 12:\u9690\u79c1\u4e0e\u5916\u90e8\u6027\u95ee\u9898","text":""},{"location":"sp25/data_market/note/#_65","title":"\u9690\u79c1\u6210\u672c","text":"<p>\u5185\u5728\u6210\u672c\uff1a\u4e2a\u4eba\u4e0d\u613f\u610f \u5de5\u5177\u6210\u672c\uff1a\u516c\u5f00\u9690\u79c1\u5bfc\u81f4\u6548\u7528\u4e0b\u964d \u798f\u5229\u4e09\u89d2\u5f62  </p>"},{"location":"sp25/data_market/note/#_66","title":"\u5916\u90e8\u6027\u95ee\u9898","text":"<p>\u4e70\u5bb6\uff1a\u5e02\u573a\u5360\u6709\u7387\uff0c\u4f9b\u6c42\u5173\u7cfb\u6539\u53d8 \u5356\u5bb6\uff1a\u9690\u79c1\u6570\u636e\u5747\u8861\u4ef7\u683c\u4e0b\u964d\uff0c\u4f7f\u7528\u6cdb\u6ee5  </p>"},{"location":"sp25/data_market/2025/hw1-solution/","title":"\u8bfe\u7a0b\u7efc\u5408\u5b9e\u8df5II\uff08\u6570\u636e\u8981\u7d20\u4ea4\u6613\u57fa\u7840\uff09","text":""},{"location":"sp25/data_market/2025/hw1-solution/#hw1","title":"HW1:\u535a\u5f08\u8bba\u4e0e\u591a\u81c2\u8001\u864e\u673a\u7b97\u6cd5\u57fa\u7840","text":""},{"location":"sp25/data_market/2025/hw1-solution/#11","title":"1.1 \u5360\u4f18\u7b56\u7565\u5747\u8861\u4e0e\u7eb3\u4ec0\u5747\u8861\u7684\u5173\u7cfb","text":"<p>\u8bc1\u660e\u5982\u4e0b\u5173\u4e8e\u5360\u4f18\u7b56\u7565\u5747\u8861\u4e0e\u7eb3\u4ec0\u5747\u8861\u7684\u5173\u7cfb\u7684\u7ed3\u8bba\uff1a 1. \u5982\u679c\u6bcf\u4e2a\u53c2\u4e0e\u4eba\\(i\\)\u90fd\u6709\u4e00\u4e2a\u5360\u4f18\u4e8e\u5176\u5b83\u6240\u6709\u7b56\u7565\u7684\u7b56\u7565\\(s_i^*\\)\uff0c\u90a3\u4e48\\(s^*=(s_1^*,...,s_n^*)\\)\u662f\u7eb3\u4ec0\u5747\u8861\uff1b 2. \u5982\u679c\u6bcf\u4e2a\u53c2\u4e0e\u4eba\\(i\\)\u90fd\u6709\u4e00\u4e2a\u4e25\u683c\u5360\u4f18\u4e8e\u5176\u5b83\u6240\u6709\u7b56\u7565\u7684\u7b56\u7565\\(s_i^*\\)\uff0c\u90a3\u4e48\\(s^*=(s_1^*,...,s_n^*)\\)\u662f\u535a\u5f08\u7684\u552f\u4e00\u7eb3\u4ec0\u5747\u8861\u3002</p> <p>[Answer] \u5b9a\u4e49 2.1 (\u7eb3\u4ec0\u5747\u8861\u5b9a\u4e49 1) \u7ed9\u5b9a\u4e00\u4e2a\u535a\u5f08\uff0c\u4e00\u4e2a\u7b56\u7565\u7ec4\u5408\\(s^*=(s_1^*,...,s_n^*)\\)\u662f\u4e00\u4e2a\u7eb3\u4ec0\u5747\u8861\uff0c\u5982\u679c\u5bf9\u4e8e\u6bcf\u4e2a\u53c2\u4e0e\u4eba\\(i\\)\uff0c\u6709\\(u_i(s^\u2217) \u2a7eu_i(s_i, s_{\u2212i}^\u2217)\\) 1.\u5bf9\u7b56\u7565\\(s^*\\)\uff0c\u4efb\u610f\u6539\u53d8\u67d0\u4e00\u4e2a\u53c2\u4e0e\u4eba\\(i\\)\u7684\u7b56\u7565\u4e3a\\(s_i'^*\\)\uff0c\u5f97\u5230\u65b0\u7684\u7b56\u7565\\(s'^*=(s_1^*,...s_{i-1}^*,s_i'^*,s_{i+1}^*,...,s_n^*)\\) \u5bf9\\(\\forall i\\)\uff0c\\(s_i^*\\)\u662f\u4e00\u4e2a\u5360\u4f18\u4e8e\u5176\u5b83\u6240\u6709\u7b56\u7565\u7684\u7b56\u7565\uff0c\u5373\\(u(s_i^*)\u2a7eu(s_i'^*)\\)\uff0c\u4ece\u800c\u5bf9\u53c2\u4e0e\u4eba\\(i\\)\u800c\u8a00\uff0c\u603b\u7b56\u7565\u7684\u6548\u7528\\(u_i(s^*)\u2a7eu_i(s'^*)=u_i(s_i'^*,s_{-i}^*)\\)\uff0c\u7531\u7eb3\u4ec0\u5747\u8861\u7684\u5b9a\u4e49\uff0c\u7b56\u7565\\(s^*=(s_1^*,...,s_n^*)\\)\u662f\u7eb3\u4ec0\u5747\u8861 2.\u5047\u8bbe\u9664\\(s^*=(s_1^*,...,s_n^*)\\)\u5916\uff0c\u8fd8\u5b58\u5728\u53e6\u4e00\u4e2a\u7eb3\u4ec0\u5747\u8861\\(s'^*=(s_1'^*,...,s_n'^*)\\)\uff0c\u5219\\(s'^*\\)\u4e0e\\(s^*\\)\u81f3\u5c11\u6709\u67d0\u4e00\u7b56\u7565\u4e0d\u540c\uff0c\u4e0d\u59a8\u8bb0\u4e3a\\(s_j^*\\)\u4e0e\\(s_j'^*\\) \u7531\u7eb3\u4ec0\u5747\u8861\u7684\u5b9a\u4e49\uff0c\u5bf9\\(\\forall i\\)\uff0c\\(u_i(s'^\u2217) \u2a7eu_i(s_i', s_{\u2212i}'^\u2217)\\)\uff0c\u5219\u663e\u7136\\(u_j(s'^\u2217) \u2a7eu_j(s_j', s_{\u2212j}'^\u2217)\\) \u5bf9\\(\\forall i\\)\uff0c\\(s_i^*\\)\u662f\u4e00\u4e2a\u4e25\u683c\u5360\u4f18\u4e8e\u5176\u5b83\u6240\u6709\u7b56\u7565\u7684\u7b56\u7565\uff0c\u800c\\(s_j^*\\)\u4e0e\\(s_j'^*\\)\u662f\u4e24\u4e2a\u4e0d\u540c\u7684\u7b56\u7565\uff0c\u56e0\u6b64\u6709\\(s_j^* &gt; s_j'^*\\)\uff0c\u5219\\(u_j(s'^\u2217) &lt;u_j(s_j^*, s_{\u2212j}'^\u2217)\\) \u4e5f\u5373\u5bf9\\(s'^*\\),\\(\\exists j,\u5f53s_j^* = s_j',u_j(s'^\u2217)&lt;u_j(s_j', s_{\u2212j}'^\u2217)\\)\u8fd9\u4e0e\\(s'^*\\)\u662f\u7eb3\u4ec0\u5747\u8861\u77db\u76fe\uff0c\u5047\u8bbe\u4e0d\u6210\u7acb \u6240\u4ee5\\(s^*=(s_1^*,...,s_n^*)\\)\u662f\u535a\u5f08\u7684\u552f\u4e00\u7eb3\u4ec0\u5747\u8861</p>"},{"location":"sp25/data_market/2025/hw1-solution/#12-n","title":"1.2 N\u4eba\u53e4\u8bfa\u7ade\u4e89","text":"<p>\u5047\u8bbe\u5728\u53e4\u8bfa\u7ade\u4e89\u4e2d\uff0c\u4e00\u5171\u6709\\(J\\)\u5bb6\u4f01\u4e1a\u3002\u5f53\u5e02\u573a\u4e2d\u6240\u6709\u4f01\u4e1a\u603b\u4ea7\u91cf\u4e3a\\(q\\)\u65f6\uff0c\u5e02\u573a\u4ef7\u683c\u4e3a\\(p(q) = a\u2212bq\\)\u3002\u4e14\u6bcf\u4e2a\u4f01\u4e1a\u751f\u4ea7\u5355\u4f4d\u4ea7\u54c1\u7684\u6210\u672c\u90fd\u662f\u540c\u4e00\u4e2a\u5e38\u6570\\(c\\)\uff0c\u5373\u4f01\u4e1a\\(i\\)\u7684\u4ea7\u91cf\u4e3a\\(q_i\\)\u65f6\u8be5\u4f01\u4e1a\u7684\u6210\u672c\u4e3a\\(c_i(q_i) = c \u00b7q_i\\)\u3002\u5047\u8bbe\\(a &gt; c \u2a7e0\uff0cb &gt; 0\\)\uff0c 1. \u6c42\u7eb3\u4ec0\u5747\u8861\u4e0b\u6240\u6709\u4f01\u4e1a\u7684\u603b\u4ea7\u91cf\u4ee5\u53ca\u5e02\u573a\u4ef7\u683c\uff1b 2. \u8ba8\u8bba\u5747\u8861\u4ef7\u683c\u968f\u7740\\(J\\)\u53d8\u5316\u7684\u60c5\u51b5\uff0c\u4f60\u6709\u4ec0\u4e48\u542f\u793a\uff1f 3. \u8ba8\u8bba\\(J \u2192\u221e\\)\u7684\u5747\u8861\u7ed3\u679c\uff0c\u4f60\u6709\u4ec0\u4e48\u542f\u793a\uff1f</p> <p>[Answer] 1.\u67d0\u4f01\u4e1a\\(i\\)\u7684\u6548\u7528\u4e3a\\(u_i(q_1,...,q_J)=(a-b(q_1+...+q_J))q_i-cq_i\\) \u8bb0\\(q_1+...+q_{i-1}+q_{i+1}+...+q_J=q_{-i}\\) \u5219\u4f01\u4e1a\\(i\\)\u7684\u6548\u7528\u4e3a\\(u_i(q_i,q_{-i})=(a-b(q_i+q_{-i}))q_i-cq_i\\) \u8bb0\u4f01\u4e1a\\(i\\)\u7684\u6700\u4f18\u53cd\u5e94\u4e3a\\(R(q_{-i})\\)\uff0c\u5219 \\(\\frac{\\partial u_i}{\\partial q_i} = a-2bq_i-bq_{-i}-c = 0\\) \u89e3\u5f97\\(q_i=R(q_{-i})=\\frac{a-bq_{-i}-c}{2b}\\) \u663e\u7136\uff0c\u5728\u6210\u672c\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u5747\u8861\u89e3\u4e2d\u6bcf\u4e2a\u4f01\u4e1a\u7684\u4ea7\u91cf\u662f\u76f8\u540c\u7684\uff0c\\(q_{-i}=(J-1)q_i\\) \u4ece\u800c\\(q_i=\\frac{a-c}{b(J+1)}\\) \u603b\u4ea7\u91cf\\(q=Jq_i=\\frac{J(a-c)}{(J+1)b}=\\frac{a-c}{b}-\\frac{a-c}{(J+1)b}\\) \u5e02\u573a\u4ef7\u683c\\(p(q) = a\u2212bq=\\frac{a+Jc}{J+1}=c+\\frac{a-c}{J+1}\\) 2.\u5747\u8861\u4ef7\u683c\\(p(q) =c+\\frac{a-c}{J+1}\\)\u968f\\(J\\)\u7684\u4e0a\u5347\u800c\u4e0b\u964d\uff0c\u5e76\u4e0d\u65ad\u63a5\u8fd1\u6210\u672c\\(c\\),\u53ef\u77e5\u5f53\u5e02\u573a\u4e2d\u4f01\u4e1a\u6570\u91cf\u589e\u591a\u65f6\uff0c\u7ade\u4e89\u52a0\u5267\uff0c\u5e02\u573a\u4ef7\u683c\u4e0b\u964d\uff0c\u5355\u4e2a\u4f01\u4e1a\u5229\u6da6\u4e0b\u964d\uff0c\u8fd9\u4e0e\u9884\u671f\u662f\u76f8\u7b26\u7684 3.\\(J \u2192\u221e\\)\u65f6\uff0c\u6bcf\u4e2a\u4f01\u4e1a\u7684\u4ea7\u91cf\\(q_i=\\frac{a-c}{b(J+1)}\u21920\\)\uff0c\u5e02\u573a\u4ef7\u683c\\(p(q)=c+\\frac{a-c}{J+1}\u2192c\\)\uff0c\u603b\u4ea7\u91cf\\(q\\)\u4e0d\u65ad\u589e\u52a0\uff0c\u5728\u65e0\u6570\u7ade\u4e89\u8005\u7684\u73af\u5883\u4e0b\uff0c\u5355\u4e2a\u4f01\u4e1a\u5bf9\u5e02\u573a\u7684\u5f71\u54cd\u6781\u5c0f\uff0c\u800c\u603b\u4ea7\u91cf\u4e0d\u65ad\u4e0a\u5347\uff0c\u4f9b\u5927\u4e8e\u6c42\uff0c\u5e02\u573a\u4ef7\u683c\u4e0d\u65ad\u4e0b\u964d\uff0c\u5f53\u964d\u4ef7\u81f3\u6210\u672c\u4ef7\u540e\uff0c\u6548\u7528\u4e3a0\uff0c\u5355\u4e2a\u4f01\u4e1a\u4e5f\u4e0d\u518d\u613f\u610f\u751f\u4ea7 \u4f01\u4e1a\u6570\u91cf\\(N\\)\u589e\u52a0 \u2192 \u6bcf\u4e2a\u4f01\u4e1a\u7684\u5e02\u573a\u4efd\u989d\u4e0b\u964d \u2192 \u5355\u4e2a\u4f01\u4e1a\u5bf9\u4ef7\u683c\u7684\u5f71\u54cd\u529b\u51cf\u5f31\uff0c\u800c\u603b\u4ea7\u91cf\u4e0d\u65ad\u589e\u52a0 \u2192 \u5e02\u573a\u4ef7\u683c\u4e0d\u65ad\u964d\u4f4e \u2192 \u4f01\u4e1a\u65e0\u6cd5\u7ef4\u6301\u9ad8\u4ef7\uff0c\u53ea\u80fd\u63a5\u53d7\u66f4\u4f4e\u7684\u4ef7\u683c \u2192 \u5229\u6da6\u4e0b\u964d \u2192 \u5355\u4e2a\u4f01\u4e1a\u4ea7\u91cf\u964d\u4f4e</p>"},{"location":"sp25/data_market/2025/hw1-solution/#13","title":"1.3 \u516c\u5730\u60b2\u5267","text":"<p>\u5047\u8bbe\u6709\\(I\\)\u4e2a\u519c\u573a\u4e3b\uff0c\u6bcf\u4e2a\u519c\u573a\u4e3b\u5747\u6709\u6743\u5229\u5728\u516c\u5171\u8349\u5730\u4e0a\u653e\u7267\u5976\u725b\u3002\u4e00\u5934\u5976\u725b\u4ea7\u5976\u7684\u6570\u91cf\u53d6\u51b3\u4e8e\u5728\u8349\u5730\u4e0a\u653e\u7267\u7684\u5976\u725b\u603b\u91cf\\(N\\)\uff1a\u5f53\\(N&lt;\\overline{N}\\)\u65f6\uff0c\\(n_i\\)\u5934\u5976\u725b\u4ea7\u751f\u7684\u6536\u5165\u4e3a\\(n_i\\cdot v(N)\\)\uff1b\u800c\u5f53(N \\geq \\overline{N} \\(\u65f6\uff0c\\)v(N)\\equiv0\\)\u3002\u5047\u8bbe\u6bcf\u5934\u5976\u725b\u7684\u6210\u672c\u4e3a\\(c\\)\uff0c\u4e14\\(v(0) &gt; c,v'&lt; 0,v''&lt; 0\\)\uff0c\u6240\u6709\u519c\u573a\u4e3b\u540c\u65f6\u51b3\u5b9a\u8d2d\u4e70\u591a\u5c11\u5976\u725b\uff0c\u6240\u6709\u5976\u725b\u5747\u4f1a\u5728\u516c\u5171\u8349\u5730\u4e0a\u653e\u7267\uff08\u6ce8\uff1a\u5047\u8bbe\u5976\u725b\u7684\u6570\u91cf\u53ef\u4ee5\u662f\u5c0f\u6570\uff0c\u4e5f\u5c31\u662f\u65e0\u9700\u8003\u8651\u53d6\u6574\u7684\u95ee\u9898\uff09\u3002 1. \u5c06\u4e0a\u8ff0\u60c5\u5f62\u8868\u8fbe\u4e3a\u7b56\u7565\u5f0f\u535a\u5f08\uff1b 2. \u6c42\u535a\u5f08\u7684\u7eb3\u4ec0\u5747\u8861\u4e0b\u6240\u6709\u519c\u573a\u4e3b\u8d2d\u4e70\u7684\u603b\u5976\u725b\u6570\uff08\u53ef\u4ee5\u4fdd\u7559\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\uff0c\u4e0d\u7528\u6c42\u51fa\u5177\u4f53\u89e3\uff09\uff1b 3. \u6c42\u6240\u6709\u519c\u573a\u4e3b\u6548\u7528\u4e4b\u548c\u6700\u5927\uff08\u793e\u4f1a\u6700\u4f18\uff09\u60c5\u51b5\u4e0b\u7684\u603b\u5976\u725b\u6570\uff08\u53ef\u4ee5\u4fdd\u7559\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\uff0c\u4e0d\u7528\u6c42\u51fa\u5177\u4f53\u89e3\uff09\uff0c\u5e76\u4e0e\u4e0a\u4e00\u95ee\u7684\u7ed3\u679c\u6bd4\u8f83\uff0c\u4f60\u80fd\u4ece\u4e2d\u5f97\u5230\u4ec0\u4e48\u542f\u793a\uff1f</p> <p>[Answer] 1.\\(I\\)\u4e2a\u519c\u573a\u4e3b\u535a\u5f08\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u4eba\u7684\u7b56\u7565\u96c6\u5408\u662f\\([0,+\u221e)\\),\u5404\u81ea\u6709\u653e\u7267\u5976\u725b\u6570\u91cf\u7684\u7b56\u7565\\(n_1,...,n_I\\) \u6bcf\u4e2a\u519c\u573a\u4e3b\\(i\\)\u7684\u6548\u7528\uff1a $$ u_i(n_i)= \\begin{cases} n_i (v(N) - c) &amp; N &lt; \\overline{N}  \\ -n_i c          &amp; N \\geq \\overline{N} \\end{cases} $$ 2.\u8bb0\\(n_1+...+n_{i-1}+n_{i+1}+...+n_I=n_{-i}\\) \u5219\u519c\u573a\u4e3b\\(i\\)\u7684\u6548\u7528\u4e3a\\(u_i(n_i)=n_i\u00b7(v(n_i+n_{-i})-c)\\) \u8bb0\u519c\u573a\u4e3b\\(i\\)\u7684\u6700\u4f18\u53cd\u5e94\u4e3a\\(R(n_{-i})\\)\uff0c\u5219 \\(\\frac{\\partial u_i}{\\partial n_i} = v(n_i+n_{-i})-c+n_i\u00b7v'(n_i+n_{-i}) = 0\\) \u7eb3\u4ec0\u5747\u8861\u4e0b\uff0c\u519c\u573a\u4e3b\u662f\u5bf9\u79f0\u7684\uff0c\u5373\\(N=I\u00b7n_i\\) \u5373\u6709\\(v(I\u00b7n_i)-c+n_i\u00b7v'(I\u00b7n_i) = 0\\) \u4ece\u800c\u7eb3\u4ec0\u5747\u8861\u6761\u4ef6\u4e3a\\(v(N)+\\frac{N}{I}\u00b7v'(N) = c\\) 3.\u6240\u6709\u519c\u573a\u4e3b\u6548\u7528\u4e4b\u548c\\(u=\\sum_{i=1}^Iu_i(n_i)=\\sum_{i=1}^In_i\u00b7(v(N)-c)=N\u00b7(v(N)-c)\\) \u793e\u4f1a\u6700\u4f18\u65f6\\(\\frac{du}{dN}=v(N)-c+Nv'(N)=0\\) \u4ece\u800c\u793e\u4f1a\u6700\u4f18\u6761\u4ef6\u4e3a\\(v(N)+Nv'(N)=c\\) \u6bd4\u8f83\u7eb3\u4ec0\u5747\u8861\u6761\u4ef6\u4e0e\u793e\u4f1a\u6700\u4f18\u6761\u4ef6\uff0c\u5047\u8bbe\u7eb3\u4ec0\u5747\u8861\u6761\u4ef6\u4e0b\u7684\u89e3\u4e3a\\(N^*\\)\uff0c\u793e\u4f1a\u6700\u4f18\u6761\u4ef6\u7684\u89e3\u4e3a\\(N^{**}\\)\uff0c\\(v(N^{**})+N^{**}v'(N^{**})=c\\)\uff0c\u90a3\u4e48\\(v(N^{**})+\\frac{N^{**}}{I}v'(N^{**})&gt;c\\)\uff0c\u800c\\(v(N)\\)\u662f\u9012\u51cf\u7684\u51f9\u51fd\u6570\uff0c\\(v(N^{*})+\\frac{N^{*}}{I}v'(N^{*})=c \\Rightarrow N^{*}&gt;N^{**}\\)(\u6784\u9020\u8f85\u52a9\u51fd\u6570\\(\\Phi(N)=v(N)+\\alpha Nv'(N)\\)\uff0c\u6613\u5f97\\(\\Phi'(N)&lt;0)\\) \u5373\u7eb3\u4ec0\u5747\u8861\u6761\u4ef6\u4e0b\u7684\u89e3\\(N^*&gt;\\)\u793e\u4f1a\u6700\u4f18\u6761\u4ef6\u7684\u89e3\\(N^{**}\\)\uff0c\u8bf4\u660e\u7eb3\u4ec0\u5747\u8861\u6761\u4ef6\u4e0b\u5b58\u5728\u8fc7\u5ea6\u653e\u7267\u7684\u60c5\u51b5\uff0c\u589e\u52a0\u5976\u725b\u964d\u4f4e\u603b\u4f53\u6536\u76ca\u4f46\u589e\u52a0\u4e2a\u4eba\u6536\u76ca\uff08\u8d1f\u5916\u90e8\u6027\uff09\uff0c\u8fd9\u5bfc\u81f4\u4e86\u516c\u5730\u60b2\u5267</p>"},{"location":"sp25/data_market/2025/hw1-solution/#14","title":"1.4 \u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861","text":"<p>\u8003\u8651\u5982\u4e0b\u7684\u4e0d\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\uff1a - \\(I={1,2}\\)\uff1a\\(1\\)\u548c\\(2\\)\u5206\u522b\u662f\u884c\u3001\u5217\u53c2\u4e0e\u4eba - \\(T_1={A,B},T_2={C}\\):\u53c2\u4e0e\u4eba\\(1\\)\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u53c2\u4e0e\u4eba\\(2\\)\u6709\u4e00\u4e2a\u7c7b\u578b - \\(p(A,C)=\\frac{1}{3},p(B,C)=\\frac{2}{3}\\) - \u6bcf\u4e2a\u53c2\u4e0e\u4eba\u6709\u4e24\u4e2a\u53ef\u80fd\u7684\u884c\u52a8\uff0c\u4e0b\u56fe\u6240\u793a\u77e9\u9635\u7ed9\u51fa\u4e86\u4e24\u79cd\u7c7b\u578b\u5411\u91cf\u4e0b\u7684\u6536\u76ca\u77e9\u9635\uff08\u5de6\u56fe\u4e3a\\(t=(A,C)\\)\u65f6\u7684\u535a\u5f08\uff0c\u53f3\u56fe\u4e3a\\(t=(B,C)\\)\u65f6\u7684\u535a\u5f08\uff09\uff1a </p> <p>\u6c42\u89e3\u8be5\u535a\u5f08\u7684\u6240\u6709\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861.</p> <p>[Answer] \u8bbe\u53c2\u4e0e\u4eba\\(1\\)\u5728\u7c7b\u578bA\u4e0b\u7684\u6df7\u5408\u7b56\u7565\u4e3a\\([x(T),(1-x)(B)]\\)\uff0c\u5728\u7c7b\u578bB\u4e0b\u7684\u6df7\u5408\u7b56\u7565\u4e3a\\([y(T),(1-y)(B)]\\)\uff0c\u53c2\u4e0e\u4eba\\(2\\)\u7684\u6df7\u5408\u7b56\u7565\u4e3a\\([p(L),(1-p)(R)]\\) \u9996\u5148\u68c0\u67e5\u662f\u5426\u5b58\u5728\u7eaf\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\uff1a - \u82e5\\(p=0(R)\\)\uff0c\u7c7b\u578bA\u53c2\u4e0e\u4eba\\(1\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\\(B\\)\uff0c\u7c7b\u578bB\u53c2\u4e0e\u4eba\\(1\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\\(T\\)\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53c2\u4e0e\u4eba\\(2\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\\(p=1\\)\uff0c\u56e0\u6b64\u4e0d\u662f\u5747\u8861 - \u82e5\\(p=1(L)\\)\uff0c\u7c7b\u578bA\u53c2\u4e0e\u4eba\\(1\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\\(T\\)\uff0c\u7c7b\u578bB\u53c2\u4e0e\u4eba\\(1\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\\(B\\)\uff0c\u56e0\u6b64\u8fd9\u79cd\u60c5\u51b5\u4e0b\u53c2\u4e0e\u4eba\\(2\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\\(p=0\\)\uff0c\u56e0\u6b64\u4e0d\u662f\u5747\u8861</p> <p>\u56e0\u6b64\u6211\u4eec\u77e5\u9053\u53c2\u4e0e\u4eba\\(2\\)\u5747\u8861\u65f6\u4e0d\u53ef\u80fd\u9009\u62e9\u7eaf\u7b56\u7565\uff0c\u56e0\u6b64\u4e00\u5b9a\u4f1a\u9009\u62e9\u6df7\u5408\u7b56\u7565\u3002\u6839\u636e\u6df7\u5408\u7b56\u7565\u7684\u65e0\u5dee\u5f02\u539f\u5219\u6709\u53c2\u4e0e\u4eba\\(2\\)\u9009\u62e9\\(L\\)\u4e0e\\(R\\)\u65e0\u5dee\u5f02\uff1a $$ \\frac{1}{3}4(1-x)+\\frac{2}{3}3y=\\frac{1}{3}3x+\\frac{2}{3}(y+(1-y)) $$ \u89e3\u5f97\\(x=\\frac{2+6y}{7}\\)\uff0c\u63a5\u4e0b\u6765\u7814\u7a76\u662f\u5426\u53ea\u8981\u6ee1\u8db3\u8fd9\u4e00\u6761\u4ef6\u5c31\u53ef\u4ee5\u662f\u5747\u8861\uff0c\u53c2\u4e0e\u4eba\\(1\\)\u5728\u7c7b\u578b\u4e3aA,B\u65f6\u5206\u522b\u6709\u6548\u7528\u51fd\u6570\uff1a $$ u_{1A}=2xp+(1-x)(1-p)= 3xp-x-p+1 \\ u_{1B}=3y(1-p)+2p(1-y)= -5yp+3y+2p $$ \u6c42\u5bfc\u53ef\u77e5\uff0c\u6700\u4f18\u53cd\u5e94\u4e3a $$ x^= \\begin{cases} 0 &amp; p &lt; \\frac{1}{3}  \\ [0,1] &amp; p = \\frac{1}{3}, \\ 1 &amp; p &gt; \\frac{1}{3} \\end{cases} y^= \\begin{cases} 1 &amp; p &lt; \\frac{3}{5}  \\ [0,1] &amp; p = \\frac{3}{5} \\ 0 &amp; p &gt; \\frac{3}{5} \\end{cases} $$ \u5c06\u4e0a\u5f0f\u4e0e\\(x=\\frac{2+6y}{7}\\)\u8054\u7acb\uff0c\u53ef\u5f97\u552f\u4e00\u89e3\uff1a \\(p=\\frac{3}{5},x=1,y=\\frac{5}{6}\\) \u7efc\u4e0a\uff0c\u8be5\u535a\u5f08\u6709\u552f\u4e00\u6df7\u5408\u7b56\u7565\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\uff1a \u7c7b\u578bA\u53c2\u4e0e\u4eba\\(1\\)\u6c38\u8fdc\u9009\u62e9\\(T\\)\uff1b \u7c7b\u578bB\u53c2\u4e0e\u4eba\\(1\\)\u4ee5\\(\\frac{5}{6}\\)\u7684\u6982\u7387\u9009\u62e9\\(T\\)\uff0c\\(\\frac{1}{6}\\)\u7684\u6982\u7387\u9009\u62e9\\(B\\)\uff1b \u53c2\u4e0e\u4eba\\(2\\)\u4ee5\\(\\frac{3}{5}\\)\u7684\u6982\u7387\u9009\u62e9\\(L\\)\uff0c\\(\\frac{2}{5}\\)\u7684\u6982\u7387\u9009\u62e9\\(R\\)</p>"},{"location":"sp25/data_market/2025/hw1-solution/#15","title":"1.5 \u6df7\u5408\u7b56\u7565\u7684\u4e0d\u5b8c\u5168\u4fe1\u606f\u89e3\u91ca","text":"<p>\u8003\u8651\u4ee5\u4e0b\u6293\u94b1\u535a\u5f08\uff08grab the dollar\uff09\uff1a\u684c\u5b50\u4e0a\u653e 1 \u5757\u94b1\uff0c\u684c\u5b50\u7684\u4e24\u8fb9\u5750\u7740\u4e24\u4e2a\u53c2\u4e0e\u4eba\uff0c\u5982\u679c\u4e24\u4eba\u540c\u65f6\u53bb\u6293\u94b1\uff0c\u6bcf\u4eba\u7f5a\u6b3e 1 \u5757\uff1b\u5982\u679c\u53ea\u6709\u4e00\u4eba\u53bb\u6293\uff0c\u6293\u7684\u4eba\u5f97\u5230\u90a3\u5757\u94b1\uff1b\u5982\u679c\u6ca1\u6709\u4eba\u53bb\u6293\uff0c\u8c01\u4e5f\u5f97\u4e0d\u5230\u4ec0\u4e48\u3002\u56e0\u6b64\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u4eba\u7684\u7b56\u7565\u662f\u51b3\u5b9a\u6293\u8fd8\u662f\u4e0d\u6293\u3002 \u6293\u94b1\u535a\u5f08\u63cf\u8ff0\u7684\u662f\u4e0b\u8ff0\u73b0\u5b9e\u60c5\u51b5\uff1a\u4e00\u4e2a\u5e02\u573a\u4e0a\u53ea\u80fd\u6709\u4e00\u4e2a\u4f01\u4e1a\u751f\u5b58\uff0c\u6709\u4e24\u4e2a\u4f01\u4e1a\u5728\u540c\u65f6\u51b3\u5b9a\u662f\u5426\u8fdb\u5165\u3002\u5982\u679c\u4e24\u4e2a\u4f01\u4e1a\u90fd\u9009\u62e9\u8fdb\u5165\uff0c\u5404\u4e8f\u635f 100 \u4e07\uff1b\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4f01\u4e1a\u8fdb\u5165\uff0c\u8fdb\u5165\u8005\u76c8\u5229 100 \u4e07\uff1b\u5982\u679c\u6ca1\u6709\u4f01\u4e1a\u8fdb\u5165\uff0c\u6bcf\u4e2a\u4f01\u4e1a\u65e2\u4e0d\u4e8f\u4e5f\u4e0d\u76c8\u3002  1. \u6c42\u6293\u94b1\u535a\u5f08\u7684\u7eaf\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\uff1b 2. \u6c42\u6293\u94b1\u535a\u5f08\u7684\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\uff1b</p> <p>[Answer] 1.\u6839\u636e\u6700\u4f18\u53cd\u5e94\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u53c2\u4e0e\u4eba\\(1\\)\u9009\u62e9\u6293\uff0c\u53c2\u4e0e\u4eba\\(2\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\u4e0d\u6293\uff0c\u5982\u679c\u53c2\u4e0e\u4eba\\(1\\)\u9009\u62e9\u4e0d\u6293\uff0c\u53c2\u4e0e\u4eba\\(2\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\u6293\uff1b\u5982\u679c\u53c2\u4e0e\u4eba\\(2\\)\u9009\u62e9\u6293\uff0c\u53c2\u4e0e\u4eba\\(1\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\u4e0d\u6293\uff0c\u5982\u679c\u53c2\u4e0e\u4eba\\(2\\)\u9009\u62e9\u4e0d\u6293\uff0c\u53c2\u4e0e\u4eba\\(1\\)\u7684\u6700\u4f18\u53cd\u5e94\u662f\u6293 \u56e0\u6b64\u4e0a\u8ff0\u535a\u5f08\u4e2d\u5b58\u5728\u4e24\u4e2a\u7eaf\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\uff08\u6293\uff0c\u4e0d\u6293\uff09\uff0c\uff08\u4e0d\u6293\uff0c\u6293\uff09 2.\u8bbe\u53c2\u4e0e\u4eba\\(1\\)\u7684\u6df7\u5408\u7b56\u7565\u4e3a\\([x(\u6293),(1-x)(\u4e0d\u6293))]\\)\uff0c\u53c2\u4e0e\u4eba\\(2\\)\u7684\u6df7\u5408\u7b56\u7565\u4e3a\\([y(\u6293),(1-y)(\u4e0d\u6293)]\\) \u6839\u636e\u65e0\u5dee\u5f02\u539f\u5219\uff0c\u53c2\u4e0e\u4eba\\(1\\)\u9009\u62e9\u6293\u4e0e\u4e0d\u6293\u7684\u6548\u7528\u76f8\u540c $$ y*(-1)+(1-y)=0 $$ \u89e3\u5f97\\(y=\\frac{1}{2}\\) \u540c\u7406\uff0c\u53c2\u4e0e\u4eba\\(2\\)\u9009\u62e9\u6293\u4e0e\u4e0d\u6293\u7684\u6548\u7528\u76f8\u540c\uff0c\u7531\u4e8e\u4e8c\u8005\u662f\u5bf9\u79f0\u7684\uff0c\u5df2\u5f97\\(x=\\frac{1}{2}\\) \u6b64\u65f6\u53c2\u4e0e\u4eba\\(1\\)\u9009\u62e9\u6293\u7684\u6536\u76ca\u4e3a0\uff0c\u9009\u62e9\u4e0d\u6293\u7684\u6536\u76ca\u4e5f\u4e3a0\uff0c\u53c2\u4e0e\u4eba\\(2\\)\u540c\u7406\uff0c\u56e0\u6b64\u8fd9\u662f\u4e00\u4e2a\u7eb3\u4ec0\u5747\u8861 \u6240\u4ee5\u8be5\u535a\u5f08\u6709\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\uff1a\u53cc\u65b9\u90fd\u4ee5\\(\\frac{1}{2}\\)\u7684\u6982\u7387\u9009\u62e9\u6293\u6216\u4e0d\u6293</p> <p>\u73b0\u5728\u8003\u8651\u540c\u6837\u7684\u535a\u5f08\u4f46\u5177\u6709\u5982\u4e0b\u4e0d\u5b8c\u5168\u4fe1\u606f\uff1a\u5982\u679c\u53c2\u4e0e\u4eba\\(i\\)\u8d62\u4e86\uff0c\u4ed6\u7684\u5229\u6da6\u662f$ 1 + \u03b8_i$\uff08\u800c\u4e0d\u662f \\(1\\)\uff09\u3002\u8fd9\u91cc (\u03b8_i \\(\u662f\u53c2\u4e0e\u4eba\u7684\u7c7b\u578b\uff0c\u53c2\u4e0e\u4eba\\) i \\(\u81ea\u5df1\u77e5\u9053\\) \u03b8_i\\)\uff0c\u4f46\u53e6\u4e00\u4e2a\u53c2\u4e0e\u4eba\u4e0d\u77e5\u9053\u3002\u5047\u5b9a $\u03b8_i $\u5728 $[\u2212\u03b5, \u03b5] \\(\u533a\u95f4\u4e0a\u5747\u5300\u5206\u5e03\u3002** ![alt text](image-2.png) **\u7531\u4e8e\u4e24\u4e2a\u53c2\u4e0e\u4eba\u7684\u60c5\u51b5\u5b8c\u5168\u5bf9\u79f0\uff0c\u6545\u8003\u8651\u5982\u4e0b\u5bf9\u79f0\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\uff08\u4e24\u4e2a\u4eba\u7684\u7b56\u7565\u76f8\u540c\uff09\u5f62\u5f0f\uff1a\u53c2\u4e0e\u4eba\\)i(i = 1, 2) $\u7684\u7b56\u7565\u5747\u4e3a $$ s_i(\u03b8_i)= \\begin{cases} \u6293 &amp; \u5982\u679c\\theta _i \\ge \\theta ^  \\ \u4e0d\u6293          &amp; \u5982\u679c\\theta _i \\lt \\theta ^ \\end{cases} $$</p> <p>**\u5373$ \u03b8^\u2217\\(\u662f\u4e24\u4e2a\u53c2\u4e0e\u4eba\u6293\u6216\u4e0d\u6293\u7684\u7c7b\u578b\u5206\u754c\u9608\u503c\uff0c\u5176\u4e2d\\) \u03b8^\u2217\\(\u662f\u4e00\u4e2a\u5f85\u8ba1\u7b97\u786e\u5b9a\u7684\u53c2\u6570\u3002** 3. \u6c42\\) \u03b8^\u2217\\(\uff1b 4. \u5f53\\) \u03b5 \u21920$ \u65f6\uff0c\u4e0a\u8ff0\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\u4f1a\u6536\u655b\u4e8e\u4ec0\u4e48\uff1f\u4ece\u4e2d\u4f60\u80fd\u5f97\u5230\u600e\u6837\u7684\u542f\u793a\u3002</p> <p>[Answer] 3.\u6839\u636e\u65e0\u5dee\u5f02\u539f\u5219\uff0c\u5f53\\(\\theta _i =\\theta^*\\)\u65f6\uff0c\u53c2\u4e0e\u4eba\\(i\\)\u6293\u4e0e\u4e0d\u6293\u65e0\u5dee\u5f02 \u5f53\u53c2\u4e0e\u4eba\\(i\\)\u9009\u62e9\u6293\uff0c\u6b64\u65f6\u53e6\u4e00\u4e2a\u53c2\u4e0e\u4eba\\(j\\)\u9009\u62e9\u6293\u7684\u6982\u7387\uff08\u6839\u636e\u5747\u5300\u5206\u5e03\uff09\u4e3a\\(P(\\theta _j \\ge \\theta ^*)=\\frac{\u03b5-\\theta ^*}{2\u03b5}\\)\uff0c\u9009\u62e9\u4e0d\u6293\u7684\u6982\u7387\u4e3a\\(P(\\theta _j \\lt \\theta ^*)=\\frac{\\theta ^*+\u03b5}{2\u03b5}\\) \u6b64\u65f6\u53c2\u4e0e\u4eba\\(i\\)\u6293\u7684\u6536\u76ca\uff1a $$ u_{1\u6293}=(\\frac{\u03b5-\\theta ^}{2\u03b5})(-1)+\\frac{\\theta ^+\u03b5}{2\u03b5}(1+\\theta i) $$ \u800c\u53c2\u4e0e\u4eba\\(i\\)\u4e0d\u6293\u7684\u6536\u76ca $$ u=0 $$ \u7531\u65e0\u5dee\u5f02\u539f\u5219\uff0c\u5f53\\(\\theta _i =\\theta^*\\)\u65f6 $$ (\\frac{\u03b5-\\theta ^}{2\u03b5})(-1)+\\frac{\\theta ^+\u03b5}{2\u03b5}(1+\\theta ^*)=0 $$ \u89e3\u5f97\\(\\theta ^*=0\\) 4.\u5f53$ \u03b5 \u21920$ \u65f6\uff0c\u4e0a\u8ff0\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\u4f1a\u6536\u655b\u4e8e\u5b8c\u5168\u4fe1\u606f\u7684\u6293\u94b1\u535a\u5f08\uff0c\u8fd9\u4e0e\u6d77\u8428\u5c3c\u63d0\u51fa\u7684\u6df7\u5408\u7b56\u7565\u7684\u7eaf\u5316\u7406\u8bba\u4e00\u81f4\uff1a\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\u4e2d\u7684\u6df7\u5408\u7b56\u7565\u7eb3\u4ec0\u5747\u8861\u53ef\u4ee5\u88ab\u89e3\u91ca\u4e3a\u4e0d\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\u4e2d\u7eaf\u7b56\u7565\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\u7684\u6781\u9650 \u5728\u5b8c\u5168\u4fe1\u606f\u535a\u5f08\u4e2d\uff0c\u53c2\u4e0e\u8005\u56e0\u4e3a\u65e0\u5dee\u5f02\u800c\u4f7f\u7528\u6df7\u5408\u7b56\u7565\uff0c\u5f15\u5165\u4e0d\u5b8c\u5168\u4fe1\u606f\u540e\uff0c\u5b8c\u5168\u4f1a\u6839\u636e\u79c1\u6709\u4fe1\u606f\u9009\u62e9\u7eaf\u7b56\u7565\uff0c\u800c\u5f53\u4e0d\u5b8c\u5168\u4fe1\u606f\u6d88\u5931\uff08\u8d8b\u4e8e0\uff09\uff0c\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\u4f1a\u6536\u655b\u5230\u5b8c\u5168\u4fe1\u606f\u6df7\u5408\u7b56\u7565\u5747\u8861</p>"},{"location":"sp25/data_market/2025/hw1-solution/#16","title":"1.6 \u98de\u673a\u8dd1\u9053\u6210\u672c\u5206\u914d\u7684\u6c99\u666e\u5229\u503c\u8ba1\u7b97","text":"<p>\u673a\u573a\u8dd1\u9053\u7684\u7ef4\u62a4\u8d39\u7528\u901a\u5e38\u662f\u5411\u5728\u90a3\u4e2a\u673a\u573a\u964d\u843d\u98de\u673a\u7684\u822a\u7a7a\u516c\u53f8\u6765\u6536\u53d6\u7684\u3002\u4f46\u662f\u8f7b\u578b\u98de\u673a\u6240\u9700\u7684\u8dd1\u9053\u957f\u5ea6\u6bd4\u91cd\u578b\u98de\u673a\u6240\u9700\u7684\u8dd1\u9053\u957f\u5ea6\u77ed\uff0c\u8fd9\u5c31\u5e26\u6765\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u4f55\u5728\u62e5\u6709\u4e0d\u540c\u7c7b\u578b\u98de\u673a\u7684\u822a\u7a7a\u516c\u53f8\u4e4b\u95f4\u786e\u5b9a\u516c\u5e73\u7684\u7ef4\u62a4\u8d39\u7528\u5206\u644a\u3002 \u5b9a\u4e49\u4e00\u4e2a\u6210\u672c\u535a\u5f08$ (N ; c)\\(\uff08\u5373\u6bcf\u4e2a\u8054\u76df\u7684\u6548\u7528\u662f\u6210\u672c\u51fd\u6570\\) c\\(\uff09\uff0c\u8fd9\u91cc\\) N \\(\u662f\u964d\u843d\u5728\u8fd9\u4e2a\u673a\u573a\u4e0a\u7684\u6240\u6709\u98de\u673a\u7684\u96c6\u5408\uff0c\\)c(S)\\(\uff08\u5bf9\u6bcf\u4e2a\u8054\u76df\\) S\\(\uff09\u662f\u80fd\u591f\u5141\u8bb8\u8054\u76df\u4e2d\u6240\u6709\u98de\u673a\u964d\u843d\u7684\u6700\u77ed\u8dd1\u9053\u7684\u7ef4\u62a4\u8d39\u7528\u3002\u5982\u679c\u7528\u6c99\u666e\u5229\u503c\u6765\u786e\u5b9a\u8d39\u7528\u7684\u5206\u644a\uff0c**\u8bc1\u660e\uff1a\u6bcf\u6bb5\u8dd1\u9053\u7684\u7ef4\u62a4\u8d39\u7528\u7531\u4f7f\u7528\u90a3\u6bb5\u8dd1\u9053\u7684\u98de\u673a\u5747\u644a\u3002** \u4e0b\u56fe\u63cf\u7ed8\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5176\u4e2d\u6807\u53f7\u4e3a \\(A, B, C, D, E, F, G\\) \u548c\\) H \\(\u7684\u516b\u67b6\u98de\u673a\u6bcf\u5929\u90fd\u8981\u5728\u8fd9\u4e2a\u673a\u573a\u964d\u843d\u3002\u6bcf\u67b6\u98de\u673a\u6240\u9700\u7684\u8dd1\u9053\u7684\u6574\u4e2a\u957f\u5ea6\u7531\u56fe\u4e2d\u7684\u533a\u95f4\u6765\u8868\u793a\u3002\u4f8b\u5982\uff0c\u98de\u673a\\)F$ \u9700\u8981\u524d\u4e09\u4e2a\u8dd1\u9053\u533a\u95f4\u3002\u6bcf\u4e2a\u8dd1\u9053\u533a\u95f4\u7684\u6bcf\u5468\u7ef4\u62a4\u8d39\u7528\u6807\u793a\u5728\u56fe\u7684\u4e0b\u9762\u3002\u4f8b\u5982\uff0c\\(c(A, D, E) = 3200\\)\uff0c\\(c(A) = 2000 \\(\u548c\\)c(C, F, G) = 5100\\)\u3002\u5728\u8fd9\u4e00\u4f8b\u5b50\u4e2d\uff0c\\(A\\) \u7684\u6c99\u666e\u5229\u503c\u6070\u597d\u7b49\u4e8e$ 2000/8 = 250\\(\uff0c\u800c\\) F $\u7684\u6c99\u666e\u5229\u503c\u7b49\u4e8e \\(2000/8 + 1200/6 + 900/3 = 750\\)\u3002 \u4f60\u7684\u4efb\u52a1\u662f\u5c06\u8fd9\u4e00\u6027\u8d28\u63a8\u5e7f\u5230\u4e00\u822c\u7684\u60c5\u5f62\u4e0b\u7ed9\u51fa\u8bc1\u660e\uff08\u63d0\u793a\uff1a\u4f7f\u7528\u6c99\u666e\u5229\u503c\u7684\u6027\u8d28\u548c\u516c\u5f0f\u7684\u7279\u70b9\uff09\u3002 </p> <p>[Answer] \u5b9a\u4e49\u4e00\u4e2a\u6210\u672c\u535a\u5f08$ (N ; c)\\(\uff08\u5373\u6bcf\u4e2a\u8054\u76df\u7684\u6548\u7528\u662f\u6210\u672c\u51fd\u6570\\) c\\(\uff09\uff0c\u8fd9\u91cc\\) N \\(\u662f\u6240\u6709\u53c2\u4e0e\u4eba\u6784\u6210\u7684\u96c6\u5408\\)N=\\left{1,...,n\\right}\\(\uff0c\\)c(S)\\(\uff08\u5bf9\u6bcf\u4e2a\u8054\u76df\\) S\\(\uff09\u662f\u6ee1\u8db3\u8054\u76df\u4e2d\u6240\u6709\u53c2\u4e0e\u4eba\u7684\u6700\u4f4e\u6210\u672c\uff08\u5373\\)c(S)= max_{i \\in S}c_i\\(\uff09\uff0c\u4e0d\u59a8\u8bbe\\)0=c_0 \\le c_1 \\le ... \\le c_n\\(\uff0c\u5219\u53c2\u4e0e\u4eba\\)i\\(\u7684\u6c99\u666e\u5229\u503c\\)SV_i = \\sum_{j=1}^i \\frac{c_j-c_{j-1}}{n-j+1}$ \u8bc1\u660e\uff1a \u5229\u7528 $$ SV_i = \\frac{1}{n!} \\sum_{S \\subseteq N \\setminus {i}} |S|!(n - |S| - 1)! (c(S \\cup {i}) - c(S)) $$ 1\u00b0 \u5bf9\u5305\u542b\\(i+1,...,n\\)\u81f3\u5c11\u4e00\u4e2a\u7684\u7ec4\u5408\uff0c\\(c(S\\cup\\left\\{i\\right\\})-c(S)=0\\) 2\u00b0 \u5bf9\u6700\u5927\u5305\u542b\\(j\\)(\\(1 \\le j\\lt i\\))\u7684\u6392\u5217\uff0c\\(c(S\\cup\\left\\{i\\right\\})-c(S)=c_i - c_j\\)\uff0c\u8fd9\u6837\u7684\u6392\u5217\u5171\\(\\sum_{k=0}^{j-1}C_{j-1}^k(k+1)!(n-k-2)!\\)\u4e2a 3\u00b0 \\(j=0\\)(\u5373\u7a7a\u96c6)\u65f6\uff0c\\(c(S\\cup\\left\\{i\\right\\})-c(S)=c_i\\)\uff0c\u8fd9\u6837\u7684\u6392\u5217\u51711\u4e2a \u5bf9\\(j\\)\u4ece\\(0\\)\u5230\\(i-1\\)\u6c42\u548c\uff0c\u6709\uff08\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u5c31\u662fppt34\u9875\u7ed9\u51fa\u7684\u516c\u5f0f\uff09 $$ SV_i=\\frac{c_i}{n}+\\frac{1}{n!}\\sum_{j=1}^{i-1}\\sum_{k=0}^{j-1}C_{j-1}^k(k+1)!(n-k-2)!(c_i-c_j) $$ \u5176\u4e2d $$ \\begin{aligned} &amp;\\sum_{k=0}^{j-1}C_{j-1}^k(k+1)!(n-k-2)! \\ &amp;\\quad\\stackrel{m=j-1-k}{=}(j-1)!\\sum_{m=0}^{j-1}\\frac{j-m}{m!}(n-j+m-1)! \\ &amp;\\quad=(j-1)!(jC_{n-1}^{j-1}(n-j-1)!-C_{n-1}^{j-2}(n-j)!) \\ &amp;\\quad=n!(\\frac{1}{n-j}-\\frac{1}{n-j+1}) \\end{aligned} $$ \u4ee3\u5165 $$ \\begin{aligned} &amp;SV_i=\\frac{c_i}{n}+\\sum_{j=1}^{i-1}(\\frac{1}{n-j}-\\frac{1}{n-j+1})(c_i-c_j) \\ &amp;\\quad=\\frac{c_i}{n}+(\\frac{1}{n-1}-\\frac{1}{n})(c_i-c_1)+...+(\\frac{1}{n-i+1}-\\frac{1}{n-i+2})(c_i-c_{i-1}) \\ &amp;\\quad=\\frac{1}{n-i+1}c_i+(\\frac{1}{n}-\\frac{1}{n-1})c_1+...+(\\frac{1}{n-i+2}-\\frac{1}{n-i+1})c_{i-1} \\ &amp;\\quad=\\frac{c_1-c_0}{n}+\\frac{c_2-c_1}{n-1}+...+\\frac{c_i-c_{i-1}}{n-i+1} \\ &amp;\\quad=\\sum_{j=1}^i \\frac{c_j-c_{j-1}}{n-j+1} \\end{aligned} $$</p>"},{"location":"sp25/data_market/2025/hw1-solution/#17-","title":"1.7 \\(\u03b5\\)-\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9057\u61be\u5206\u6790","text":"<p>\u4ee4\\(\\epsilon _t=t^{-1/3}(K\\log t)^{1/3}\\)\uff0c\u8bc1\u660e\uff1a\\(\\epsilon\\)-\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9057\u61be\u754c\u4e3a\\(O(T^{2/3}(K\\log T)^{1/3})\\)\u3002 \u63d0\u793a\uff1a\u6574\u4f53\u601d\u8def\u662f\u5148\u8003\u8651\u6c42\u4efb\u4e00\u65f6\u523b$ t + 1 \\(\u7684\u671f\u671b\u9057\u61be\\)\\mathbb{E}[R_{t+1}]\\(\uff0c\u7136\u540e\u5bf9\u8fd9\u4e9b\u9057\u61be\u6c42\u548c\uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a 1. \u5bf9\u4e8e\u65f6\u523b\\) t + 1\\(\uff0c\u6ce8\u610f\u5728\u524d\\) t \\(\u65f6\u523b\u4e2d\u671f\u671b\u51fa\u73b0\\) \u2211{i=1}^t \u03b5_i \\(\u6b21\u63a2\u7d22\uff0c\u5219\u6bcf\u4e2a\u81c2\u88ab\u9009\u4e2d\u7684\u5e73\u5747\u6b21\u6570\u4e3a\\)\u2211}^t \\frac{\u03b5_i}{K\\(\uff0c\u7136\u540e\u5b9a\u4e49\u4e8b\u4ef6\\)E$\u4e3a $$ |\\mu {t+1}(a)-Q{\\sum }(a)|\\le \\sqrt{\\frac{K\\log t{i=1}^t\\epsilon _i}}, $$ \u5219\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\u4e0e\u8bfe\u4e0a\u8bb2\u7684\u8d2a\u5fc3\u7b97\u6cd5\u5206\u6790\u7c7b\u4f3c\uff1b 2. \u8bc1\u660e\u4efb\u4e00\u65f6\u523b\\(t+1\\)\u7684\u671f\u671b\u9057\u61be\\(\\mathbb{E}[R_{t+1}]\\)\u6ee1\u8db3 $$ \\mathbb{E}[R); $$ \u6ce8\u610f\u5176\u4e2d\u9700\u8981\u7528\u5230}]\\le 3(\\frac{1}{t}K\\log t)^{1/3}+O(t^{-2\\(\\epsilon _t\\)\u975e\u589e\uff08\u5373\\(\\epsilon _t \\ge \\epsilon_{t+1}\\)\uff09\u7684\u6761\u4ef6\uff1b 3. \u5c06\u4e0a\u5f0f\u4ece\\(1\\)\u5230\\(T\\)\u6c42\u548c\u5e76\u653e\u7f29\u5f97\u5230\u9057\u61be\u754c\u3002</p> <p>[Answer] \u6bcf\u4e00\u6b65\u65e2\u6709\u5229\u7528\u53c8\u6709\u63a2\u7d22 \u6839\u636e\u524d\u4e00\u8f6e\uff0c\u8ba1\u7b97\u5355\u8f6e\u7684\u9057\u61be 1.\u5e94\u7528\\(Hoeffding\\)\u4e0d\u7b49\u5f0f\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u81c2\\(a\\)\u6709\uff1a $$ \\begin{aligned} &amp;P\\left(|\\mu_{t+1}(a) - Q_{t+1}(a)| \\leq \\sqrt{\\frac{K \\log t}{\\sum_{i=1}^t \\epsilon_i}}\\right) \\ &amp;\\quad \\geq 1 - 2 \\exp\\left(-2 n_a \\frac{K \\log t}{\\sum_{i=1}^t \\epsilon_i}\\right) \\ &amp;\\quad = 1 - 2 \\exp\\left(-2 \\sum_{i=1}^t \\frac{\\epsilon_i}{K} \\cdot \\frac{K \\log t}{\\sum_{i=1}^t \\epsilon_i}\\right) \\ &amp;\\quad = 1 - 2 \\exp\\left(-2 \\log t\\right) \\ &amp;\\quad = 1 - 2 t^{-2} \\end{aligned} $$ 2.\u5bf9\u4efb\u610f\u65f6\u523b\\(t+1\\)\uff0c\u6709\\(\\epsilon_{t+1}\\)\u7684\u6982\u7387\u8fdb\u884c\u63a2\u7d22\uff08exploration)\uff0c\\(1-\\epsilon_{t+1}\\)\u7684\u6982\u7387\u5229\u7528\uff08exploitation)\uff0c\u5176\u4e2d\u63a2\u7d22\u90e8\u5206\\(\\epsilon _t\\)\u975e\u589e\uff0c\u5956\u52b1\u5728\u533a\u95f4[0,1]\u4e4b\u95f4 $$ \\begin{aligned} &amp;\\mathbb{E}[R_{t+1}]=\\mathbb{E}[R(t+1)|exploration]\\cdot P(exploration)+\\mathbb{E}[R(t+1)|exploitation]\\cdot P(exploitation) \\ &amp;\\quad \\le 1\\cdot \\epsilon_t+\\mathbb{E}[R(t+1)|exploitation] \\cdot 1 \\end{aligned} $$ \u5229\u7528\uff1a \u5f15\u7406\uff1a\\((*)\\) $$ \\sum_{i=1}^t \\epsilon_i \\lt \\int_1^t(\\frac{K\\log x}{x})^{1/3}dx \\lt\\int_1^t(x^{-1/3}(K\\log x)^{1/3}+\\frac{1}{2}x^{2/3}(K\\log x)^{-2/3})dx=\\frac{3}{2}t^{2/3}\\left(K\\log t\\right)^{1/3} $$ \u4ee4\\(rad=\\sqrt{\\frac{K \\log t}{\\sum_{i=1}^t \\epsilon_i}}\\) $$ 2rad=2\\sqrt{\\frac{K \\log t}{\\sum_{i=1}^t \\epsilon_i}}\\lt 2\\left(\\frac{K\\log t}{t^{2/3}(K\\log t)^{1/3}}\\right)^{1/2}=2\\epsilon_t $$ \u4f7f\u7528\u7b2c1\u6b65\\(Hoeffding\\)\u4e0d\u7b49\u5f0f\u7684\u7ed3\u679c\uff1a $$ \\begin{aligned} &amp;\\mathbb{E}[R_{t+1}(exploitation)]=\\mathbb{E}[R_{t+1}(exploitation)|E]\\cdot P(E)+\\mathbb{E}[R_{t+1}(exploitation)|\\overline{E}]\\cdot P(\\overline{E}) \\ &amp;\\quad \\le 2rad\\cdot 1+O(t^{-2}) \\ &amp;\\quad \\lt 2\\epsilon_t +O(t^{-2}) \\end{aligned} $$ \u7ed3\u5408\u63a2\u7d22\u4e0e\u5229\u7528\u6709\uff1a $$ \\mathbb{E}[R_{t+1}]\\le \\epsilon_t+\\mathbb{E}[R(t+1)|exploitation]\\le 3\\epsilon_t+O(t^{-2})=3(\\frac{1}{t}K\\log t)^{1/3}+O(t^{-2}) $$ 3.\u5c06\u4e0a\u5f0f\u4ece\\(1\\)\u5230\\(T\\)\u6c42\u548c\u5e76\u5229\u7528\u5f15\u7406\\((*)\\) $$ \\begin{aligned} &amp;\\sum_{t=1}^T\\mathbb{E}[R_{t+1}]\\le \\sum_{t=1}^T\\left(3(\\frac{1}{t}K\\log t)^{1/3}+O(t^{-2})\\right) \\ &amp;\\quad =3\\sum_{t=1}^T\\epsilon_t + O(1) \\ &amp;\\quad \\le O(T^{2/3}\\left(K\\log T\\right)^{1/3}) \\end{aligned} $$ \u4ece\u800c\\(\\epsilon\\)-\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9057\u61be\u754c\u4e3a\\(O(T^{2/3}(K\\log T)^{1/3})\\)</p>"},{"location":"sp25/data_market/2025/hw2-solution/","title":"\u8bfe\u7a0b\u7efc\u5408\u5b9e\u8df5II\uff08\u6570\u636e\u8981\u7d20\u4ea4\u6613\u57fa\u7840\uff09","text":""},{"location":"sp25/data_market/2025/hw2-solution/#hw2","title":"HW2:\u673a\u5236\u8bbe\u8ba1\u4e0e\u4fe1\u606f\u8bbe\u8ba1\u57fa\u7840","text":""},{"location":"sp25/data_market/2025/hw2-solution/#21-n","title":"2.1 \\(N\\)\u4eba\u4e00\u4ef7\u62cd\u5356\u5747\u8861","text":"<p>\u5047\u8bbe\u6709\\(N\\)\u4e2a\u7ade\u62cd\u8005\uff0c\u5e76\u4e14\\(N\\)\u4e2a\u7ade\u62cd\u8005\u7684\u4f30\u503c\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u4e14\u90fd\u670d\u4ece\\([0,1]\\)\u4e0a\u7684\u5747\u5300\u5206\u5e03\u3002\\(N\\)\u4e2a\u7ade\u62cd\u8005\u7684\u771f\u771f\u5b9e\u503c\u8bb0\u4e3a\\(t_1,...,t_n\\)\u3002 1.\u6c42\u89e3\u535a\u5f08\u7684\u9012\u589e\u5bf9\u79f0\u7eaf\u7b56\u7565\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\\(\\beta\\)\uff08\u6ce8\u610f\\(\\beta(0)=0\\)\uff09\uff1b 2.\u4ece\u4e0a\u8ff0\u7ed3\u679c\u4e2d\u4f60\u80fd\u83b7\u5f97\u4ec0\u4e48\u542f\u793a\uff1f</p> <p>[Answer] 1.\u7ade\u62cd\u8005\u7684\u51fa\u4ef7\u7b56\u7565\u90fd\u662f\u5f53\u81ea\u5df1\u7684\u4f30\u503c\u4e3a\\(t_i\\)\u65f6\u51fa\u4ef7\\(\\beta(t_i)\\)\uff0c\u5176\u4e2d\\(\\beta\\)\u662f\u5355\u8c03\u4e0d\u51cf\u7684\uff0c\\(\\beta(0)=0\\) \u5f53\u7ade\u62cd\u8005\\(i\\)\u62a5\u4ef7\\(b_i\\)\uff0c\u5176\u4f59\u7ade\u62cd\u8005\u62a5\u4ef7\\(\\beta(t_1),...,\\beta(t_{i-1}),\\beta(t_{i+1}),...,\\beta(t_N)\\)\u65f6\uff0c\u7ade\u62cd\u8005\\(i\\)\u7684\u6548\u7528\u4e3a\uff1a $$ (t_i-b_i)\\mathbb{P}(b_i&gt;max_{j\\in N-\\left{i\\right}}\\beta(t_j))=(t_i-b_i)\\cdot (\\beta^{-1}(b_i))^{N-1} $$ \u5bf9\\(b_i\\)\u6c42\u5bfc\u6709\u53d6\u6781\u5927\u503c\u7684\u5fc5\u8981\u6761\u4ef6\u4e3a $$ -(\\beta^{-1}(b_i))^{N-1}+(t_i-b_i)\\cdot(N-1)(\\beta^{-1}(b_i))^{N-2}\\cdot \\frac{1}{\\beta'(\\beta^{-1}(b_i))}=0 $$ \u5df2\u77e5\u8003\u8651\u5bf9\u79f0\u5747\u8861\uff0c\u6545\u5747\u8861\u65f6\\(b_i=\\beta(t_i)\\)\uff0c\u4ee3\u5165\u4e0a\u5f0f\u6709 $$ t_i^{N-1}\\beta'(t_i)=(t_i-\\beta(t_i))\\cdot(N-1)t_i^{N-2} $$ \u4e0a\u5f0f\u5bf9\u4efb\u610f\\(t_i\\)\u6210\u7acb $$ (t^{N-1}\\beta(t))'=(N-1)t_i^{N-1} $$ \u4e24\u8fb9\u4ece0\u5230\\(t_i\\)\u79ef\u5206\uff08\u6ce8\u610f\\(\\beta(0)=0\\)\uff09\uff0c\u89e3\u5f97\\(\\beta(t_i)=\\frac{N-1}{N}t_i\\) \u5bf9\\(b_i\\)\u6c42\u4e8c\u9636\u5bfc\u975e\u8d1f\uff08\u7701\u7565\uff09\uff0c\u9a8c\u8bc1\u8be5\u535a\u5f08\u7684\u9012\u589e\u5bf9\u79f0\u7eaf\u7b56\u7565\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\\(\\beta(t_i)=\\frac{N-1}{N}t_i\\) 2.\u4e0a\u8ff0\u7ed3\u679c\u8868\u660e\uff0c\u4eba\u6570\u8d8a\u591a\uff08\\(N\\)\u8d8a\u5927\uff09\uff0c\u7ade\u62cd\u8005\u66f4\u503e\u5411\u4e8e\u63d0\u9ad8\u81ea\u5df1\u7684\u62a5\u4ef7\uff08\u4f7f\u62a5\u4ef7\u66f4\u63a5\u8fd1\u771f\u5b9e\u4f30\u503c\uff09\uff0c\u8fd9\u662f\u7b26\u5408\u76f4\u89c9\u7684\uff0c\u56e0\u4e3a\u968f\u7740\u7ade\u4e89\u4eba\u6570\u7684\u589e\u52a0\uff0c\u7ade\u4e89\u66f4\u6fc0\u70c8\uff0c\u7ade\u62cd\u8005\u503e\u5411\u4e8e\u7406\u6027\u5730\u63d0\u9ad8\u62a5\u4ef7\u964d\u4f4e\u671f\u671b\u6536\u76ca\u4ee5\u671f\u671b\u5728\u6fc0\u70c8\u7684\u7ade\u4e89\u4e2d\u80dc\u51fa\uff08\u7ade\u62cd\u8005\u5e0c\u671b\u4f18\u5148\u83b7\u5f97\u6536\u76ca\u4ee5\u907f\u514d0\u6536\u76ca\u800c\u975e\u8ffd\u6c42\u66f4\u5927\u7684\u6536\u76ca\uff09\u3002\u4f46\u5747\u8861\u62a5\u4ef7\u59cb\u7ec8\u5c0f\u4e8e\u4f30\u4ef7\uff0c\u4e0d\u7136\u7ade\u62cd\u8005\u65e0\u6cd5\u53d6\u5f97\u6b63\u6536\u76ca\u3002</p>"},{"location":"sp25/data_market/2025/hw2-solution/#22","title":"2.2 \u6536\u5165\u7b49\u4ef7\u539f\u7406","text":"<p>\u6709\\(N\\)\u4e2a\u7ade\u62cd\u8005\uff0c\u5e76\u4e14\\(N\\)\u4e2a\u7ade\u62cd\u8005\u7684\u4f30\u503c\u662f\u72ec\u7acb\u7684\uff0c\u4e14\u90fd\u670d\u4ece\\([0,1]\\)\u4e0a\u7684\u5747\u5300\u5206\u5e03\u3002\u8003\u8651\u5982\u4e0b\u89c4\u5219\u7684\u652f\u4ed8\u62cd\u5356\uff1a\u6bcf\u4e2a\u7ade\u62cd\u8005\u63d0\u4ea4\u4e00\u4e2a\u62a5\u4ef7\uff0c\u62a5\u4ef7\u6700\u9ad8\u7684\u7ade\u62cd\u8005\u8d62\u5f97\u7269\u54c1\u3002\u4f46\u6240\u6709\u7ade\u62cd\u8005\u65e0\u8bba\u662f\u5426\u83b7\u5f97\u7269\u54c1\u90fd\u8981\u652f\u4ed8\u81ea\u5df1\u7684\u62a5\u4ef7\u3002\u6ce8\u610f\uff0c\u4ee5\u4e0b\u53ea\u8003\u8651\u4f30\u4ef7\u4e3a\\(0\\)\u7684\u7ade\u62cd\u8005\u7684\u671f\u671b\u652f\u4ed8\u4e3a\\(0\\)\u7684\u9012\u589e\u5bf9\u79f0\u5747\u8861 1.\u6c422.1\u9898\u7684\u5747\u8861\u4e0b\u4f30\u503c\u4e3a\\(x\\)\u7684\u7ade\u62cd\u8005\u7684\u5747\u8861\u671f\u671b\u652f\u4ed8\\(m(x)\\)\uff1b 2.\u6c422.1\u9898\u7684\u5747\u8861\u4e0b\u5356\u5bb6\u7684\u671f\u671b\u6536\u5165\uff1b 3.\u6839\u636e\u6536\u5165\u7b49\u4ef7\u539f\u7406\u8bc1\u660e\uff1a\u5168\u652f\u4ed8\u62cd\u5356\u7684\u9012\u589e\u5bf9\u79f0\u5747\u8861\u5c31\u662f\\(\\beta(x)=m(x)\\)\u3002</p> <p>[Answer] 1.\u75312.1\u77e5\uff0c\\(N\\)\u4eba\u4e00\u4ef7\u62cd\u5356\u7684\u5747\u8861\u662f\\(\\beta(t_i)=\\frac{N-1}{N}t_i\\)\uff0c\u5176\u671f\u671b\u652f\u4ed8\u4e3a $$ m(x)=\\mathbb{P}(win)\\cdot \\beta(x)+\\mathbb{P}(lose)\\cdot 0=\\frac{N-1}{N}x^{N} $$ 2.\u5356\u5bb6\u7684\u671f\u671b\u6536\u5165\u662f\\(N\\)\u4e2a\u53c2\u4e0e\u4eba\u7684\u671f\u671b\u652f\u4ed8\u4e4b\u548c\uff0c\u5373 $$ N\\cdot\\mathbb{E}(m(x))=N\\cdot\\int_0^1\\frac{N-1}{N}x^Ndx=\\frac{N-1}{N+1} $$ 3.\u5168\u652f\u4ed8\u62cd\u5356\u4e0e\\(N\\)\u4eba\u4e00\u4ef7\u62cd\u5356\u6ee1\u8db3\uff1a\u7ade\u62cd\u8005\u4f30\u4ef7\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u4f30\u4ef7\u4e3a\\(0\\)\u7684\u53c2\u4e0e\u4eba\u671f\u671b\u652f\u4ed8\u4e3a\\(0\\)\uff0c\u62cd\u5356\u89c4\u5219\u4e3a\u62a5\u4ef7\u6700\u9ad8\u8005\u5f97\u5230\u7269\u54c1\u3002\u6839\u636e\u6536\u5165\u7b49\u4ef7\u539f\u7406\uff0c\u62cd\u5356\u7684\u9012\u589e\u5bf9\u79f0\u5747\u8861\u90fd\u4f1a\u4f7f\u5356\u5bb6\u83b7\u5f97\u76f8\u7b49\u7684\u671f\u671b\u6536\u5165\uff08\u5373\\(\\frac{N-1}{N+1}\\)\uff09\uff0c\u4e5f\u5373\u5168\u652f\u4ed8\u62cd\u5356\u4e0e\\(N\\)\u4eba\u4e00\u4ef7\u62cd\u5356\u6709\u76f8\u540c\u7684\u5747\u8861\u671f\u671b\u652f\u4ed8\\(m(x)\\)\uff0c\u800c\u5168\u652f\u4ed8\u62cd\u5356\u7684\u671f\u671b\u652f\u4ed8\u4e3a\uff08\u65e0\u8bba\u8f93\u8d62\u90fd\u9700\u8981\u652f\u4ed8\u62a5\u4ef7\uff09 $$ m(x)=\\mathbb{P}(win)\\cdot \\beta(x)+\\mathbb{P}(lose)\\cdot \\beta(x)=\\beta(x) $$ \u6240\u4ee5\u5168\u652f\u4ed8\u62cd\u5356\u7684\u9012\u589e\u5bf9\u79f0\u5747\u8861\\(\\beta(x)\\)\u5c31\u662f\\(N\\)\u4eba\u4e00\u4ef7\u62cd\u5356\u7684\u5747\u8861\u671f\u671b\u652f\u4ed8\\(m(x)\\) \u4ee5\u4e0b\u7ed9\u51fa\u4e86\u9a8c\u8bc1: \u7ade\u62cd\u8005\u7684\u51fa\u4ef7\u7b56\u7565\u90fd\u662f\u5f53\u81ea\u5df1\u7684\u4f30\u503c\u4e3a\\(t_i\\)\u65f6\u51fa\u4ef7\\(\\beta(t_i)\\)\uff0c\u5176\u4e2d\\(\\beta\\)\u662f\u5355\u8c03\u4e0d\u51cf\u7684\uff0c\\(\\beta(0)=0\\) \u5f53\u7ade\u62cd\u8005\\(i\\)\u62a5\u4ef7\\(b_i\\)\uff0c\u5176\u4f59\u7ade\u62cd\u8005\u62a5\u4ef7\\(\\beta(t_1),...,\\beta(t_{i-1}),\\beta(t_{i+1}),...,\\beta(t_N)\\)\u65f6\uff0c\u7ade\u62cd\u8005\\(i\\)\u7684\u6548\u7528\u4e3a\uff1a $$ \\begin{aligned} &amp;(t_i-b_i)\\mathbb{P}(b_i&gt;max_{j\\in N-\\left{i\\right}}\\beta(t_j))-b_i\\mathbb{P}(b_i&lt;max_{j\\in N-\\left{i\\right}}\\beta(t_j)) \\ &amp;\\quad=(t_i-b_i)\\cdot (\\beta^{-1}(b_i))^{N-1}-b_i\\cdot (1-\\beta^{-1}(b_i)^{N-1}) \\ &amp;\\quad=t_i\\cdot (\\beta^{-1}(b_i))^{N-1}-b_i \\end{aligned} $$ \u5bf9\\(b_i\\)\u6c42\u5bfc\u6709\u53d6\u6781\u5927\u503c\u7684\u5fc5\u8981\u6761\u4ef6\u4e3a $$ t_i\\cdot(N-1)(\\beta^{-1}(b_i))^{N-2}\\cdot\\frac{1}{\\beta'(\\beta^{-1}(b_i))}=1 $$ \u5df2\u77e5\u8003\u8651\u5bf9\u79f0\u5747\u8861\uff0c\u6545\u5747\u8861\u65f6\\(b_i=\\beta(t_i)\\)\uff0c\u4ee3\u5165\u4e0a\u5f0f\u6709 $$ (N-1)t_i^{N-1}=\\beta'(t_i) $$ \u4e24\u8fb9\u4ece0\u5230\\(t_i\\)\u79ef\u5206\uff08\u6ce8\u610f\\(\\beta(0)=0\\)\uff09\uff0c\u89e3\u5f97\\(\\beta(t_i)=\\frac{N-1}{N}t_i^N\\) \u5bf9\\(b_i\\)\u6c42\u4e8c\u9636\u5bfc\u975e\u8d1f\uff08\u7701\u7565\uff09\uff0c\u9a8c\u8bc1\u8be5\u535a\u5f08\u7684\u9012\u589e\u5bf9\u79f0\u7eaf\u7b56\u7565\u8d1d\u53f6\u65af\u7eb3\u4ec0\u5747\u8861\\(\\beta(t_i)=\\frac{N-1}{N}t_i^N=m(t_i)\\) \u4ece\u800c\u9a8c\u8bc1\u4e86\\(\\beta(x)=m(x)\\)</p>"},{"location":"sp25/data_market/2025/hw2-solution/#23","title":"2.3 \u53cd\u5411\u62cd\u5356\u7684\u8fc8\u5c14\u68ee\u5f15\u7406","text":"<p>\u5728\u53cd\u5411\u62cd\u5356\u4e2d\uff0c\u4e70\u5bb6\u4f5c\u4e3a\u62cd\u5356\u5e08\u901a\u5e38\u5177\u6709\u4e00\u4e9b\u91c7\u8d2d\u9700\u6c42\uff0c\u7ade\u62cd\u8005\u662f\u5f85\u91c7\u8d2d\u4ea7\u54c1\u7684\u5356\u5bb6\u3002\u6bcf\u4f4d\u7ade\u62cd\u8005\\(i\\)\u62a5\u51fa\u81ea\u5df1\u4ea7\u54c1\u7684\u6210\u672c\\(c_i\\)\uff0c\u4e70\u5bb6\u6536\u5230\u6240\u6709\u7ade\u62cd\u8005\u62a5\u544a\u7684\u6210\u672c\u5411\u91cf\u540e\u51b3\u5b9a\u5206\u914d\u89c4\u5219\\(\\boldsymbol{x}\\)\u548c\u652f\u4ed8\u89c4\u5219\\(\\boldsymbol{p}\\)\uff0c\u5176\u4e2d\\(x_i(c_i)\\)\u8868\u793a\u7ade\u62cd\u8005$ i \\(\u62a5\u544a\u6210\u672c\\) c_i \\(\u65f6\u8d2d\u4e70\u7ade\u62cd\u8005\\) i \\(\u4ea7\u54c1\u7684\u6982\u7387\uff0c\\)p_i(c_i)\\(\u8868\u793a\u7ade\u62cd\u8005\\) i \\(\u62a5\u544a\u6210\u672c\\)c_i\\(\u4e14\u7ade\u62cd\u8005\\) i \\(\u7684\u4ea7\u54c1\u88ab\u8d2d\u4e70\u65f6\u7ed9\u7ade\u62cd\u8005\\) i \\(\u7684\u652f\u4ed8\u3002** **\u5047\u8bbe\u7ade\u62cd\u8005\u7684\u4ea7\u54c1\u6ca1\u6709\u88ab\u5356\u51fa\u65f6\u7684\u6548\u7528\u4e3a\\) 0\\(\uff0c\u56e0\u6b64\u7ade\u62cd\u8005\\) i \\(\u62a5\u51fa\u4efb\u610f\u7684\\) c'_i $\u65f6\u7684\u671f\u671b\u6548\u7528\u53ef\u4ee5\u8868\u8fbe\u4e3a $$ u_i(c'i)=x_i(c'_i)\\cdot (p_i(c'_i)-c_i). $$ 1.\u6839\u636e DSIC \u7684\u5b9a\u4e49\u5199\u51fa\u53cd\u5411\u62cd\u5356\u673a\u5236\\((\\boldsymbol{x},\\boldsymbol{p})\\)\u6ee1\u8db3 DSIC \u65f6\u7ade\u62cd\u8005\u6548\u7528\u5e94\u5f53\u6ee1\u8db3\u7684\u6761\u4ef6\uff1b 2.\u6839\u636e\u8bfe\u4e0a\u7ed9\u51fa\u7684\u8fc8\u5c14\u68ee\u5f15\u7406\uff0c\u7ed9\u51fa\u5e76\u8bc1\u660e\u53cd\u5411\u62cd\u5356\u673a\u5236\u662f DSIC \u7684\u5145\u8981\u6761\u4ef6\uff08\u5047\u8bbe$ c \\rightarrow \\infty \\(\u65f6\uff0c\\)c\\cdot x_i(c) \\rightarrow 0\\(\u4e14\\)p_i(c)\\cdot x_i(c)\\rightarrow 0\\(\uff09\u3002 [Answer] 1.\u53cd\u5411\u62cd\u5356\u673a\u5236\\)(\\boldsymbol{x},\\boldsymbol{p})\\(\u6ee1\u8db3 DSIC \u65f6\uff0c\u6bcf\u4e2a\u53c2\u4e0e\u4eba\u5982\u5b9e\u62a5\u544a\u81ea\u5df1\u7684\u6210\u672c\\)c_i\\(\u6784\u6210\u7684\u884c\u52a8\u5411\u91cf\\)\\boldsymbol{s}$\u662f\u5360\u4f18\u7b56\u7565\u5747\u8861\uff0c\u5373 $$ \\forall i\\in N,\\forall c_i'\\neq c_i,u_i(c_i)\\ge u_i(c_i')  $$ 2.\u6839\u636e\u8fc8\u5c14\u68ee\u5f15\u7406\uff0c\u53cd\u5411\u62cd\u5356\u673a\u5236\u662f DSIC \u7684\u5145\u8981\u6761\u4ef6\u662f\uff1a\\((\\boldsymbol{x},\\boldsymbol{p})\\)\u6ee1\u8db3(1)\\(\\boldsymbol{x}\\)\u662f\u5355\u8c03\u4e0d\u589e\u7684\uff08\u5373\u62a5\u4ef7\\(c_i\\)\u8d8a\u4f4e\uff0c\u5356\u51fa\u7269\u54c1\u7684\u6982\u7387\u8d8a\u5927\uff09\uff0c(2)\u7ed9\u5b9a\\(\\boldsymbol{x}\\)\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u8981\u7ed9\u5b9a\\(p_i(0)\\)\u7684\u503c\uff0c\u5bf9\u4efb\u610f\u7684\\(i\\in N\\)\u548c\\(b_i \\in [0,+\\infty)\\)\uff0c\\(\\boldsymbol{p}\\)\u7684\u8868\u8fbe\u5f0f\u662f\u552f\u4e00\u786e\u5b9a\u7684\uff1a\uff08\u8fd9\u4e00\u8868\u8fbe\u5f0f\u5176\u5b9e\u662f\u901a\u8fc7\u5fc5\u8981\u6027\u7684\u6b65\u9aa4\u63a8\u5bfc\u51fa\u6765\u7684\uff09 $$ p_i(c_i)=c_i+\\frac{\\int. $$ \u4e0b\u9762\u7ed9\u51fa\u8bc1\u660e\uff1a \u5145\u5206\u6027\uff1a \u8bbe\u7ade\u62cd\u8005}^{\\infty}x_i(s)ds}{x_i(c_i)\\(i\\)\u7684\u6210\u672c\u4e3a\\(c_i\\)\uff0c\u5f53\u5176\u62a5\u4ef7\u4e3a\\(c'_i\\)\u65f6\uff0c\u5176\u6536\u76ca\u4e3a $$ u_i(c'i)=x_i(c'_i)\\cdot (p_i(c'_i)-c_i)=\\int{c'i}^{\\infty}x_i(s)ds+x_i(c'_i)\\cdot(c'_i-c_i) $$ \u7279\u522b\u5730\uff0c\u5f53\u62a5\u4ef7\\(c'_i=c_i\\)\uff0c\u5373\u7ade\u62cd\u8005\u8bda\u5b9e\u62a5\u4ef7\u65f6\uff0c\u5176\u6536\u76ca\u4e3a $$ u_i(c_i)=\\intx_i(s)ds $$ \u6545\u6709 $$ u_i(c_i)-u_i(c'}^{\\inftyi)=\\int^{c'i}x_i(s)ds+x_i(c'_i)(c_i-c'_i) $$ \u5f53\\(c'_i\\ge c_i\\)\u65f6\uff0c\u7531\u4e8e\\(x_i\\)\u662f\u51cf\u51fd\u6570\uff0c\u6545 $$ \\int^{c'i}x_i(s)ds\\ge (c'_i-c_i)x_i(c'_i) $$ \u56e0\u6b64\\(u_i(c_i)-u_i(c'_i)\\ge 0\\)\uff0c\u5f53\\(c'_i\\le c_i\\)\u65f6\u540c\u7406\u53ef\u5f97\\(u_i(c_i)-u_i(c'_i)\\ge 0\\) \u6545\u65e0\u8bba\u5176\u4ed6\u7ade\u62cd\u8005\u7684\u62a5\u4ef7\u5982\u4f55\uff0c\u7ade\u62cd\u8005\\(i\\)\u9009\u62e9\u5982\u5b9e\u62a5\u51fa\u81ea\u5df1\u7684\u6210\u672c\u662f\u5360\u4f18\u7b56\u7565\uff0c\u56e0\u6b64\u8be5\u673a\u5236\u662f DSIC \u7684\u3002 \u5fc5\u8981\u6027\uff1a \u5047\u8bbe\u673a\u5236\\((\\boldsymbol{x},\\boldsymbol{p})\\)\u662fDSIC\u7684\uff0c\u6709\u4e24\u4e2a\u4efb\u610f\u7684\u53d8\u91cf\\(z\\lt y \\lt \\infty\\)\u3002\u4e00\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\u662f\uff0c\u667a\u80fd\u4f53\\(i\\)\u7684\u6210\u672c\u662f\\(z\\)\uff0c\u63d0\u4ea4\u62a5\u4ef7\\(y\\)\uff0c\u6b64\u65f6DSIC\u8981\u6c42\\(u_i(z)\\ge u_i(y)\\)\uff0c\u5c55\u5f00\u4e3a $$ x_i(z)\\cdot (p_i(z)-z) \\ge x_i(y)\\cdot(p_i(y)-z) $$ \u53e6\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u667a\u80fd\u4f53\\(i\\)\u7684\u6210\u672c\u662f\\(y\\)\uff0c\u63d0\u4ea4\u62a5\u4ef7\\(z\\)\uff0c\u6b64\u65f6\u8981\u6c42 $$ x_i(y)\\cdot (p_i(y)-y) \\ge x_i(z)\\cdot(p_i(z)-y) $$ \u4e0a\u8ff0\u4e24\u5f0f\u79fb\u9879\u3001\u7ec4\u5408\u540e\u53ef\u4ee5\u5f97\u5230 $$ y(x_i(y)-x_i(z))\\le x_i(y)p_i(y)-x_i(z)p_i(z) \\le z(x_i(y)-x_i(z)) $$ \u5b9e\u9645\u4e0a\u7531\u4e0a\u5f0f\u5de6\u53f3\u4e24\u7aef\u5df2\u7ecf\u53ef\u4ee5\u770b\u51fa\uff0c\\((z-y)(x_i(y)-x_i(z))\\ge 0\\)\uff0c\u56e0\u4e3a\\(z\\lt y\\)\uff0c\u6545\\(x_i(y)-x_i(z)\\le 0\\)\uff0c\u53c8\u56e0\u4e3a\u8fd9\u4e00\u7ed3\u679c\u5bf9\u4efb\u610f\u7684\\(z\\lt y \\lt \\infty\\)\u6210\u7acb\uff0c\u6545\\(x_i\\)\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6545\u4e5f\u662f\u53ef\u79ef\u4e14\u51e0\u4e4e\u5904\u5904\u53ef\u5bfc\u7684\u3002 \u8fdb\u4e00\u6b65\u5730\uff0c\u5bf9\u4e0d\u7b49\u5f0f\u4e2d\u4e09\u9879\u5206\u522b\u9664\u4ee5\\(y-z\\)\uff0c\u7136\u540e\u4ee4\\(y\\rightarrow z\\)\u53ef\u5f97\u4e0b\u5f0f\u51e0\u4e4e\u5904\u5904\u6210\u7acb\uff1a $$ y\\cdot x_i'(y)=(x_i(y)p_i(y))' $$ \u4e24\u8fb9\u5bf9\\(y\\)\u79ef\u5206\u53ef\u5f97 $$ \\int(x_i(y)p_i(y))'dy $$ \u5229\u7528\u5206\u90e8\u79ef\u5206\u5373\u53ef\u5f97\u5230\u8fc8\u5c14\u68ee\u652f\u4ed8\u516c\u5f0f $$ p_i(c_i)=c_i+\\frac{\\int_{c_i}^{\\infty}x_i(s)ds}{x_i(c_i)}. $$}^{\\infty}y\\cdot x_i'(y)dy=\\int_{c_i}^{\\infty</p>"},{"location":"sp25/data_market/2025/hw2-solution/#24","title":"2.4 \u865a\u62df\u4f30\u503c\u548c\u6b63\u5219\u6027\u6761\u4ef6","text":"<p>\u672c\u9898\u5c06\u63a8\u5bfc\u51fa\u5bf9\u4e8e\u865a\u62df\u4f30\u503c\\(c(v)=v-\\frac{1-F(v)}{f(v)}\\)\u548c\u6b63\u5219\u5316\u6761\u4ef6\u7684\u6709\u8da3\u63cf\u8ff0\u3002\u8003\u8651 \\([0, v_{max}]\\)\u4e0a\u4e25\u683c\u5355\u8c03\u9012\u589e\u7684\u5206\u5e03\u51fd\u6570\\(F\\)\uff0c\u5176\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\\(f\\)\u4e3a\u6b63\uff0c\u5176\u4e2d\\(v_{max}&lt;+\\infty\\)\u3002\u5bf9\u4e8e\u4f30\u503c\u670d\u4ece\u5206\u5e03\\(F\\)\u7684\u7ade\u62cd\u8005\uff0c\u5f53\u4ea4\u6613\u6210\u529f\u6982\u7387\u4e3a\\(q \\in [0,1]\\)\u65f6\uff0c\u5b9a\u4e49\\(V(q)=F^{-1}(1-q)\\)\u4e3a\u7269\u54c1\u7684\u201c\u4ef7\u683c\u201d\uff0c\u8fdb\u800c\u53ef\u4ee5\u5b9a\u4e49\\(R(q)=q\\cdot V(q)\\)\u4e3a\u4ece\u7ade\u62cd\u8005\u5904\u83b7\u5f97\u7684\u671f\u671b\u6536\u76ca\u3002\u79f0\\(R(q)\\)\u4e3a\\(F\\)\u7684\u6536\u76ca\u51fd\u6570\u66f2\u7ebf\uff0c\u6ce8\u610f\\(R(0)=R(1)=0\\)\u3002 1.\u8bf7\u89e3\u91ca\u4e3a\u4ec0\u4e48\\(V(q)\\)\u53ef\u4ee5\u88ab\u89c6\u4e3a\u7269\u54c1\u7684\u4ef7\u683c\uff1b 2.\\([0,1]\\)\u4e0a\u7684\u5747\u5300\u5206\u5e03\u7684\u6536\u76ca\u66f2\u7ebf\u51fd\u6570\u662f\u4ec0\u4e48\uff1f 3.\u8bc1\u660e\u6536\u76ca\u66f2\u7ebf\u5728\\(q\\)\u70b9\u7684\u659c\u7387\uff08\u5373\\(R'(q)\\)\uff09\u662f\\(c(V(q))\\)\uff0c\u5176\u4e2d\\(c\\)\u662f\u865a\u62df\u4f30\u503c\u51fd\u6570\uff1b 4.\u8bc1\u660e\u5f53\u4e14\u4ec5\u5f53\u6536\u76ca\u66f2\u7ebf\u662f\u51f9\u7684\u65f6\u5019\uff0c\u6982\u7387\u5206\u5e03\u662f\u6b63\u5219\u7684\u3002</p> <p>[Answer] 1.\\(V(q)\\)\u662f\u5173\u4e8e\\(q\\)\u7684\u5355\u8c03\u9012\u51cf\u51fd\u6570\uff0c\u5b9a\u4e49\u57df\u4e3a\\([0,1]\\)\uff0c\u503c\u57df\u4e3a\\([0, v_{max}]\\)\uff0c\u4e14\\(V(0)=v_{max},V(1)=0\\)\uff0c\u4e0b\u9762\u63a8\u5bfc\u4e3a\u4ec0\u4e48\u8fd9\u6837\u7684\\(V(q)\\)\u53ef\u4ee5\u88ab\u89c6\u4e3a\u7269\u54c1\u7684\u4ef7\u683c \u5047\u8bbe\u67d0\u7269\u54c1\u5b58\u5728\u4e00\u4e2a\u4ef7\u683c\\(p\\)\uff0c\u7ade\u62cd\u8005\u7684\u4f30\u503c\u4e3a\\(v\\)\uff0c\u5219\u7ade\u62cd\u8005\u613f\u610f\u8d2d\u4e70\u8be5\u7269\u54c1\u7684\u6982\u7387\u4e3a\uff08\u4f30\u503c\u670d\u4ece\u5206\u5e03\\(F\\)\uff09 $$ P(v\\ge p)=1-P(v\\lt p)=1-F(p) $$ \u6b64\u65f6\u4ea4\u6613\u6210\u529f\u7387\u4e3a\\(q\\)\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2a\u4ef7\u683c\\(p\\)\u4f7f\u5f97\\(P(v\\ge p)=q\\)\uff0c\u89e3\u5f97 $$ p=F^{-1}(1-q)\\stackrel{\\Delta}{=}V(q) $$ \u4ece\u800c\\(V(q)\\)\u53ef\u4ee5\u88ab\u89c6\u4e3a\u7269\u54c1\u7684\u4ef7\u683c\uff0c\u6ee1\u8db3\\(q\\)\u662f\u7269\u54c1\u7684\u4ef7\u683c\u4e3a\\(V(q)\\)\u65f6\uff0c\u4ea4\u6613\u6210\u529f\uff08\u5373\u7ade\u62cd\u8005\u613f\u610f\u62cd\u4e0b\u7269\u54c1\uff0c\u4e5f\u5373\u7ade\u62cd\u8005\u7684\u4f30\u503c\u9ad8\u4e8e\u7269\u54c1\u4ef7\u683c\uff09\u7684\u6982\u7387 2.\u5bf9\\([0,1]\\)\u4e0a\u7684\u5747\u5300\u5206\u5e03\uff0c\u5206\u5e03\u51fd\u6570\\(F(v)=v\\)\uff0c\u5219\\(F^{-1}(v)=v\\)\u6b64\u65f6\u6536\u76ca\u66f2\u7ebf\u51fd\u6570 $$ R(q)=q\\cdot V(q)=q\\cdot F^{-1}(1-q)=q(1-q) $$ \u5176\u4e2d\\(q\\)\u662f\u4ea4\u6613\u6210\u529f\u6982\u7387\uff0c\\(q\\in[0,1]\\) 3.\u8981\u8bc1\u660e\\(R'(q)=c(V(q))\\)\uff0c\u5373\u8bc1\\(V(q)+q\\cdot V'(q)=V(q)-\\frac{1-F(V(q))}{f(V(q))}\\)\uff0c\u5373 $$ \\frac{1-F(V(q))}{f(V(q))}+q\\cdot V'(q)=0  \\tag{*}\\qquad $$ \u6839\u636e\u53cd\u51fd\u6570\u7684\u6c42\u5bfc\u6cd5\u5219\u5bf9\\(V(q)=F^{-1}(1-q)\\)\uff0c\u6709 $$ V'(q)=\\frac{1}{F'(F^{-1}(1-q))}\\cdot (1-q)'=\\frac{-1}{f(F^{-1}(1-q))} $$ \u4ee3\u5165\\((*)\\)\uff0c\u6709 $$ \\begin{aligned} &amp;\\frac{1-F(V(q))}{f(V(q))}+q\\cdot V'(q) \\ &amp;\\quad =\\frac{q}{f(F^{-1}(1-q))}+q\\cdot \\frac{-1}{f(F^{-1}(1-q))} \\ &amp;\\quad =0 \\end{aligned} $$</p> <p>\u4ece\u800c\u8bc1\u660e\u4e86\u6536\u76ca\u66f2\u7ebf\u7684\u659c\u7387\u662f\u5bf9\u5e94\u4ef7\u683c\u7684\u865a\u62df\u4f30\u503c 4.\u8981\u8bc1\u660e\u6536\u76ca\u66f2\u7ebf\\(R(q)\\)\u662f\u51f9\u7684\u662f\u6982\u7387\u5206\u5e03\u6b63\u5219\u7684\u5145\u8981\u6761\u4ef6 \u5373\\(R''(q)\\le 0\\)\u662f\u865a\u62df\u4f30\u503c\\(c\\)\u5355\u8c03\u9012\u589e\u7684\u5145\u8981\u6761\u4ef6 \u5229\u7528\u5c0f\u98983\u7684\u7ed3\u8bba\uff0c\u6211\u4eec\u6709 $$ R''(q)=c'(V(q))\\cdot V'(q),q\\in[0,1] $$ \u56e0\u4e3a\\(V(q)\\)\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6240\u6709\\(V'(q)\\le 0\\)\uff0c\u5219 \\(R''(q)\\le 0 \\iff c'(V(q))\\ge 0 \\stackrel{V(q)\\in[0,v_{max}]}{\\iff}c\u662f\u5355\u8c03\u9012\u589e\u7684\\) \u4ece\u800c\u5f53\u4e14\u4ec5\u5f53\u6536\u76ca\u66f2\u7ebf\u662f\u51f9\u7684\u65f6\u5019\uff0c\u6982\u7387\u5206\u5e03\u662f\u6b63\u5219\u7684\u3002 \u8be5\u7ed3\u8bba\u8868\u660e\uff0c\u53ea\u8981\u6536\u76ca\u66f2\u7ebf\u662f\u51f9\u7684\uff0c\u6982\u7387\u5206\u5e03\u5c31\u662f\u6b63\u5219\u7684\uff0c\u901a\u8fc7\u6700\u4f18\u673a\u5236\uff08\u4e8c\u4ef7\u62cd\u5356\u4e0e\u4fdd\u7559\u4ef7\uff09\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6700\u4f18\u62cd\u5356 \u6536\u76ca\u66f2\u7ebf\u7684\u51f9\u6027\u8fd8\u7b26\u5408\u8fb9\u9645\u6548\u5e94\u9012\u51cf\u7684\u7ecf\u6d4e\u5b66\u76f4\u89c9\uff0c\u901a\u8fc7\u6536\u76ca\u66f2\u7ebf\u53ef\u4ee5\u5feb\u901f\u5224\u65ad\u662f\u5426\u80fd\u591f\u901a\u8fc7\u6700\u4f18\u673a\u5236\u8f83\u4e3a\u5bb9\u6613\u5730\u5b9e\u73b0\u6536\u76ca\u6700\u5927\u5316</p>"},{"location":"sp25/data_market/2025/hw2-solution/#25","title":"2.5 \u8d1d\u53f6\u65af\u529d\u8bf4\uff1a\u68c0\u5bdf\u5b98\u4e0e\u6cd5\u5b98","text":"<p>\u8003\u8651\u68c0\u5bdf\u5b98\u529d\u8bf4\u6cd5\u5b98\u5224\u51b3\u7684\u4f8b\u5b50\uff1a\u5047\u8bbe\u6cd5\u5b98\uff08\u4fe1\u53f7\u63a5\u6536\u8005\uff09\u5bf9\u4e8e\u4e00\u4e2a\u88ab\u544a\u4eba\uff0c\u5fc5\u987b\u505a\u51fa\u4ee5\u4e0b\u4e24\u79cd\u51b3\u7b56\u4e4b\u4e00\uff1a\u5224\u51b3\u6709\u7f6a\uff08convict\uff09\u6216\u65e0\u7f6a\u91ca\u653e\uff08acquit\uff09\u3002 \u2022 \u88ab\u544a\u4eba\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\u6709\u7f6a\uff08guilty\uff09\u6216\u65e0\u7f6a\uff08innocent\uff09\uff1b \u2022 \u6cd5\u5b98\u5728\u516c\u6b63\u5224\u51b3\u4e0b\u83b7\u5f97\u7684\u6548\u7528\u4e3a 1\uff1a\u5982\u679c\u6709\u7f6a\u88ab\u5224\u6709\u7f6a\uff0c\u65e0\u7f6a\u88ab\u5224\u65e0\u7f6a\uff0c\u5426\u5219\u6548\u7528\u4e3a 0\uff1b \u2022 \u68c0\u5bdf\u5b98\uff08\u4fe1\u53f7\u53d1\u9001\u8005\uff09\u4e3a\u6cd5\u5b98\u63d0\u4f9b\u6709\u5173\u88ab\u544a\u7684\u8bc1\u636e\uff08\u53d1\u9001\u4fe1\u53f7\uff09\uff0c\u5982\u679c\u88ab\u544a\u4eba\u5224\u6709\u7f6a\uff0c\u68c0\u5bdf\u5b98\u83b7\u5f97\u6548\u7528 1\uff0c\u5426\u5219\u6548\u7528\u4e3a 0\uff1b \u2022 \u6cd5\u5b98\u548c\u68c0\u5bdf\u5b98\u5bf9\u88ab\u544a\u4eba\u7684\u7c7b\u578b\u6709\u76f8\u540c\u7684\u5148\u9a8c\u6982\u7387\u5206\u5e03\uff1a\\(\\mu_0(guilty)=0.3,\\mu_ 0(innocent)=0.7\\)\u3002 \u68c0\u5bdf\u5b98\u8fdb\u884c\u8c03\u67e5\u6536\u96c6\u6709\u5173\u88ab\u544a\u4eba\u7684\u8bc1\u636e\uff0c\u56e0\u6b64\u68c0\u5bdf\u5b98\u7684\u7b56\u7565\u662f\u9009\u62e9\u4e00\u4e2a\u63d0\u4f9b\u8bc1\u636e\u7684\u7b56\u7565\uff0c\u5e0c\u671b\u6539\u53d8\u6cd5\u5b98\u7684\u5224\u51b3\uff0c\u4f7f\u5f97\u88ab\u5224\u6709\u7f6a\u7684\u8d8a\u591a\u8d8a\u597d\uff08\u68c0\u67e5\u5b98\u6548\u7528\u6700\u5927\u5316\uff09\u3002\u5f62\u5f0f\u5316\u5730\u8bf4\uff0c\u63d0\u4f9b\u8bc1\u636e\u5c31\u662f\u4e00\u4e2a \\(\\pi(\\cdot|guilty)\\)\u548c\\(\\pi(\\cdot|innocent)\\)\u7684\u4fe1\u53f7\u673a\u5236\uff0c\u5e76\u4e14\u8fd9\u4e00\u4fe1\u53f7\u673a\u5236\u5728\u535a\u5f08\u524d\u662f\u516c\u5f00\u7ed9\u6cd5\u5b98\u7684\uff08\u6216\u8005\u8bf4\u53ef\u9a8c\u8bc1\u7684\uff09\u3002 1. \u6839\u636e\u4fe1\u606f\u8bbe\u8ba1\u7684\u663e\u793a\u539f\u7406\uff0c\u7ed9\u51fa\u4e0b\u9762\u9700\u8981\u8003\u8651\u7684\u4fe1\u53f7\u673a\u5236\u7684\u5f62\u5f0f\uff1b 2. \u6c42\u68c0\u5bdf\u5b98\u4f7f\u7528\u5b8c\u5168\u8bda\u5b9e\u7684\u4fe1\u53f7\u673a\u5236\u7684\u60c5\u51b5\u4e0b\uff0c\u68c0\u5bdf\u5b98\u548c\u6cd5\u5b98\u7684\u6548\u7528\uff1b 3. \u6c42\u68c0\u5bdf\u5b98\u6700\u4f18\u4fe1\u53f7\u673a\u5236\u4e0b\u68c0\u5bdf\u5b98\u7684\u6548\u7528\uff0c\u4ee5\u53ca\u6700\u4f18\u4fe1\u53f7\u673a\u5236\u4e0b\u6cd5\u5b98\u540e\u9a8c\u6982\u7387\u5206\u5e03\u7684\u5206\u5e03\uff1b 4. \u6c42\u68c0\u5bdf\u5b98\u7684\u6700\u4f18\u4fe1\u53f7\u673a\u5236\u3002</p> <p>[Answer] 1.\u5b9a\u7406\uff08\u4fe1\u606f\u8bbe\u8ba1\u7684\u663e\u793a\u539f\u7406\uff09\uff1a\u53ea\u9700\u8981\u8003\u8651\\(S \\subseteq A\\)\uff0c\u4e14\u4e00\u4e2a\\(s\\in S\\)\u5bf9\u5e94\u4e00\u4e2a\u6700\u4f18\\(a\\in A\\)\u7684\u673a\u5236 \\(S=\\left\\{1,2\\right\\}\\)\u5bf9\u5e94\\(A=\\left\\{convict,acquit\\right\\}\\)\uff0c\u5373\u68c0\u5bdf\u5b98\u5206\u522b\u53d1\u9001\\(1,2\\)\u4e24\u79cd\u4fe1\u53f7\uff0c\u529d\u8bf4\u6cd5\u5b98\u5206\u522b\u505a\u51fa\u5bf9\u5e94\\(convict,acquit\\)\u7684\u5224\u51b3 2.\\(\\pi(1|guilty)=1,\\pi(2|innocent)=1,\\pi(1|innocent)=0,\\pi(2|guilty)=0\\) \u6cd5\u5b98\uff1a\\(1\\rightarrow convict,2\\rightarrow acquit\\) \\(u=u_{\u6cd5\u5b98}=\\mu_0(guilty)\\cdot\\pi(convict|guilty)+\\mu_0(innocent)\\cdot\\pi(acquit|innocent)=\\\\0.3*1+0.7*1=1\\) \\(v=u_{\u68c0\u5bdf\u5b98}=\\mu_0(guilty)\\cdot\\pi(convict|guilty)+\\mu_0(innocent)\\cdot\\pi(convict|innocent)=\\\\0.3*1+0.7*0=0.3\\) 3.\u8bbe\u540e\u9a8c\u6982\u7387\u5206\u5e03\u4e3a\\(\\mu\\)\u65f6\uff0c\u4fe1\u53f7\u53d1\u9001\u65b9\u7684\u6700\u4f18\u884c\u52a8\u4e3a\\(\\hat{a}(\\mu)\\)\uff0c\u4fe1\u53f7\u53d1\u9001\u65b9\u7684\u671f\u671b\u6536\u76ca\u4e3a\\(\\hat{v}(\\mu)\\) \u5bf9\u540e\u9a8c\u6982\u7387\\(\\mu(guilty)\\)\uff0c\u6cd5\u5b98\u5ba3\u5224\u6709\u7f6a\u7684\u6536\u76ca\\(u_{convict}=\\mu(guilty)\\)\uff0c\u5ba3\u5224\u65e0\u7f6a\u7684\u6536\u76ca\\(u_{acquit}=\\mu(innocent)=1-\\mu(guilty)\\) \u6240\u4ee5\u5f53\\(\\mu(guilty)\\ge 0.5\\)\u65f6\uff0c\\(\\hat{a}(\\mu)=convict\\)\uff0c\u68c0\u5bdf\u5b98\u7684\u6536\u76ca\\(\\hat{v}(\\mu)=1\\)\uff0c\u53cd\u4e4b\\(\\hat{a}(\\mu)=acquit\\)\uff0c\u68c0\u5bdf\u5b98\u7684\u6536\u76ca\\(\\hat{v}(\\mu)=0\\) \u5373 $$ \\hat{v}(\\mu)= \\begin{cases} 0 &amp; 0\\le\\mu\\le\\frac{1}{2} \\ 1 &amp; \\frac{1}{2}\\lt\\mu\\le1 \\end{cases} $$ \u4e0d\u96be\u6c42\u51fa\uff0c\\(\\hat{v}(\\mu)\\)\u7684\u51f9\u5305\u7edc\\(V(\\mu)\\)\u4e3a $$ V(\\mu)= \\begin{cases} 2\\mu &amp; 0\\le\\mu\\le\\frac{1}{2} \\ 1 &amp; \\frac{1}{2}\\lt\\mu\\le1 \\end{cases} $$ \u53c8\u56e0\u4e3a\u6700\u4f18\u673a\u5236\u4e0b\u540e\u9a8c\u6982\u7387\u5206\u5e03\u7684\u5206\u5e03\u662f\u8d1d\u53f6\u65af\u53ef\u884c\u7684\uff0c\u5219 \u671f\u671b\\(\\mathbb{E}(\\tau)=x(\\frac{1}{2},\\frac{1}{2})+(1-x)(0,1)=\\mu_0=(0.3,0.7)\\) \u89e3\u5f97\\(x=0.6\\) \u4ece\u800c\u68c0\u5bdf\u5b98\u6700\u4f18\u4fe1\u53f7\u673a\u5236\u4e0b\u68c0\u5bdf\u5b98\u7684\u6548\u7528\\(\\hat{v}=1\\)\uff0c\u6cd5\u5b98\u540e\u9a8c\u6982\u7387\u5206\u5e03\u7684\u5206\u5e03\u4e3a $$ \\begin{array}{c|ccccc} X &amp; \\mu_1 &amp; \\mu_2 \\ \\hline P &amp; 0.6 &amp; 0.4  \\end{array} $$ 4.\u68c0\u5bdf\u5b98\u7684\u6700\u4f18\u4fe1\u53f7\u673a\u5236\u4e3a \\(\\mu_1(guilty)=0.5,\\mu_1(innocent)=0.5,\\tau(\\mu_1)=0.6\\) \\(\\mu_2(guilty)=0,\\mu_2(innocent)=1,\\tau(\\mu_2)=0.4\\) \\(\\pi(1|guilty)=\\frac{\\tau(\\mu_1)\\cdot\\mu_1(guilty)}{\\mu_0(guilty)}=1\\) \\(\\pi(1|innocent)=\\frac{\\tau(\\mu_1)\\cdot\\mu_1(innocent)}{\\mu_0(innocent)}=\\frac{3}{7}\\) \\(\\pi(2|guilty)=\\frac{\\tau(\\mu_2)\\cdot\\mu_2(guilty)}{\\mu_0(guilty)}=0\\) \\(\\pi(2|innocent)=\\frac{\\tau(\\mu_2)\\cdot\\mu_2(innocent)}{\\mu_0(innocent)}=\\frac{4}{7}\\) \u5373\u5728\u6709\u7f6a\u7684\u60c5\u51b5\u4e0b\u4e00\u5b9a\u53d1\u9001\u4fe1\u53f7\\(1\\)\u529d\u8bf4\u6cd5\u5b98\u5224\u5904\u6709\u7f6a \u5728\u65e0\u7f6a\u7684\u60c5\u51b5\u4e0b\u4ee5\\(\\frac{3}{7}\\)\u7684\u6982\u7387\u53d1\u9001\u4fe1\u53f7\\(1\\)\uff0c\u4ee5\\(\\frac{4}{7}\\)\u7684\u6982\u7387\u53d1\u9001\u4fe1\u53f7\\(2\\) \u6cd5\u5b98\u6709\\(0.6\\)\u7684\u6982\u7387\u63a5\u6536\u4fe1\u53f7\\(1\\)\uff0c\u63a5\u6536\u4fe1\u53f7\\(1\\)\u65f6\uff0c\u8868\u660e\u5bf9\u65b9\u6709\\(0.5\\)\u7684\u6982\u7387\u6709\u7f6a\uff0c\\(0.5\\)\u7684\u6982\u7387\u65e0\u7f6a\uff0c\u6b64\u65f6\u6cd5\u5b98\u4f1a\u505a\u51fa\u6709\u7f6a\u5224\u5904 \u6709\\(0.4\\)\u7684\u6982\u7387\u63a5\u6536\u4fe1\u53f7\\(2\\)\uff0c\u8868\u660e\u5bf9\u65b9\u4e00\u5b9a\u65e0\u7f6a\uff0c\u6b64\u65f6\u6cd5\u5b98\u4f1a\u505a\u51fa\u65e0\u7f6a\u5224\u5904 \u6cd5\u5b98\u7684\u6548\u7528\\(\\tau(\\mu_1)*\\mu_1(guilty)+\\tau(\\mu_2)*\\mu_2(innocent)=0.6*0.5+0.4*1=0.7\\)</p>"},{"location":"sp25/data_market/2025/hw2-solution/#26","title":"2.6 \u4fe1\u606f\u7684\u4ef7\u503c","text":"<p>\u8bbe\u81ea\u7136\u7684\u72b6\u6001\u96c6\u5408\u4e3a\\(\\Omega=\\left\\{\\omega_1,\\omega_2\\right\\}\\)\uff0c\u4e70\u5bb6\u7684\u5148\u9a8c\u5206\u5e03\u4e3a\\(\\mu_0(\\omega_1)=0.7,\\mu_0(\\omega_2)=0.3\\)\u3002\u8bbe\u4e70\u5bb6\u7684\u884c\u52a8\u96c6\u5408\u4e3a\\(A=\\left\\{a_1,a_2\\right\\}\\)\uff0c\u6548\u7528\u51fd\u6570\u4e3a $$ u(a_1,\\omega_1)=2,u(a_1,\\omega_2)=0, \\ u(a_2,\\omega_1)=0,u(a_2,\\omega_2)=3. $$ \u5047\u8bbe\u6709\u4e00\u4e2a\u6570\u636e\u5356\u5bb6\u63d0\u4f9b\u5982\u4e0b\u4fe1\u53f7\u673a\u5236\uff1a\\(S=\\left\\{s_1,s_2\\right\\}\\)\uff0c\u4e14 $$ \\pi(s_1|\\omega_1)=0.9,\\pi(s_2|\\omega_1)=0.1, \\ \\pi(s_1|\\omega_2)=0.7,\\pi(s_2|\\omega_2)=0.3. $$ \u6c42\u5356\u5bb6\u4fe1\u53f7\u673a\u5236\u5bf9\u4e70\u5bb6\u7684\u4ef7\u503c\u3002</p> <p>[Answer] \u5728\u6ca1\u6709\u4fe1\u53f7\u673a\u5236\u7684\u60c5\u51b5\u4e0b\uff0c \u4e70\u5bb6\u91c7\u7528\u884c\u52a8\\(a_1\\)\uff0c\u6548\u7528\\(u_{a_1}=\\mu_0(\\omega_1)\\cdot u(a_1,w_1)+\\mu_0(\\omega_2)\\cdot u(a_1,w_2)=0.7*2+0=1.4\\) \u4e70\u5bb6\u91c7\u7528\u884c\u52a8\\(a_2\\)\uff0c\u6548\u7528\\(u_{a_2}=\\mu_0(\\omega_1)\\cdot u(a_2,w_1)+\\mu_0(\\omega_2)\\cdot u(a_2,w_2)=0+0.3*0.3=0.9\\) \u6b64\u65f6\u4e70\u5bb6\u7684\u6548\u7528\u4e3a\u59cb\u7ec8\u91c7\u53d6\u884c\u52a8\\(a_1\\)\u7684\u6548\u7528\\(u=u_{a_1}=1.4\\) \u4e70\u5bb6\u63a5\u6536\u5356\u5bb6\u63d0\u4f9b\u7684\u4fe1\u53f7\u673a\u5236\u540e\uff0c \\(\\pi(s_1)=\\mu_0(\\omega_1)*\\pi(s_1|\\omega_1)+\\mu_0(\\omega_2)*\\pi(s_1|\\omega_2)=0.7*0.9+0.3*0.7=0.84\\) \\(\\pi(s_2)=\\mu_0(\\omega_1)*\\pi(s_2|\\omega_1)+\\mu_0(\\omega_2)*\\pi(s_2|\\omega_2)=0.7*0.1+0.3*0.3=0.16\\) \u7531\u8d1d\u53f6\u65af\u516c\u5f0f\uff0c\u540e\u9a8c\u6982\u7387 \\(\\mu_{s_1}(\\omega_1)=\\frac{\\pi(s_1|\\omega_1)\\cdot\\mu_0(\\omega_1)}{\\pi(s_1)}=\\frac{0.9*0.7}{0.84}=0.75\\) \\(\\mu_{s_1}(\\omega_2)=0.25\\) \\(\\mu_{s_2}(\\omega_1)=0.4375\\) \\(\\mu_{s_2}(\\omega_2)=0.5625\\)</p> <p>\u5728\u63a5\u6536\u5230\u4fe1\u53f7\\(s_1\\)\u65f6\u91c7\u53d6\u884c\u52a8\\(a_1\\)\uff0c\u6709\u671f\u671b\u6548\u7528\\(u(a_1|s_1)=\\mu_{s_1}(\\omega_1)*u(a_1,\\omega_1)+\\mu_{s_1}(\\omega_2)*u(a_1,\\omega_2)=0.75*2+0=1.5\\) \u5728\u63a5\u6536\u5230\u4fe1\u53f7\\(s_1\\)\u65f6\u91c7\u53d6\u884c\u52a8\\(a_2\\)\uff0c\u6709\u671f\u671b\u6548\u7528\\(u(a_2|s_1)=\\mu_{s_1}(\\omega_1)*u(a_2,\\omega_1)+\\mu_{s_1}(\\omega_2)*u(a_2,\\omega_2)=0+0.25*3=0.75\\) \u5728\u63a5\u6536\u5230\u4fe1\u53f7\\(s_1\\)\u65f6\u91c7\u53d6\u884c\u52a8\\(a_1\\)\uff0c\u6709\u671f\u671b\u6548\u7528\\(u(a_1|s_2)=\\mu_{s_2}(\\omega_1)*u(a_1,\\omega_1)+\\mu_{s_2}(\\omega_2)*u(a_1,\\omega_2)=0.4375*2+0=0.875\\) \u5728\u63a5\u6536\u5230\u4fe1\u53f7\\(s_1\\)\u65f6\u91c7\u53d6\u884c\u52a8\\(a_2\\)\uff0c\u6709\u671f\u671b\u6548\u7528\\(u(a_2|s_2)=\\mu_{s_2}(\\omega_1)*u(a_2,\\omega_1)+\\mu_{s_2}(\\omega_2)*u(a_2,\\omega_2)=0+0.5625*3=1.6875\\) \u6b64\u65f6\u4e70\u5bb6\u7684\u6548\u7528\u4e3a\u5728\u63a5\u6536\u5230\u4fe1\u53f7\\(s_1\\)\u65f6\u91c7\u53d6\u884c\u52a8\\(a_1\\)\uff0c\u5728\u63a5\u6536\u5230\u4fe1\u53f7\\(s_2\\)\u65f6\u91c7\u53d6\u884c\u52a8\\(a_2\\)\uff0c\u671f\u671b\u6548\u7528 $$ u_S=\\pi(s_1)u(a_1|s_1)+\\pi(s_2)u(a_2|s_2)=0.841.5+0.161.6875=1.53 $$ \u4ece\u800c\u5356\u5bb6\u4fe1\u53f7\u673a\u5236\u5bf9\u4e70\u5bb6\u7684\u4ef7\u503c $$ v=u_S-u=1.53-1.4=0.13 $$</p>"},{"location":"sp25/db/","title":"\u6570\u636e\u5e93\u7cfb\u7edf  4.0 \u5b66\u5206","text":""},{"location":"sp25/db/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u9648\u5cad \u5b59\u5efa\u4f36</p>"},{"location":"sp25/db/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u5fc5\u4fee\u8bfe\uff08ai\u4e09\u9009\u4e00\u5fc5\u4fee\uff09</p>"},{"location":"sp25/db/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u4f5c\u4e1a\uff1a20%  </li> <li>Lab\uff1a30% bonus:  <ul> <li>\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\uff1a\u524d\u7aef\u5b9e\u73b0  </li> <li>Minisql:  </li> <li>Clock Replacer\u66ff\u6362\u7b97\u6cd5\uff1a0.5%</li> <li>\u4f18\u5316<code>TableHeap</code>\u548c<code>TablePage</code>\uff1a0.5%  </li> <li><code>LockManager</code>\uff1a2%  </li> </ul> </li> <li>\u671f\u672b(\u534a\u5f00\u5377)\uff1a50%  </li> </ul>"},{"location":"sp25/db/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u9648\u5cad\u662f\u65e0\u60c5\u7684ppt reader\uff0c\u5c31\u4e0a\u8bfe\u5185\u5bb9\u800c\u8a00\u8fd8\u662f\u5f88\u6e05\u6670\u7684\uff0c\u4f46\u4e0a\u8bfe\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u56e0\u6b64\u7559\u51fa\u4e86\u6574\u6574\u4e09\u8282\u8bfe\u7528\u4e8e\u590d\u4e60\uff0c\u4f46\u597d\u5904\u662f\u4ed6\u4e0d\u70b9\u540d\u4e0d\u5c0f\u6d4b\uff0c\u56e0\u6b64\u4ecd\u7136\u5efa\u8bae\u9009\u62e9 \u4e0a\u8bfe\u5efa\u8bae\u5168\u7a0b\u8ddf\u542c\u5b59\u5efa\u4f36\u8001\u5e08\u73ed\u7684\u8bfe\u7a0b\uff08\u751a\u81f3\u5efa\u8bae\u7ebf\u4e0b\u65c1\u542c\uff09\uff0csjl\u8001\u5e08\u7684\u6559\u8bfe\u975e\u5e38\u4f18\u79c0\uff0c\u4e0d\u4ec5\u6e05\u6670\u8fd8\u4e0d\u5bb9\u6613\u8ba9\u4eba\u72af\u56f0 \u6bcf\u8282\u8bfe\u540e\u90fd\u6709\u4e66\u540e\u51e0\u9898\u7684\u4f5c\u4e1a\uff0c\u6709\u7b54\u6848\uff0c\u53ea\u8981\u63d0\u4ea4\u57fa\u672c\u5c31\u80fd\u83b7\u5f97\u5168\u90e8\u5206\u6570 \u5b9e\u9a8c\u4f7f\u7528sjl\u73ed\u7ea7\u7684\u5b9e\u9a8c\u6846\u67b6\uff0c\u524d\u56db\u4e2a\u5b9e\u9a8c\u975e\u5e38\u7b80\u5355\uff0c\u5efa\u8bae\u6c34\u8fc7\uff0c\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\u4f7f\u7528JDBC\uff0c\u5b66\u4e86oop\u4e4b\u540ejava\u8fd8\u662f\u975e\u5e38\u5bb9\u6613\u4e0a\u624b\u7684\uff0c\u6574\u4f53\u96be\u5ea6\u4e0d\u5927 minisql\u662f\u975e\u5e38\u5177\u6709\u6311\u6218\u6027\u7684project\uff0c\u4e09\u4eba\u7ec4\u961f\uff0c\u5efa\u8bae\u5c3d\u65e9\uff08\u590f\u4e00\u5468\u5f00\u59cb\uff09\uff0c\u52a1\u5fc5\u5728\u6700\u665a\u5728\u590f\u516d\u5468\u5b8c\u6210\u6574\u4f53\u6846\u67b6\u6240\u6709\u4ee3\u7801\u7684\u7f16\u5199\uff0cminisql\u6700\u5177\u56f0\u96be\u7684\u5730\u65b9\u5728\u4e8e\u6700\u540e\u7684debug\uff0c\u8c03\u8bd5\u975e\u5e38\u56f0\u96be\u4e14\u5bf9\u961f\u53cb\u7684\u4ee3\u7801\u4e0d\u751a\u4e86\u89e3\uff0c\u5efa\u8bae\u5728\u7f16\u5199\u8fc7\u7a0b\u4e2d\u5c31\u591a\u5199\u6ce8\u91ca\u548cprint\u6253\u6cd5\u8f93\u51fa\u4fe1\u606f \u63d0\u793a\uff1agithub\u4e0a\u6709\u5f00\u6e90\u7684minisql cl\u73ed\u7ea7\u7684\u52a9\u6559\u5bf9\u603b\u4f53\u8fd0\u884c\u7684\u6548\u7387\uff08\u63d2\u5165\u5341\u4e07\u6761\u6570\u636e\u7684\u901f\u5ea6\uff09\u6709\u8981\u6c42\uff0c\u5982\u679c\u6574\u4f53\u8fd0\u884c\u6b63\u786e\u4f1a\u6839\u636e\u8fd0\u884c\u6548\u7387\u572890-100\u4e4b\u95f4\u6253\u5206\uff0c\u56e0\u6b64\u5efa\u8bae\u5b8c\u6210<code>LockManager</code>\u6a21\u5757\uff0c\u96be\u5ea6\u8f83\u4f4e\u4e14\u76f8\u5bf9\u72ec\u7acb\uff0c\u5206\u503c\u4e5f\u8f83\u9ad8 \u671f\u672b\u8003\u8bd5\u6539\u4e3a\u4e86\u5168\u5ba2\u89c2\u9898\uff0c\u4e5d\u4e2a\u5927\u9898\u5404\u5305\u62ec\u5355\u9009\u3001\u5224\u65ad\u3001\u586b\u7a7a\uff0c\u597d\u5904\u662f\u4e0d\u7528\u753bE-R\u56fe\u4e86\uff0c\u4f46\u77e5\u8bc6\u70b9\u8003\u5bdf\u66f4\u52a0\u7ec6\u788e\uff0c\u96be\u5ea6\u5176\u5b9e\u5e76\u6ca1\u6709\u964d\u4f4e\u751a\u81f3\u6709\u6240\u63d0\u9ad8 \u603b\u4f53\u800c\u8a00\uff0c\u8fd9\u95e8\u8bfe\u7a0b\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0cdb\u4e0esys3\u57fa\u672c\u6784\u6210\u4e86\u6625\u590f\u5b66\u671f\u7684\u5168\u90e8\u5de5\u4f5c\u91cf\uff0c\u5efa\u8bae\u8d85\u524d\u5b66\u4e60\u7559\u4e0b\u8db3\u591f\u7684\u7a7a\u4f59\u65f6\u95f4\u5b8c\u6210\u5b9e\u9a8c  </p>"},{"location":"sp25/db/note/","title":"\u6570\u636e\u5e93\u7cfb\u7edf","text":"<p>\u5b59\u5efa\u4f36\u73ed\u7684\u7b14\u8bb0</p>"},{"location":"sp25/db/note/#chap-1-introduction","title":"Chap 1 Introduction","text":""},{"location":"sp25/db/note/#12-definition","title":"1.2 Definition","text":"<p>[Definition] Database:a collection of interrelated/integrated and persistent data [Definition] Database Management System(DBMS):A set of programs used to access,update and manage the database Properties of DBMS:  </p> <ul> <li>efficiency and scalability(\u53ef\u6269\u5c55\u6027)  </li> <li>independency(physical/logical)  </li> <li>integrity(\u5b8c\u6574\u6027) and security  </li> <li>concurrent(\u5e76\u53d1) access and robustness(\u9c81\u68d2\u6027)(recovery)  </li> </ul>"},{"location":"sp25/db/note/#14-levels-of-data-abstraction","title":"1.4 Levels of data abstraction","text":"<ul> <li>Physical level:files  </li> <li>Logical level:relationship  </li> <li>View level:details of data viewed by the users(detail hidden) e.g. age for course selection  </li> </ul> <p> schemas(\u6a21\u5f0f) and instances(\u5b9e\u4f8b) schema:the structure on different level(Physical/Logical/Sub-schema)(\u8868\u5934) instance:the actual content  </p> <p>Independence </p> <ul> <li>Physical:change of logical schema rarely affects the physical schema(unless some data are missed)</li> <li>Logical:harder to achieve since the view schema are strongly influenced by the logical schema(change of logical scheme immediately change the data in the view scheme)  </li> </ul>"},{"location":"sp25/db/note/#15-data-models","title":"1.5 Data models","text":"<p>[Definition] Data model:a collection of conceptual tools for describing\u2014\u2014data structure/relationship/semantic(\u8bed\u4e49)/constraint Different types:  </p> <ul> <li>Entity(object)-Relationship model(E-R)  </li> <li>Relational model  </li> <li>Object-oriented model  </li> <li>Semistructured data model (XML)  </li> </ul> <p></p> <p></p>"},{"location":"sp25/db/note/#16-database-language","title":"1.6 Database Language","text":"<ul> <li>Data definition language(DDL)  </li> <li>Data manipulation language(DML)  </li> <li>Data control language(DCL)  </li> </ul> <p>(1)DDL generate tables stored in data dictionary <pre><code>CREATE TABLE account(\n    account_number char(10),\n    balance integer\n);\n</code></pre> [Definition] Data dictionary:metadata(the data of data) including\u2014\u2014database schema,data structure,access methods and constraints,statistical info,authorization (2)DML Insert/Delete/Update/Retrieve data query language (3)SQL(DDL+DML+DCL) <pre><code>SELECT account.balance\nFROM depositor,account\nWHERE depositor.customer-id = '192-83-7465' and depositor.account-number = account.account-number\n//\u4e0d\u540c\u8868\u4e4b\u95f4\u7684\u5bf9\u5e94\n</code></pre></p>"},{"location":"sp25/db/note/#17-database-users","title":"1.7 Database Users","text":"<ul> <li>naive users:interface interact  </li> <li>application programmer:SQL calls  </li> <li>sophisticated users:analytical processing/data mining  </li> <li>specialized users</li> </ul>"},{"location":"sp25/db/note/#18-database-administratordba","title":"1.8 Database Administrator(DBA)","text":"<p>a good understanding of the enterprise's info resources and needs</p>"},{"location":"sp25/db/note/#19-transactionoperation-management","title":"1.9 Transaction(operation) Management(\u4e8b\u52a1\u7ba1\u7406)","text":"<p>atomicity,consistence,isolation,durability(ACID) concurrency-control manager(\u5e76\u53d1\u63a7\u5236\u7ba1\u7406\u5668)  </p>"},{"location":"sp25/db/note/#110-dbms-structure","title":"1.10 DBMS structure","text":"<p>1.storage manager responsible for efficient storing,retrieving,updating data  </p> <p>2.query processor DDL interpreter,DML compiler,query processing query -&gt; parser and translator -&gt; relational algebra expression -&gt; optimizer -&gt; execution plan -&gt; evaluation engine -&gt; output Optimization:cost estimation  </p> <p>Application architectures: two-tier:app -&gt; db three-tier:browser -&gt; web -&gt; db  </p>"},{"location":"sp25/db/note/#chap-2-relational-model","title":"Chap 2 Relational Model","text":""},{"location":"sp25/db/note/#21-definition","title":"2.1 Definition","text":"<p>[Definition] relation:a table with rows and columns [Comparison] relationship:an association among several entities  </p>"},{"location":"sp25/db/note/#22-basic-structure","title":"2.2 Basic Structure","text":"<p>given sets D<sub>1</sub>,...,D<sub>n</sub> a relation r is a subset of D<sub>1</sub> x ... x D<sub>n</sub>(Cartesian product) e.g.dept_name = {Biology,Finance,History,Music} building = {Watson,Painter,Packard} budget = {50000,80000,90000,120000} Then r = {(Biology,Watson,90000),(Finance,Painter,120000),(History,Painter,50000),(Music,Packard,80000)}is a relation over dept_name x building x budget(total 48 tuples) (1)Attribute Types domain:the set of allowed values(atomic) of each attribute(\u5c5e\u6027\uff0c\u8868\u5934\u7684\u5143\u7d20) non-atomic value:multivalued/composite(\u6df7\u5408\u7684) attribute e.g.tel:138xxx,139xxx(a string difficult to split) null:a member of every domain (2)Concepts relation schema:the structure of the relation e.g.(ID=string,name=string,salary=int) R=(A<sub>1</sub>,...,A<sub>n</sub>) is a relation schema where A<sub>i</sub> is an attribute relation instance:the snapshot of data in the relation  (3)Relations are unordered (4)Keys \u552f\u4e00\u533a\u5206\u4e00\u4e2a\u5bf9\u8c61\u7684\u4e00\u4e2a\u6216\u4e00\u4e9b\u5c5e\u6027 superkey:a set of attribute sufficient enough to identify a unique tuple candidate key:minimal superkey(cannot delete anyone) primary key:candidate key defined by user (5)Foreign key Assume there exists relation r and s: r(A, B, C), s(B, D), we can say that attribute B in relation r is foreign key \u53c2\u7167\u5173\u7cfb\u4e2d\u5916\u7801\u7684\u503c\u5fc5\u987b\u5728\u88ab\u53c2\u7167\u5173\u7cfb\u4e2d\u5b9e\u9645\u5b58\u5728\u6216\u4e3anull(\u4e0d\u80fd\u586b\u4e0d\u5b58\u5728\u7684\u503c\uff0c\u5982\u586b\u5165\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u4e13\u4e1a) (6)Schema Diagram(\u6a21\u5f0f\u56fe)  (7)Query language:language in which user requests info from the db</p>"},{"location":"sp25/db/note/#23-relational-algebra","title":"2.3 Relational Algebra","text":"<p>Six basic operations (1)Select \\(\\sigma\\) \\(\\sigma_{A=B \\wedge D&gt;5}(r)\\) \u9009\u62e9\u6ee1\u8db3A=B\u4e14D&gt;5\u7684\u5173\u7cfb  Notation:$\\sigma_p(r)=\\left{t|t\\in r  and  p(t)\\right} p:\u67e5\u8be2\u6761\u4ef6   $  e.g.\\(\\sigma_{dept\\_ name='Finance'}(department)\\)  (2)Project \\(\\Pi\\) \u6295\u5f71  Notation:\\(\\Pi_{A_{1},...,A_{k}}(r)\\)  \u6295\u5f71A,C\u5173\u7cfb(\u6ce8\u610f\u53bb\u91cd) (3)Union \\(\\cup\\) Notation:\\(r\\cup s=\\left\\{t|t\\in r \\ or \\ t \\in s\\right\\}\\)  \u53ef\u5e76\u6761\u4ef6\uff1ar,s\u6709\u76f8\u540c\u7684arity(\u5143\u6570)(\u5c5e\u6027\u4e2a\u6570);\u5c5e\u6027\u7684\u57df\u5fc5\u987b\u662fcompatible(\u53ef\u5bb9\u7684) e.g.\\(\u4eba\u540d\\cup \u516c\u53f8\u540d\\) (4)Set difference \\(-\\) Notation:\\(r-s=\\left\\{t|t\\in r \\ and \\ t \\notin s\\right\\}\\)  \u53ef\u505a\u5dee\u6761\u4ef6\u540cUnion (5)Cartesian product \\(\\times\\)  Composition of operations:e.g.\\(\\sigma_{A=C}(r\\times s)\\) (6)rename \\(\\rho\\) Notation:\\(\\rho_{x}(E)\\) \u5c06E\u6539\u540d\u4e3ax\uff0cE\u53ef\u4ee5\u662f\u5173\u7cfb\u4ee3\u6570\u7684\u7ed3\u679c \\(\\rho_{x(A_1,...,A_n)}(E)\\) \u5c06n\u4e2a\u5c5e\u6027\u5206\u522b\u6539\u540d \u67e5\u8be2\u8868\u8fbe\u5f0f\u4e0e\u67e5\u8be2\u4f18\u5316  Problem:\u516d\u79cd\u57fa\u672c\u5173\u7cfb\u64cd\u4f5c\u6ca1\u6709\u7edf\u8ba1\u529f\u80fd Additional operations(\u4e0d\u589e\u52a0\u8868\u8fbe\u80fd\u529b\uff0c\u53ea\u662f\u65b9\u4fbf\u4e66\u5199) (7)Set intersection \\(\\cap\\) \\(r \\cap s = r-(r-s)\\) (8)Natural join \\(r\\bowtie s\\) \u5c06r\u4e0es\u516c\u5171\u5c5e\u6027\u76f8\u540c\u7684\u8fde\u63a5\u5728\u4e00\u8d77  \u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b Theta join:\u6761\u4ef6\u8fde\u63a5 \\(r\\bowtie_{\\theta} s = \\sigma_{\\theta}(r\\times s)\\) (9)Outer join \u4fdd\u7559\u4e00\u8fb9\u6ca1\u6709\u8fde\u63a5\u7684\u4fe1\u606f\uff0c\u53e6\u4e00\u8fb9\u7f3a\u5c11\u7684\u5c5e\u6027\u7f6e\u4e3anull  left/right/full outer join  \u7b49\u4ef7\u4e8e\u6761\u4ef6\u7b5b\u9009 (10)Assignment \u2b05 \u8d4b\u503c\u64cd\u4f5c\uff0c\u7528\u4e8e\u907f\u514d\u8868\u8fbe\u5f0f\u8fc7\u957f (11)Division \\(\\div\\) \\(s \\subseteq r\\)\u4e14\u6ee1\u8db3\\((r \\div s) \\times s \\subseteq r\\) </p>"},{"location":"sp25/db/note/#24-extended-relational-algebra-operations","title":"2.4 Extended Relational-Algebra-Operations","text":"<p>\u589e\u52a0\u8868\u8fbe\u80fd\u529b\u7684\u6269\u5c55\u5173\u7cfb\u4ee3\u6570 (1)Generalized Projection  (2)Aggregate Function \u7edf\u8ba1\u51fd\u6570 avg,min,max,sum,count(\u975e\u7a7a\u503c\u7684\u4e2a\u6570) \\(_{G_1,...,G_n}\\mathcal{G}_{F_1(A_1)...F_n(A_n)}(E)\\) \\(G_i\\)\u8868\u793a\u5206\u7ec4\u5c5e\u6027(\\(G_i\\)\u4e3a\u7a7a\u5373\u5c06\u6574\u4e2a\u8868\u770b\u6210\u4e00\u7ec4),\\(F_i\\)\u8868\u793a\u7edf\u8ba1\u51fd\u6570 \\(as\\)\u7528\u4e8e\u91cd\u547d\u540d  </p>"},{"location":"sp25/db/note/#25-modification","title":"2.5 Modification","text":"<ul> <li>Deletion  </li> <li>Insertion  </li> <li>Updating</li> </ul>"},{"location":"sp25/db/note/#26-multiset","title":"2.6 Multiset","text":"<p>Multiset(\u591a\u91cd\u96c6) relational algebra retains duplicates,to match SQL semantics \u5f15\u5165\u539f\u56e0\uff1a\u53bb\u9664\u91cd\u590d\u5143\u7d20\u4ee3\u4ef7\u8fc7\u9ad8 \u8bbe\u67d0\u4e00\u76f8\u540c\u8868\u8fbe\u5f0f\u5728r\u4e2d\u51fa\u73b0m\u6b21\uff0c\u5728s\u4e2d\u51fa\u73b0n\u6b21  </p> <ul> <li>selection:\u4fdd\u7559\u6240\u6709\u91cd\u590d  </li> <li>projection:\u4e0d\u53bb\u91cd  </li> <li>cross product:\u51fa\u73b0\\(m*n\\)\u6b21  </li> <li>union:\\(m+n\\) </li> <li>intersection:\\(min(m,n)\\) </li> <li>difference:\\(max(0,m-n)\\) </li> </ul>"},{"location":"sp25/db/note/#chap-3-introduction-to-sql","title":"Chap 3 Introduction to SQL","text":""},{"location":"sp25/db/note/#31-data-definition-languageddl","title":"3.1 Data Definition Language(DDL)","text":"<p>(1)Domain types in SQL <pre><code>char(n)  \nvarchar(n)\nint \nsmallint\nnumeric(p,d) -- precision of p digits, with d digits to the right of decimal point\nreal,double precision\nfloat(n)\ndate -- 4 digit year,month,date\ntime \ntimestamp/datetime\n</code></pre> (2)Create table <pre><code>create table instructor(\n    ID char(5) , -- primary key here is also valid\n    name varchar(20) not null,\n    dept_name varchar(20),\n    salary numeric(8,2) default 0,\n    primary key(ID), -- not null,cannot repeat\n    foreign key(dept_name) references department, --\u5f15\u7528\u53e6\u4e00\u8868\u7684primary key \n    check(salary &gt;= 0) -- null &gt;= 0 = unknown \u5141\u8bb8\u63d2\u5165 \n    -- where\u4e4b\u540e\u7684\u6761\u4ef6\u4e00\u5b9a\u4e3atrue\n);\n\ninsert into instructor values('10211','Smith','Biology',66000);\n</code></pre> <pre><code>foreign key(dept_name) references department\non delete cascade(\u8fde\u9501\u53cd\u5e94\uff0c\u4e5f\u5220\u6389)|set null|restrict(\u4e0d\u80fd\u5220)|set default\non update cascade|set null|restrict|set default\n</code></pre> (3)Drop and Alter table <pre><code>drop table r; -- delete\n\ndelete from r; -- delete all contents,but retain the table\n\nalter table r add A,D;\nalter table r add (A1 D1, ... , An Dn);  \n\nalter table r drop A; -- not supported by many db\n\nalter table r modify(ID char(10),salary not null);\n</code></pre> (4)Create index <pre><code>create (unique) index &lt;i-name&gt; on &lt;table-name&gt; (&lt;attribute-list&gt;);\n-- primary key is indexed on default\ncreate index ins_index on instructor(ID);\n\ndrop index &lt;i-name&gt;;\n</code></pre></p>"},{"location":"sp25/db/note/#32-basic-structure-of-select","title":"3.2 Basic Structure of select","text":"<p>\\(\\Pi_{A_1,...,A_n}(\\sigma _{P}(r_1\\times...\\times r_m))\\) <pre><code>select (distinct/all) A1,...,An -- distinct:no repetition\nfrom r1,...,rm\nwhere P\n</code></pre> \\(_{A_1,A_2}\\mathcal{G}_{sum(A_3)}(\\sigma_P(r_1 \\times ...\\times r_m))\\) <pre><code>select A1,A2,sum(A3)  \nfrom r1,...,rm\nwhere P\ngroup by A1,A2\n</code></pre> Clause <pre><code>select * from instructor,teaches; -- all the elements | Cartesian product\nselect salary/12 as monthly salary from instructor; \n-- algebra allowed -- as for rename(omitted sometimes)\nselect name from instructor where salary between 9000 and 10000;\n\nselect name,course_id from instructor,teaches \nwhere (instructor.ID,dept_name) = (teaches.ID,'Biology');\n</code></pre> Join <pre><code>select name,course_id from instructors,teaches where instructor.ID = teaches.ID\nselect name,course_id from instructors natural join teaches\n</code></pre> <pre><code>-- A trap\ncourse(course_id,title,dept_name,credits)\nteaches(ID,course_id,sec_id,semester,year)\ninstructor(ID,name,dept_name,salary)\nselect name,title from instructor natural join teaches natural join course; \n-- wrong if course.dept_name != instructor.dept_name\nselect name,title from instructor natural join teaches,course\nwhere teaches.course_id = course.course_id;\n\nselect name,title from instructor,teaches,course\nwhere instructor.ID = teaches.ID and teaches.course_id = course.course_id;\n\nselect name,title from (instructor natural join teaches) join course using(course_id);\n-- \u4e00\u4e2a\u5c5e\u6027\u7b49\u503c\u8fde\u63a5\n</code></pre> String '%' matches substring(including null) '_' matches character <pre><code>select name from instructor where name like '%dar%' \n-- match 100%\nlike '100\\%' escape '\\'\n</code></pre> Order <pre><code>select distinct name from instructor order by name (desc/asc)\norder by dept_name,name\n</code></pre> Limit <pre><code>select name from instructor order by salary desc limit 3;-- \u524d\u4e09\n</code></pre></p>"},{"location":"sp25/db/note/#33-set-operation","title":"3.3 Set Operation","text":"<pre><code>(select course_id from section where sem = 'Fall' and year = 2009)\nunion/intersect/except(minus) all -- Multiset\n(select course_id from section where sem = 'Spring' and year = 2010)\n</code></pre>"},{"location":"sp25/db/note/#34-aggregate-function","title":"3.4 Aggregate Function","text":"<p>avg,min,max,sum(null = 0),count <pre><code>select avg(salary) from instructor where dept_name = 'Comp.Sci';\nselect count(*) from course; -- all the elements\n</code></pre> <pre><code>select dept_name,ID,avg(salary) from instructor group by dept_name;\n-- wrong!attributes in select clause outside aggregate function must\n-- appear in group by list,hence ID in select is not allowed\n</code></pre> <pre><code>select dept_name,avg(salary) from instructor group by dept_name \nhaving avg(salary) &gt; 42000; -- fliter\n-- where\u4e0d\u80fd\u4e0e\u805a\u5408\u51fd\u6570\u4e00\u8d77\u4f7f\u7528 \n-- having\u5fc5\u987b\u4e0egroup by \u4e00\u8d77\u4f7f\u7528\n</code></pre> arithmetric expression <pre><code>select dept_name from student group by dept_name\nhaving count(distinct name) = count(id) -- \u6ca1\u6709\u91cd\u540d\u7684\u7cfb\n</code></pre></p>"},{"location":"sp25/db/note/#35-null-values","title":"3.5 Null Values","text":"<p>null signifies the value unknown or the value does not exist 5 + null = null null &gt; 100 = null <pre><code>select name from instructor where salary is null\n</code></pre> unknown or true = true unknown or false/unknown = unknown true/unknown and unknown = unknown false and unknown = false  not unknown = unknown  </p>"},{"location":"sp25/db/note/#36-nested-subqueries","title":"3.6 Nested(\u5d4c\u5957) Subqueries","text":"<p>(1)Set membership <pre><code>select distinct course_id \nfrom section \nwhere semester = 'Fall' and year = 2009 and\ncourse_id (not) in (\n    select course_id \n    from section where semester = 'Spring' and year = 2010);\n</code></pre> (2)Set comparison <pre><code>select name\nfrom instructor\nwhere salary &gt; some/all (\n    select salary from instructor where dept_name = 'Biology')\n</code></pre> (3)Test for Empty Relations <pre><code>select course_id\nfrom section as S\nwhere semester = 'Fall' and year = 2009 and \nexists(\n    select * from section as T\n    where semester = 'Spring' and year = 2010 and S.course_id = T.course_id);\n-- \u5b50\u67e5\u8be2\u975e\u7a7a\n-- Correlated subquery\n</code></pre> <pre><code>select distinct S.ID,S.name \nfrom student as S\nwhere not exists(\n    select course_id\n    from course where dept_name = 'Biology'\n    except\n    (select T.course_id\n    from takes as T where S.ID = T.ID)\n);\n-- \u9009\u62e9\u751f\u7269\u7cfb\u7684\u6240\u6709\u8bfe\u7a0b\n-- \u5173\u7cfb\u4ee3\u6570\u4e2d\u7684\u9664\u6cd5\u529f\u80fd\n</code></pre> (4)Test for Absence of Duplicate Tuples <pre><code>select T.course_id from course as T\nwhere unique(\n    select R.course_id\n    from section as R\n    where T.course_id = R.course_id and R.year = 2009);\n</code></pre></p>"},{"location":"sp25/db/note/#38-with-clause","title":"*3.8 With Clause","text":""},{"location":"sp25/db/note/#39-modification-of-database","title":"3.9 Modification of Database","text":"<p>(1)Deletion <pre><code>delete from instructor; -- \u5168\u90e8\u5220\u9664\n\ndelete from instructor\nwhere dept_name in(\n    select dept_name from department \n    where building = 'Watson'\n);\n</code></pre> (2)Insertion <pre><code>insert into student\nselect ID,name,dept_name,0 from instructor  \n</code></pre> (3)Update <pre><code>update instructor\nset salary = salary * 1.03 where salary &gt; 100000;\n\nupdate instructor\nset salary = case when salary &lt;= 100000 then salary * 1.05 else salary * 1.03 end; \n</code></pre></p>"},{"location":"sp25/db/note/#chap-4-intermediate-sql","title":"Chap 4 Intermediate SQL","text":""},{"location":"sp25/db/note/#41-join-relations","title":"4.1 Join Relations","text":"<p>inner join,left/right outer join,full outer join <pre><code>select instructor.id,count(distinct course_id),count(takes.id)\nfrom instructor natural left outer join teaches left outer join takes using(course_id,sec_id,semester,year)\ngroup by instructor.id;\n-- \u4e0d\u4e0a\u8bfe\u7684\u8001\u5e08count = null/0(\u4f46\u4fdd\u7559)\n</code></pre></p>"},{"location":"sp25/db/note/#42-sql-data-types-and-schemas","title":"4.2 SQL Data Types and Schemas","text":""},{"location":"sp25/db/note/#user-defined-types","title":"User-defined types","text":"<pre><code>create type Dollars as numeric(12,2) final -- \u53f6\u5b50\u7c7b\uff0c\u4e0d\u80fd\u518d\u6d3e\u751f\n-- \u7f16\u8bd1\u65f6\u53d1\u73b0\u7c7b\u578b\u95f4\u9519\u8bef\n</code></pre>"},{"location":"sp25/db/note/#domains","title":"Domains","text":"<pre><code>create domain person_name char(20) not null -- constraints\ncreate domain degree_level varchar(10)\nconstraint degree_level_test\ncheck(value in 'Bachelors','Masters','Doctors')\n</code></pre>"},{"location":"sp25/db/note/#large-object","title":"Large object","text":"<p>blob(binary large object):tinyblob,blob,mediumblob,largeblob clob(character large object) when a query returns a large object,a pointer is returned.  </p>"},{"location":"sp25/db/note/#43-integrity-constraints","title":"4.3 Integrity Constraints","text":""},{"location":"sp25/db/note/#single-relation","title":"Single Relation","text":"<p>not null,primary key,unique,check(P),foreign key <pre><code>course table section(\n    ...\n    semester varchar(6),\n    ...\n    check(semester in('Fall','Spring','Summer','Winter'))\n);\n</code></pre></p>"},{"location":"sp25/db/note/#referential","title":"Referential","text":"<pre><code>create table course(\n    ...\n    dept_name varchar(20),\n    foreign key(dept_name) references department\n        on delete cascade,\n        on update cascade,\n    ...\n);\n</code></pre>"},{"location":"sp25/db/note/#violation-during-transactions","title":"Violation during transactions","text":"<p><pre><code>create table person(\n    mother char(10),\n    foreign key(mother) references person\n);\n</code></pre> defer constraints checking to transaction end</p>"},{"location":"sp25/db/note/#complex-check-clause","title":"Complex Check Clause","text":"<pre><code>check((course_id,sec_id,semester,year) \nin (select course_id,sec_id,semester,year from teaches));\n</code></pre>"},{"location":"sp25/db/note/#assertion","title":"Assertion","text":"<pre><code>create assertion credits_earned_constraints check\n(not exists\n    (select ID from students \n    where tot_cred &lt;&gt; \n          select sum(credits) from takes natural join course\n          where student.ID = takes.ID\n                and grade is not null\n                and grade &lt;&gt; 'F'));\n</code></pre>"},{"location":"sp25/db/note/#44-views","title":"4.4 Views","text":"<ul> <li>hide complexity  </li> <li>logic independence  </li> <li>authority management  </li> </ul> <p><pre><code>create view faculty as\n(\n    select ID,name,dept_name\n    from instructor;\n)\n\nselect name from faculty\nwhere dept_name = 'Biology';\n\ncreate view dept_total_salary(dept_name,total_salary)as\n(\n    select dept_name,sum(salary)\n    from instructor\n    group by dept_name;\n)\n</code></pre> view can be defined from other views(view expansion for sql server) <pre><code>insert into faculty values('30765','Green','Music');\ninsert into instructor values('30765','Green','Music',null);\n-- view is rarely updatable\n</code></pre></p>"},{"location":"sp25/db/note/#materialized-viewdetails-in-166","title":"*Materialized view(details in 16.6)","text":"<p>create a physical table containing all the tuples in the result of the query <pre><code>create materialized view\n</code></pre> maintain the view by updating the view whenever the underlying relations are updated  </p>"},{"location":"sp25/db/note/#logical-data-independence","title":"Logical data independence","text":"<p>S(a,b,c) -&gt; S1(a,b) &amp; S2(a,c)(primary key a) How to realize data independence <pre><code>1.create table S1... S2...\n2.insert into S1/S2 select a,b from S\n3.drop table S\n4.create view S(a,b,c) as select a,b,c from S1,S2\n\nselect * from S where ... -&gt; select * from S1 natural join S2\ninsert into S value (1,2,3) -&gt;\ninsert into S1 value (1,2)\ninsert into S2 value (2,3)\n</code></pre></p>"},{"location":"sp25/db/note/#45-indexes","title":"4.5 Indexes","text":"<p>Indices are data structures used to speed up access to records with specified values for index attributes(using B+ Tree) <pre><code>create index studentID_index on student(ID)\n</code></pre></p>"},{"location":"sp25/db/note/#46-transactions","title":"4.6 Transactions","text":"<p>atomic:either fully executed or rolled back as if it never occurred ended by commit or rollback <pre><code>set autocommit = 0 --\u5173\u95ed\u81ea\u52a8\u63d0\u4ea4\nupdate account set balance = balance - 100 where ano='1001';\n-- roll back if power shut down \nupdate account set balance = balance + 100 where ano='1002';\ncommit;-- end of the transaction,start a new transaction\n</code></pre> Transaction Boundaries:one ticket or multiple tickets \u6839\u636e\u4e1a\u52a1\u9700\u6c42\u5b9a\u4e49 booking and paying,one transaction or two \u957f\u4e8b\u52a1\u5360\u7528\u8d44\u6e90\uff0crollback -&gt; complement transaction  </p>"},{"location":"sp25/db/note/#47-acid-properties","title":"4.7 ACID Properties","text":"<ul> <li>Atomicity  </li> <li>Consistency  </li> <li>Isolation  </li> <li>Durability:after a transaction completes,the changes it has made to the db persist,even if the system failures.  </li> </ul>"},{"location":"sp25/db/note/#48-authorization","title":"4.8 Authorization","text":"<p>forms of authorization of the db  </p> <ul> <li>select  </li> <li>insert  </li> <li>update  </li> <li>delete  </li> </ul> <p>forms of authorization to modify the schema  </p> <ul> <li>create  </li> <li>aleration  </li> <li>drop  </li> <li>index  </li> <li>create view  </li> </ul> <pre><code>grant &lt;privilege list&gt; on &lt;relation name or view name&gt; to &lt;user list&gt;\ngrant select on instructor to U1,U2,U3  \ngrant select on department to public \ngrant update(budget) on department to U1,U2\ngrant all privileges on department to U1\n\nrevoke &lt;privilege list&gt; on &lt;relation name or view name&gt; from &lt;user list&gt;\n\nrevoke select on branch from U1,U2,U3\n</code></pre>"},{"location":"sp25/db/note/#role","title":"Role","text":"<p>\u6743\u9650\u7684\u96c6\u5408 <pre><code>create role instructor;\ngrant instructor to Amit;-- \u4eba\u540d\ngrant select on takes to instructor;\ncreate role dean;\ngrant instructor to dean;\ngrant dean to Satoshi;\n</code></pre> <pre><code>create view geo_instructor as\n(select * from instructor where dept_name = 'Geograpy');\ngrant select on geo_instructor to geo_staff;\n\ngrant reference(dept_name) on department to Mariano;\n-- \u5b9a\u4e49foreign key\u7684\u6743\u9650 on delete/update restricted\ngrant select on department to Amit with grant option;-- \u53ef\u4ee5\u8f6c\u6388\nrevoke select on department from Amit,Satoshi cascade;-- \u8f6c\u6388\u6743\u5168\u6536\u56de\nrevoke select on department from Amit,Satoshi restrict;\nrevoke grant option for select on department from Amit;\n</code></pre></p>"},{"location":"sp25/db/note/#chap-5-advanced-sql","title":"Chap 5 Advanced SQL","text":""},{"location":"sp25/db/note/#51-accessing-sql-from-a-programming-language","title":"5.1 Accessing SQL from a programming language","text":"<ul> <li>API   ODBC(Open DataBase Connectivity):C,C++,C#   JDBC:Java  </li> <li>Embedded SQL   C   SQLJ:Java   JPA:OR(Object Relation) mapping of Java</li> </ul> <p>1.connectivity 2.create a statement object 3.send queries and fetch results  </p>"},{"location":"sp25/db/note/#jdbc","title":"JDBC","text":"<p><pre><code>public static void JDBC()\n{\n    try{\n        Connection conn = DriverManager.getConnection(url,userid,passwd);\n        Statement stmt = conn.createStatement();\n        //...actual work...\n        stmt.close();\n        conn.close();\n    }\n    catch(SQLException sqle){}\n}\n</code></pre> <pre><code>try{\n    stmt.executeUpdate(\n        \"insert into instructor values(...)\");\n} catch (){}\n\nResultSet rset = stmt.executeQuery(\n    \"select dept_name,avg(salary)\n     from instructor\n     group by dept_name\");\nwhile(rset.next())\n{\n    Systems.out.println(rset.getString(\"dept_name\") + \" \" + rset.getFloat(2));\n}\n\nint a = rset.getInt(\"a\");\nif(rset.wasNull()) Systems.out.println(\"Got null value\");\n</code></pre></p>"},{"location":"sp25/db/note/#prepared-statement","title":"Prepared Statement","text":"<pre><code>PreparedStatement pStmt = conn.prepareStatement(\n    \"insert into instructor values(?,?,?,?)\");\npStmt.setString(1,\"88877\");//\u5411\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\npStmt.setString(2,\"Perry\");\n...\npStmt.executeUpdate();\n</code></pre>"},{"location":"sp25/db/note/#sql-injection","title":"SQL Injection","text":"<pre><code>select * from instructor where name = 'X' or 'Y' = 'Y';\n-- 'X';update instructor set salary = salary + 10000000;\n</code></pre>"},{"location":"sp25/db/note/#metadata-features","title":"Metadata Features","text":"<pre><code>ResultSetMetaData rsmd = rs.getMetaData();\nfor(int i = 1;i &lt;= rsmd.getColumnCount();i++)\n{\n    System.out.println(rsmd.getColumnName(i));\n    System.out.println(rsmd.getColumnTypeName(i));\n}\nDatabaseMetaData dbmd = conn.getMetaData();\nResultSet rs = dbmd.getColumns(null,\"univdb\",\"department\",\"%\");\n</code></pre>"},{"location":"sp25/db/note/#transaction-control","title":"Transaction Control","text":"<pre><code>conn.setAutoCommit(false);\nconn.commit();\nconn.rollback();\n</code></pre>"},{"location":"sp25/db/note/#sqlj","title":"SQLJ","text":"<pre><code>#sql iterator deptlnfolter(String deptname,int avgSal);\n//Define class automatically\ndeptlnfolter iter = null;\n#sql iter = {select dept_name,avg(salary) as avgSal from instructor group by dept name};\n//check while compiling\nwhile(iter.next())\n{\n    String deptName = iter.dept_name();\n    int avgSal = iter.avgSal();\n    System.out.println(deptName + \" \" + avgSal);\n}\niter.close();\n</code></pre>"},{"location":"sp25/db/note/#odbc","title":"ODBC","text":"<pre><code>int ODBC()\n{\n    RETCODE error;\n    HENV env;\n    HDBC conn;\n    SQLAllocEnv(&amp;env);\n    SQLAllocConnect(env,&amp;conn);\n    SQLConnect(conn,url,SQL_NTS,\"avi\",SQL_NTS,passwd,SQL_NTS);//Null Terminate String\n    {\n        char deptname[80];\n        float salary;\n        int lenOut1,lenOut2;\n        HSTMT stmt;\n        char* sqlquery = \n        \"select dept_name,sum(salary)\n         from instructor\n         group by dept_name\";\n        SQLAllocStmt(conn,&amp;stmt);\n        error = SQLExecDirect(stmt,sqlquery,SQL_NTS);\n        if(error == SQL_SUCCESS){\n            SQLBindCol(stmt,1,SQL_C_CHAR,deptname,80,&amp;lenOut1);//\u7ed1\u5b9a\n            SQLBindCol(stmt,2,SQL_C_FLOAT,&amp;salary,0,&amp;lenOut2);\n            while(SQLFetch(stmt)==SQL_SUCCESS){ //transmit\n                printf(\" %s %g\\n\",deptname,salary);\n            }\n        }\n        SQLFreeStmt(stmt,SQL_DROP);\n    }\n    SQLDisconnect(conn);\n    SQLFreeConnect(conn);\n    SQLFreeEnv(env);\n}\n</code></pre>"},{"location":"sp25/db/note/#prepared-statement_1","title":"Prepared Statement","text":"<pre><code>SQLPrepare(stmt,&lt;SQL String&gt;);\nSQLBindParameter(stmt,&lt;parameter#&gt;,...type info...)\nretcode = SQLExecute(stmt);\nSQLSetConnectionOption(conn,SQL_AUTOCOMMIT,0)\nSQLTransact(conn,SQL_COMMIT)\n</code></pre>"},{"location":"sp25/db/note/#embedded-sql","title":"Embedded SQL","text":"<p>host language:C(EXEC SQL &lt;&gt;;),C++,Java(#SQL{}; ),... <pre><code>main(){\n    EXEC SQL INCLUDE SQLCA;\n    EXEC SQL BEGIN DECLARE SECTION\n    char account_no[11];//end by '\\0'\n    char branch_name[16];\n    int balance;\n    EXEC SQL END DECLARE SECTION\n    EXEC SQL CONNECT TO dank_db USER Adam USING Eve;\n    scanf(\"%s %s %d\",account_no,branch_name,balance);\n    EXEC SQL insert into account values(:account_no,:branch_name,:balance);\n    if(SQLCA.sqlcode !=0) printf(\"Error!\\n\");\n    else printf(\"Success!\\n\");\n}\nEXEC SQL update account\n         set balance = balance +:balance\n         where account_number = :account_no;\n\nEXEC SQL select balance into :balance:mask \n        //no bind needed\n        //mask&lt;0 null,mask&gt;0\u622a\u65ad\n         from account \n         where account_number = :account_no;\n\nEXEC SQL DECLARE account_cursor CURSOR for\n    select account_number,balance\n    from depositor natural join account\n    where depositor.customer_name = :customer_name;\nscanf(\"%s\",customer_name);\nEXEC SQL open account_cursor;//iterator\nfor(;;)\n{\n    EXEC SQL fetch account_cursor into :account_no,:balance;\n    if(SQLCA.sqlcode)...\n    if(balance &lt; 1000)\n        EXEC SQL update account set balance = \"balance * 1.05\" where current of account_cursor\n    else ...\n}\nEXEC SQL close account_cursor;\n</code></pre> Embedded SQL helps static type check and optimizer Dynamic SQL use a place holder('?') too</p>"},{"location":"sp25/db/note/#52-functions-and-procedures","title":"5.2 Functions and Procedures","text":""},{"location":"sp25/db/note/#procedual-constructs-in-sql","title":"Procedual Constructs in SQL","text":"<p>module language:if-then-else,while stored procedures:call \u8bed\u6cd5\u68c0\u67e5\uff0c\u8bed\u4e49\u68c0\u67e5\uff0c\u8f6c\u5316\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\uff0c\u67e5\u8be2\u4f18\u5316 <pre><code>create function dept_count(dept_name varchar(20))\nreturns integer\nbegin \n    declare d_count integer;\n    select count(*) into d_count\n    from instructor\n    where instructor.dept_name = dept_name\n    return d_count;\nend\n\nselect dept_name,budget\nfrom department\nwhere dept_count(dept_name) &gt; 1;\n</code></pre> <pre><code>create function instructors_of(dept_name char(20))\n    returns table(ID varchar(5),\n                  name varchar(20),\n                  dept_name varchar(20),\n                  salary numeric(8,2))\nreturn table\n    (select ID,name,dept_name,salary\n    from instructor\n    where instructor.dept_name =instructors_of.dept_name)\n\nselect * from table(instructors_of('Music'));\n</code></pre></p>"},{"location":"sp25/db/note/#sql-procedures","title":"SQL Procedures","text":"<p><pre><code>create procedure dept_count_proc\n(in dept_name varchar(20),out d_count integer)\nbegin\n    select count(*) into d_count\n    from instructor\n    where instructor.dept_name = dept_count_proc.dept_name\nend\n\ndeclare d_count integer;\ncall dept_count_proc('Physics',d_count);\n</code></pre> <pre><code>declare n integer default 0;\nwhile n&lt;10 do\n    set n = n + 1\nend while\n\nrepeat\n    set n = n - 1\nuntil n = 0\nend repeat\n\nfor r as\n    select budget from department\n    where dept_name = 'Music'\n    -- \u904d\u5386\u884c\ndo\n    set n = n-r.budget\nend for\n</code></pre></p>"},{"location":"sp25/db/note/#external-language-functionsprocedures","title":"External Language Functions/Procedures","text":"<pre><code>create procedure dept_count_proc\n(in dept_name varchar(20),out count integer)\nlanguage C\nexternal name '/usr/avi/bin/dept_count_proc'\n-- sandbox for security\n</code></pre>"},{"location":"sp25/db/note/#53-triggers","title":"5.3 Triggers","text":"<p>ECA:Event,Condition,Action</p>"},{"location":"sp25/db/note/#row-level-triggers","title":"Row level triggers","text":"<p><pre><code>create trigger account_trigger \nafter update of account on balance \nreferencing new row as nrow\nreferencing old row as orow\nfor each row\nwhen nrow.balance - orow.balance &gt;= 200000 or\n     orow.balance - nrow.balance &gt;= 50000\nbegin\n    insert into account_log values(nrow.account_number,nrow.balance - orow.balance,current_time())\nend;\n</code></pre> <pre><code>create trigger timeslot_check1\nafter insert on section\nreferencing new row as nrow\nfor each row\nwhen(nrow.time_slot_id not in(\n        select time_slot_id\n        from time_slot))\nbegin\n    rollback\nend;\n\ncreate trigger timeslot_check2\nafter delete on timeslot\nreferencing old row as orow\nfor each row\nwhen(orow.time_slot_id not in(\n        select time_slot_id\n        from time_slot)\n    and orow.time_slot in(\n        select time_slot_id\n        from section)\n    )\nbegin\n    rollback\nend;\n</code></pre> <pre><code>create trigger setnull_trigger\nbefore update of takes \nreferencing new row as nrow\nfor each row\nwhen(nrow.grade = '')\nbegin atomic\n    set nrow.grade = null;\nend;\n</code></pre></p>"},{"location":"sp25/db/note/#statement-level-triggers","title":"Statement level triggers","text":"<pre><code>create trigger grade_trigger \nafter update of takes on grade\nreferencing new table as new_table\nfor each statement\nwhen exists(select avg(grade)\n            from new_table\n            group by course_id,sec_id,semester,year\n            having avg(grade)&lt;60)\nbegin\n    rollback\nend\n</code></pre>"},{"location":"sp25/db/note/#chap-6-entity-relationship-model","title":"Chap 6 Entity-Relationship Model","text":""},{"location":"sp25/db/note/#61-database-design-process","title":"6.1 Database Design Process","text":"<p>requirement specification -&gt; conceptual-design(E-R diagram) -&gt; logical design(schema) -&gt; physical-design  </p>"},{"location":"sp25/db/note/#62-e-r-diagram","title":"6.2 E-R Diagram","text":"<p>  \u65b9\u6846:\u5b9e\u4f53\u96c6Entity Set(\u52a0\u865a\u7ebfpartial key(discriminator) -&gt; weak entity) weak entity\u4f9d\u8d56strong entity\u624d\u80fd\u552f\u4e00\u6807\u8bc6\u81ea\u5df1 \u83f1\u5f62\u6846:\u5173\u7cfb\u96c6Relationship Set(\u53cc\u7ebf\u6846(identifying relationship)\u8fde\u63a5weak entity\u4e0estrong entity) \u7bad\u5934:\u5bf9\u5e94\u5173\u7cfb(\u6709\u7bad\u5934\u4e00\u5bf9\u591a,\u4e24\u8fb9\u65e0\u7bad\u5934\u591a\u5bf9\u591a,\u53cc\u7ebftotal participation,\u5fc5\u987b\u6709\u5bf9\u5e94) E.g.\u4e00\u4e2adepartment\u53ef\u4ee5\u6709\u591a\u4e2ainstructor,\u6307\u5411department E.g.\u6bcf\u4e2acourse\u90fd\u8981\u5728course_dept\u8868\u4e2d,\u53cc\u7ebf\u8fde\u63a5course,course_dept Attribute:relationship\u5e26\u5c5e\u6027(grade) Role:prereq:\u5b9e\u4f53\u5185\u5173\u7cfb(\u4f8b:\u524d\u7f6e\u8bfe\u7a0b) {}:\u591a\u503c\u5c5e\u6027 E-R model\u539f\u5219:\u907f\u514d\u5197\u4f59(\u4f7f\u7528\u6307\u9488),\u660e\u786e\u5173\u7cfb(\u663e\u793a\u8868\u793a)   Entity:an object that exists and distinguishable from other objects(name,ID) Relationship set:{(e1,e2,...,en),ei\u2208Ei} Degree of relationship set:\u591a\u5143\u8054\u7cfb(\u6700\u591a\u4f7f\u7528\u4e00\u4e2a\u7bad\u5934) (\u5c3d\u91cf\u4f7f\u7528\u4e8c\u5143\u8054\u7cfb,\u4e09\u5143\u8054\u7cfb\u53ef\u4ee5\u8f6c\u5316\u4e3a\u56db\u4e2a\u5b9e\u4f53\u95f4\u7684\u4e09\u4e2a\u4e8c\u5143\u8054\u7cfb)  Composite Attributes(\u590d\u5408\u7c7b\u578b):E.g.Name(first_name,family_name),Address Derived attribute(\u6d3e\u751f\u5c5e\u6027):\u53ef\u8ba1\u7b97  Mapping Cardinality Constraints(one-to-one,one-to-many,many-to-many) l..h:\u6700\u5c11\u6700\u591a\u53c2\u4e0e\u6b21\u6570,*\u8868\u793a\u591a\u4e2a  </p>"},{"location":"sp25/db/note/#63-reduction-to-relational-schemas","title":"6.3 Reduction to Relational Schemas","text":"<p>1.Strong entity -&gt; schema with same attributes <pre><code>course(course_id,title,credits)\n</code></pre>   Weak entity -&gt; schema + strong entity primary key <pre><code>section(course_id,sec_id,semester,year)\n</code></pre> 2.many-to-many relationship set -&gt; schema with the primary key of entity set <pre><code>advisor(s_id,i_id)\n</code></pre>   one to many relationship set -&gt; schema -&gt; add attribute to the entity(many side) <pre><code>department(dept_name,building,budget)\ninstructor(ID,name,salary,   dept_name   )\n</code></pre> 3.Composite and Multivalued attributes <pre><code>instructor(ID,first_name,middle_initial,last_name,\n    street_number,street_name,apt_number,city,state,zip_code,\n    date_of_birth,age)\ninst_phone(ID,phone_number)\n\ntime_slot(time_slot_id)\ntime_slot_detail(time_slot_id,day,start_time,end_time)\n-- section reference time_slot(foreign key)\n-- Optimization\ntime_slot(time_slot_id,day,start_time,end_time)\nsection(sec_id,semester,year,  time_slot  )\n-- Caveat:time_slot attribute of section cannot be a foreign key\n-- Solution:using trigger\n</code></pre></p>"},{"location":"sp25/db/note/#64-design-issues","title":"6.4 Design Issues","text":"<p>Common mistake:redundant attribute  Note:takes is still needed for the sake of the students haven't taken part in assignment 1.use entity set vs. attributes(whether extra info is needed or multivalue) 2.use entity set vs. relationship set takes vs. section_reg + registration + student_reg 3.placement of relationship attributes 4.binary vs. non-binary relationship(conversion) </p>"},{"location":"sp25/db/note/#65-extended-er-features","title":"6.5 Extended ER Features","text":"<ul> <li>Specialization(top-down inheritance)</li> <li>Generalization(bottom-up) overlapping:\u540c\u5c5e,\u5b58\u5728person\u540c\u5c5eemployee\u4e0estudent disjoint:\u4e0d\u76f8\u4ea4\u5b50\u96c6,\u4e0d\u80fd\u540c\u65f6\u662finstructor\u4e0esecretary partial/total:\u5e76\u96c6\u662f\u5426\u7b49\u4e8e\u5168\u96c6  </li> </ul>"},{"location":"sp25/db/note/#reduction","title":"Reduction","text":"<p>1.inherit from parent 2.inherited attributes in the schema 3.type attribute to differentiate  </p>"},{"location":"sp25/db/note/#chap-7-relational-database-design","title":"Chap 7 Relational Database Design","text":""},{"location":"sp25/db/note/#71-first-normal-form","title":"7.1 First Normal Form","text":"<p>A relational schema R is in first normal form if the domains of all attributes of R are atomic(\u4e0d\u53ef\u518d\u5206).  </p>"},{"location":"sp25/db/note/#72-a-lossylossless-decomposition","title":"7.2 A lossy/lossless Decomposition","text":"<p>What is a 'good' relation? Pitfalls of 'bad' relation(combined schema)  </p> <ul> <li>Information repetition  </li> <li>Insertion anomalies  </li> <li>Update difficulty  </li> </ul> <p><pre><code>instructor(id,name,salary,dept_name)\ndepartment(dept_name,building,budget)\n</code></pre> Denote as a functional dependency: id -&gt; name,salary,dept_name dept_name -&gt; building,salary We should treat every functional dependency \"kindly\".  </p> <p><pre><code>employee(ID,name,street,city,salary) -&gt;\nemployee1(ID,name)\nemployee2(name,street,city,salary)\n</code></pre> This is a lossy decomposition if some people share the same name. [Definition] A lossless decomposition is a composition that if we natural join the two sub schemas,we can get the original schema. The key reason of lossy is that <code>name</code> is not a key. More tuples means more uncertainly,thus less information. A decomposition of R into R1 and R2 is lossless if R1 \u2229 R2 -&gt; R1 or R1 \u2229 R2 -&gt; R2(\u516c\u5171\u5c5e\u6027\u4e00\u5b9a\u662f\u67d0\u4e00\u4e2a\u5173\u7cfb\u7684key) [Goal] Decompose R into a set of relations such that each relation is a 'good' form and the decomposition is lossless Normal Forms:1NF -&gt; 2NF -&gt; 3NF -&gt; BCNF -&gt; 4NF  </p>"},{"location":"sp25/db/note/#73-functional-dependencies","title":"7.3 Functional dependencies","text":"<p>[Definition] $\\alpha,\\beta \\subseteq R,\\alpha \\rightarrow \\beta $ if \\(t1[\\alpha] = t2[\\alpha] \\Rightarrow t1[\\beta] = t2[\\beta]\\) K is a superkey(key) of R if \\(K \\rightarrow R\\) K is a candidate key iff \\(K \\rightarrow R\\) and for no \\(\\alpha \\subset K,\\alpha \\rightarrow R\\) e.g. (ID and name) is a superkey of the schema student but not candidate key,because ID inself can determine a particular student $\\alpha \\rightarrow \\beta $ is trivial if \\(\\beta \\subseteq \\alpha\\) </p>"},{"location":"sp25/db/note/#closure-of-functional-dependencies","title":"Closure(\u95ed\u5305) of functional dependencies","text":"<p>If \\(A \\rightarrow B\\) and \\(B\\rightarrow C\\) then \\(A \\rightarrow C\\) \\(F = \\left\\{A \\rightarrow B,B \\rightarrow C \\right\\}\\) \\(F^+ = \\left\\{A \\rightarrow B,B \\rightarrow C, A \\rightarrow C,AB \\rightarrow B,AB\\rightarrow C,...\\right\\}\\) Find F+ by applying armstrong's axioms:  </p> <ul> <li>if \\(\\beta \\subseteq \\alpha\\),then \\(\\alpha \\rightarrow \\beta\\) reflexivity\u81ea\u53cd  </li> <li>if \\(\\alpha \\rightarrow \\beta\\),then \\(\\gamma\\alpha \\rightarrow \\gamma\\beta\\) augmentation\u589e\u8865  </li> <li>if \\(\\alpha \\rightarrow \\beta\\),\\(\\beta \\rightarrow \\gamma\\),then \\(\\alpha \\rightarrow \\gamma\\) transitivity\u4f20\u9012  </li> </ul> <p>Additional rules:  </p> <ul> <li>if \\(\\alpha \\rightarrow \\beta\\),\\(\\alpha \\rightarrow \\gamma\\),then \\(\\alpha \\rightarrow \\beta\\gamma\\) union  </li> <li>if \\(\\alpha \\rightarrow \\beta\\gamma\\),\\(\\alpha \\rightarrow \\beta\\),then \\(\\alpha \\rightarrow \\gamma\\) decomposition  </li> <li>if \\(\\alpha \\rightarrow \\beta\\),\\(\\gamma\\beta \\rightarrow \\delta\\),then \\(\\alpha\\gamma \\rightarrow \\delta\\) pseudotransitivity  </li> </ul> <p>Exercise 1:Prove \\(\\alpha\\gamma \\rightarrow \\beta\\gamma \\leftrightarrow \\alpha\\gamma \\rightarrow \\beta\\) </p>"},{"location":"sp25/db/note/#closure-of-attribute-sets","title":"Closure of attribute sets","text":"<p>[Definition]The closure of attribute a under F(a+) is the set of attributes that are functionally determined by a under F R(A,B,C,D) F = \\(\\left\\{A \\rightarrow B,B \\rightarrow C,B \\rightarrow D \\right\\}\\) A+ = ABCD(can be a key) B+ = BCD C+ = C Algorithm:\u6709\u5411\u56fe K is a key(superkey) if K+ = R K is a candidate key iff K+ = R and any \\(\\alpha \\subset K,\\alpha^+ \\neq R\\) Compute F+ by using closure of attricute sets </p>"},{"location":"sp25/db/note/#74-canonical-cover","title":"7.4 Canonical Cover(\u6b63\u5219\u8986\u76d6)","text":"<p>A simplicity of functional dependencies,making it have no redundant dependencies or redundant parts of dependencies [Definition] Fc is a canonical cover of F is \\(F \\leftrightarrow F_c\\) and no extraneous attribute Computing:\u51fd\u6570\u4f9d\u8d56\u56fe </p>"},{"location":"sp25/db/note/#75-boyce-codd-normal-form","title":"7.5 Boyce-Codd Normal Form","text":"<p>A relation schema is BCNF,if for any \\(\\alpha \\subseteq R,\\beta \\subseteq R\\),at least one of the following holds:  </p> <ul> <li>\\(\\alpha \\rightarrow \\beta\\) is trivial  </li> <li>\\(\\alpha\\) is a superkey of R  </li> </ul> <p>instr_dept(ID,name,salary,dept_name,building,budget) is not in BCNF because dept_name -&gt; building,budget but dept_name is not a superkey \u4efb\u4f55\u4e00\u6761\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\u5de6\u8fb9\u90fd\u5fc5\u987b\u662fkey Decomposition a schema into BCNF \\(\\alpha\\) is reserved in the original(not BCNF) scheme and is also the key of the new schema E.g. R{A,B,C,D,E},F={A-&gt;B,B-&gt;CD,E-&gt;D} Candidate key:AE Let R1 = {A,B} R~ = {A,C,D,E} F~ = {A-&gt;CD,E-&gt;D} Let R2 = {A,C} R~ = {A,D,E} F~ = {A-&gt;D,E-&gt;D} Let R3 = {A,D} R4 = {A,E} \u7b54\u6848\u4e0d\u552f\u4e00\uff0c\u5efa\u8bae\u4ece\u53f6\u5411\u6839\u5206\u89e3 F1 = {A-&gt;B},F2 = {A-&gt;C},F3 = {A-&gt;D},F4 = {AE-&gt;AE}\u4e0d\u662f\u4f9d\u8d56\u4fdd\u6301\u7684 \u5982E-&gt;D\u4e0d\u80fd\u7531F1,F2,F3,F4\u63a8\u51fa  </p>"},{"location":"sp25/db/note/#76-third-normal-form","title":"7.6 Third Normal Form","text":"<p>[Definition] Dependency Preservation(\u4f9d\u8d56\u4fdd\u6301)\uff1a \u5982\u679c\u901a\u8fc7\u68c0\u9a8c\u5355\u4e00\u5173\u7cfb\u4e0a\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c31\u80fd\u786e\u4fdd\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56\u6210\u7acb\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u5206\u89e3\u662f\u4f9d\u8d56\u4fdd\u6301\u7684 \u6216\u8005\u8bf4\uff0c\u539f\u6765R\u4e0a\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\uff0c\u90fd\u53ef\u4ee5\u5728\u5206\u89e3\u540e\u7684\u5355\u4e00\u5173\u7cfb\u4e0a\u5f97\u5230\u9a8c\u8bc1\u6216\u8005\u63a8\u5bfc\u5f97\u5230 A decomposition is dependency preserved if \\((F1\\cup...\\cup Fn)^{+}=F^{+}\\) </p> <p>!!! warning \u901a\u5e38\u6839\u636eF<sub>C</sub>\u5224\u65ad\uff0c\u6ce8\u610f\u4e0d\u662f\\(F1\\cup...\\cup Fn=F\\) </p> <p>\u5bf9\u67d0\u4e00\u4e2aR\uff0cBCNF\u4e0e\u4f9d\u8d56\u4fdd\u6301\u53ef\u80fd\u65e0\u6cd5\u540c\u65f6\u4fdd\u8bc1 A relation schema is 3NF,if for any \\(\\alpha \\subseteq R,\\beta \\subseteq R\\),at least one of the following holds:  </p> <ul> <li>\\(\\alpha \\rightarrow \\beta\\) is trivial  </li> <li>\\(\\alpha\\) is a superkey of R  </li> <li>Each attribute A in \\(\\beta - \\alpha\\) is contained in a candidate key of R </li> </ul> <p>E.g. R = {J,K,L},F = {JK -&gt; L,L -&gt; K}(candidate key = JK,JL) \u4e0d\u662fBCNF\u4f46\u662f3NF(K\u5305\u542b\u4e8e\u4e00\u4e2acandidate key JK) \u4efb\u4f55\u4e00\u6761\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5982\u679c\u5de6\u8fb9\u4e0d\u662fkey\uff0c\u90a3\u4e48\u53f3\u8fb9\u5fc5\u987b\u5305\u542b\u5728\u67d0\u4e00\u4e2akey\u91cc\u9762 3NF\u662f\u5bf9BCNF\u7684\u6700\u5c0f\u653e\u677e [Algorithm]  \u4f18\u5148\u4fdd\u8bc1\u51fd\u6570\u4f9d\u8d56\uff0c\u5206\u89e3canonical cover\u4e2d\u7684\u6bcf\u4e00\u6761\u51fd\u6570\u4f9d\u8d56 \u5982\u679c\u5206\u89e3\u51fa\u7684\u5173\u7cfb\u6a21\u5f0f\u90fd\u4e0d\u5305\u62eccandidate key\u5219\u5c06\u67d0\u4e00\u4e2acandidate key\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f E.g. R{A,B,C,D,E},F={A-&gt;B,B-&gt;CD,E-&gt;D} Candidate key:AE R1 = {A,B},R2 = {B,C,D},R3 = {E,D},R4 = {A,E} \u5982\u679c\u67d0\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f\u4e2d\uff0c\u53bb\u9664\u591a\u4f59\u7684\u5173\u7cfb\u6a21\u5f0f  </p>"},{"location":"sp25/db/note/#77-multivalued-dependencies-and-fourth-normal-form","title":"*7.7 Multivalued dependencies and Fourth Normal Form","text":"<p>classes(course,teacher,book)(course:teacher = 1:n,course:book = 1:n,teachers and books are independent) |course | teacher | book| |-------|---------|-----| |DB|A|DB Concept| |DB|A|DB System| |DB|H|DB Concept| |DB|H|DB System| |DB|S|DB Concept| |DB|S|DB System| |OS|A|OS Concept| |OS|A|OS System| |OS|J|OS Concept| |OS|J|OS System|  </p> <p>key = {course,teacher,book} Redundant and Insertion anomalies(insert DB,T) Decompose:teaches(course,teacher),text(course,book) [Definition] MVDs:$\\alpha,\\beta \\subseteq R,\\alpha \\rightarrow\\rightarrow \\beta $ if \\(t1[\\alpha] = t2[\\alpha]\\) then exists \\(t3,t4\\) such that $ t1[\\alpha] = t2[\\alpha] = t3[\\alpha] = t4[\\alpha], t3[\\beta] = t1[\\beta], t4[\\beta] = t2[\\beta], t3[R-\\alpha-\\beta] = t2[R-\\alpha-\\beta], t4[R-\\alpha-\\beta] = t1[R-\\alpha-\\beta] $ (independent) $\\alpha \\rightarrow\\rightarrow \\beta $ is trivial if $\\beta \\subseteq \\alpha $ or \\(a \\cup b = R\\) If $\\alpha \\rightarrow \\beta $,then $\\alpha \\rightarrow\\rightarrow \\beta $\u5355\u503c\u51b3\u5b9a\u662f\u591a\u503c\u51b3\u5b9a\u7684\u7279\u4f8b D = {all functional and multivalued dependencies} D+ is the closure of D A relation schema is 4NF,if for any \\(\\alpha \\subseteq R,\\beta \\subseteq R\\),at least one of the following holds:  </p> <ul> <li>\\(\\alpha \\rightarrow\\rightarrow \\beta\\) is trivial  </li> <li>\\(\\alpha\\) is a superkey of R  </li> </ul> <p>If a relation is in 4NF,it is in BCNF(\\(F^+ \\subset D^+\\)) </p>"},{"location":"sp25/db/note/#chap-12-physical-storage-systems","title":"Chap 12 Physical Storage Systems","text":""},{"location":"sp25/db/note/#121-physical-storage-media","title":"12.1 Physical Storage Media","text":"<p>volatile/non-volatile storage:\u6613\u5931/\u975e\u6613\u5931\u5b58\u50a8 </p> <ul> <li>primary storage:fastest but volatile(cache,main memory)  </li> <li>NVM(Non-Volatile Memory):\u8010\u7528\u6027\u5dee  </li> <li>secondary storage(on-line storage):non-volatile,moderately fast(flash memory,magnetic disks)  </li> <li>tertiary(\u7b2c\u4e09\u7ea7) storage(off-line storage):non-volatile,slow  </li> </ul>"},{"location":"sp25/db/note/#122-magnetic-disks","title":"12.2 Magnetic Disks","text":"<p> Magnetic Hard Disk Mechanism:\u673a\u68b0\u8fd0\u52a8 \u5927\u6587\u4ef6\u7684\u5b58\u50a8\u65b9\u5f0f:\u6bcf\u4e2a\u76d8\u7247\u5b58\u50a8\u4e00\u90e8\u5206\uff0c\u5e76\u884c\u8bfb  </p> <ul> <li>Read-write head  </li> <li>Surface of platter(\u5e73\u76d8) divided into circular tracks(\u78c1\u9053) </li> <li>Each track is divided into sectors(\u6247\u533a)  </li> <li>Disk arm swings to read/write a sector  </li> <li>Head-disk assemblies:multiple disk platters on a single spindle(\u8f74)  </li> <li>Cylinder(\u67f1\u9762)  </li> </ul> <p>Disk controller(\u78c1\u76d8\u63a7\u5236\u5668):interface between the computer system and the disk drive hardware checksums:\u6821\u9a8c\u7801(\u5199\u65f6\u8ba1\u7b97\uff0c\u5199\u5b8c\u540e\u8bfb\u51fa\u6821\u9a8c)  </p>"},{"location":"sp25/db/note/#123-performance-measurement","title":"12.3 Performance measurement","text":"<ul> <li>Access Time   seek time(\u5bfb\u9053\u65f6\u95f4):4-10ms   rotational latency:4-11ms  </li> <li>Data transfer rate:25-100M/s  </li> <li>Disk block:4-16KB  </li> <li>Sequential access pattern  </li> <li>Random access pattern  </li> <li>I/O operations(number of random block reads) per second(IOPS,\u6bcf\u79d2I/O\u64cd\u4f5c\u6570):50-200IOPS -&gt; \u5c3d\u91cf\u51cf\u5c11\u968f\u673a\u8bbf\u95ee\u6b21\u6570  </li> <li>Mean time to failure(MTTF):3-5yr</li> </ul>"},{"location":"sp25/db/note/#124-optimization-of-disk-block-access","title":"12.4 Optimization of Disk-Block Access","text":"<ul> <li>Buffering:in-memory buffer  </li> <li>Read-ahead(Prefetch):read extra blocks in anticipation  </li> <li>Disk-arm-scheduling:reorder block requests   elevator algorithm   file organization:defragment  </li> <li>Non-volatile write buffers:battery backed up RAM(\u5907\u7535)/flash memory  </li> <li>Log disk:a disk devoted to writing a sequential log of block updates  </li> </ul>"},{"location":"sp25/db/note/#125-flash-memory-nvm","title":"12.5 Flash memory &amp; NVM","text":"<ul> <li>NAND flash:cheaper than NOR flash  </li> <li>SSD(Solid State Disks):block-oriented disk interfaces  Erase:2-5ms,256KB-1MB Remapping by using Flash translation table wear leveling(\u78e8\u635f\u5747\u8861) NVM:write buffer/log disk(\u672a\u5546\u4e1a\u5316) </li> </ul>"},{"location":"sp25/db/note/#chap-13-data-storage-structures","title":"Chap 13 Data Storage Structures","text":""},{"location":"sp25/db/note/#131-file-organization","title":"13.1 File Organization","text":"<p>The database is stored as a collection of files Each file is a sequence of records and each records is a sequence of fields  </p>"},{"location":"sp25/db/note/#fixed-length-record","title":"Fixed-length record","text":"<p>store record i starting from byte n * (i-1),where n is the size of each record Delete of record i:  </p> <ul> <li>\u6cd51:move records i+1,...,n to i,...,n-1  </li> <li>\u6cd52:move record n to i  </li> <li>\u6cd53:do not remove records,but link all free records on a free list </li> </ul>"},{"location":"sp25/db/note/#variable-length-record","title":"Variable-length record","text":"<p>variable length for one or more fields(varchar);null-value represented by fixed size(offset,length),actual data stored after  null bitmap:represent null value(0 for not null,1 for null)  </p>"},{"location":"sp25/db/note/#slotted-page-structure","title":"Slotted Page Structure","text":"<p> \u4e24\u5934\u6324\u538b Slotted page header:  </p> <ul> <li>number of record entries  </li> <li>end of free space  </li> <li>location and size of each record  </li> </ul> <p>record pointers point to the entry for the record in header  </p>"},{"location":"sp25/db/note/#132-organization-of-records-in-files","title":"13.2 Organization of Records in Files","text":"<ul> <li>Heap:no-order,place anywhere where there is space  </li> <li>Sequential  </li> <li>B+ tree  </li> <li>Hashing  </li> </ul>"},{"location":"sp25/db/note/#heap","title":"Heap","text":"<p>Free-space map  first level:'4' represents:4/8 free second level:'4' represents the max free fraction of the relevant block e.g. max{4,2,1,4} = 4,max{7,3,6,5} = 7  </p>"},{"location":"sp25/db/note/#sequential","title":"Sequential","text":"<p>order by a search-key  delete and insert by using pointers need to reorganize the file from time to time sequential storage are often combined with B+ tree  </p>"},{"location":"sp25/db/note/#multitable-clustering","title":"Multitable Clustering(\u591a\u8868\u805a\u7c7b)","text":"<p> good for queries involving join bad for queries involving only department  </p>"},{"location":"sp25/db/note/#table-partitioning","title":"Table Partitioning","text":"<p>Reduce costs of some operations Support parallel accessing Allow different partitions to be stored on different storage devices  </p>"},{"location":"sp25/db/note/#133-data-dictionary-storage","title":"13.3 Data Dictionary Storage","text":"<p>Data Dictionary(system catalog) stores metadata,including:  </p> <ul> <li>relation info  </li> <li>user and account info(e.g. password)  </li> <li>statistical and descriptive data(e.g. number of tuples of each relation)  </li> <li>file organization info(sequential?hash?,physical location)  </li> <li>indices info  </li> </ul>"},{"location":"sp25/db/note/#134-data-buffer","title":"13.4 Data Buffer","text":"<p>Buffer Manager:allocating buffer space in main memory <pre><code>access block:\nif block already in buffer:return addr\nelse \n    1. buffer manager allocates space in the buffer:\n    (1)replacing some other blocks if required\n    (2)replaced blocks written back to disk\n    2. reads the block from disk to the buffer\n</code></pre> Replacement algorithm  </p> <ul> <li>LRU(see Computer System III Cache)  </li> <li>Toss-immediate:free the space as soon as the final tuple of that block has been processed  </li> <li>MRU:pin the block currently being accessed,unpin it after the final tuple of the block been processed(\u8fd1\u671f\u88ab\u8bbf\u95ee\u8fc7\u7684\u6570\u636e\u4e0d\u592a\u53ef\u80fd\u518d\u88ab\u8bbf\u95ee,more common in database management)</li> <li> <p>*An approximation of LRU:Clock  pin_count:number of processes accessing it currently reference_bit:</p> </li> <li> <p>set '1' is pin_count == 0  </p> </li> <li>set '0' is reference_bit is '1'(LRU)  </li> <li>throw if reference_bit == 0(\u8f6e\u8f6c\u4e00\u5708\u8fd8\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7)  </li> </ul>"},{"location":"sp25/db/note/#chap-14-indexing","title":"Chap 14 Indexing","text":""},{"location":"sp25/db/note/#141-basic-concept","title":"14.1 Basic Concept","text":"<p>Search key:attribute to sets of attributes used to look up record in a file index file consists of records(index entries) of the form:search key,pointer two basic kinds of indices:ordered indices,hash indices access types:point query(records of a specific value),range query performance measurement:access time,insertion time,deletion time,space overhead  </p>"},{"location":"sp25/db/note/#142-ordered-indices","title":"14.2 Ordered Indices","text":"<ul> <li>primary index(\u4e3b\u7d22\u5f15):the order of the search key is in the same order of the file(clustering index\u805a\u96c6\u7d22\u5f15)   \u6700\u9ad8\u6548,\u53ea\u6709\u4e00\u79cd  </li> <li> <p>secondary index(\u8f85\u52a9\u7d22\u5f15):the order of search key is not in the same order of the file </p> </li> <li> <p>dense index:index record appears for every search-key value in the file  </p> </li> <li>sparse index:contains index values for only some search-key values  locate a record with search-key value K by (1)find index record with largest search-key value &lt; K (2)sequentially starting at the record to which the index record points no sparse index for secondary index  </li> </ul>"},{"location":"sp25/db/note/#143-b-tree-index","title":"14.3 B+ Tree Index","text":"<p>basic concept see ADS Lecture 2 Assume a block in 4Kb in disk,each index is 10 bytes and each pointer is 4 bytes The maximum number of child is \\(\\frac{4096 - 4}{10 + 4} + 1 = 293\\) ~ 147 If there a K search keys,the tree height is no more than\\(\\lceil log_{\\lceil n/2\\rceil}(K)\\rceil\\) ~ \\(\\lceil log_{\\lceil n/2\\rceil}(K/2)\\rceil + 1\\)  range query is supported by linked list in the leaf level scan from the head of the linked list  </p>"},{"location":"sp25/db/note/#height-and-size-estimation","title":"height and size estimation","text":"<p><pre><code>person(pid     char(18) primary key,\n       name    char(8),\n       age     smallint, -- 2bytes\n       address char(40));\nblock size:4K\n1000000 person\n</code></pre> height estimation person record size = 18+8+2+40 = 68 records per block 4096/68 = 60 blocks for storing 1000000/60 = 16667 B+ tree fan-out \\(n = \\frac{4096 - 4}{18 + 4} + 1 = 187\\) ~ 94(inner pointers) leaf:93 ~ 186 2 levels: min = 2 * 93 = 186,max = 187 * 186 = 34782 3 levels: min = 2 * 94 * 93 = 17484,max = 187 * 187 * 186 = 6504234 4 levels: min = 2 * 94 * 94 * 93 = 1643496,max = 187 * 187 * 187 * 186 = 1216291758 ANS:2 levels(tree height:3) size estimation min: leaf = 1000000/186 = 5377 second level = 5377/187 = 29 root = 1 total node number = 5377 + 29 + 1 = 5407 max: leaf = 1000000/93 = 10752(\u53d6\u4e0b\u754c) second level = 10752/94 = 114 root = 1 total node number = 10752 + 114 + 1 = 10867 \u5220\u9664\u65f6\u6709\u65f6\u53ef\u4ee5\u4e0d\u4fee\u6539\u7236\u8282\u70b9\u7684\u7d22\u5f15,\u7236\u8282\u70b9\u7684\u7d22\u5f15\u4e0d\u4e00\u5b9a\u4e00\u5b9a\u8981\u51fa\u73b0\u5728\u53f6\u5b50\u4e2d  </p>"},{"location":"sp25/db/note/#b-tree-file-organization","title":"B+ Tree File Organization","text":"<p>Leaf nodes in a B+ tree file organization stores records directly instead of pointers  </p>"},{"location":"sp25/db/note/#other-issues","title":"Other issues","text":"<p>Record relocation and secondary indices If a record moves,all secondary indices should be updated [Solution] use primary-index search key instead of record pointer in secondary index,\u5b58\u653eprimary key(\u901a\u5e38\u4e0d\u53d8)\u800c\u4e0d\u76f4\u63a5\u5b58\u653erecord  </p>"},{"location":"sp25/db/note/#index-strings","title":"Index strings","text":"<p>variable length string as keys prefix compression:keep enough characters to distinguish entries in subtrees(e.g.silb for \"silas\" and \"silberschatz\")  </p>"},{"location":"sp25/db/note/#bulk-loading-and-bottom-up-build","title":"Bulk loading and Bottom-up build","text":"<p>Assume we already have 1000000 records,build a B+ Tree for indexing Insert one by one ? alterative1:insert in sequential order alterative2:Bottom-up construction  </p> <ul> <li>sort index entries  </li> <li>create B+ Tree layer by layer,start with leaf level  </li> <li>written to disk using sequential I/O operations   parallel operation see ADS Lecture 15 disk estimated cost:1 seek +  block transfer   <p>Bulk insertion  </p> <ul> <li>build a new B+ Tree using bottom-up algorithm  </li> <li>merge the two B+ Tree(merge sort) disk estimated cost:2 seeks +  block transfer   <p>Multiple key access <pre><code>select ID\nfrom instructor \nwhere dept_name = \"finance\" and salary = 80000;\n</code></pre> create a B+ Tree index on tuple(dept_name,salary)  </p>"},{"location":"sp25/db/note/#144-indexing-in-main-memory","title":"14.4 Indexing in main memory","text":"<p>in the leaf level,how to locate if we have 186 branches? binary search is not efficient since memory is loaded to cache in the unit of blocks use large node size to optimize disk access for structure data within a node,use a tree instead of an array to optimize cache access  </p>"},{"location":"sp25/db/note/#145-indexing-on-flash","title":"14.5 Indexing on flash","text":"<p>Write-optimized tree structures(LSM Tree &amp; Buffer Tree)  </p>"},{"location":"sp25/db/note/#lsm-tree","title":"LSM Tree","text":"<p>Log Structured Merge Tree: Records inserted first into in-memory tree(L0 tree) move to disk(L1 tree) when in-memory tree's full,merging using bottom-up algorithm merge to L2 tree if L1's full,... stepped merge k trees of each level on disk,when all k indices exists,merge them into one index of the next level(reduce write cost but more expensive query) optimization of point lookups:Bloom filter(\u5e03\u9686\u8fc7\u6ee4\u5668) Every tree correspond to a filter,search the tree only when the filter returns a positive result(hash function)  </p>"},{"location":"sp25/db/note/#buffer-tree","title":"Buffer Tree","text":"<p>each internal node of B+ Tree has a buffer to store inserts inserts all moved to lower level only when the buffer's full less overhead on queries ,reduce per record I/O but more random I/O than LSM  </p>"},{"location":"sp25/db/note/#bitmap-indices","title":"Bitmap indices","text":"<p> 10010:record no.0 &amp; 3 are male easy &amp;|~,counting by an array of integer to number of '1's(e.g. 254 -&gt; 6,255 -&gt; 7)</p>"},{"location":"sp25/db/note/#146-sql-definition","title":"14.6 SQL definition","text":"<pre><code>create index &lt;index_name&gt; on &lt;table&gt;(&lt;attribute_list&gt;);\ncreate index cust-strt-city-index on customer(customer-city,customer-street);\ncreate unique index uni-acnt-index on account(account-number);\ndrop index &lt;index_name&gt;;\n</code></pre>"},{"location":"sp25/db/note/#chap-15-query-processing","title":"Chap 15 Query Processing","text":""},{"location":"sp25/db/note/#151-basic-steps","title":"15.1 Basic Steps","text":"<ul> <li>parsing and translation:relational algebra  </li> <li>optimization:relational algebra optimization;algorithm selection  </li> <li>evaluation:execution of operations(pipeline?) </li> </ul> <p>relational algebra can be drawn like a tree </p>"},{"location":"sp25/db/note/#152-measures-of-query-cost","title":"15.2 Measures of query cost","text":"<p>disk access is the predominant cost  </p> <ul> <li>Number of seeks:average-seek-cost  </li> <li>Number of blocks read:average-block-read-cost  </li> <li>Number of blocks written:average-block-write-cost  </li> </ul> <p>For simplicity,use number of block transfers from the disk &amp; number of seeks t<sub>T</sub>:one block transfer time t<sub>S</sub>:one seek time magnetic disk:t<sub>S</sub> / t<sub>T</sub> = 40 SSD:t<sub>S</sub> / t<sub>T</sub> = 10 algorithms may reduce disk IO by extra buffer space,we apply worst case estimates(minimum buffer number)</p>"},{"location":"sp25/db/note/#153-selection-operations","title":"15.3 Selection Operations","text":""},{"location":"sp25/db/note/#file-scan","title":"File scan","text":"<p>[Algorithm1] linear scan worst cost \\(b_r * t_T + t_S\\),br:number of blocks of relation r key\u4e0a\u7684\u7b49\u503c\u67e5\u627e,stop if found average(estimated) cost:\\(b_r/2 * t_T + t_S\\) </p>"},{"location":"sp25/db/note/#index-scan","title":"Index scan","text":"<p>[Algorithm2] primary B+-tree index,equality on key cost \\((h_i + 1)*(t_T + t_S)\\)  [Algorithm3] primary B+-tree index,equality on nonkey(repeated) cost \\(h_i*(t_T + t_S) + t_S + t_T * b\\),b:number of blocks containing match records  [Algorithm4] secondary B+-tree index,equality on key cost \\((h_i + 1)*(t_T + t_S)\\)  [Algorithm4'] primary B+-tree index,equality on nonkey,equality Each of n matching records on different blocks Using a bucket of pointers,pointers stored in m blocks cost \\((h_i + m + n)*(t_T + t_S)\\) </p>"},{"location":"sp25/db/note/#comparisons","title":"Comparisons","text":"<p>[Algorithm5] primary B+-tree index,comparison Similar to [Algorithm3],cost \\(h_i*(t_T + t_S) + t_S + t_T * b\\)  [Algorithm6] secondary B+-tree index,comparison requires an I/O for each record,thus linear scan may be cheaper </p>"},{"location":"sp25/db/note/#conjunction","title":"Conjunction","text":"<p>\\(\\sigma_{\\theta1 \\wedge \\theta2 \\wedge ... \\wedge \\theta n}(r)\\) [Algorithm] conjunctive selection using one index/composite index/interaction of identifiers  </p>"},{"location":"sp25/db/note/#154-sorting","title":"15.4 sorting","text":"<p>bubble sort is suitable for pipelining,while quick sort is not external sorting is preferred,see ADS Lecture 15 </p>"},{"location":"sp25/db/note/#cost-analysis","title":"Cost analysis","text":"<p>N-way merge,M buffer blocks  </p>"},{"location":"sp25/db/note/#simple-version","title":"Simple version","text":"<p>Total number of runs:\\(\\lceil b_r /M \\rceil\\) Total number of merge passes:\\(\\lceil log_{M-1}(b_r /M) \\rceil\\) (at least keep one block for storing the output) 2b<sub>r</sub> block transfers for each pass,don't count write cost for the final pass Total number of block transfers:\\(2b_r * \\lceil log_{M-1}(b_r /M) \\rceil + b_r\\) = \\(b_r * (2\\lceil log_{M-1}(b_r /M) \\rceil + 1)\\) Cost of seeks </p> <ul> <li>run generation:\\(2* \\lceil b_r /M \\rceil\\) </li> <li>merge phase:\\(2b_r\\) seeks for each merge pass,except the final one does not require a write \\(\\lceil log_{M-1}(b_r /M) \\rceil\\)merge passes  </li> </ul> <p>Total number of seeks:\\(2* \\lceil b_r /M \\rceil + b_r(2\\lceil log_{M-1}(b_r /M)\\rceil-1)\\) </p> <p>N &lt; M,single merge pass\\(\\lceil b_r /M \\rceil = 1\\) </p>"},{"location":"sp25/db/note/#advanced-version","title":"Advanced version","text":"<p>To reduce seek time,use b<sub>b</sub> buffer blocks per run merge \\(\\lfloor M/b_b \\rfloor - 1\\) runs in one pass(&lt; M-1) Total number of merge passes:\\(\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_r /M) \\rceil\\) Total number of block transfers:\\(2b_r * \\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_r /M) \\rceil + b_r\\) = \\(b_r * (2\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_r /M) \\rceil + 1)\\) Cost of seeks </p> <ul> <li>run generation:\\(2* \\lceil b_r /M \\rceil\\) </li> <li>merge phase:\\(2\\lceil b_r/b_b \\rceil\\) seeks for each merge pass,except the final one does not require a write \\(\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_r /M) \\rceil\\)merger passes  </li> </ul> <p>Total number of seeks:\\(2* \\lceil b_r /M \\rceil + \\lceil b_r/b_b \\rceil(2\\lceil log_{\\lfloor M/b_b \\rfloor - 1}(b_r /M)\\rceil-1)\\)</p>"},{"location":"sp25/db/note/#155-join-operation","title":"15.5 Join Operation","text":""},{"location":"sp25/db/note/#nested-loop-join","title":"Nested-Loop Join","text":"<p><pre><code>for each tuple tr in r do begin\n    for each tuple ts in s do begin\n        test(tr,ts) to see if they satisfy the join condition\n        if so,add (tr,ts) to the result\n    end\nend\n</code></pre> r is called outer relation,s is called inner relation \\(b_r + b_s\\) block tranfers and \\(2\\) seeks if the memory is sufficiently large(\\(M &gt; min(b_r,b_s)\\)) memory not sufficiently large, block transfer:\\(n_r * b_s + b_r\\),where n<sub>r</sub> is the record number seeks:\\(n_r + b_r\\) </p>"},{"location":"sp25/db/note/#block-nested-loop-join","title":"Block Nested-Loop Join","text":"<p><pre><code>for each block Br in r do begin\n    for each block Bs in s do begin\n        for each tuple tr in r do begin\n            for each tuple ts in s do begin\n                test(tr,ts) to see if they satisfy the join condition\n                if so,add (tr,ts) to the result\n            end\n        end\n    end\nend\n</code></pre> block transfer:\\(b_r * b_s + b_r\\) seeks:\\(2b_r\\)(\u5916\u5c42b<sub>r</sub>\u6b21,\u5185\u5b58\u5bf9\u6bcf\u4e2ab<sub>r</sub> seek s\u4e00\u6b21,\u7136\u540e\u987a\u5e8f\u8bbf\u95ee) M buffers [Target] Reduce \\(b_r\\) Use M-2 disk blocks for outer relations,1 for inner relation and 1 for the output block transfer:\\(\\lceil b_r/(M-2) \\rceil * b_s + b_r\\) seeks:\\(2\\lceil b_r/(M-2) \\rceil\\)(\u5916\u5c42b<sub>r</sub>\u6b21,\u5185\u5b58\u5bf9\u6bcf\u4e2ab<sub>r</sub> seek s\u4e00\u6b21,\u7136\u540e\u987a\u5e8f\u8bbf\u95ee) If equal-join,stop on first match scan inner loop forward and backward alternatively with LRU replacement to make use of blocks in the buffer  </p> <p>Consider what will happen if we need to write to disk</p>"},{"location":"sp25/db/note/#indexed-nested-loop-join","title":"Indexed Nested-Loop Join","text":"<p>If we have a B+-tree index on the inner relation's join attribute, cost:\\(b_r(t_T + t_S) + n_r * c\\),where c is the cost of traversing index and fetch all matching tuples  </p>"},{"location":"sp25/db/note/#merge-join","title":"Merge Join","text":"<p>join attributes are sorted on both relations only for equal-joins and natural joins Similar to merge stage of the merge sort make sure the duplicated values are handled properly cost:\\(b_r + b_s\\) block transfers + $\\lceil b_r/b_b \\rceil +\\lceil b_s/b_b \\rceil $ seeks + sorting(if not sorted) M buffers  cost:\\(b_r + b_s\\) block transfers + $\\lceil b_r/x_r \\rceil +\\lceil b_s/x_s \\rceil $ seeks(\\(x_r + x_s = M\\)) \\(x_r = \\sqrt{b_r} * M(\\sqrt{b_r} + \\sqrt{b_s})\\) \\(x_s = \\sqrt{b_s} * M(\\sqrt{b_r} + \\sqrt{b_s})\\) hybrid(\u6df7\u5408) merge-join If one relation is sorted,and the other has a secondary B+-tree index on the join attribute  </p> <p>Instead of merging (t<sub>r</sub>,t<sub>s</sub>),merge (t<sub>r</sub>,pointer<sub>s</sub>),sorted the pointers in physical address and use pointer<sub>s</sub> to find t<sub>s</sub>,this is because adjacent pointers are likely to be in the same block  </p>"},{"location":"sp25/db/note/#hash-join","title":"Hash Join","text":"<p>For equi-joins and natural joins A hash function h is used for partition tuples of both relations on join attribute Only the attributes with the same hash value may be joined Join the attributes of the same hash value applying the former methods [Question] how large is a partition? the value n and the hash function h is chosen such that each si should fit in memory \\(n &gt;= \\lceil b_s/M\\rceil\\),M is the buffer number Use in memory hash index to avoid double loop Typically,n is chosen as \\(\\lceil b_s/M\\rceil * f\\),f is called the \"fudge factor\"(\u4fee\u6b63\u56e0\u5b50)\uff0cf = 1.2 Recursive partition by another hash function if number of partition n is greater than M No recursive partition needed if $ M &gt; b_s/M + 1\\(,\\)M &gt; \\sqrt{b_s}$(s is the smaller block number relation) Cost If recursive partition is not required, \\(3(b_r+b_s)+4n_h\\) block transfers + \\(2(\\lceil b_r/b_b\\rceil+\\lceil b_s/b_b\\rceil)+2n_h\\) seeks else, </p>"},{"location":"sp25/db/note/#chap-16-query-optimization","title":"Chap 16 Query Optimization","text":""},{"location":"sp25/db/note/#161-introduction","title":"16.1 Introduction","text":"<p>Equivalent expressions(Transformation Based Optimization\u903b\u8f91\u4f18\u5316) Different Algorithms for each operation(Cost Based Optimization\u7269\u7406\u4f18\u5316\uff0c\u57fa\u4e8e\u4ee3\u4ef7\u4f30\u7b97\u7684\u4f18\u5316) \u5e38\u89c1\u903b\u8f91\u53d8\u6362\uff1a\u6709\u9650\u9009\u62e9/\u6295\u5f71\u64cd\u4f5c \u7269\u7406\u4f18\u5316\uff1a\u7ebf\u6027\u626b\u63cf/B+-Tree/merge join(need sort)/hash join use <code>set showplan_text on</code> to see evaluation plan  </p>"},{"location":"sp25/db/note/#162-generating-equivalent-expressions","title":"16.2 Generating Equivalent Expressions","text":"<p>[Definition] equivalent if and only if the two relational algebra generates the same set of tuples on every legal database instance Equivalence Rules 1.Conjuctive selections can be deconstructed \\(\\sigma_{\\theta 1 \\wedge \\theta 2}(E) = \\sigma _{\\theta 1}(\\sigma _{\\theta 2}(E))\\) 2.Selection operations are commutative(\u53ef\u4ea4\u6362\u7684) \\(\\sigma _{\\theta 1}(\\sigma _{\\theta 2}(E)) =  \\sigma _{\\theta 2}(\\sigma _{\\theta 1}(E))\\) 3.Only the last projection operations are needed,the others can be omitted \\(\\Pi_{l1}(\\Pi_{l2}(...(\\Pi_{ln}(E))...))=\\Pi_{l1}(E)\\) 4.Selections can be combined with Cartesian products and theta joins to avoid composition explosion \\(\\sigma_\\theta(E_1 \\times E_2)=E_1\\bowtie_{\\theta}E_2\\) \\(\\sigma_{\\theta1}(E_1\\bowtie_{\\theta2}E_2)=E_1\\bowtie_{\\theta1 \\wedge \\theta2}E_2\\) 5.Theta join/natural join are commutative \\(E_1\\bowtie_{\\theta}E_2=E_2\\bowtie_{\\theta}E_1\\) 6.Theta join are associative \\((E_1\\bowtie_{\\theta}E_2)\\bowtie_{\\theta}E_3=E_1\\bowtie_{\\theta}(E_2\\bowtie_{\\theta}E_3)\\) \\((E_1\\bowtie_{\\theta1}E_2)\\bowtie_{\\theta2 \\wedge \\theta3}E_3=E_1\\bowtie_{\\theta1 \\wedge \\theta3}(E_2\\bowtie_{\\theta2}E_3)\\)\u6761\u4ef6\u5206\u914d 7.selection operation distributes over the theta join operations \\(\\sigma _{\\theta0}(E_1\\bowtie_{\\theta}E_2)=(\\sigma _{\\theta0}(E_1))\\bowtie_{\\theta}E_2\\) \\(\\sigma _{\\theta1 \\wedge \\theta2}(E_1\\bowtie_{\\theta}E_2)=(\\sigma _{\\theta1}(E_1))\\bowtie_{\\theta}(\\sigma_{\\theta2}(E_2))\\) 8.project operation distributes \\(\\Pi _{L1 \\cup L2}(E_1\\bowtie_{\\theta}E_2)=(\\Pi _{L1}(E_1))\\bowtie_{\\theta}(\\Pi_{L2}(E_2))\\) L3,L4 is the join attribute: \\(\\Pi _{L1 \\cup L2}(E_1\\bowtie_{\\theta}E_2)=(\\Pi _{L1\\cup L3}(E_1))\\bowtie_{\\theta}(\\Pi_{L2 \\cup L4}(E_2))\\) 9.The set operations union and intersection are commutative 10.The set operations union and intersection are associative 11.selection operation distributes over \\(\\cup \\cap -\\) \\(\\sigma_\\theta(E_1 - E_2) = \\sigma_\\theta (E_1) - \\sigma_\\theta (E_2)\\) similar for \\(\\cap \\cup\\) \\(\\sigma_\\theta(E_1 - E_2) = \\sigma_\\theta (E_1) - E_2\\) similar for \\(\\cap\\) </p> <p>not for \\(\\cup\\)</p> <p>12.projection distributes over union ... Join ordering \\((r1\\bowtie r2)\\bowtie r3 = r1\\bowtie (r2 \\bowtie r3)\\) smaller intermediate results execute first  </p>"},{"location":"sp25/db/note/#163-statistics-for-cost-estimation","title":"16.3 Statistics for Cost Estimation","text":"<ul> <li>\\(n_r\\):number of tuples in a relation  </li> <li>\\(b_r\\):number of blocks  </li> <li>\\(l_r\\):size of tuple  </li> <li>\\(f_r\\):blocking factor,the number of tuples of r that fit into one block \\(b_r = \\lceil \\frac{n_r}{f_r}\\rceil\\)</li> <li>\\(V(A,r)\\):number of distinct values that appear for r for attribute A,same as \\(\\Pi_A(r)\\)</li> </ul>"},{"location":"sp25/db/note/#histograms","title":"Histograms\u76f4\u65b9\u56fe","text":"<p>Equi-width,Equi-depth  </p>"},{"location":"sp25/db/note/#size-estimation","title":"Size Estimation","text":""},{"location":"sp25/db/note/#selection","title":"Selection","text":"<p>\\(\\sigma_{A=v}(r)\\):  </p> <ul> <li>\\(n_r/V(A,r)\\) </li> <li>A is a candidate key,size = 1  </li> </ul> <p>\\(\\sigma_{A&lt;v}(r)\\):(output c)  </p> <ul> <li>c=0,if v &lt; min(A,r)  </li> <li>\\(c = n_r*\\frac{v-min(A,r)}{max(A,r)-min(A,r)}\\) for even distribution  </li> </ul> <p>[Definition] selectivity(\u4e2d\u9009\u7387):the probability that a tuple in relation r satisfies \\(\\theta_i\\) Conjunction:\\(\\sigma_{\\theta 1\\wedge \\theta2\\wedge...\\wedge\\theta n(r)}\\) assuming independence result estimation:\\(n_r*\\frac{s_1 * s_2 * ... * s_n}{n_r^n}\\) Disjunction:\\(\\sigma_{\\theta 1\\vee \\theta2\\vee...\\vee\\theta n(r)}\\) result estimation:\\(n_r*(1-(1-\\frac{s_1}{n_r})*(1-\\frac{s_2}{n_r})*...*(1-\\frac{s_n}{n_r}))\\) </p>"},{"location":"sp25/db/note/#join","title":"Join","text":"<ul> <li>\\(r \\times s\\):\\(n_r*n_s\\) </li> <li>If \\(R\\cap S = \\varnothing\\),\\(r \\bowtie s = r \\times s\\) </li> <li>If \\(R\\cap S\\) is a key for R,\\(r \\bowtie s &lt;= n_s\\) </li> <li>If \\(R\\cap S\\) is a foreign key in S referencing R,\\(r \\bowtie s = n_s\\)(except null) </li> <li>If \\(R\\cap S = {A}\\) is not a key for R or S \\(r \\bowtie s &lt;= min\\{\\frac{n_r*n_s}{V(A,s)},\\frac{n_r*n_s}{V(A,r)}\\}\\)</li> </ul>"},{"location":"sp25/db/note/#other","title":"Other","text":"<p>\\(\\Pi_A(r)\\) = V(A,r) \\(_A\\mathcal{g}_F(r)\\) = V(A,r) </p>"},{"location":"sp25/db/note/#number-of-distinct-values","title":"Number of distinct values","text":""},{"location":"sp25/db/note/#164-cost-based-join-order-selection","title":"16.4 Cost-Based Join-Order Selection","text":"<p>\\(r_1 \\bowtie r_2 \\bowtie ...\\bowtie r_n\\) \\(\\frac{2(n-1)!}{(n-1)!}\\) different orders Find the least cost order by applying dynamic programming(see ADS Lec 8) <pre><code>Procedure findbestplan(S)\n    if(bestplan[S].cost != \u221e)\n        return bestplan[S]\n    if(S contains only one relation)\n        set bestplan[S].plan and bestplan[S].cost based on the best way \n        of accessing S using selections on S and indices (if any) on S\n    else for each non-empty subset S1 of S such that S1 != S\n        P1 = findbestplan(S1)\n        P2 = findbestplan(S - S1)\n        for each algorithm A for joining P1 and P2\n            ...commute plan and cost using A...\n        if cost &lt; bestplan[S].cost\n            bestplan[S].cost = cost\n            bestplan[S].plan = plan\n    return bestplan[S]\n</code></pre> T = O(3<sup>n</sup>) S = O(2<sup>n</sup>) Left Deep Join Tree:the right-hand-side input for each join is a relation,not the result of an intermediate join  Modify optimization algorithm by applying left-deep join tree Replace \"for each non-empty subset S1 of S such that S1 != S\" by \"for each relation r in S,let S1 = S - r\" T = O(n*2<sup>n</sup>) S = O(2<sup>n</sup>)  </p>"},{"location":"sp25/db/note/#165-nested-subqueries","title":"16.5 Nested Subqueries","text":"<p><pre><code>select name from instructor \n    where exists(\n    select * from teaches where instructor.ID = teaches.ID and teaches.year = 2022\n    );\n</code></pre> Correlation variables:parameters are variables from outer level query <pre><code>-- rewritten\nselect name from instructor,teaches \n    where instructor.ID = teaches.ID and teaches.year = 2022;\n</code></pre> [Problem] generate different number of duplicates semijoin\u534a\u8fde\u63a5\\(\\ltimes\\):return if a tuple in r can be joined with a tuple in s <pre><code>select name from instructor where ID in\n    (select teaches.ID from teaches where year = 2022);\n</code></pre> using not exist: <pre><code>select name from instructor where not exists\n    (select * from teaches where \n    instructor.ID = teaches.ID and teaches.year = 2022);\n</code></pre> using anti-semijoin \\(\\overline{\\ltimes}\\) \\(\\Pi_{name}(instructor\\overline{\\ltimes}_{instructor.ID = teaches.ID \\wedge teaches.year = 2022}teaches)\\) More complex rewritten <pre><code>select A from r1,...,rn where\n    P1 and exists(select * from s1,...,sm where P21 and P22);\n</code></pre> \\(\\Pi_A(\\sigma_{P1}(r_1 \\times ... \\times r_n)\\ltimes_{P_2^2}\\sigma_{P_2^1}(s_1 \\times ...\\times s_m)\\) \\(P_2^1\\) contains predicates that do not involve correlation variables \\(P_2^2\\) contains predicates involving correlation variables The process of replacing a nested query by join/semijoin is called decorrelation groupby <pre><code>select name from instructor\n    where 1 &lt; (select count(*) from teaches where\n        instructor.ID = teaches.ID and teaches.year = 2022);\n</code></pre> \\(\\Pi_{name}(instructor\\ltimes_{instructor.ID = TID \\wedge 1&lt;cnt(ID\\ as\\ TID\\ \\gamma count(*)\\ as\\ cnt)}(\\sigma_{teaches.year = 2022}(teaches))))\\)</p>"},{"location":"sp25/db/note/#166-materialized-views","title":"16.6 Materialized Views","text":"<p><pre><code>create view department_total_salary(dept_name,total_salary) as \nselect dept_name,sum(salary)\nfrom instructor\ngroup by dept_name;\n</code></pre> maintenance 1.recomputation 2.incremental view maintenance  </p>"},{"location":"sp25/db/note/#join_1","title":"Join","text":"<p>Consider a view \\(v = r \\bowtie s\\) and an update on r \\(r^{new} \\bowtie s = (r^{old} \\cup i_r)\\bowtie s = (r^{old}\\bowtie s)\\cup(i_r \\bowtie s)\\) \\(v^{new} = v^{old}\\cup(i_r \\bowtie s)\\) For deletion,\\(v^{new} = v^{old} - (d_r \\bowtie s)\\) </p>"},{"location":"sp25/db/note/#selection-and-projection","title":"Selection and projection","text":"<p>Consider a view \\(v = \\sigma_\\theta(r)\\) \\(v^{new} = v^{old}\\cup \\sigma_\\theta(i_r)\\) R = (A,B),r(R) = {(a,2),(a,3)} \\(\\Pi_A(r) = (a)\\) For each tuple in the projection,keep a count of how many times it was derived  </p>"},{"location":"sp25/db/note/#aggregation","title":"Aggregation","text":"<p>average salary:keep a count of teacher_num search again for some min and max median,variance(\u65b9\u5dee)  </p>"},{"location":"sp25/db/note/#materialized-view-selection","title":"Materialized view selection","text":"<p>Based on typical system workload  </p>"},{"location":"sp25/db/note/#advanced-topics-in-query-optimation","title":"Advanced topics in query optimation","text":"<p>Top-K queries  </p>"},{"location":"sp25/db/note/#chap-17-transactions","title":"Chap 17 Transactions","text":""},{"location":"sp25/db/note/#171-transaction-concept","title":"17.1 Transaction Concept","text":"<p>[Definition] A Transaction is a unit of program execution that accesses and probably updates various data items major issues to deal with:failure(recovery) &amp; concurrent execution(concurrency control) ACID:atomicity,consistency,isolation,durability [Definition] transaction model:data access operations:read(X),write(X) Fund transfer <pre><code>read(A);\nA:= A - 50;\nwrite(A);\n------------\nread(B);\nB:= B - 50;\nwrite(B);\n</code></pre> Atomicity:updates of a partially executed transaction(finish <code>write(A)</code> but not <code>write(B)</code>) are not reflected in the database Durability:once the user has been notified that the transaction has completed,the updates must persist despite failures Consistency:the sum of A &amp; B unchanged     explicit(\u663e\u5f0f) integrity constraints:primary keys,foreign keys     implicit(\u9690\u5f0f) integrity constraints:sum of all accounts - sum of loan accounts = cash-in-hand     temporarily inconsistent during execution but the database consistency after completion Isolation:another transaction is abandoned if the database is partially updated     solution:serially(\u4e32\u884c),concurrency control  </p>"},{"location":"sp25/db/note/#172-transaction-states","title":"17.2 Transaction States","text":"<ul> <li>Active:initial state,executing  </li> <li>Partially committed:after final statement executed  </li> <li>Failed  </li> <li>Aborted:transaction rolled back and database restored to its initial state,then restart the transaction or kill  </li> <li>Committed  </li> </ul>"},{"location":"sp25/db/note/#173-concurrent-execution","title":"17.3 Concurrent Execution","text":"<p>Advantages of concurrent execution:increased processor and disk utilization,reduced average response time(see OS) Problems: 1.Lost Update:\u4fee\u6539\u4e22\u5931read before commit 2.Dirty Read:\u8bfb\u810f\u6570\u636eread before rollback   3.Unrepeatable Read:\u4e0d\u53ef\u91cd\u590d\u8bfbread value changed in one transaction  4.Phontom Problem:\u5e7d\u7075\u95ee\u9898query result changed in one transaction </p>"},{"location":"sp25/db/note/#schedules","title":"Schedules","text":"<p>T1:transfer $50 from A to B,T2:transfer 10% of the balance from A to B [Schedule1] serial schedule:T1 is followed by T2 [Schedule2] serial schedule:T2 is followed by T1 [Schedule3] cross schedule(equivalent to Schedule1)  the sum A+B is preserved [Schedule4] A+B not preserved  </p>"},{"location":"sp25/db/note/#174-serializability","title":"17.4 Serializability(\u53ef\u4e32\u884c\u5316)","text":"<p>A schedule is serializability if it is equivalent to a serial schedule  </p>"},{"location":"sp25/db/note/#conflict-serializablility","title":"Conflict serializablility","text":"<p>[Definition] conflicting instructions:Instruction Ii and Ij and transaction Ti and Tj two instructions are conflicing iff there exists some item Q accessed by both Ii and Ij and at least one of them wrote Q a conflict forces a temporal order [Definition] conflict equivalent:a schedule S can be transformed into S' by a series of swaps of non-conflicting instructions S is conflict serializable if it is conflict equivalent to a serial schedule  </p>"},{"location":"sp25/db/note/#testing","title":"Testing","text":"<p>Procedence graph(\u524d\u9a71\u56fe):vertex = transaction,edge = conflict,arrow = early access -&gt; late access [Theorem] A schedule is conflict serializable iff its precedence graph is acyclic(\u65e0\u73af\u7684)  Cycle-detection algorithm:T = O(n<sub>2</sub>) or O(n + e) serializability order obtained by topological sorting </p>"},{"location":"sp25/db/note/#view-serializablity","title":"View serializablity","text":"<p>(weaker than conflict serializability) [Definition] view equivalent:two schedules S and S' for the same transaction are view equivalent if for each data item Q 1. In S,if Ti reads the initial value of Q then in S',Ti must also read the initial value of Q 2. In S,if Ti executes <code>read(Q)</code> and that value was produce by Tj,then in S' ,Ti must read the value of Q that was produced by the same <code>write(Q)</code> of Tj 3. In S,if Ti writes the final value of Q then in S',Ti must also writes the final value of Q  </p> <p>S is view serializable if it is view equivalent to a serial schedule Every conflicting serializable schedule is view serializable but conversely is not  </p>"},{"location":"sp25/db/note/#other-notions","title":"Other notions","text":"<p>If a schedule is not view serializable(of course not conflict serializable too),it can still be a serializable schedule (because of operation commutative,...)  </p>"},{"location":"sp25/db/note/#175-recoverablility","title":"17.5 Recoverablility","text":"<p>[Definition] recoverable schedule:If Tj reads a data previously written by Ti,then the commit operation of Ti must appear before the commit operation of Tj  [Definition] cascading rollback(\u7ea7\u8054\u56de\u6eda):A single transaction failure leads to a series of transaction rollbacks A waste of system resources! [Modification] cascadeless schedule:for each transaction pair Ti and Tj,if Tj reads a data item previously written by Ti,then the commit operation of Ti must appear before the read operation of Tj(avoid dirty read) A trade-off:Throughput of transaction decreases  </p>"},{"location":"sp25/db/note/#176-isolation-level","title":"17.6 Isolation level","text":"<p>Weak-level consistency:allowing schedules being not serializble \u2014\u2014 read-only transaction,database statistics  </p> <ul> <li>Serializable  </li> <li>Repeatable Read(ignore Phontom Problem)  </li> <li>Read Committed(ignore Unrepeatable Read)  </li> <li>Read Uncommitted(ignore Dirty Read)  </li> </ul> <p><pre><code>set transaction isolation level serializable\n</code></pre> <pre><code>connection.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE)\n</code></pre></p>"},{"location":"sp25/db/note/#chap-18-concurrency-control","title":"Chap 18 Concurrency Control","text":""},{"location":"sp25/db/note/#181-lock-based-protocols","title":"18.1 Lock-Based Protocols","text":"<p>exclusive(X):data can be both read and written shared(S):data can be only read Lock compatibility matrix\u76f8\u5bb9\u9501\u77e9\u9635: Any number of transactions can hold S locks but if any transaction holds X lock on an item no other transactions can hold the lock,they can only wait  </p>"},{"location":"sp25/db/note/#the-two-phase-locking-protocol","title":"The Two-Phase Locking Protocol","text":"<p>Phase 1:Growing Phase(only obtain locks) lock point:items all got its locks Phase 2:Shrinking Phase(only release locks) <pre><code>lock-S(A);\nread(A);\nlock-S(B);//lock point\nread(B);\nunlock(A);\nunlock(B);\ndisplay(A+B);\n</code></pre> [Theorem] Two-Phase Locking Protocol assures serailizability Transactions can be serialized in the order of their lock points  </p>"},{"location":"sp25/db/note/#proof-by-contradiction","title":"Proof by Contradiction","text":"<p>Using precedence graph,if there's an edge from Ti to Tj,then LP(Ti) &lt; LP(Tj)(LP:Lock point),because in 2PL, we must lock before access If the precedence graph has a cycle(e.g. T1 -&gt; T2 -&gt; T3 -&gt; T1) Then LP(T1) &lt; LP(T2) &lt; LP(T3) &lt; LP(T1),contradiction! </p>"},{"location":"sp25/db/note/#proof-by-induction","title":"Proof by Induction","text":"<p>Let Ti be the transaction with minimum lock point(LP) [\u53cd\u8bc1] If there is an operation OPj of another transaction Tj that blocks an operation OPi of Ti Then LP(Tj) &lt; LP(Ti),contradiction! </p>"},{"location":"sp25/db/note/#extension","title":"Extension","text":"<p>[Problem] 2PL is not recoverable(dirty read) Strict 2PL:a transaction must hold all its X locks until it commits/aborts [Theorem] Strict 2PL is recoverable and avoids cascading rollbacks Rigorous(\u5f3a) 2PL:a transaction must hold all its locks(X&amp;S) until it commits/aborts Transactions can be serialized in the order of their commits  </p>"},{"location":"sp25/db/note/#exercise","title":"Exercise","text":"<p>[Theorem] 2PL \u662f\u53ef\u4e32\u884c\u7684\u5145\u5206\u975e\u5fc5\u8981\u6761\u4ef6  </p> T1 T2 T3 write C write C write A write A <p>T3 -&gt; T1 -&gt; T2  </p> T1 T2 T3 lock-X(C) write C unlock(C) lock-X(C) write C unlock(C) lock-X(A) write A unlock(A) lock-X(A) write A unlock(A) <p>T1\u6ca1\u6709\u9075\u5b882PL\u4f46\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u7684  </p>"},{"location":"sp25/db/note/#lock-conversions","title":"Lock Conversions","text":"<p>potential update:S OR X First Phase(lock upgrade):lock-U(default S can be converted to X) Second Phase(lock downgrade):convert X to S </p>"},{"location":"sp25/db/note/#automatic-lock-acquisition","title":"Automatic Lock Acquisition","text":"<p><pre><code>// read(D)\nif Ti has a lock on D\n    then\n        read(D);\n    else \n        if necessary wait until no other transactions has X on D\n        grant Ti S on D;\n        read(D);\n</code></pre> <pre><code>// write(D)\nif Ti has X on D\n    then\n        write(D);\n    else\n        if necessary wait until no other transactions has any lock on D\n        if Ti has S on D\n            then\n                upgrade lock on D to X\n        else\n            grant Ti X on D\n        write(D);\n</code></pre></p>"},{"location":"sp25/db/note/#implementation-lock-manager","title":"Implementation \u2014\u2014 lock manager","text":"<p>The lock manager maintains a data structure called a lock table to record granted locks and pending requests lock table in-memory hash table  \u5bf9Data123(T1,T8:S,T2:wait for X) another data structure for transaction-lock mapping  </p>"},{"location":"sp25/db/note/#182-deadlock-handling","title":"18.2 Deadlock handling","text":"<p><pre><code>T1                  T2\nlock-X on A \nwrite(A)\n                    lock-X on B\n                    write(B)\n                    wait for lock-X on A\nwait for lock-X on B\n</code></pre> 2PL cannot avoid deadlock deadlock prevention:predeclaration,impose partial ordering(graph-based protocol),timeout-based scheme(giveup if wait too long,but causing starvation) deadlock detection:whether wait-for graph(see sys2-OS) has a cycle deadlock recovery:kill the minimum-cost victim(nearest rollback instead of total rollback),include the number of rollbacks in the cost factor to avoid starvation  </p>"},{"location":"sp25/db/note/#183-graph-based-protocols","title":"18.3 Graph-Based Protocols","text":"<p>Impose a partial ordering on set D = {d1,d2,...,dn} If di -&gt; dj,then transaction must access di before dj database graph:directed acyclic graph Tree Protocol 1.Only exclusive locks are allowed 2.The first lock by Ti may be on any data item but a data Q can be locked only if its parent is locked beforehand 3.Data items can be unlocked at any time(not 2PL) 4.A data item has been locked and unlocked by Ti cannot be locked later [Theorem] Tree Protocol assures conflict serializability and avoids deadlock but does not guarantee recoverability or cascade freedom(dirty read)  </p>"},{"location":"sp25/db/note/#184-multiple-granularity","title":"18.4 Multiple Granularity(\u591a\u7c92\u5ea6)","text":"<p>A hierarchy of data granularity,graphically represented as a tree fine granularity(lower in tree),coarse granularity(higher in tree) from root to leaf:database -&gt; area -&gt; file(table) -&gt; record -&gt; attribute Intention Lock Modes intention-shared(IS):indicate the intention to have an S lock on the node's descendent intention-exclusive(IX) shared and intention-exclusion(SIX) \u5bf9table\u52a0\u4e0aS/X\u9501\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u5bf9\u6bcf\u4e2arecord\u52a0\u9501 Compatibility Matrix  \u610f\u5411\u9501\u4e4b\u95f4\u4e0d\u76f8\u4e92\u51b2\u7a81(IX\u4e0eSIX\u51b2\u7a81\uff0c\u5b9e\u9645\u4e0a\u662fIX\u4e0eS\u51b2\u7a81)  lock from root to leaf,unlock from leaf to root  </p>"},{"location":"sp25/db/note/#185-insert-and-delete-operations","title":"18.5 Insert and Delete Operations","text":"<p>using X lock,but lead to phantom phenomenon(non-serializable) Only lock the tuple is not enough  </p>"},{"location":"sp25/db/note/#phantom-prevention","title":"Phantom Prevention","text":""},{"location":"sp25/db/note/#index-locking-protocol","title":"Index Locking Protocol","text":"<p>A transaction Ti that performs a lookup must lock all the index leaf nodes on S A transaction Ti that performs inserts,updates or deletes on relation r must lock indices to r on X [Problem] requires locking the entire leaf  </p>"},{"location":"sp25/db/note/#next-key-locking","title":"Next-Key Locking","text":"<p>[Definition] lock all values that satisfy index lookup and the next key value in index  lock the next key value to ensure that range queries will conflict with insert/delete/update(\u8ba9\u51b2\u7a81\u5728\u503c\u4e0a\u8868\u73b0\u51fa\u6765)  </p>"},{"location":"sp25/db/note/#186-multiversion-2pl","title":"18.6 Multiversion 2PL","text":"<p>Instead of modifying,we use versions,read operation just need to select an appropriate version <pre><code>select transaction read only;\nselect transaction read write;\n</code></pre> update transaction: (1)read:obtain an S lock and read the latest version (2)write:obtain an X lock and create a new version(timestamp \u221e) (3)commit:(global)version = ts-counter + 1;ts-counter++;unlock; read-only transaction:return the version with the largest timestamp &lt;= TS(Ti)  </p>"},{"location":"sp25/db/note/#chap-19-recovery-system","title":"Chap 19 Recovery System","text":""},{"location":"sp25/db/note/#191-failure-classification","title":"19.1 Failure Classification","text":"<p>Database application:transaction failure(logical errors,system errors) DBMS/OS:system crash(power failure,software failure,hardware failure) Database:disk failure(head crash\u78c1\u5934\u78b0\u649e,other disk failure)  </p>"},{"location":"sp25/db/note/#192-storage-structure","title":"19.2 Storage Structure","text":"<p>Volatile storage:cannot survive from system crashes Nonvolatile storage:survive system crashes but may still fail Stable storage:survives all failures(mythical,implement by maintaining multiple copies on distinct nonvolatile media)  </p>"},{"location":"sp25/db/note/#193-log-based-recovery","title":"19.3 Log-Based Recovery","text":"<p>Atomicity:undo Durability:redo Recovery Algorithm:normal transaction processing(keep info),after failure assume strict-2PL ensures no dirty read Idempotent(\u5e42\u7b49\u6027):A recovery algorithm is idempotent if executing it several times gives the same result as executing it once  </p>"},{"location":"sp25/db/note/#log-records","title":"Log Records","text":"<p>log is kept on stable storage start: update(write(X)):(V1:value before update,V2:value after update) commit: abort: Redo:repeating history -&gt; undo list(executing transactions when crash)  Only undo Line 8,12 by taking advantage of pointers [Problem] processing the entire log is time-consuming [Solution] checkpoints:assert the formal operations have written to database write ahead logging principle(WAL)\u4f18\u5148\u65e5\u5fd7\u8bb0\u5f55\u539f\u5219 1.output all log records (from log buffer) to stable storage 2.output all modified buffer blocks to the disk 3.write  to stable storage(L:active transaction list) note:all updates while checkpointing redo from checkpoint  [Problem] Frequent checkpoints and updates cannot execute while checkpointing modern design:checkpoint when log record reach a number limit"},{"location":"sp25/db/note/#log-record-buffering","title":"Log Record Buffering","text":"<p>Log records are output to stable storage only if a block of log records is full or a log force operation is executed  Group commit:several log records can be output using a single output operation(may lose some operations)  </p>"},{"location":"sp25/db/note/#fuzzy-checkpointing","title":"Fuzzy Checkpointing","text":"<p>allow updates happen during checkpointing 1.temporarily stop all updates 2.write  and force log 3.list M of modified buffer blocks(dirty data)(COW/MVCC/double dirty mark) 4.permit transactions 5.output to disk to all modified buffer blocks(WAL) 6.store a pointer to the checkpoint record in a fixed position last_checkpoint on disk(update the pointer only after dirty data written to disk) start recovering from the checkpoint pointed by last_checkpoint"},{"location":"sp25/db/note/#non-volatile-storage","title":"Non-volatile Storage","text":"<p>Periodically dump(\u8f6c\u5b58) the entire content of database to stable storage by using checkpoint recover:reset and undo from dump fuzzy dump &amp; online dump</p>"},{"location":"sp25/db/note/#194-recovery-with-early-lock-release-and-logical-undo-operations","title":"19.4 Recovery with early lock release and logical undo operations(\u53cd\u64cd\u4f5c)","text":"<p> Before operation end,use physical undo After operation end,lock has been released,use logical undo according to the info stored in"},{"location":"sp25/db/note/#failure-recovery","title":"Failure Recovery","text":"<p>Redo from the nearest checkpoint Undo the operations in undo list </p> <p>\u533a\u5206logical\u4e0ephysical undo</p>"},{"location":"sp25/db/note/#195-aries-recovery-algorithm","title":"19.5 ARIES Recovery Algorithm","text":"<p>SOTA [Structure] log sequence number(LSN),page LSN(last modify LSN),dirty page table recover if pageLSN in buffer pool &gt; pageLSN on disk RecLSN:the first LSN modify the page after page LSN on disk </p>"},{"location":"sp25/db/note/#recovery","title":"Recovery","text":"<p>3 Phase:analyze,redo &amp; undo Analysis pass 1.start from the last checkpoint record     1.1read dirty page table     1.2set RedoLSN = min of RecLSNs     1.3set undo-list = list of transactions in checkpoint log record     1.4read LSN of the last log record for transactions in undo-list from checkpoint log record 2.scan forward from checkpoint     2.1add undo-list if log record transaction not in     2.2for update record,if page not in dirty page table,add with RecLSN set to LSN;if page in dirty page table,update PageLSN set to LSN;     2.3for transaction end record,delete from undo-list RedoLSN:where to start redo RecLSN:minimize redo work undo-list:all the transactions on undo-list should be rolled back Redo pass Scan forward from RedoLSN     for update record,if page not in dirty page table or LSN &lt; RecLSN,skip     otherwise fetch the page from disk,if pageLSN on disk &lt; LSN,redo,else skip too Undo pass Generate CLR(Compensation Log Record) Set UndoNextLSN of the CLR to the prevLSN value of the update log record </p>"},{"location":"sp25/db/homework/week4/answer/","title":"Answer","text":"<p>"},{"location":"sp25/db/homework/week4/answer/#chap-4-intermediate-sql-and-chap-5-advanced-sql","title":"Chap 4 Intermediate SQL and Chap 5 Advanced SQL","text":""},{"location":"sp25/db/homework/week4/answer/#3230105697","title":"\u6768\u4ebf\u916c 3230105697","text":""},{"location":"sp25/db/homework/week4/answer/#47-consider-the-employee-database-of-figure-412-give-an-sql-ddl-definition-of-this-database-identify-referential-integrity-constraints-that-should-hold-and-include-them-in-the-ddl-definition","title":"4.7 Consider the employee database of Figure 4.12. Give an SQL DDL definition of this database. Identify referential-integrity constraints that should hold, and include them in the DDL definition.","text":"<p> <pre><code>CREATE TABLE employee (\n    ID INT PRIMARY KEY,           \n    person_name VARCHAR(40),     \n    street VARCHAR(40),          \n    city VARCHAR(40)           \n);\nCREATE TABLE works (\n    ID INT PRIMARY KEY,              \n    company_name VARCHAR(40),       \n    salary DECIMAL(10, 2), \n    FOREIGN KEY (ID) REFERENCES employee(ID) \n        ON DELETE CASCADE        \n        ON UPDATE CASCADE,             \n    FOREIGN KEY (company_name) REFERENCES company(company_name) \n        ON DELETE SET NULL           \n        ON UPDATE CASCADE          \n);\nCREATE TABLE company (\n    company_name VARCHAR(40) PRIMARY KEY,  \n    city VARCHAR(40)                     \n);\nCREATE TABLE manages (\n    ID INT PRIMARY KEY,                              \n    manager_id INT,                         \n    FOREIGN KEY (ID) REFERENCES employee(ID) \n        ON DELETE CASCADE               \n        ON UPDATE CASCADE,           \n);\n</code></pre>"},{"location":"sp25/db/homework/week4/answer/#418-for-the-database-of-figure-412-write-a-query-to-find-the-id-of-each-employee-with-no-manager-note-that-an-employee-may-simply-have-no-manager-listed-or-may-have-a-null-manager-write-your-query-using-an-outer-join-and-then-write-it-again-using-no-outer-join-at-all","title":"4.18 For the database of Figure 4.12, write a query to find the ID of each employee with no manager. Note that an employee may simply have no manager listed or may have a null manager. Write your query using an outer join and then write it again using no outer join at all.","text":"<p><pre><code>-- Using outer join\nSELECT e.ID\nFROM employee e LEFT OUTER JOIN manages m ON e.ID = m.ID\nWHERE m.manager_id IS NULL;\n\n-- No outer join\nSELECT e.ID\nFROM employee e\nWHERE e.ID NOT IN (\n    SELECT m.ID FROM manages m WHERE m.manager_id IS NOT NULL\n);\n</code></pre>"},{"location":"sp25/db/homework/week4/answer/#420-show-how-to-define-a-view-tot_credits-year-num_credits-giving-the-total-number-of-credits-taken-in-each-year","title":"4.20 Show how to define a view tot_credits (year, num_credits), giving the total number of credits taken in each year.","text":"<p><pre><code>CREATE VIEW tot_credits(year, num_credits) AS\n(\n    SELECT year,sum(credits)\n    FROM takes NATURAL JOIN courses\n    GROUP BY year;\n)\n</code></pre>"},{"location":"sp25/db/homework/week4/answer/#51-consider-the-following-relations-for-a-company-database","title":"5.1 Consider the following relations for a company database:","text":"<p>\u2022 emp (ename, dname, salary) \u2022 mgr (ename, mname)</p>"},{"location":"sp25/db/homework/week4/answer/#and-the-java-code-in-figure-520-which-uses-the-jdbc-api-assume-that-the-userid-password-machine-name-etc-are-all-okay-describe-in-concise-english-what-the-java-program-does-that-is-produce-an-english-sentence-like-it-finds-the-manager-of-the-toy-department-not-a-line-by-line-description-of-what-each-java-statement-does","title":"and the Java code in Figure 5.20, which uses the JDBC API. Assume that the userid, password, machine name, etc. are all okay. Describe in concise English what the Java program does. (That is, produce an English sentence like \u201cIt finds the manager of the toy department,\u201d not a line-by-line description of what each Java statement does.)","text":"<p> <p>It finds the name of the manager of the employee whose name is \"dog\" and the name of the manager of the manager,etc. until the top manager who has no manager.  </p>"},{"location":"sp25/db/homework/week4/answer/#57-consider-the-bank-database-of-figure-521-write-an-sql-trigger-to-carry-out-the-following-action-on-delete-of-an-account-for-each-customer-owner-of-the-account-check-if-the-owner-has-any-remaining-accounts-and-if-she-does-not-delete-her-from-the-depositor-relation","title":"5.7 Consider the bank database of Figure 5.21. Write an SQL trigger to carry out the following action: On delete of an account, for each customer-owner of the account, check if the owner has any remaining accounts, and if she does not, delete her from the depositor relation.","text":"<p> <pre><code>create trigger remaining_accounts_trigger\nafter delete on account\nreference old row as orow\nfor each row\nwhen not exists(\n    select customer_name from customer\n    where customer_name = orow.customer_name\n    )\nbegin\n    delete from depositor \n    where customer_name = orow.customer_name\nend;\n</code></pre></p>"},{"location":"sp25/db/homework/week5/6.24/","title":"6.24","text":""},{"location":"sp25/db/homework/week5/6.24/#relational-schemas","title":"Relational Schemas","text":"<p><pre><code>customer(ID,name) primary key ID;\nflight(flight_ID,time,departure,arrival) primary key flight_ID;\nseat(flight_ID,seat_no) foreign key flight_ID references flight;\nstatus(flight_ID,current_status) foreign key flight_ID references flight;\nfuture(flight_ID,time,routing) foreign key flight_ID references flight;\n</code></pre> <pre><code>reservation(\n    ID,\n    name,\n    flight_ID,\n    time,\n    departure,\n    arrival,\n    primary key ID,flight_ID\n);\nselect_seat\n(\n    ID,\n    seat_no,\n    primary key ID\n);\nassignment(\n    flight_ID,\n    seat_no,\n    foreign key flight_ID references flight,\n    foreign key seat_no references seat\n);\nrecord(\n    flight_ID,\n    current_status,\n    foreign key flight_ID references flight,\n    foreign key current_status references status\n);\nschedule(\n    flight_ID,\n    time,\n    routing,\n    foreign key flight_ID references flight,\n    foreign key time references future\n);\n</code></pre></p>"},{"location":"sp25/db/report/lab2/lab2/","title":"Lab2","text":"\u6570\u636e\u5e93\u7cfb\u7edf Lab2:SQL\u6570\u636e\u5b9a\u4e49\u548c\u64cd\u4f5c       \u6768\u4ebf\u916c 3230105697 2025-2-21 - 2025-"},{"location":"sp25/db/report/lab2/lab2/#1","title":"1.\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u638c\u63e1\u5173\u7cfb\u6570\u636e\u5e93\u8bed\u8a00SQL\u7684\u4f7f\u7528  </li> <li>\u4f7f\u6240\u6709\u7684SQL\u4f5c\u4e1a\u90fd\u80fd\u4e0a\u673a\u901a\u8fc7  </li> </ul>"},{"location":"sp25/db/report/lab2/lab2/#2","title":"2.\u5b9a\u4e49\u5217\u8868","text":"<p>(1)\u521b\u5efa\u4e66book\u8868  \u5c06bno\u8bbe\u7f6e\u4e3a\u4e3b\u952e\u5e76\u4fdd\u5b58  </p> <p>(2)\u521b\u5efa\u501f\u4e66\u5361card\u8868  <pre><code>CREATE TABLE card( //CREATE\u51fd\u6570\u521b\u5efa\u65b0\u8868\n    cno char(7) NOT NULL,--name type NOT NULL\u521b\u5efa\u4e0d\u53ef\u4e3a\u7a7a\u7684\u5217\n    name varchar(10) NOT NULL,\n    department varchar(40),\n    type char(1) CHECK (type in('T','G','U','O')),--CHECK(type in())\u8bbe\u7f6e\u5206\u7c7b\u9009\u9879\n    CONSTRAINT PK_card PRIMARY key(cno)--CONSTRAINT\u8bbe\u7f6e\u4e3b\u952e\n);\n</code></pre></p> <p>(3)\u521b\u5efa\u501f\u4e66\u8bb0\u5f55borrow\u8868 <pre><code>CREATE TABLE borrow(\n    cno char(7) NOT NULL,\n    bno char(8) NOT NULL,\n    borrow_date datetime NOT NULL,\n    return_date datetime NOT NULL,\n    -- CONSTRAINT PK_borrow PRIMARY key(cno,bno) \u4e0d\u8bbe\u7f6e\u4e3b\u952e\uff0c\u5426\u5219\u65e0\u6cd5\u91cd\u590d\u63d2\u5165\n);\n</code></pre></p>"},{"location":"sp25/db/report/lab2/lab2/#3100","title":"3.\u521b\u5efa\u6570\u636e\u5e93\u8868\uff0c\u5e76\u8f93\u5165\u5fc5\u8981\u7684\u6837\u672c\u6570\u636e(&gt;100\u79cd)","text":"<p><pre><code>INSERT INTO book (bno, category, title, press, year, author, price, total, stock)\nVALUES\n('','','','','','','','',''),\n...\n</code></pre> \u4f7f\u7528LLM\u751f\u6210\u6570\u636e\uff0c\u5bf9\u4e09\u5f20\u8868\u5404\u63d2\u5165100\u79cd\u6570\u636e <pre><code>select count(*) as row_count from &lt;table&gt;\n-- \u786e\u8ba4\u63d2\u5165100\u79cd\u6837\u672c\u6570\u636e\n</code></pre></p>"},{"location":"sp25/db/report/lab2/lab2/#4sql","title":"4.\u7528SQL\u5b9e\u73b0\u4ee5\u4e0b\u67e5\u8be2","text":"<ol> <li>\u6c42\u603b\u85cf\u4e66\u91cf\u3001\u85cf\u4e66\u603b\u91d1\u989d\uff0c\u603b\u5e93\u5b58\u518c\u6570\u3001\u6700\u9ad8\u4ef7\u3001\u6700\u4f4e\u4ef7\u3002 </li> <li>\u5217\u51fa\u85cf\u4e66\u572810\u672c\u4ee5\u4e0a\u7684\u4e66\uff08\u4e66\u540d\u3001\u4f5c\u8005\u3001\u51fa\u7248\u793e\u3001\u5e74\u4efd\uff0c\u5e93\u5b58\u91cf\uff09\u3002 </li> <li> <p>\u54ea\u4e9b\u51fa\u7248\u793e\u7684\u85cf\u4e66\u79cd\u7c7b\u6570\u8d85\u8fc7100\u79cd\u3002 \u7531\u4e8e\u63d2\u5165\u6570\u636e\u6570\u91cf\u6709\u9650\uff0c\u8d85\u8fc7100\u79cd\u7684\u51fa\u7248\u793e\u6570\u91cf\u4e3a0\uff0c\u7528\u8d85\u8fc71\u79cd\u7684\u51fa\u7248\u793e\u68c0\u6d4b\u8bed\u53e5\u6b63\u786e\u6027  </p> </li> <li> <p>\u76ee\u524d\u5b9e\u9645\u5df2\u501f\u51fa\u591a\u5c11\u518c\u4e66\uff1f    \u5047\u8bbe\u85cf\u4e66\u91cf - \u5e93\u5b58\u91cf = \u501f\u51fa\u91cf  </p> </li> <li> <p>\u5217\u51fa\u51fa\u7248\u5e74\u4efd\u6700\u4e45\u8fdc\u7684\u4e66\u3002 </p> </li> <li> <p>\u201c\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406\u6559\u7a0b\uff0c\u738b\u73ca\u7f16\u8457\uff0c\u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e\uff0c1998\u5e74\u51fa\u7248\u201d\u8fd8\u6709\u51e0\u672c\uff1f  </p> </li> <li> <p>\u54ea\u672c\u501f\u4e66\u8bc1\u672a\u5f52\u8fd8\u7684\u56fe\u4e66\u6700\u591a\uff1f   note:sql server\u8981\u6c42\u5b50\u67e5\u8be2\u5fc5\u987b\u6709\u522b\u540d</p> </li> <li> <p>\u6c42\u5e73\u5747\u6bcf\u672c\u501f\u4e66\u8bc1\u7684\u501f\u4e66\u518c\u6570\u3002  </p> </li> <li> <p>\u54ea\u4e2a\u7cfb\u7684\u540c\u5b66\u5e73\u5747\u501f\u4e66\u518c\u6570\u6700\u591a\uff1f  <pre><code>select department from\n(\n    select \n        card.department, \n        count(card.cno) as student_number, \n        count(case when borrow.cno is not null then 1 end) as borrow_number,\n        cast(count(case when borrow.cno is not null then 1 end) as float) / \n        nullif(count(card.cno), 0) as average\n    from\n        card\n    left join\n        borrow on card.cno = borrow.cno\n    group by \n        card.department\n        ) \nas subquery\nwhere average = (select max(average) from \n(\n    select \n        cast(count(case when borrow.cno is not null then 1 end) as float) / \n        nullif(count(card.cno), 0) as average\n    from\n        card\n    left join\n        borrow on card.cno = borrow.cno\n    group by \n        card.department\n) as inner_query\n);\n</code></pre></p> </li> <li> <p>\u6700\u8fd1\u4e24\u5e74\u90fd\u672a\u88ab\u501f\u8fc7\u7684\u4e66\u3002 </p> </li> <li> <p>\u5217\u51fa\u90a3\u4e9b\u501f\u4e86\u56fe\u4e66\u903e\u671f\u672a\u5f52\u8fd8\u7684\u501f\u4e66\u8bc1\u53f7\u548c\u56fe\u4e66\u540d\uff0c\u5e76\u7b97\u51fa\u76f8\u5e94\u7684\u7f5a\u91d1\uff08\u5047\u8bbe\u7f5a\u91d1\u6309\u4e66\u4ef7\u76840.1\uff05/\u6bcf\u5929 \u8ba1\u7b97\uff09\u3002 \u8bbe\u7f6e\u4ece\u8fd8\u4e66\u65e5\u671f - \u7ed3\u675f\u65e5\u671f\u8d85\u8fc721\u5929\u4e3a\u903e\u671f </p> </li> <li> <p>\u5217\u51fa\u4ece\u672a\u501f\u8fc7\u4e66\u7684\u501f\u4e66\u8bc1\u3002 </p> </li> <li> <p>\u5217\u51fa\u53bb\u5e74\u51fa\u501f\u6570\u91cf\u6700\u591a\u76845\u79cd\u56fe\u4e66\u3002 </p> </li> <li> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6bcf\u79cd\u56fe\u4e66\u7684\u603b\u85cf\u91cf\u4e0e\u5e93\u5b58\u91cf\u4e4b\u5dee\u5e94\u7b49\u4e8e\u8be5\u56fe\u4e66\u501f\u51fa\u540e\u672a\u5f52\u8fd8\u7684\u6570\u91cf\uff0c\u5426\u5219\u662f\u4e00\u79cd\u5f02\u5e38\u60c5\u51b5\u3002\u8bf7\u627e\u51fa\u5b58\u5728\u8fd9\u79cd\u5f02\u5e38\u60c5\u51b5\u7684\u56fe\u4e66\u3002 </p> </li> </ol>"},{"location":"sp25/db/report/lab3/lab3/","title":"Lab3","text":"\u6570\u636e\u5e93\u7cfb\u7edf Lab3       \u6768\u4ebf\u916c 3230105697 2025-3-14"},{"location":"sp25/db/report/lab3/lab3/#1","title":"1.\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u719f\u6089\u901a\u8fc7SQL\u8fdb\u884c\u6570\u636e\u5b8c\u6574\u6027\u63a7\u5236\u7684\u65b9\u6cd5\u3002</li> </ul>"},{"location":"sp25/db/report/lab3/lab3/#2","title":"2.\u5b9e\u9a8c\u5185\u5bb9","text":"<p>(1)\u521b\u5efabook\u8868 \u4e3b\u952ebno \u5df2\u5728lab2\u4e2d\u5b8c\u6210 (2)\u521b\u5efacard\u8868 \u4e3b\u952ecno \u5df2\u5728lab2\u4e2d\u5b8c\u6210 (3)\u521b\u5efaborrow\u8868 \u5916\u952e\uff1abno\uff0ccno\uff0c\u5206\u522b\u5bf9\u5e94book\u548ccard\u7684bno\u548ccno\uff0c\u540c\u65f6\u5916\u952e bno \u7ea7\u8054\u5220\u9664\uff0ccno \u7ea7\u8054\u66f4\u65b0 <pre><code>alter table borrow\nadd constraint fk_bno foreign key(bno) references book(bno)\non delete cascade;\n\nalter table borrow\nadd constraint fk_cno foreign key(cno) references card(cno)\non update cascade;\n</code></pre> (4)\u63d2\u5165\u57fa\u672c\u6570\u636e Book\u8868('10', '\u5fc3\u7406\u5b66','\u65b0\u7684\u4e16\u754c','\u6d59\u6c5f\u5927\u5b66',2002,'\u9ad8\u4e91\u9e4f',48.00,20,4); Card\u8868('zju1001','\u96f7\u950b','\u8ba1\u7b97\u673a','T'); Borrow\u8868('zju1001','10','2011-09-10','2012-2-23'); <pre><code>insert into book\nvalues('10', '\u5fc3\u7406\u5b66','\u65b0\u7684\u4e16\u754c','\u6d59\u6c5f\u5927\u5b66',2002,'\u9ad8\u4e91\u9e4f',48.00,20,4);\n\ninsert into card\nvalues('zju1001','\u96f7\u950b','\u8ba1\u7b97\u673a','T');\n\ninsert into borrow\nvalues('zju1001','10','2011-09-10','2012-2-23');\n</code></pre>  (5)\u5411book\u8868\uff0c\u518d\u6b21\u63d2\u5165\u4e00\u6761\u8bb0\u5f55\uff0c \u770b\u770b\u6570\u636e\u5e93\u7684\u63d0\u793a\uff0c\u63d0\u51fa\u53ef\u884c\u7684\u4fee\u6539\u65b9\u6848\u3002 ('10', '\u751f\u7269\u5b66','\u7269\u79cd\u8d77\u6e90','\u54c8\u4f5b\u5927\u5b66',2002,'Darwin',48.00,20,4) <pre><code>insert into book\nvalues('10', '\u751f\u7269\u5b66','\u7269\u79cd\u8d77\u6e90','\u54c8\u4f5b\u5927\u5b66',2002,'Darwin',48.00,20,4);\n</code></pre>  \u4e3b\u952ebno\u4e0d\u80fd\u91cd\u590d\uff0c\u4fee\u6539\uff1a\u5c06bno\u4fee\u6539\u4e3a\u4e0d\u91cd\u590d\u7684\u503c (6)\u5411card\u8868\u6dfb\u52a0\u4e00\u6761\u8bb0\u5f55\uff0c\u770b\u770b\u6570\u636e\u5e93\u7684\u63d0\u793a\uff0c\u5e76\u63d0\u51fa\u53ef\u884c\u7684\u4fee\u6539\u65b9\u6848\u3002 ('zju1002','\u4e1c\u91ce\u572d\u543e','\u5fc3\u7406\u5b66','K') <pre><code>insert into card\nvalues('zju1002','\u4e1c\u91ce\u572d\u543e','\u5fc3\u7406\u5b66','K');\n</code></pre>  \u7c7b\u578b'K'\u4e0d\u7b26\u5408\u5b9a\u4e49\u7684'T','G','U','O' \u4fee\u6539\uff1a\u5c06\u63d2\u5165\u503c\u7684\u7c7b\u578b\u66f4\u6539\u4e3a'T','G','U','O'\u4e2d\u7684\u4e00\u79cd\uff1b\u6216\u6dfb\u52a0'K'\u7c7b\u578b\u7684\u5b9a\u4e49 (7)\u5220\u9664card\u8868\u4e2d\u7684\u67d0\u6761\u8bb0\u5f55\uff0c\u89c2\u5bdf\u6570\u636e\u5e93\u7684\u63d0\u793a\u3002 <pre><code>delete from card\nwhere cno = 'zju1001';\n</code></pre>  cno\u662fborrow\u8868\u7684\u5916\u952e\uff0cborrow\u8868\u4e2d\u5b58\u5728<code>cno = 'zju1001'</code>\u7684\u503c \u56e0\u4e3a\u6ca1\u6709\u89c4\u5b9a\u5916\u952e\u5173\u8054\u503c\u5220\u9664\u7684\u65b9\u5f0f\u6240\u4ee5\u4e0d\u5141\u8bb8\u5220\u9664\u64cd\u4f5c (8)\u66f4\u65b0Book\u8868\u4e2d'\u65b0\u7684\u4e16\u754c'bno \u4e3a'100'\uff0c\u89c2\u5bdf\u6570\u636e\u5e93\u7684\u63d0\u793a\u3002 <pre><code>update book\nset bno = '100'\nwhere title = '\u65b0\u7684\u4e16\u754c';\n</code></pre>  \u7c7b\u4f3c(7),bno\u662fborrow\u8868\u7684\u5916\u952e\uff0cborrow\u8868\u4e2d\u5b58\u5728<code>bno = '100'</code>\u7684\u503c \u56e0\u4e3a\u6ca1\u6709\u89c4\u5b9a\u5916\u952e\u5173\u8054\u503c\u66f4\u65b0\u7684\u65b9\u5f0f\u6240\u4ee5\u4e0d\u5141\u8bb8\u66f4\u65b0\u64cd\u4f5c (9)\u7f16\u5199\u89e6\u53d1\u5668    \u68c0\u67e5\u4e00\u4e2a\u501f\u4e66\u8bc1\u4e0d\u80fd\u540c\u65f6\u501f\u4e09\u672c\u4e66\uff08\u7b80\u5316\u4e00\u70b9\uff0c\u8ba4\u4e3a\u501f\u4e66\u8bb0\u5f55\u4e2d\u6709\u8bb0\u5f55\u5373\u4e3a\u501f\u4e86\u4e66\uff09\u3002 \u53c2\u8003\uff1aPPT4.35 <pre><code>create trigger overdraft_trigger on borrow for insert\nas begin\n    if(select count(*) from borrow where cno in (select cno from inserted)) &gt;= 3\n    begin\n        print '\u501f\u4e66\u8bc1\u5df2\u7ecf\u501f\u4e86\u4e09\u672c\u4e66\uff0c\u4e0d\u80fd\u518d\u501f\u4e66\u3002';\n        rollback transaction; \n    end\nend\n</code></pre>  (10)\u5b9e\u9a8c\u603b\u7ed3\u53ca\u601d\u8003 \u672c\u6b21\u5b9e\u9a8c\u6d4b\u8bd5\u4e86\u4e00\u4e9bsql\u4e2d\u4e0d\u5408\u6cd5\u7684\u64cd\u4f5c\uff0c\u5982\u63d2\u5165\u672a\u5b9a\u4e49\u7684\u7c7b\u578b\uff0c\u8fdb\u884c\u672a\u5b9a\u4e49\u7684\u5220\u9664\u3001\u66f4\u65b0\uff0c\u5e76\u5c1d\u8bd5\u7f16\u5199\u89e6\u53d1\u5668\u3002\u63d0\u9ad8\u4e86\u5bf9sql\u8fdb\u9636\u8bed\u53e5\u7684\u7406\u89e3\u4e0e\u8ba4\u8bc6\u3002  </p>"},{"location":"sp25/db/report/lab4/lab4/","title":"Lab4","text":"\u6570\u636e\u5e93\u7cfb\u7edf Lab4       \u6768\u4ebf\u916c 3230105697 2025-3-21"},{"location":"sp25/db/report/lab4/lab4/#1","title":"1.\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u719f\u6089\u901a\u8fc7SQL\u8fdb\u884c\u6570\u636e\u5b8c\u6574\u6027\u63a7\u5236\u7684\u65b9\u6cd5\u3002  </li> <li>\u719f\u6089\u6570\u636e\u5e93\u4e2d\u767b\u5f55\uff0c\u7528\u6237\uff0c\u89d2\u8272\u7684\u6982\u5ff5\u548c\u4f5c\u7528  </li> </ul>"},{"location":"sp25/db/report/lab4/lab4/#2","title":"2.\u5b9e\u9a8c\u5185\u5bb9","text":"<p>1.\u57fa\u4e8e\u4e0a\u4e00\u6b21\u5b9e\u9a8c\u7684library\u6570\u636e\u5e93\uff08\u53ef\u4ee5\u7528\u81ea\u5df1\u6240\u5c5e\u7684db\uff09\u548cbook\u8868,\u521b\u5efa\u4e00\u4e2a\u767b\u5f55\u8d26\u6237A\u5e76\u540c\u65f6\u7ed1\u5b9a\u6570\u636e\u5e93\u7528\u6237A\uff0c\u4ee5public\u548cowner\u89d2\u8272\u6620\u5c04\u5230library\u6570\u636e\u5e93\u4e0a  2.\u521b\u5efa\u767b\u5f55\u8d26\u6237B\uff0c\u4ee5public\u89d2\u8272\u7684\u6570\u636e\u5e93\u7528\u6237B\u6620\u5c04\u5230library\u6570\u636e\u5e93\u4e0a\uff0c\u4ee5\u8d26\u6237B\u767b\u5f55\uff0c\u6d4b\u8bd5B\u80fd\u5426\u5bf9book\u8868\u8fdb\u884cCRUD\uff08\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\uff09\u64cd\u4f5c  \u9000\u51faSSMS\u5e76\u4ee5lab4B\u8d26\u6237\u91cd\u65b0\u767b\u5f55(\u5bc6\u7801lab4B) <pre><code>insert into user803.book\nvalues('B0000002','\u6587\u5b66','\u6d3b\u7740','\u4eba\u6c11\u6587\u5b66\u51fa\u7248\u793e','1998','\u4f59\u534e','68.00',50,30);\n\ndelete from user803.book where bno = 'B0000002';\n\nupdate user803.book\nset bno = '100'\nwhere title = '\u65b0\u7684\u4e16\u754c';\n\nselect * from user803.book;\n</code></pre>  3.\u7528A\u767b\u5f55\uff0c\u5229\u7528grant\u8bed\u53e5\u8d4b\u4e8eB\u8868\u67e5\u8be2\u548c\u63d2\u5165\u7684\u6743\u9650 <pre><code>grant select,insert on user803.book\nto lab4B;\n</code></pre>  4.\u7528B\u767b\u5f55\u6d4b\u8bd5\u662f\u5426\u5177\u6709\u76f8\u5e94\u7684\u6743\u9650  5.\u7528A\u767b\u5f55\uff0c\u5229\u7528revoke\u8bed\u53e5\u6536\u56debook\u8868\u7684\u64cd\u4f5c\u6743\u9650\uff0c\u518d\u8fdb\u884c\u6d4b\u8bd5 <pre><code>revoke select,insert on user803.book\nfrom lab4B;\n</code></pre>  6.\u7528Windows\u8eab\u4efd\u8ba4\u8bc1\u767b\u5f55\u6570\u636e\u5e93\uff0c\u5728library\u6570\u636e\u5e93\u4e0b\u521b\u5efadb_select\u89d2\u8272\uff0c\u8d4b\u4e88\u7528\u6237B\uff0c\u6d4b\u8bd5\u7528\u6237B\u7684\u67e5\u8be2\u6743\u9650 \u4f7f\u7528\u672c\u5730sql_server\uff0c\u7528windows\u8eab\u4efd\u8ba4\u8bc1\u767b\u5f55 <pre><code>create database user803;\n</code></pre> <pre><code>CREATE ROLE db_select;\nGRANT SELECT ON book TO db_select;\n</code></pre>  \u7528\u6237\u6709select\u6743\u9650\u6ca1\u6709delete\u6743\u9650 7.\u5b9e\u9a8c\u603b\u7ed3\u53ca\u601d\u8003 Sql Server\u4e2d\u53ef\u4ee5\u901a\u8fc7\u89d2\u8272\u6620\u5c04\u8d4b\u4e88\u89d2\u8272\u6743\u9650\uff0cowner\u53ef\u4ee5\u901a\u8fc7grant,revoke\u8bed\u53e5\u4e3a\u5176\u4f59\u7528\u6237\u8d4b\u4e88\u6216\u6536\u56de\u5bf9\u8868\u7684\u64cd\u4f5c\u6743\u9650\u3002 \u6570\u636e\u5e93\u7684\u6743\u9650\u7ba1\u7406\u6d89\u53ca\u6570\u636e\u5e93\u6b63\u5e38\u8fd0\u4f5c\u4e0e\u6570\u636e\u5b89\u5168\uff0c\u662f\u4e0d\u5bb9\u5ffd\u89c6\u7684\u91cd\u8981\u73af\u8282\u3002</p>"},{"location":"sp25/db/report/lab5/lab5/","title":"Lab5","text":"\u6570\u636e\u5e93\u7cfb\u7edf Lab5:\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf       \u6768\u4ebf\u916c 3230105697 2025-3-30 ~ 2025-4-1"},{"location":"sp25/db/report/lab5/lab5/#1","title":"1.\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7cbe\u7b80\u7684\u56fe\u4e66\u7ba1\u7406\u7a0b\u5e8f\uff0c\u8981\u6c42\u5177\u6709\u56fe\u4e66\u5165\u5e93\u3001\u67e5\u8be2\u3001\u501f\u4e66\u3001\u8fd8\u4e66\u3001\u501f\u4e66\u8bc1\u7ba1\u7406\u7b49\u529f\u80fd\u3002</li> </ul>"},{"location":"sp25/db/report/lab5/lab5/#2","title":"2.\u5b9e\u9a8c\u9700\u6c42","text":"<ul> <li>\u63d0\u4f9b\u4e00\u4e2a\u57fa\u4e8eMySQL(\u6216OpenGauss, SQL Server)\u7684\u7cbe\u7b80\u56fe\u4e66\u7ba1\u7406\u7a0b\u5e8f\uff0c\u8be5\u56fe\u4e66\u7ba1\u7406\u7a0b\u5e8f\u5e94\u5177\u5907\u8f83\u597d\u7684\u53ef\u6269\u5c55\u6027\u3001\u9c81\u68d2\u6027\u548c\u5b89\u5168\u6027\uff0c\u5e76\u4e14\u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\u4ecd\u80fd\u6b63\u786e\u8fd0\u884c\u3002  </li> <li>\u5b8c\u6210\u7c7bLibraryManagementSystemImpl\u4e2d\u5404\u529f\u80fd\u6a21\u5757\u7684\u51fd\u6570\uff0c\u5e76\u901a\u8fc7\u6240\u6709\u6d4b\u8bd5\u6837\u4f8b\u3002</li> </ul>"},{"location":"sp25/db/report/lab5/lab5/#3","title":"3.\u5b9e\u9a8c\u73af\u5883","text":"<ul> <li>mysql  Ver 9.3.0 for Linux on x86_64 (MySQL Community Server - GPL)</li> <li>openjdk version \"21.0.6\" 2025-01-21   OpenJDK Runtime Environment (build 21.0.6+7-Ubuntu-124.04.1)   OpenJDK 64-Bit Server VM (build 21.0.6+7-Ubuntu-124.04.1, mixed mode, sharing)</li> <li>Apache Maven 3.8.7</li> <li>VSCODE Ubuntu 24.04.2 LTS  Start MySQL by <code>sudo service mysql start</code> then <code>mysql -u root -p</code> <code>mvn -Dtest=LibraryTest clean test</code> under <code>/librarymanagementsystem/</code></li> </ul>"},{"location":"sp25/db/report/lab5/lab5/#4","title":"4.\u7cfb\u7edf\u5404\u6a21\u5757\u7684\u8bbe\u8ba1\u601d\u8def\u548c\u5b9e\u73b0","text":""},{"location":"sp25/db/report/lab5/lab5/#jdbc","title":"jdbc\u57fa\u672c\u7f16\u5199","text":"<p>\u6bcf\u4e2a\u4e8b\u52a1\u5904\u7406\u51fd\u6570\u5927\u81f4\u5305\u62ec\u4ee5\u4e0b\u90e8\u5206 - \u5efa\u7acb\u8fde\u63a5<code>Connection conn = connector.getConn();</code> - \u68c0\u67e5\u8f93\u5165\u5408\u6cd5\u6027(\u89c6\u5177\u4f53\u51fd\u6570\u68c0\u67e5\u5185\u5bb9\u4e0d\u540c) - \u6267\u884c\u64cd\u4f5c - \u83b7\u53d6\u7ed3\u679c\u66f4\u65b0 - \u63d0\u4ea4\u4e8b\u52a1</p> <p>\u68c0\u67e5\u8f93\u5165,\u6267\u884c\u64cd\u4f5c,\u83b7\u53d6\u7ed3\u679c\u66f4\u65b0\u4f7f\u7528sql\u8bed\u53e5,\u901a\u8fc7PreparedStatement\u9632\u6b62sql\u6ce8\u5165,\u4e14\u6709\u5229\u4e8e\u6279\u91cf\u64cd\u4f5c \u5982\u5b58\u5728\u8f93\u5165\u4e0d\u5408\u6cd5\u7b49\u5f02\u5e38\u5e94\u629b\u51fa,rollback\u6574\u6761\u4e8b\u52a1\u5e76\u8f93\u51fa\u63d0\u793a  </p>"},{"location":"sp25/db/report/lab5/lab5/#storebook","title":"storeBook","text":"<p><pre><code>register a book to database.  \n(1) book_id should be stored to book after successfully\n    completing this operation.  \n(2) you should not register this book if the book already\n    exists in the library system.\n</code></pre> 1.\u8fde\u63a5\u6570\u636e\u5e93 2.\u8bbe\u7f6e\u68c0\u67e5\u4e66\u76ee\u662f\u5426\u5b58\u5728\u7684PreparedStatement\u8bed\u53e5,<code>String check = \"select book_id from book where category = ? and press = ? and author = ? and title = ? and publish_year = ?\";</code>(book\u7c7b\u7684unique\u8981\u6c42:unique (<code>category</code>, <code>press</code>, <code>author</code>, <code>title</code>, <code>publish_year</code>)) <code>checkstmt = conn.prepareStatement(check);</code>\u5c06string\u8f6c\u5316\u4e3asql\u8bed\u53e5 \u901a\u8fc7<code>checkstmt.set&lt;TypeName&gt;(&lt;Index&gt;,&lt;Content&gt;);</code>\u8bbe\u7f6e\u67e5\u8be2\u53d8\u91cf <code>res = checkstmt.executeQuery();</code>\u6267\u884c\u67e5\u8be2\u64cd\u4f5c\u5e76\u83b7\u53d6\u8fd4\u56de\u7ed3\u679c <pre><code>    if(res.next()) {\n        throw new SQLException(\"Book already exists.\");\n    }\n</code></pre> \u67e5\u8be2\u6709\u7ed3\u679c,\u8bf4\u660e\u5b58\u5728\u91cd\u590d\u4e66\u7c4d,\u629b\u51fa\u5f02\u5e38,\u5e76\u64a4\u56de\u4e8b\u52a1 3.\u6267\u884cinsert\u64cd\u4f5c \u540c\u6837\u5148\u8bbe\u7f6ePreparedStatement\u8bed\u53e5,<code>String insert = \"insert into book(category, title, press, publish_year, author, price, stock) values(?, ?, ?, ?, ?, ?, ?)\";</code>,\u8f6c\u5316\u4e3asql\u8bed\u53e5,\u8bbe\u7f6e\u53d8\u91cf\u5e76\u6267\u884c,\u83b7\u53d6\u7ed3\u679c 4.book\u8868\u8981\u6c42\u6bcf\u4e2a\u5b9e\u4f53\u6709\u81ea\u589e\u7684primary key <code>book_id</code>,\u56e0\u6b64\u9700\u8981\u5728\u6267\u884c\u67e5\u8be2\u65f6\u8bbe\u7f6e\u83b7\u53d6\u8fd4\u56de\u7684\u81ea\u589ekey,<code>insertstmt = conn.prepareStatement(insert, Statement.RETURN_GENERATED_KEYS);</code> \u6839\u636e\u83b7\u53d6\u7ed3\u679c\u66f4\u65b0book_id,\u901a\u8fc7<code>getGeneratedKeys()</code>\u51fd\u6570\u4e3a\u63d2\u5165\u7684book\u8bbe\u7f6ebook_id,\u5982\u679c\u6ca1\u6709\u83b7\u53d6\u5230book_id\u629b\u51fa\u5f02\u5e38\u5e76rollback <pre><code>    //update bookId by using the increment book_id\n    //getGeneratedKeys for getting the increment primary key(column 1)\n    try (ResultSet generatedKeys = insertstmt.getGeneratedKeys()) {\n        if (generatedKeys.next()) {\n            book.setBookId(generatedKeys.getInt(1));\n        } else {\n            throw new SQLException(\"Failed to get generated book_id.\");\n        }\n    }\n</code></pre> 5.\u5b8c\u6210\u5168\u90e8\u64cd\u4f5c\u4e14\u6ca1\u6709\u5f02\u5e38,\u5219<code>commit(conn);</code>\u63d0\u4ea4\u4e8b\u52a1  </p>"},{"location":"sp25/db/report/lab5/lab5/#incbookstock","title":"incBookStock","text":"<p><pre><code>increase the book's inventory by bookId &amp; deltaStock.  \n(1) you need to check the correctness of book_id  \n(2) deltaStock can be negative, but make sure that\n    the result of book.stock + deltaStock is not negative!  \n</code></pre> stock\u66f4\u65b0\u8bed\u53e5<code>update book set stock = stock + ? where book_id = ?</code> stock\u975e\u8d1f\u68c0\u67e5<code>select stock from book where book_id = ?</code> \u5f02\u5e38\u5904\u7406: (1)bookId\u4e0d\u5b58\u5728<code>if (rowsAffected == 0) throw new SQLException(\"Book not found.\");</code> (2)stock\u4e3a\u8d1f<code>if (stock &lt; 0) throw new SQLException(\"Stock cannot be negative.\");</code></p>"},{"location":"sp25/db/report/lab5/lab5/#storebooklist","title":"storeBook(List)","text":"<p><pre><code>batch store books.\n(1) you should not call the interface storeBook()  \n    multiple times to achieve this function!!!\n    hint: use {@link PreparedStatement#executeBatch()}\n    and {@link PreparedStatement#addBatch()}\n(2) if one of the books fails to import, all operations  \n    should be rolled back using rollback() function provided\n    by JDBC!!!  \n(3) when binding params to SQL, you are required to avoid  \n    the risk of SQL injection attack!!!  \n</code></pre> bookId\u5b58\u5728\u68c0\u67e5<code>select book_id from book where category = ? and press = ? and author = ? and title = ? and publish_year = ?</code> insert\u64cd\u4f5c\u5b9e\u73b0<code>insert into book(category, title, press, publish_year, author, price, stock) values (?, ?, ?, ?, ?, ?, ?);</code> <code>Batch</code>\u7684\u4f7f\u7528:\u9010\u672c\u68c0\u67e5\u52a0\u5165Batch,\u5168\u90e8\u5b8c\u6210\u540e\u6279\u91cf\u6267\u884c <pre><code>for(Book book : books) {\n    //check bookId exists...\n    //insert book...\n    insertstmt.addBatch();\n}\nint[] results = insertstmt.executeBatch();\n</code></pre> \u9010\u4e2a\u66f4\u65b0bookId <pre><code>for (int i = 0; i &lt; books.size(); i++) {\n    Book book = books.get(i);//\u83b7\u53d6book\u5bf9\u8c61\n    if (results[i] == PreparedStatement.EXECUTE_FAILED) {\n        //\u68c0\u67e5\u63d2\u5165\u5f02\u5e38\n        throw new SQLException(\"Batch insert failed for book: \" + book.getTitle());\n    }\n    if (generatedKeys.next()) {\n        //\u8bbe\u7f6ebookId\n        book.setBookId(generatedKeys.getInt(1));\n    }\n}\n</code></pre></p>"},{"location":"sp25/db/report/lab5/lab5/#removebook","title":"removeBook","text":"<p><pre><code>remove this book from library system.\nNote that if someone has not returned this book,the book should not be removed!\n</code></pre> bookId\u5b58\u5728\u68c0\u67e5<code>select book_id from book where book_id = ?</code> \u5904\u4e8e\u88ab\u501f\u72b6\u6001\u68c0\u67e5,return_time == 0\u8868\u793a\u672a\u88ab\u5f52\u8fd8 <pre><code>String check_borrowed = \"select return_time from borrow where book_id = ?\";\nResultSet res2 = check_borrowed_stmt.executeQuery();\n//book not returned\nif (res2.next() &amp;&amp; res2.getLong(\"return_time\") == 0) {\n    return new ApiResult(false, \"Book is borrowed.\");\n}\n</code></pre> \u5220\u9664\u64cd\u4f5c<code>delete from book where book_id = ?</code></p>"},{"location":"sp25/db/report/lab5/lab5/#modifybookinfo","title":"modifyBookInfo","text":"<p><pre><code>modify a book's information by book_id.\nNote that you should not modify its book_id and stock!\n</code></pre> bookId\u5b58\u5728\u68c0\u67e5,\u7565 book\u72b6\u6001\u66f4\u65b0<code>update book set category = ?, title = ?, press = ?, publish_year = ?, author = ?, price = ? where book_id = ?</code> Note:\u6839\u636e\u6d4b\u8bd5\u7528\u4f8b\uff0c\u53ea\u9700\u8981\u4e0d\u4fee\u6539book_id\u4e0estock\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u5728book_id\u548cstock\u4e0d\u540c\u65f6\u76f4\u63a5\u629b\u51fa\u5f02\u5e38  </p>"},{"location":"sp25/db/report/lab5/lab5/#querybook","title":"querybook","text":"<p><pre><code>query books according to different query conditions.\n(1) you should let the DBMS to filter records\n    that do not satisfy the conditions instead of\n    filter records in your API.\n(2) when binding params to SQL, you also need to avoid\n    the risk of SQL injection attack.\n(3) [*] if all else is equal, sort by book_id in\n    ascending order!\nquery results should be returned by ApiResult.payload and should be an instance of {@link queries.BookQueryResults}\n</code></pre> \u67e5\u8be2\u8bed\u53e5\u6784\u9020<code>select * from book where 1=1 and ...</code> \u4f7f\u7528<code>1=1</code>\u914d\u5408<code>and</code>\u6709\u6548\u8fde\u63a5\uff0c\u901a\u8fc7<code>conditions.get...()</code>\u83b7\u53d6\u67e5\u8be2\u8981\u6c42\uff0c\u6700\u540e\u5229\u7528<code>order by</code>\u4e0e<code>sort order</code>\u8c03\u6574\u7ed3\u679c\u987a\u5e8f(\u9ed8\u8ba4\u987a\u5e8f<code>book_id ASC</code>\uff0c\u591a\u4e2a\u987a\u5e8f\u53ef\u4ee5\u6309\u5e8f\u5e76\u5b58)\uff0c\u540c\u6837\u4f7f\u7528preparestatement\u907f\u514dsql\u6ce8\u5165 \u6dfb\u52a0\u53d8\u91cf<code>if (conditions.get...() != null) stmt.set&lt;Type&gt;(index++, conditions.get...());</code> \u67e5\u8be2\u7ed3\u679c\u6784\u9020\u4e0e\u8f93\u51fa <pre><code>while (res.next()) {//\u904d\u5386\u67e5\u8be2\u7ed3\u679c\n    Book book = new Book( //\u65b0\u5efabook\u5bf9\u8c61\u5b58\u653e\u67e5\u8be2\u7ed3\u679c\n    //\u83b7\u53d6\u67e5\u8be2\u5404\u9879\u7ed3\u679c\n        res.getString(\"category\"),\n        res.getString(\"title\"),\n        res.getString(\"press\"),\n        res.getInt(\"publish_year\"),\n        res.getString(\"author\"),\n        res.getDouble(\"price\"),\n        res.getInt(\"stock\")\n    );\n    //\u5c06\u67e5\u8be2\u5f97\u5230\u7684book_id\u8bbe\u7f6e\u4e3a\u7ed3\u679c\u7684book_id\n    book.setBookId(res.getInt(\"book_id\"));\n    books.add(book);\n}\nreturn new ApiResult(true, \"Query succeed.\",new BookQueryResults(books));\n//\u8fd4\u56deBookQueryResults\u7684\u5b9e\u4f8b\n</code></pre></p>"},{"location":"sp25/db/report/lab5/lab5/#borrowbook","title":"borrowBook","text":"<p><pre><code>a user borrows one book with the specific card.\nthe borrow operation will success iff there are enough books in stock &amp; the user has not borrowed the book or has returned it.\n</code></pre> \u5e93\u5b58\u975e\u96f6\u68c0\u67e5<code>select stock from book where book_id = ? FOR UPDATE</code> card_id\u5b58\u5728\u6027\u68c0\u67e5<code>select card_id from card where card_id = ?</code> \u5df2\u501f\u672a\u8fd8\u68c0\u67e5<code>select * from borrow where card_id = ? and book_id = ? and return_time = 0 FOR UPDATE</code> NOTE:\u786e\u4fdd\u4e00\u672c\u4e66\u53ef\u88ab\u540c\u4e00\u4eba\u91cd\u590d\u501f\u9605\uff0c\u53ea\u8981\u4e0a\u6b21\u501f\u9605\u5df2\u7ecf\u5f52\u8fd8 \u501f\u4e66\u8bb0\u5f55\u63d2\u5165\u64cd\u4f5c<code>insert into borrow(card_id, book_id, borrow_time, return_time) values (?, ?, ?, 0)</code>(\u4f7f\u7528borrow_time,return_time\u800c\u975eborrowTime,returnTime) \u501f\u4e66\u5b8c\u6210\uff0c\u85cf\u4e66\u91cfstock - 1 <code>update book set stock = stock - 1 where book_id = ?</code> </p>"},{"location":"sp25/db/report/lab5/lab5/#returnbook","title":"returnBook","text":"<p><pre><code>A user return one book with specific card.\n</code></pre> bookId\u5b58\u5728\u68c0\u67e5,<code>select * from borrow where card_id = ? and book_id = ? and borrow_time = ?</code> NOTE:\u5fc5\u987b\u68c0\u67e5borrow_time\uff0c\u907f\u514d\u5f52\u8fd8\u5df2\u7ecf\u5f52\u8fd8\u7684\u4e66(borrow_time == 0) \u66f4\u65b0return_time<code>update borrow set return_time = ? where card_id = ? and book_id = ? and borrow_time = ?</code> NOTE:\u5fc5\u987b\u68c0\u67e5borrow_time,\u4fee\u6539\u5bf9\u5e94borrow_time\u7684return_time\uff0c\u907f\u514d\u9519\u8bef\u4fee\u6539\u540c\u4e00\u4eba\u6b64\u524d\u76f8\u540c\u7684\u4e66\u7c4d\u501f\u7528\u8bb0\u5f55 \u8fd8\u4e66\u5b8c\u6210\uff0c\u85cf\u4e66\u91cfstock + 1\uff0c\u7c7b\u4f3cborrowBook  </p>"},{"location":"sp25/db/report/lab5/lab5/#showborrowhistory","title":"showBorrowHistory","text":"<p><pre><code>list all borrow histories for a specific card.\nthe returned records should be sorted by borrow_time DESC, book_id ASC\n@param cardId show which card's borrow history\n@return query results should be returned by ApiResult.payload\n        and should be an instance of {@link queries.BorrowHistories}\n</code></pre> \u6839\u636eBorrowHistories\u5b9e\u4f8b\u7684\u8981\u6c42\uff0c\u67e5\u8be2\u8bed\u53e5<code>select * from borrow join book on borrow.book_id = book.book_id where card_id = ? order by borrow_time DESC, book.book_id ASC</code> join\u8fde\u63a5\u4e24\u8868\uff0ccard_id\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570 \u67e5\u8be2\u7ed3\u679c\u6784\u9020\u4e0e\u8f93\u51fa\uff08\u7c7b\u4f3cquerybook\uff09 <code>return new ApiResult(true, \"Got borrow history\",new BorrowHistories(historyItems));</code> </p>"},{"location":"sp25/db/report/lab5/lab5/#registercard","title":"registerCard","text":"<p><pre><code>create a new borrow card. do nothing and return failed if\nthe card already exists.\n\nNote that card_id should be stored to card after successfully\ncompleting this operation.\n</code></pre> \u501f\u4e66\u8bc1\u5b58\u5728\u68c0\u67e5<code>select card_id from card where department = ? and type = ? and name = ?</code> \u6267\u884c\u63d2\u5165\u64cd\u4f5c<code>insert into card(department, type, name) values (?, ?, ?)</code> \u8bbe\u7f6e\u81ea\u589e\u7684card_id  <code>card.setCardId(generatedKeys.getInt(1))</code> </p>"},{"location":"sp25/db/report/lab5/lab5/#removecard","title":"removeCard","text":"<p><pre><code>simply remove a card.\n\nNote that if there exists any un-returned books under this user,\nthis card should not be removed.\n</code></pre> cardId\u5b58\u5728\u6027\u68c0\u67e5\uff0c\u7565 \u672a\u5f52\u8fd8\u4e66\u7c4d\u68c0\u67e5<code>select * from borrow where card_id = ? and return_time = 0</code> \u5220\u9664\u64cd\u4f5c\u6267\u884c<code>delete from card where card_id = ?</code> </p>"},{"location":"sp25/db/report/lab5/lab5/#showcards","title":"showCards","text":"<p><pre><code>list all cards order by card_id.\n\n@return query results should be returned by ApiResult.payload\n        and should be an instance of {@link queries.CardList}\n</code></pre> \u67e5\u8be2<code>select * from card order by card_id</code> \u67e5\u8be2\u7ed3\u679c\u6784\u9020\u4e0e\u8f93\u51fa\uff08\u7c7b\u4f3cquerybook\uff09 <code>return new ApiResult(true, \"Got cards record.\",new CardList(cards));</code>\u8fd4\u56deCardList\u7684\u5b9e\u4f8b  </p>"},{"location":"sp25/db/report/lab5/lab5/#parallelborrowbooktest","title":"parallelBorrowBookTest","text":"<p>\u8981\u6c42\uff1a\u591a\u7ebf\u7a0b\u540c\u65f6\u501f\u4e66\uff0c\u5e94\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u7ebf\u7a0b\u501f\u4e66\u6210\u529f <pre><code>conn.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);\nconn.setAutoCommit(false);\n\nString check_stock = \"select stock from book where book_id = ? FOR UPDATE\";\n</code></pre> <code>setTransanctionIsolation()</code>\u8bbe\u7f6e\u4e8b\u52a1\u9694\u79bb\uff0c<code>setAutoCommit(false);</code>\u5173\u95ed\u81ea\u52a8\u63d0\u4ea4\uff0c<code>FOR UPDATE</code>\u8bed\u53e5\u5b9e\u73b0\u884c\u7ea7\u9501\u5b9a\uff0c\u963b\u6b62\u5176\u4ed6\u4e8b\u52a1\u4fee\u6539\u884c  </p>"},{"location":"sp25/db/report/lab5/lab5/#5","title":"5.\u7cfb\u7edf\u9a8c\u8bc1\u6d4b\u8bd5","text":"<p>\u901a\u8fc7\u5168\u90e89\u4e2a\u6d4b\u8bd5\u8f93\u51faSUCCESS </p>"},{"location":"sp25/db/report/lab5/lab5/#6","title":"6.\u9047\u5230\u7684\u95ee\u9898\u53ca\u89e3\u51b3\u65b9\u6cd5","text":"<p>1.\u4f7f\u7528\u81ea\u589e\u7684book_id,card_id\u66f4\u65b0\u8868\u9879 2.batch\u8bed\u53e5\u7684\u4f7f\u7528\uff0c\u5e94<code>addBatch()</code>\u9010\u4e00\u63d2\u5165\u518d\u4e00\u6b21\u6027\u64cd\u4f5c 3.\u4fee\u6539\u4e66\u672c\u4fe1\u606f\u65f6stock\uff0cbook_id\u4e0d\u6b63\u786e\u65f6\u662f\u5426\u5e94\u8be5\u629b\u51fa\u5f02\u5e38 4.querybook\u8fc7\u7a0b\u4e2d\u591a\u4e2a\u6392\u5e8f\u987a\u5e8f\u7684\u95ee\u9898 5.borrowTime,returnTime,borrow_time,return_time\u7684\u533a\u5206\u95ee\u9898 6.\u540c\u4e00\u4eba\u5bf9\u540c\u4e00\u672c\u4e66\u91cd\u590d\u501f\u9605\u7684\u95ee\u9898\uff08\u5f52\u8fd8\u540e\u518d\u501f\uff0c\u672a\u5f52\u8fd8\u518d\u501f\uff09 7.\u5e76\u53d1\u501f\u4e66\u7684\u4e8b\u52a1\u9694\u79bb\u4e0e\u9501\u5b9a  </p>"},{"location":"sp25/db/report/lab5/lab5/#7","title":"7.\u601d\u8003\u9898","text":""},{"location":"sp25/db/report/lab5/lab5/#1e-r","title":"1.\u7ed8\u5236\u8be5\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\u7684E-R\u56fe\u3002","text":""},{"location":"sp25/db/report/lab5/lab5/#2sqlsql","title":"2.\u63cf\u8ff0SQL\u6ce8\u5165\u653b\u51fb\u7684\u539f\u7406(\u5e76\u7b80\u8981\u4e3e\u4f8b)\u3002\u5728\u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\u4e2d\uff0c\u54ea\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u906d\u53d7SQL\u6ce8\u5165\u653b\u51fb\uff1f\u5982\u4f55\u89e3\u51b3\uff1f","text":"<p>\u539f\u7406\uff1a\u901a\u8fc7\u5728\u5e94\u7528\u7a0b\u5e8f\u7684\u8f93\u5165\u5b57\u6bb5\u4e2d\u63d2\u5165\u6076\u610f\u7684SQL\u4ee3\u7801\uff0c\u4ece\u800c\u6b3a\u9a97\u6570\u636e\u5e93\u670d\u52a1\u5668\u6267\u884c\u975e\u9884\u671f\u7684SQL\u547d\u4ee4\u3002 \u4f8b\uff1a\u67d0\u6570\u636e\u5e93\u540e\u7aef\u767b\u5f55\u7cfb\u7edf\u5982\u4e0b <pre><code>SELECT * FROM users WHERE username = '$username' AND password = '$password';\n</code></pre> \u7528\u6237\u8f93\u5165 <pre><code>admin' --\n</code></pre> <code>--</code>\u4e3asql\u8bed\u53e5\u7684\u6ce8\u91ca\uff0c\u5219\u539f\u767b\u5f55\u7cfb\u7edf\u8bed\u53e5\u5982\u4e0b <pre><code>SELECT * FROM users WHERE username = 'admin' --' AND password = '';\n</code></pre> \u5bc6\u7801\u68c0\u67e5\u88ab\u6ce8\u91ca\uff0c\u653b\u51fb\u8005\u65e0\u9700\u5bc6\u7801\u76f4\u63a5\u4ee5admin\u8eab\u4efd\u767b\u5f55 \u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf\u4e2d\u6613\u53d7sql\u6ce8\u5165\u653b\u51fb\u7684\u6a21\u5757\uff1a \u767b\u5f55\u6a21\u5757\uff08\u5982\u4e0a\uff09 \u6279\u91cf\u5b58\u4e66\uff1a\u5047\u8bbe\u6570\u636e\u5e93\u6279\u91cf\u5b58\u4e66\u7cfb\u7edf\u540e\u7aef\u5982\u4e0b <pre><code>INSERT INTO book (category, title, press, publish_year, author, price, stock) \nVALUES ('\u79d1\u6280', '\u6570\u636e\u5e93\u539f\u7406', '\u6e05\u534e\u51fa\u7248\u793e', 2020, '\u738b\u5f3a', 45.00, 10),\n       ('\u6587\u5b66', '\u7ea2\u697c\u68a6', '\u4eba\u6c11\u6587\u5b66\u51fa\u7248\u793e', 2010, '\u66f9\u96ea\u82b9', 59.80, 5),\n       -- \u66f4\u591a\u56fe\u4e66\u6570\u636e...\n</code></pre> \u653b\u51fb\u8005\u63d0\u4f9b\u7684\u8f93\u5165\u5305\u542b <pre><code>('\u79d1\u6280', '\u6b63\u5e38\u56fe\u4e66', '\u6b63\u5e38\u51fa\u7248\u793e', 2022, '\u6b63\u5e38\u4f5c\u8005', 30.00, 5),\n('\u6076\u610f', '\u6076\u610f\u56fe\u4e66', '\u6076\u610f\u51fa\u7248\u793e', 2022, '\u6076\u610f\u4f5c\u8005', 0.00, 0); DROP TABLE book; --', '', 0, '', 0, 0)\n</code></pre> \u5bfc\u81f4book\u8868\u88ab\u5220\u9664 \u67e5\u8be2\uff1a\u5047\u8bbe\u6570\u636e\u5e93\u6279\u91cf\u67e5\u8be2\u7cfb\u7edf\u540e\u7aef\u5982\u4e0b <pre><code>SELECT * FROM book WHERE book_id IN ('$column_number');\n</code></pre> \u653b\u51fb\u8005\u63d0\u4ea4 <pre><code>1, 2, 3) OR 1=1 --\nSELECT * FROM book WHERE book_id IN (1, 2, 3) OR 1=1 --)\n</code></pre> \u8fd4\u8fd8\u5168\u90e8\u56fe\u4e66\u4fe1\u606f \u89e3\u51b3\u65b9\u6848\uff1a 1.\u4f7f\u7528\u53c2\u6570\u5316\u67e5\u8be2(PreparedStatement):\u4e25\u683c\u63a7\u5236\u7528\u6237\u8f93\u5165\u7684\u7c7b\u578b <pre><code>String sql = \"SELECT * FROM book WHERE title = ?\";\nPreparedStatement stmt = connection.prepareStatement(sql);\nstmt.setString(1, userInput);\n</code></pre> 2.\u8f93\u5165\u9a8c\u8bc1\uff1a\u5bf9\u7528\u6237\u8f93\u5165\u8fdb\u884c\u767d\u540d\u5355\u9a8c\u8bc1\uff0c\u9650\u5236\u8f93\u5165\u957f\u5ea6\u548c\u5b57\u7b26\u7c7b\u578b 3.\u6700\u5c0f\u6743\u9650\uff1a\u4e25\u683c\u63a7\u5236\u7528\u6237\u6743\u9650\uff0c\u7ed9\u4e88\u7528\u6237\u6700\u5c0f\u7684\u767b\u5f55\u6743\u9650 4.\u4f7f\u7528\u9632\u706b\u5899\uff0cORM\u6846\u67b6\u7b49\u5b9e\u73b0\u9632\u6ce8\u5165  </p>"},{"location":"sp25/db/report/lab5/lab5/#3-innodbrr-repeated-read","title":"3. \u5728InnoDB\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b(RR, Repeated Read)\u4e0b\uff0c\u5f53\u51fa\u73b0\u5e76\u53d1\u8bbf\u95ee\u65f6\uff0c\u5982\u4f55\u4fdd\u8bc1\u501f\u4e66\u7ed3\u679c\u7684\u6b63\u786e\u6027\uff1f\u4e0b\u9762\u662f\u4e00\u4e2a\u5728\u8be5\u573a\u666f\u4e0b\u53ef\u80fd\u4f1a\u51fa\u73b0\u975e\u9884\u671f\u7ed3\u679c\u7684\u4f8b\u5b50\uff1a","text":"<p>a. A\u542f\u52a8\u4e8b\u52a1\uff0c\u901a\u8fc7JDBC\u67e5\u8be2\u5230\u4f59\u91cf1\uff0c\u4ee3\u7801\u903b\u8f91\u5224\u5b9a\u501f\u4e66\u6210\u529f\uff0c\u4fee\u6539\u5e93\u5b58\uff1b b. B\u542f\u52a8\u4e8b\u52a1\uff0c\u5728A\u5c1a\u672a\u63d0\u4ea4\u4e8b\u52a1\u65f6\uff0c\u901a\u8fc7JDBC\u540c\u6837\u67e5\u8be2\u5230\u4f59\u91cf\u4e3a1\uff0c\u6b64\u65f6\u4ee3\u7801\u903b\u8f91\u540c\u6837\u5224\u5b9a\u501f\u4e66\u6210\u529f\uff0c\u4fee\u6539\u5e93\u5b58\uff1b c. A\u3001B\u5206\u522b\u63d0\u4ea4\u4e8b\u52a1\uff0c\u6700\u540e\u7ed3\u679c\u663e\u793a\u4f59\u91cf\u4e3a-1\uff0c\u4e0d\u7b26\u5408\u9884\u671f\u3002 \u3010\u63d0\u793a\u3011 \u25cf \u4e86\u89e3InnoDB\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b(RR, Repeated Read)\u5b9e\u73b0\u7684\u539f\u7406\uff0c\u4ee5\u53ca\u5feb\u7167\u8bfb\u548c\u5f53\u524d\u8bfb\u7684\u533a\u522b\uff0c\u80fd\u591f\u5e2e\u52a9\u4f60\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u25cf \u5728\u5b9e\u9645\u5e94\u7528\uff08\u4f8b\u5982\u7535\u5546\u7cfb\u7edf\uff09\u4e2d\uff0c\u201c\u79d2\u6740\u201d\u3001\u201c\u56e2\u8d2d\u201d\u662f\u9891\u7e41\u51fa\u73b0\u7684\u4e00\u4e9b\u6d3b\u52a8\u3002\u201c\u79d2\u6740\u201d\u6d3b\u52a8\u901a\u5e38\u4f34\u968f\u7740\u9ad8\u5e76\u53d1\u3001\u8bbf\u95ee\u91cf\u6fc0\u589e\u7b49\u7279\u70b9\u3002\u5f53\u5e76\u53d1\u8bf7\u6c42\u6570\u8fc7\u591a\u65f6\uff0c\u201c\u79d2\u6740\u201d\u7cfb\u7edf\u53c8\u662f\u5982\u4f55\u9632\u6b62\u5e93\u5b58\u8d85\u5356\u7684\u5462\uff1f\u53ef\u4ee5\u4f5c\u4e3a\u8bfe\u5916\u62d3\u5c55\u53bb\u4e86\u89e3\u4e00\u4e0b\u3002 \u25cf \u6d4b\u8bd5\u7528\u4f8bLibraryTest::parallelBorrowBookTest()\u5c06\u4f1a\u6d4b\u8bd5\u5728\u8be5\u573a\u666f\u4e0b\u4f60\u7684\u7a0b\u5e8f\u662f\u5426\u80fd\u591f\u6267\u884c\u5f97\u5230\u9884\u671f\u7684\u7ed3\u679c\u3002  </p> <p>[Answer] InnoDB\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b(RR, Repeated Read)\u5b9e\u73b0\u539f\u7406 InnoDB\u901a\u8fc7\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236(MVCC)\u548c\u95f4\u9699\u9501(Gap Lock)\u7684\u7ec4\u5408\u6765\u5b9e\u73b0RR\u9694\u79bb\u7ea7\u522b - \u4e8b\u52a1\u9996\u6b21\u8bfb\u53d6\u65f6\u521b\u5efaReadView\uff0c\u8fd9\u4e2aReadView\u4f1a\u5728\u6574\u4e2a\u4e8b\u52a1\u671f\u95f4\u6301\u7eed\u4f7f\u7528 - \u901a\u8fc7\u6bd4\u8f83\u6570\u636e\u884c\u7684DB_TRX_ID(\u6700\u8fd1\u4fee\u6539\u8be5\u884c\u7684\u4e8b\u52a1ID)\u4e0eReadView\u6765\u5224\u65ad\u53ef\u89c1\u6027\uff1a     trx_id:\u751f\u6210ReadView\u65f6\u6d3b\u8dc3\u7684\u4e8b\u52a1ID\u5217\u8868     \u5982\u679cDB_TRX_ID &lt; min_trx_id\uff1a\u53ef\u89c1\uff08\u4e8b\u52a1\u5df2\u63d0\u4ea4\uff09     \u5982\u679cDB_TRX_ID &gt;= max_trx_id\uff1a\u4e0d\u53ef\u89c1\uff08\u4e8b\u52a1\u5728ReadView\u521b\u5efa\u540e\u5f00\u59cb\uff09     \u5982\u679cmin_trx_id &lt;= DB_TRX_ID &lt; max_trx_id\uff1a         \u5728m_ids\u4e2d\uff1a\u4e0d\u53ef\u89c1\uff08\u4e8b\u52a1\u672a\u63d0\u4ea4\uff09         \u4e0d\u5728m_ids\u4e2d\uff1a\u53ef\u89c1\uff08\u4e8b\u52a1\u5df2\u63d0\u4ea4\uff09 - \u901a\u8fc7undo log\u94fe\u8bbf\u95ee\u5386\u53f2\u7248\u672c\u6570\u636e \u95f4\u9699\u9501:\u9501\u5b9a\u7d22\u5f15\u8bb0\u5f55\u4e4b\u95f4\u7684\u95f4\u9699\u9632\u6b62\u5e7b\u8bfb  </p> <p>\u5feb\u7167\u8bfb\u4e0e\u5f53\u524d\u8bfb - \u5feb\u7167\u8bfb\uff1a\u4e8b\u52a1\u9996\u6b21\u8bfb\u64cd\u4f5c\u4f1a\u5efa\u7acb\u5feb\u7167(ReadView)\uff0c\u540e\u7eed\u8bfb\u64cd\u4f5c\u90fd\u57fa\u4e8e\u8fd9\u4e2a\u5feb\u7167\uff0c\u4fdd\u8bc1\u53ef\u91cd\u590d\u8bfb\uff08\u901a\u8fc7ReadView\u548cundo log\u5b9e\u73b0\uff0c\u9ad8\u5e76\u53d1\uff0c\u65e0\u963b\u585e\uff09 - \u5f53\u524d\u8bfb\uff1a\u8bfb\u53d6\u8bb0\u5f55\u7684\u6700\u65b0\u63d0\u4ea4\u7248\u672c\uff08\u9700\u8981\u52a0\u9501\uff0c\u53ef\u80fd\u56e0\u4e3a\u7b49\u5f85\u5bfc\u81f4\u963b\u585e\uff09  </p> <p>\"\u79d2\u6740\"\u7cfb\u7edf - Redis \u9884\u51cf\u5e93\u5b58 + \u5f02\u6b65\u961f\u5217   \u79d2\u6740\u524d\u5c06\u5e93\u5b58\u52a0\u8f7d\u5230 Redis\u3002   \u7528\u6237\u8bf7\u6c42\u65f6\uff0c\u5148\u901a\u8fc7 Redis \u7684\u539f\u5b50\u64cd\u4f5c\uff08\u5982 DECR\uff09\u9884\u51cf\u5e93\u5b58\u3002   \u6210\u529f\u9884\u51cf\u540e\uff0c\u5c06\u8ba2\u5355\u8bf7\u6c42\u53d1\u9001\u81f3 Kafka/RabbitMQ \u5f02\u6b65\u5904\u7406 - \u5206\u5e03\u5f0f\u9501\uff1a\u786e\u4fdd\u5206\u5e03\u5f0f\u73af\u5883\u4e0b\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u80fd\u6263\u51cf\u5e93\u5b58 - \u79d2\u6740\u4ee4\u724c\u673a\u5236\uff1a\u63a7\u5236\u53c2\u4e0e\u79d2\u6740\u7684\u7528\u6237\u6570   \u79d2\u6740\u5f00\u59cb\u524d\uff0c\u751f\u6210\u56fa\u5b9a\u6570\u91cf\u7684\u4ee4\u724c\u5b58\u5165 Redis\u3002   \u7528\u6237\u9700\u5148\u83b7\u53d6\u4ee4\u724c\u624d\u80fd\u4e0b\u5355\uff0c\u65e0\u4ee4\u724c\u5219\u76f4\u63a5\u62d2\u7edd - ...</p> <p><code>parallelBorrowBook</code>\u5e76\u53d1\u8bbf\u95ee\u7684\u6b63\u786e\u6027\u4fdd\u8bc1 <code>setTransanctionIsolation()</code>\u8bbe\u7f6e\u4e8b\u52a1\u9694\u79bb\uff0c<code>setAutoCommit(false);</code>\u5173\u95ed\u81ea\u52a8\u63d0\u4ea4\uff0c<code>FOR UPDATE</code>\u8bed\u53e5\u5b9e\u73b0\u884c\u7ea7\u9501\u5b9a\uff0c\u963b\u6b62\u5176\u4ed6\u4e8b\u52a1\u4fee\u6539\u884c  </p>"},{"location":"sp25/db/report/minisql/lyj_report/","title":"Lyj report","text":"<p>"},{"location":"sp25/db/report/minisql/lyj_report/#database-system","title":"DataBase System","text":""},{"location":"sp25/db/report/minisql/lyj_report/#minisql","title":"MiniSQL \u4e2a\u4eba\u8bbe\u8ba1\u62a5\u544a","text":"\u59d3\u540d\uff1a\u2003\u2003\u5218\u2003\u5955\u2003\u5609"},{"location":"sp25/db/report/minisql/lyj_report/#_1","title":"\u4e00\u3001 \u5b9e\u9a8c\u80cc\u666f\u4e0e\u76ee\u7684","text":"<ul> <li>\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7cbe\u7b80\u578b\u5355\u7528\u6237SQL\u5f15\u64ceMiniSQL\uff0c\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u5b57\u7b26\u754c\u9762\u8f93\u5165SQL\u8bed\u53e5\u5b9e\u73b0\u57fa\u672c\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\uff0c\u5e76\u80fd\u591f\u901a\u8fc7\u7d22\u5f15\u6765\u4f18\u5316\u6027\u80fd\u3002</li> <li>\u901a\u8fc7\u5bf9MiniSQL\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7f16\u7a0b\u80fd\u529b\uff0c\u52a0\u6df1\u5bf9\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u5e95\u5c42\u8bbe\u8ba1\u7684\u7406\u89e3\u3002</li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#_2","title":"\u4e8c\u3001 \u8bbe\u8ba1\u5b8c\u6210\u5185\u5bb9","text":"<ul> <li>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u8bbe\u8ba1\u5e76\u5b8c\u6210DISK AND BUFFER POOL MANAGER\u6a21\u5757\uff0cRECORD MANAGER\u6a21\u5757\uff0cLOCK MANAGER\u6a21\u5757\uff1a</li> <li><code>DISK AND BUFFER POOL MANAGER</code>\u76f8\u5173\u6587\u4ef6\uff1a   </li> <li><code>RECORD MANAGER</code>\u76f8\u5173\u6587\u4ef6\uff1a   </li> <li><code>LOCK MANAGER</code>\u76f8\u5173\u6587\u4ef6\uff1a   </li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#_3","title":"\u4e09\u3001 \u5177\u4f53\u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/lyj_report/#disk-and-buffer-pool-manager","title":"<code>DISK AND BUFFER POOL MANAGER</code> \u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/lyj_report/#1","title":"1\u3001\u67b6\u6784\u8bbe\u8ba1","text":"<p><code>Disk and Buffer Pool Manager</code> \u6a21\u5757\u662f\u6570\u636e\u5e93\u7cfb\u7edf\u4e0e\u78c1\u76d8\u8fdb\u884c\u4ea4\u4e92\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u4e3b\u8981\u8d1f\u8d23\u6570\u636e\u7684\u6301\u4e45\u5316\u5b58\u50a8\u3001\u6309\u9700\u52a0\u8f7d\u6570\u636e\u9875\u5230\u5185\u5b58\uff08\u7f13\u51b2\u6c60\uff09\u4ee5\u53ca\u7ba1\u7406\u7f13\u51b2\u6c60\u4e2d\u7684\u6570\u636e\u9875\uff0c\u4ee5\u4f18\u5316\u78c1\u76d8 I/O \u6027\u80fd\u3002</p> <ul> <li> <p>DiskManager (\u78c1\u76d8\u7ba1\u7406\u5668): \u8d1f\u8d23\u6570\u636e\u5e93\u6587\u4ef6\u5728\u78c1\u76d8\u4e0a\u7684\u7269\u7406\u5b58\u50a8\u548c\u903b\u8f91\u9875\u5230\u7269\u7406\u9875\u7684\u6620\u5c04\uff0c\u4ee5\u53ca\u7ba1\u7406\u9875\u7684\u5206\u914d\u548c\u56de\u6536\u3002</p> <ul> <li>\u6587\u4ef6\u64cd\u4f5c: \u63d0\u4f9b\u8bfb\u5199\u78c1\u76d8\u9875\u7684\u63a5\u53e3\uff0c\u786e\u4fdd\u6570\u636e\u80fd\u591f\u5728\u7cfb\u7edf\u91cd\u542f\u540e\u4f9d\u7136\u53ef\u7528\u3002</li> <li>\u9875\u5206\u914d\u4e0e\u56de\u6536:<ul> <li>\u91c7\u7528\u4f4d\u56fe\u673a\u5236\u6765\u7ba1\u7406\u78c1\u76d8\u4e0a\u7684\u7a7a\u95f2\u9875\uff0c\u6bcf\u4e2a\u4f4d\u56fe\u9875\u53ef\u4ee5\u7ba1\u7406 <code>BITMAP_SIZE</code> \u4e2a\u6570\u636e\u9875\u3002</li> <li>\u6574\u4e2a\u6570\u636e\u5e93\u6587\u4ef6\u88ab\u5212\u5206\u4e3a\u591a\u4e2a\u533a\uff0c\u6bcf\u4e2a\u533a\u5305\u542b\u4e00\u4e2a\u4f4d\u56fe\u9875\u548c <code>BITMAP_SIZE</code> \u4e2a\u6570\u636e\u9875\u3002</li> <li>\u5143\u6570\u636e\u9875\u8bb0\u5f55\u4e86\u6574\u4e2a\u6570\u636e\u5e93\u6587\u4ef6\u7684\u5168\u5c40\u4fe1\u606f\uff0c\u5305\u62ec\u5df2\u5206\u914d\u9875\u7684\u6570\u91cf\u548c\u6bcf\u4e2a\u533a\u5df2\u4f7f\u7528\u9875\u7684\u6570\u91cf\u3002</li> </ul> </li> <li>\u903b\u8f91\u9875\u53f7\u5230\u7269\u7406\u9875\u53f7\u7684\u6620\u5c04: \u5b9e\u73b0\u4e00\u4e2a\u6620\u5c04\u51fd\u6570\u5c06\u5916\u90e8\u4f7f\u7528\u7684\u903b\u8f91\u9875\u53f7\u8f6c\u6362\u4e3a\u78c1\u76d8\u4e0a\u7684\u7269\u7406\u9875\u53f7\u3002</li> </ul> </li> <li> <p>BitmapPage (\u4f4d\u56fe\u9875): \u7ba1\u7406\u4e00\u4e2a\u533a\u5185\u6570\u636e\u9875\u7684\u5206\u914d\u72b6\u6001\u3002</p> <ul> <li>\u4f4d\u56fe\u8868\u793a: \u4f7f\u7528\u5b57\u8282\u6570\u7ec4 <code>bytes</code> \u6765\u5b58\u50a8\u4f4d\u56fe\uff0c\u6bcf\u4e2a\u4f4d\u4ee3\u8868\u4e00\u4e2a\u6570\u636e\u9875\u7684\u7a7a\u95f2\u72b6\u6001\u3002</li> <li>\u9875\u5206\u914d/\u56de\u6536: \u63d0\u4f9b <code>AllocatePage</code> \u548c <code>DeAllocatePage</code> \u65b9\u6cd5\uff0c\u901a\u8fc7\u4f4d\u56fe\u64cd\u4f5c\u6765\u5206\u914d\u548c\u91ca\u653e\u533a\u5185\u7684\u903b\u8f91\u9875\u3002</li> <li>\u67e5\u627e\u7a7a\u95f2\u9875: <code>next_free_page_</code> \u6210\u5458\u53d8\u91cf\u8bb0\u5f55\u4e0b\u4e00\u4e2a\u53ef\u80fd\u7a7a\u95f2\u9875\u7684\u504f\u79fb\u91cf\uff0c\u4f18\u5316\u67e5\u627e\u901f\u5ea6\u3002</li> <li>\u5df2\u5206\u914d\u9875\u8ba1\u6570: <code>page_allocated_</code> \u8bb0\u5f55\u5f53\u524d\u4f4d\u56fe\u9875\u7ba1\u7406\u7684\u533a\u4e2d\u5df2\u5206\u914d\u7684\u9875\u6570\u91cf\u3002</li> </ul> </li> <li> <p>BufferPoolManager (\u7f13\u51b2\u6c60\u7ba1\u7406\u5668): \u4f5c\u4e3a\u6570\u636e\u5e93\u7684\u5185\u5b58\u7f13\u5b58\u5c42\uff0c\u7ba1\u7406\u4ece\u78c1\u76d8\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u6570\u636e\u9875\u3002</p> <ul> <li>\u9875\u7f13\u5b58: \u7ef4\u62a4\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u533a\u57df\uff0c\u7528\u4e8e\u5b58\u50a8\u4ece\u78c1\u76d8\u8bfb\u53d6\u7684\u6570\u636e\u9875\u3002</li> <li>\u9875\u67e5\u627e\u4e0e\u66ff\u6362:<ul> <li>\u5f53\u8bf7\u6c42\u7684\u9875\u4e0d\u5728\u7f13\u51b2\u6c60\u4e2d\u65f6\uff0c\u4f1a\u4ece<code>free_list_</code>\u4e2d\u83b7\u53d6\u4e00\u4e2a\u9875\u5e27\uff0c\u6216\u8005\u901a\u8fc7\u9875\u9762\u66ff\u6362\u7b97\u6cd5\u6dd8\u6c70\u4e00\u4e2a\u73b0\u6709\u9875\u3002</li> <li>\u76ee\u524d\u91c7\u7528 LRU \u66ff\u6362\u7b56\u7565\u6765\u9009\u62e9\u727a\u7272\u9875\u3002</li> </ul> </li> <li>\u9875\u5143\u6570\u636e\u7ba1\u7406: \u7ef4\u62a4\u6bcf\u4e2a\u9875\u5e27\u7684\u5143\u6570\u636e\u3002</li> <li>\u9875\u56fa\u5b9a/\u53d6\u6d88\u56fa\u5b9a: \u901a\u8fc7 <code>pin_count</code> \u6765\u8ddf\u8e2a\u6709\u591a\u5c11\u4e2a\u7ebf\u7a0b\u6b63\u5728\u4f7f\u7528\u8be5\u9875\u3002\u88ab\u56fa\u5b9a\u7684\u9875\u4e0d\u80fd\u88ab\u66ff\u6362\u3002</li> <li>\u810f\u9875\u5904\u7406: \u5982\u679c\u727a\u7272\u9875\u7684\u5185\u5bb9\u88ab\u4fee\u6539\u8fc7\uff0c\u5728\u66ff\u6362\u4e4b\u524d\u5fc5\u987b\u5c06\u5176\u5199\u56de\u78c1\u76d8\u3002</li> <li>\u65b0\u9875\u5206\u914d: \u5f53\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u9875\u65f6\uff0c\u5411 <code>DiskManager</code> \u8bf7\u6c42\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u903b\u8f91\u9875\uff0c\u5e76\u5c06\u5176\u52a0\u8f7d\u5230\u7f13\u51b2\u6c60\u4e2d\u3002</li> </ul> </li> <li> <p>LRUReplacer (LRU \u66ff\u6362\u5668): \u5b9e\u73b0 LRU \u9875\u9762\u66ff\u6362\u7b97\u6cd5\u3002</p> <ul> <li>\u6570\u636e\u7ed3\u6784:<ul> <li><code>lru_list_</code> (<code>std::list&lt;frame_id_t&gt;</code>): \u53cc\u5411\u94fe\u8868\uff0c\u5934\u90e8\u4e3a\u6700\u8fd1\u4f7f\u7528\u7684\u9875\u5e27\uff0c\u5c3e\u90e8\u4e3a\u6700\u4e45\u672a\u4f7f\u7528\u7684\u9875\u5e27\u3002</li> <li><code>lru_set_</code> (<code>std::unordered_set&lt;frame_id_t&gt;</code>): \u5feb\u901f\u5224\u65ad\u4e00\u4e2a\u9875\u5e27\u662f\u5426\u5728 <code>lru_list_</code> \u4e2d\uff0c\u4ee5\u53ca\u5feb\u901f\u67e5\u627e\u5e76\u79fb\u9664\u3002</li> </ul> </li> <li>Pin/Unpin: <code>Pin</code> \u64cd\u4f5c\u5c06\u9875\u5e27\u4ece <code>lru_list_</code> \u4e2d\u79fb\u9664\uff0c\u4f7f\u5176\u4e0d\u80fd\u88ab\u66ff\u6362\uff1b<code>Unpin</code> \u64cd\u4f5c\u5c06\u9875\u5e27\u6dfb\u52a0\u5230 <code>lru_list_</code> \u7684\u5934\u90e8\uff0c\u8868\u793a\u6700\u8fd1\u88ab\u4f7f\u7528\u3002</li> <li>Victim: \u8fd4\u56de\u5e76\u79fb\u9664 <code>lru_list_</code> \u5c3e\u90e8\u7684\u9875\u5e27\uff08\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\uff09\uff0c\u4f5c\u4e3a\u727a\u7272\u9875\u3002</li> </ul> </li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#2","title":"2\u3001\u67b6\u6784\u56fe\u793a","text":"<ul> <li>\u4f4d\u56fe</li> </ul> <ul> <li>\u78c1\u76d8\u6570\u636e\u9875\u7ba1\u7406\u56fe</li> </ul> <ul> <li> <p>\u6a21\u5757\u5173\u952e\u64cd\u4f5c\u6d41\u7a0b</p> <ul> <li>\u8bfb\u64cd\u4f5c\u6d41\u7a0b\uff1aBufferPoolManager \u8bf7\u6c42\u9875 \u2192 \u68c0\u67e5\u7f13\u51b2\u6c60 \u2192 \u4e0d\u5b58\u5728\u5219\u8c03\u7528 DiskManager \u8bfb\u53d6 \u2192 \u8f6c\u6362\u903b\u8f91\u9875\u53f7\u4e3a\u7269\u7406\u9875\u53f7 \u2192 \u52a0\u8f7d\u5230\u7f13\u51b2\u6c60</li> <li>\u5199\u64cd\u4f5c\u6d41\u7a0b\uff1aBufferPoolManager \u4fee\u6539\u9875 \u2192 \u6807\u8bb0\u4e3a\u810f\u9875 \u2192 \u7f13\u51b2\u6c60\u6ee1\u65f6 LRUReplacer \u9009\u62e9\u727a\u7272\u9875 \u2192 \u810f\u9875\u5237\u76d8\u540e\u91ca\u653e</li> </ul> </li> <li> <p>DISK AND BUFFER POOL MANAGER\u6a21\u5757\u793a\u610f\u56fe</p> </li> </ul> <p></p>"},{"location":"sp25/db/report/minisql/lyj_report/#2_1","title":"2\u3001\u4ee3\u7801\u5206\u6790","text":"<p><code>bitmap_page.cpp</code></p> <ul> <li> <p><code>bool BitmapPage&lt;PageSize&gt;::AllocatePage(uint32_t &amp;page_offset)</code>:</p> <ul> <li>\u5728\u5f53\u524d\u4f4d\u56fe\u9875\u7ba1\u7406\u7684\u533a\u4e2d\u67e5\u627e\u4e00\u4e2a\u7a7a\u95f2\u4f4d\uff0c\u5c06\u5176\u6807\u8bb0\u4e3a\u5df2\u5206\u914d\u3002</li> <li>\u66f4\u65b0 <code>page_allocated_</code> \u548c <code>next_free_page_</code>\u3002</li> <li>\u901a\u8fc7 <code>page_offset</code> \u8fd4\u56de\u5206\u914d\u7684\u9875\u5728\u5f53\u524d\u4f4d\u56fe\u9875\u7ba1\u7406\u533a\u4e2d\u7684\u504f\u79fb\u91cf\u3002</li> <li>\u5982\u679c\u533a\u5df2\u6ee1\uff0c\u8fd4\u56de <code>false</code>\u3002</li> </ul> </li> <li> <p><code>bool BitmapPage&lt;PageSize&gt;::DeAllocatePage(uint32_t page_offset)</code>:</p> <ul> <li>\u5c06\u6307\u5b9a\u504f\u79fb\u91cf\u7684\u9875\u6807\u8bb0\u4e3a\u7a7a\u95f2\u3002</li> <li>\u66f4\u65b0 <code>page_allocated_</code> \u5e76\u53ef\u80fd\u66f4\u65b0 <code>next_free_page_</code>\u3002</li> <li>\u5982\u679c\u9875\u5df2\u662f\u7a7a\u95f2\u72b6\u6001\uff0c\u8fd4\u56de <code>false</code>\u3002</li> </ul> </li> <li> <p><code>bool BitmapPage&lt;PageSize&gt;::IsPageFree(uint32_t page_offset) const</code>:</p> <ul> <li>\u5224\u65ad\u6307\u5b9a\u504f\u79fb\u91cf\u7684\u9875\u662f\u5426\u7a7a\u95f2\u3002</li> <li>\u5185\u90e8\u8c03\u7528 <code>IsPageFreeLow</code> \u6765\u6267\u884c\u4f4d\u64cd\u4f5c\u5224\u65ad\u3002</li> </ul> </li> <li> <p><code>bool BitmapPage&lt;PageSize&gt;::IsPageFreeLow(uint32_t byte_index, uint8_t bit_index) const</code>:</p> <ul> <li>\u5b9e\u9645\u7684\u4f4d\u64cd\u4f5c\u51fd\u6570\uff0c\u901a\u8fc7\u68c0\u67e5 <code>bytes[byte_index]</code> \u4e2d <code>bit_index</code> \u4f4d\u7684\u72b6\u6001\u6765\u5224\u65ad\u9875\u662f\u5426\u7a7a\u95f2\u3002</li> </ul> </li> </ul> <p><code>buffer_pool_manager.cpp</code></p> <ul> <li> <p><code>Page *BufferPoolManager::FetchPage(page_id_t page_id)</code>:</p> <ul> <li>\u4ece\u7f13\u51b2\u6c60\u4e2d\u83b7\u53d6\u6307\u5b9a <code>page_id</code> \u7684\u6570\u636e\u9875\u3002</li> <li>\u67e5\u627e\u9875\u8868: \u5982\u679c\u9875\u5df2\u5728\u7f13\u51b2\u6c60\u4e2d\uff0c\u589e\u52a0 <code>pin_count</code> \u5e76\u5c06\u9875\u5e27\u4ece <code>replacer_</code> \u4e2d\u56fa\u5b9a\uff0c\u7136\u540e\u8fd4\u56de\u3002</li> <li>\u9875\u66ff\u6362: \u5982\u679c\u9875\u4e0d\u5728\u7f13\u51b2\u6c60\u4e2d\uff0c\u5c1d\u8bd5\u4ece <code>free_list_</code> \u83b7\u53d6\u9875\u5e27\uff1b\u5982\u679c <code>free_list_</code> \u4e3a\u7a7a\uff0c\u5219\u4ece <code>replacer_</code> \u4e2d\u9009\u62e9\u4e00\u4e2a\u727a\u7272\u9875\u5e27\u3002</li> <li>\u810f\u9875\u56de\u5199: \u5982\u679c\u727a\u7272\u9875\u662f\u810f\u7684\uff0c\u5c06\u5176\u5199\u56de\u78c1\u76d8\u3002</li> <li>\u66f4\u65b0\u9875\u8868: \u5c06\u65e7\u9875\u4ece <code>page_table_</code> \u4e2d\u79fb\u9664\uff0c\u5c06\u65b0\u9875\u63d2\u5165 <code>page_table_</code>\u3002</li> <li>\u8bfb\u5165\u65b0\u9875: \u4ece <code>DiskManager</code> \u8bfb\u53d6\u8bf7\u6c42\u7684\u9875\u5230\u65b0\u7684\u9875\u5e27\u4e2d\u3002</li> <li>\u66f4\u65b0\u5143\u6570\u636e: \u8bbe\u7f6e\u65b0\u9875\u7684 <code>page_id_</code>\u3001<code>pin_count_</code> \u3001<code>is_dirty_</code> \uff0c\u5e76\u56fa\u5b9a\u8be5\u9875\u5e27\u3002</li> </ul> </li> <li> <p><code>Page *BufferPoolManager::NewPage(page_id_t &amp;page_id)</code>:</p> <ul> <li>\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u9875\u5e76\u5c06\u5176\u52a0\u8f7d\u5230\u7f13\u51b2\u6c60\u4e2d\u3002</li> <li>\u5206\u914d\u903b\u8f91\u9875: \u8c03\u7528 <code>DiskManager::AllocatePage</code> \u5206\u914d\u4e00\u4e2a\u65b0\u7684\u903b\u8f91\u9875\u53f7\u3002</li> <li>\u83b7\u53d6\u9875\u5e27: \u4e0e <code>FetchPage</code> \u7c7b\u4f3c\uff0c\u5c1d\u8bd5\u4ece <code>free_list_</code> \u6216 <code>replacer_</code> \u83b7\u53d6\u4e00\u4e2a\u53ef\u7528\u7684\u9875\u5e27\u3002</li> <li>\u810f\u9875\u56de\u5199: \u5982\u679c\u9009\u5b9a\u7684\u9875\u5e27\u662f\u810f\u7684\uff0c\u5c06\u5176\u5185\u5bb9\u5199\u56de\u78c1\u76d8\u3002</li> <li>\u66f4\u65b0\u9875\u8868: \u4ece <code>page_table_</code> \u4e2d\u79fb\u9664\u65e7\u6620\u5c04\uff0c\u63d2\u5165\u65b0\u9875\u7684\u6620\u5c04\u3002</li> <li>\u521d\u59cb\u5316\u65b0\u9875: \u91cd\u7f6e\u9875\u5e27\u7684\u5185\u5b58\u4e3a\u96f6\uff0c\u8bbe\u7f6e <code>page_id_</code>\u3001<code>pin_count_</code>\u3001<code>is_dirty_</code>\uff0c\u5e76\u56fa\u5b9a\u8be5\u9875\u5e27\u3002</li> </ul> </li> <li> <p><code>bool BufferPoolManager::DeletePage(page_id_t page_id)</code>:</p> <ul> <li>\u91ca\u653e\u4e00\u4e2a\u6570\u636e\u9875\u3002</li> <li>\u91ca\u653e\u903b\u8f91\u9875: \u8c03\u7528 <code>DiskManager::DeallocatePage</code> \u91ca\u653e\u78c1\u76d8\u4e0a\u7684\u5bf9\u5e94\u903b\u8f91\u9875\u3002</li> <li>\u68c0\u67e5\u9875\u8868: \u5982\u679c\u9875\u4e0d\u5728\u7f13\u51b2\u6c60\u4e2d\uff0c\u76f4\u63a5\u8fd4\u56de <code>true</code>\u3002</li> <li>\u68c0\u67e5\u56fa\u5b9a\u8ba1\u6570: \u5982\u679c\u9875\u5728\u7f13\u51b2\u6c60\u4e2d\u4e14 <code>pin_count_</code> \u5927\u4e8e0\uff0c\u8868\u793a\u6b63\u5728\u88ab\u4f7f\u7528\uff0c\u8fd4\u56de <code>false</code>\u3002</li> <li>\u6e05\u7406\u7f13\u51b2\u6c60: \u5426\u5219\uff0c\u4ece <code>page_table_</code> \u4e2d\u79fb\u9664\u8be5\u9875\uff0c\u91cd\u7f6e\u9875\u5e27\u5143\u6570\u636e\uff0c\u5c06\u5176\u5f52\u8fd8\u5230 <code>free_list_</code>\uff0c\u5e76\u89e3\u9664\u56fa\u5b9a\u3002</li> </ul> </li> <li> <p><code>bool BufferPoolManager::UnpinPage(page_id_t page_id, bool is_dirty)</code>:</p> <ul> <li>\u51cf\u5c11\u4e00\u4e2a\u9875\u7684 <code>pin_count</code>\u3002</li> <li>\u68c0\u67e5\u9875\u662f\u5426\u5b58\u5728: \u5982\u679c\u9875\u4e0d\u5728\u7f13\u51b2\u6c60\u4e2d\uff0c\u8fd4\u56de <code>false</code>\u3002</li> <li>\u51cf\u5c11\u5f15\u7528\u8ba1\u6570: \u51cf\u5c11\u9875\u7684 <code>pin_count_</code>\u3002</li> <li>\u66f4\u65b0\u810f\u72b6\u6001: \u6839\u636e <code>is_dirty</code> \u53c2\u6570\u8bbe\u7f6e\u9875\u7684 <code>is_dirty_</code> \u72b6\u6001\u3002</li> <li>\u89e3\u9664\u56fa\u5b9a: \u5982\u679c <code>pin_count_</code> \u964d\u4e3a0\uff0c\u5219\u8c03\u7528 <code>replacer_-&gt;Unpin()</code> \u5c06\u8be5\u9875\u5e27\u91cd\u65b0\u52a0\u5165\u66ff\u6362\u5668\u7ba1\u7406\u961f\u5217\u3002</li> </ul> </li> <li> <p><code>bool BufferPoolManager::FlushPage(page_id_t page_id)</code>:</p> <ul> <li>\u5c06\u6307\u5b9a <code>page_id</code> \u7684\u6570\u636e\u9875\u5f3a\u5236\u5199\u56de\u78c1\u76d8\u3002</li> <li>\u68c0\u67e5\u9875\u662f\u5426\u5b58\u5728: \u5982\u679c\u9875\u4e0d\u5728\u7f13\u51b2\u6c60\u4e2d\uff0c\u8fd4\u56de <code>false</code>\u3002</li> <li>\u56de\u5199\u810f\u9875: \u5982\u679c\u9875\u662f\u810f\u7684\uff0c\u8c03\u7528 <code>disk_manager_-&gt;WritePage</code> \u5c06\u5176\u5185\u5bb9\u5199\u56de\u78c1\u76d8\uff0c\u5e76\u5c06 <code>is_dirty_</code> \u8bbe\u7f6e\u4e3a <code>false</code>\u3002</li> </ul> </li> <li> <p><code>frame_id_t BufferPoolManager::TryToFindFreePage()</code>:</p> <ul> <li>\u8f85\u52a9\u51fd\u6570\uff0c\u7528\u4e8e\u67e5\u627e\u4e00\u4e2a\u53ef\u7528\u7684\u9875\u5e27\uff0c\u4f18\u5148\u4ece <code>free_list_</code> \u83b7\u53d6\uff0c\u5176\u6b21\u4ece <code>replacer_</code> \u83b7\u53d6\u3002</li> </ul> </li> </ul> <p><code>lru_replacer.cpp</code></p> <ul> <li> <p><code>bool LRUReplacer::Victim(frame_id_t *frame_id)</code>:</p> <ul> <li>\u9009\u62e9\u5e76\u79fb\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u9875\u5e27\u3002</li> <li>\u5982\u679c <code>lru_list_</code> \u4e3a\u7a7a\uff0c\u8fd4\u56de <code>false</code>\u3002</li> <li>\u8fd4\u56de <code>lru_list_</code> \u5c3e\u90e8\u7684\u9875\u5e27\uff0c\u5e76\u5c06\u5176\u4ece <code>lru_list_</code> \u548c <code>lru_set_</code> \u4e2d\u79fb\u9664\u3002</li> </ul> </li> <li> <p><code>void LRUReplacer::Pin(frame_id_t frame_id)</code>:</p> <ul> <li>\u5c06\u6307\u5b9a\u7684 <code>frame_id</code> \u4ece LRU \u66ff\u6362\u5668\u4e2d\u79fb\u9664\uff0c\u4f7f\u5176\u4e0d\u80fd\u88ab\u66ff\u6362\u3002</li> <li>\u5982\u679c <code>frame_id</code> \u5b58\u5728\u4e8e <code>lru_set_</code> \u4e2d\uff0c\u5219\u4ece <code>lru_list_</code> \u548c <code>lru_set_</code> \u4e2d\u79fb\u9664\u3002</li> </ul> </li> <li> <p><code>void LRUReplacer::Unpin(frame_id_t frame_id)</code>:</p> <ul> <li>\u5c06\u6307\u5b9a\u7684 <code>frame_id</code> \u52a0\u5165 LRU \u66ff\u6362\u5668\uff0c\u4f7f\u5176\u53ef\u4ee5\u88ab\u66ff\u6362\u3002</li> <li>\u5982\u679c <code>frame_id</code> \u4e0d\u5728 <code>lru_set_</code> \u4e2d\uff0c\u5219\u5c06\u5176\u6dfb\u52a0\u5230 <code>lru_list_</code> \u7684\u5934\u90e8\uff0c\u8868\u793a\u5176\u6700\u8fd1\u88ab\u4f7f\u7528\u3002</li> <li>\u5982\u679c\u6dfb\u52a0\u540e <code>lru_list_</code> \u7684\u5927\u5c0f\u8d85\u8fc7 <code>capacity_</code>\uff0c\u5219\u9700\u8981\u6dd8\u6c70 <code>lru_list_</code> \u5c3e\u90e8\u7684\u9875\u5e27\u3002</li> </ul> </li> <li> <p><code>size_t LRUReplacer::Size()</code>:</p> <ul> <li>\u8fd4\u56de\u5f53\u524d LRU \u66ff\u6362\u5668\u4e2d\u53ef\u88ab\u66ff\u6362\u7684\u9875\u5e27\u6570\u91cf\u3002</li> </ul> </li> </ul> <p><code>disk_manager.cpp</code></p> <ul> <li> <p><code>DiskManager::DiskManager(const std::string &amp;db_file)</code>:</p> <ul> <li>\u6784\u9020\u51fd\u6570\uff0c\u6253\u5f00\u6216\u521b\u5efa\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u5e76\u8bfb\u53d6\u5143\u6570\u636e\u9875\u3002</li> </ul> </li> <li> <p><code>void DiskManager::Close()</code>:</p> <ul> <li>\u5173\u95ed\u6570\u636e\u5e93\u6587\u4ef6\uff0c\u5e76\u5728\u5173\u95ed\u524d\u5c06\u5143\u6570\u636e\u9875\u5199\u56de\u78c1\u76d8\u3002</li> </ul> </li> <li> <p><code>void DiskManager::ReadPage(page_id_t logical_page_id, char *page_data)</code>:</p> <ul> <li>\u8bfb\u53d6\u6307\u5b9a\u903b\u8f91\u9875\u53f7\u7684\u6570\u636e\u9875\u3002</li> <li>\u5185\u90e8\u8c03\u7528 <code>MapPageId</code> \u5c06\u903b\u8f91\u9875\u53f7\u8f6c\u6362\u4e3a\u7269\u7406\u9875\u53f7\uff0c\u7136\u540e\u8c03\u7528 <code>ReadPhysicalPage</code>\u3002</li> </ul> </li> <li> <p><code>void DiskManager::WritePage(page_id_t logical_page_id, const char *page_data)</code>:</p> <ul> <li>\u5199\u5165\u6307\u5b9a\u903b\u8f91\u9875\u53f7\u7684\u6570\u636e\u9875\u3002</li> <li>\u5185\u90e8\u8c03\u7528 <code>MapPageId</code> \u5c06\u903b\u8f91\u9875\u53f7\u8f6c\u6362\u4e3a\u7269\u7406\u9875\u53f7\uff0c\u7136\u540e\u8c03\u7528 <code>WritePhysicalPage</code>\u3002</li> </ul> </li> <li> <p><code>page_id_t DiskManager::AllocatePage()</code>:</p> <ul> <li>\u4ece\u78c1\u76d8\u4e2d\u5206\u914d\u4e00\u4e2a\u7a7a\u95f2\u7684\u903b\u8f91\u9875\u53f7\u3002</li> <li>\u904d\u5386\u4f4d\u56fe\u9875: \u67e5\u627e\u7b2c\u4e00\u4e2a\u8fd8\u6709\u7a7a\u95f2\u9875\u7684\u533a\u3002</li> <li>\u65b0\u5efa\u4f4d\u56fe\u9875: \u5982\u679c\u6240\u6709\u73b0\u6709\u533a\u90fd\u5df2\u6ee1\uff0c\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u533a\uff0c\u8fd9\u610f\u5473\u7740\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4f4d\u56fe\u9875\u5e76\u5c06\u5176\u521d\u59cb\u5316\u4e3a\u7a7a\u3002</li> <li>\u5206\u914d\u4f4d\u56fe\u4f4d: \u8bfb\u53d6\u5bf9\u5e94\u4f4d\u56fe\u9875\u7684\u5185\u5bb9\uff0c\u8c03\u7528 <code>BitmapPage::AllocatePage</code> \u6765\u5206\u914d\u4e00\u4e2a\u4f4d\u3002</li> <li>\u66f4\u65b0\u5143\u6570\u636e: \u66f4\u65b0 <code>DiskFileMetaPage</code> \u4e2d\u5df2\u5206\u914d\u9875\u7684\u603b\u6570\u548c\u5bf9\u5e94\u533a\u5df2\u4f7f\u7528\u9875\u7684\u6570\u91cf\uff0c\u5e76\u5c06\u4f4d\u56fe\u9875\u5199\u56de\u78c1\u76d8\u3002</li> </ul> </li> <li> <p><code>void DiskManager::DeAllocatePage(page_id_t logical_page_id)</code>:</p> <ul> <li>\u91ca\u653e\u6307\u5b9a\u903b\u8f91\u9875\u53f7\u7684\u78c1\u76d8\u7a7a\u95f4\u3002</li> <li>\u8ba1\u7b97\u4f4d\u56fe\u9875\u4fe1\u606f: \u6839\u636e <code>logical_page_id</code> \u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u4f4d\u56fe\u9875\u7684\u7269\u7406\u5730\u5740\u548c\u5728\u8be5\u4f4d\u56fe\u9875\u4e2d\u7684\u504f\u79fb\u91cf\u3002</li> <li>\u91ca\u653e\u4f4d\u56fe\u4f4d: \u8bfb\u53d6\u5bf9\u5e94\u7684\u4f4d\u56fe\u9875\uff0c\u8c03\u7528 <code>BitmapPage::DeAllocatePage</code> \u91ca\u653e\u5bf9\u5e94\u7684\u4f4d\u3002</li> <li>\u66f4\u65b0\u5143\u6570\u636e: \u66f4\u65b0 <code>DiskFileMetaPage</code> \u4e2d\u5df2\u5206\u914d\u9875\u7684\u603b\u6570\u548c\u5bf9\u5e94\u533a\u5df2\u4f7f\u7528\u9875\u7684\u6570\u91cf\uff0c\u5e76\u5c06\u4f4d\u56fe\u9875\u5199\u56de\u78c1\u76d8\u3002</li> </ul> </li> <li> <p><code>bool DiskManager::IsPageFree(page_id_t logical_page_id)</code>:</p> <ul> <li>\u5224\u65ad\u6307\u5b9a\u903b\u8f91\u9875\u53f7\u662f\u5426\u7a7a\u95f2\u3002</li> <li>\u4e0e <code>DeAllocatePage</code> \u7c7b\u4f3c\uff0c\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u4f4d\u56fe\u9875\u4fe1\u606f\uff0c\u7136\u540e\u8c03\u7528 <code>BitmapPage::IsPageFree</code>\u3002</li> </ul> </li> <li> <p><code>page_id_t DiskManager::MapPageId(page_id_t logical_page_id)</code>:</p> <ul> <li>\u5c06\u903b\u8f91\u9875\u53f7\u8f6c\u6362\u4e3a\u7269\u7406\u9875\u53f7\u3002</li> </ul> </li> <li> <p><code>void DiskManager::ReadPhysicalPage(page_id_t physical_page_id, char *page_data)</code>:</p> <ul> <li>\u4ece\u78c1\u76d8\u8bfb\u53d6\u4e00\u4e2a\u7269\u7406\u9875\u5230 <code>page_data</code> \u7f13\u51b2\u533a\u3002</li> <li>\u5904\u7406\u6587\u4ef6\u672b\u5c3e\u4e0d\u8db3\u4e00\u4e2a\u9875\u7684\u60c5\u51b5\uff0c\u7528\u96f6\u586b\u5145\u5269\u4f59\u90e8\u5206\u3002</li> </ul> </li> <li> <p><code>void DiskManager::WritePhysicalPage(page_id_t physical_page_id, const char *page_data)</code>:</p> <ul> <li>\u5c06 <code>page_data</code> \u7f13\u51b2\u533a\u7684\u5185\u5bb9\u5199\u5165\u78c1\u76d8\u4e0a\u7684\u4e00\u4e2a\u7269\u7406\u9875\u3002</li> <li>\u5237\u65b0\u6587\u4ef6\u6d41\u4ee5\u786e\u4fdd\u6570\u636e\u5199\u5165\u78c1\u76d8\u3002</li> </ul> </li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#record-manager","title":"<code>RECORD MANAGER</code> \u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/lyj_report/#1_1","title":"1\u3001\u67b6\u6784\u8bbe\u8ba1","text":"<p><code>Record Manager</code> \u6a21\u5757\u4e3b\u8981\u8d1f\u8d23\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u5b58\u50a8\u3001\u7ba1\u7406\u548c\u8bbf\u95ee\u3002\u5b83\u5b9a\u4e49\u4e86\u6570\u636e\u5728\u78c1\u76d8\u4e0a\u7684\u7269\u7406\u5e03\u5c40\uff0c\u5e76\u63d0\u4f9b\u4e86\u64cd\u4f5c\u8fd9\u4e9b\u6570\u636e\u7684\u63a5\u53e3\u3002\u8be5\u6a21\u5757\u662f\u6570\u636e\u5e93\u5b58\u50a8\u5c42\u7684\u57fa\u7840\uff0c\u786e\u4fdd\u4e86\u6570\u636e\u7684\u6301\u4e45\u6027\u548c\u9ad8\u6548\u8bbf\u95ee\u3002</p> <ul> <li>\u6838\u5fc3\u7ec4\u4ef6:<ul> <li><code>Column</code> (\u5217): \u63cf\u8ff0\u4e86\u8868\u4e2d\u5355\u4e2a\u5217\u7684\u5143\u6570\u636e\uff0c\u5305\u62ec\u5217\u540d\u3001\u6570\u636e\u7c7b\u578b\u3001\u957f\u5ea6\u3001\u5728\u8868\u4e2d\u7684\u7d22\u5f15\u3001\u662f\u5426\u53ef\u7a7a\u4ee5\u53ca\u662f\u5426\u552f\u4e00\u3002<ul> <li>\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316: \u63d0\u4f9b\u4e86 <code>SerializeTo</code> \u548c <code>DeserializeFrom</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06 Column \u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u8282\u6d41\u5b58\u50a8\u5230\u78c1\u76d8\uff0c\u4ee5\u53ca\u4ece\u5b57\u8282\u6d41\u4e2d\u91cd\u5efa Column \u5bf9\u8c61\u3002</li> </ul> </li> <li><code>Row</code> (\u884c): \u4ee3\u8868\u4e86\u6570\u636e\u5e93\u8868\u4e2d\u7684\u4e00\u6761\u8bb0\u5f55\u3002<ul> <li>\u5b57\u6bb5\u7ba1\u7406: \u5185\u90e8\u901a\u8fc7 <code>Field</code> \u6307\u9488\u6570\u7ec4\u6765\u7ef4\u62a4\u8bb0\u5f55\u4e2d\u7684\u5404\u4e2a\u5b57\u6bb5\u3002</li> <li>\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316: <code>SerializeTo</code> \u5c06 <code>Row</code> \u5bf9\u8c61\u53ca\u5176\u5305\u542b\u7684 <code>Field</code> \u6570\u636e\u5e8f\u5217\u5316\u5230\u6307\u5b9a\u7684\u7f13\u51b2\u533a\uff0c\u5e76\u5229\u7528\u4f4d\u56fe\u9ad8\u6548\u5904\u7406\u7a7a\u503c\u3002<code>DeserializeFrom</code> \u5219\u4ece\u7f13\u51b2\u533a\u53cd\u5e8f\u5217\u5316\u6570\u636e\uff0c\u91cd\u5efa <code>Row</code> \u5bf9\u8c61\u3002</li> <li>\u8bb0\u5f55\u5927\u5c0f\u8ba1\u7b97: <code>GetSerializedSize</code> \u8ba1\u7b97\u5e8f\u5217\u5316\u540e\u7684 <code>Row</code> \u5728\u78c1\u76d8\u4e0a\u5360\u7528\u7684\u5b57\u8282\u6570\uff0c\u4ee5\u4fbf\u5b58\u50a8\u7ba1\u7406\u5668\u80fd\u591f\u4e3a\u5176\u5206\u914d\u5408\u9002\u7684\u7a7a\u95f4\u3002</li> <li>\u4e3b\u952e\u63d0\u53d6: <code>GetKeyFromRow</code> \u6839\u636e\u7ed9\u5b9a\u7684 <code>Key Schema</code> \u4ece\u5f53\u524d <code>Row</code> \u4e2d\u63d0\u53d6\u51fa\u4f5c\u4e3a\u952e\u7684\u5b57\u6bb5\uff0c\u7528\u4e8e\u7d22\u5f15\u64cd\u4f5c\u3002</li> </ul> </li> <li><code>Schema</code> (\u6a21\u5f0f): \u5b9a\u4e49\u4e86\u6570\u636e\u5e93\u8868\u7684\u7ed3\u6784\uff0c\u5305\u542b\u4e86\u4e00\u7ec4 <code>Column</code> \u5bf9\u8c61\u3002<ul> <li>\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316: \u63d0\u4f9b\u4e86 <code>SerializeTo</code> \u548c <code>DeserializeFrom</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u5c06 <code>Schema</code> \u5bf9\u8c61\u7684\u5143\u6570\u636e\u5b58\u50a8\u5230\u78c1\u76d8\uff0c\u4ee5\u53ca\u4ece\u78c1\u76d8\u52a0\u8f7d\u8868\u7ed3\u6784\u3002</li> <li>\u6a21\u5f0f\u5927\u5c0f\u8ba1\u7b97: <code>GetSerializedSize</code> \u8ba1\u7b97\u5e8f\u5217\u5316\u540e\u7684 <code>Schema</code> \u5728\u78c1\u76d8\u4e0a\u5360\u7528\u7684\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>Field</code> (\u5b57\u6bb5): \u4ee3\u8868\u4e86 <code>Row</code> \u4e2d\u5355\u4e2a\u5217\u7684\u6570\u636e\u503c\u3002<ul> <li>\u6570\u636e\u7c7b\u578b\u5c01\u88c5: \u5c01\u88c5\u4e86\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u503c\uff0c\u5e76\u652f\u6301\u7a7a\u503c\u3002</li> <li>\u7c7b\u578b\u65e0\u5173\u64cd\u4f5c: \u63d0\u4f9b\u4e86\u7c7b\u578b\u65e0\u5173\u7684\u5e8f\u5217\u5316\u3001\u53cd\u5e8f\u5217\u5316\u548c\u6bd4\u8f83\u64cd\u4f5c\uff0c\u901a\u8fc7\u591a\u6001\u6027\u5c06\u5177\u4f53\u64cd\u4f5c\u59d4\u6258\u7ed9 <code>Type</code> \u7c7b\u7684\u5b50\u7c7b\u3002</li> </ul> </li> <li><code>Type</code> (\u6570\u636e\u7c7b\u578b): \u62bd\u8c61\u57fa\u7c7b\uff0c\u5b9a\u4e49\u4e86\u6570\u636e\u5e93\u4e2d\u5404\u79cd\u6570\u636e\u7c7b\u578b\u7684\u901a\u7528\u63a5\u53e3\u548c\u64cd\u4f5c\u3002<ul> <li>\u591a\u6001\u5b9e\u73b0: \u5177\u4f53\u6570\u636e\u7c7b\u578b\u7ee7\u627f\u81ea <code>Type</code> \u7c7b\uff0c\u5b9e\u73b0\u5404\u81ea\u7684\u5e8f\u5217\u5316\u3001\u53cd\u5e8f\u5217\u5316\u3001\u5927\u5c0f\u8ba1\u7b97\u548c\u6bd4\u8f83\u903b\u8f91\u3002</li> </ul> </li> <li><code>TableHeap</code> (\u8868\u5806): \u7ba1\u7406\u8868\u7684\u6240\u6709\u6570\u636e\u9875\uff0c\u652f\u6301\u5bf9\u8868\u4e2d\u7684\u8bb0\u5f55\u8fdb\u884c\u63d2\u5165\u3001\u66f4\u65b0\u3001\u5220\u9664\u548c\u67e5\u8be2\u3002<ul> <li>\u9875\u9762\u94fe\u8868: \u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u9875\u9762\u94fe\u8868\u6765\u5b58\u50a8 <code>Row</code> \u6570\u636e\uff0c\u6bcf\u4e2a\u9875\u9762\u662f\u4e00\u4e2a <code>TablePage</code>\u3002</li> <li>\u8bb0\u5f55\u64cd\u4f5c: \u63d0\u4f9b\u4e86 <code>InsertTuple</code>, <code>UpdateTuple</code>, <code>ApplyDelete</code>, <code>GetTuple</code>, <code>MarkDelete</code>, <code>RollbackDelete</code> \u7b49\u65b9\u6cd5\uff0c\u7528\u4e8e\u7ba1\u7406\u8868\u4e2d\u7684\u8bb0\u5f55\u3002</li> <li>\u8fed\u4ee3\u5668\u652f\u6301: <code>Begin</code> \u548c <code>End</code> \u65b9\u6cd5\u8fd4\u56de <code>TableIterator</code>\uff0c\u652f\u6301\u5bf9\u8868\u4e2d\u6240\u6709\u8bb0\u5f55\u7684\u987a\u5e8f\u626b\u63cf\u3002</li> <li>Buffer Pool Manager\u4ea4\u4e92: \u901a\u8fc7 <code>BufferPoolManager</code> \u6765\u83b7\u53d6\u3001\u56fa\u5b9a\u548c\u91ca\u653e\u6570\u636e\u9875\u3002</li> </ul> </li> <li><code>TableIterator</code> (\u8868\u8fed\u4ee3\u5668): \u5b9e\u73b0\u4e86\u5bf9 <code>TableHeap</code> \u4e2d\u8bb0\u5f55\u7684\u904d\u5386\u529f\u80fd\u3002<ul> <li>\u72b6\u6001\u7ba1\u7406: \u7ef4\u62a4\u5f53\u524d\u6307\u5411\u7684 <code>Row</code> \u548c\u6240\u5c5e\u7684 <code>TableHeap</code>\u3002</li> <li>\u904d\u5386\u64cd\u4f5c: \u91cd\u8f7d\u4e86 <code>operator++</code> \u548c <code>operator*</code> \u7b49\u64cd\u4f5c\u7b26\uff0c\u4f7f\u5f97\u53ef\u4ee5\u50cf\u904d\u5386\u6807\u51c6\u5bb9\u5668\u4e00\u6837\u904d\u5386\u8868\u4e2d\u7684\u8bb0\u5f55\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#2_2","title":"2\u3001\u4ee3\u7801\u5206\u6790","text":"<p>** <code>column.cpp</code>**</p> <ul> <li><code>Column::Column(std::string column_name, TypeId type, uint32_t index, bool nullable, bool unique)</code>:<ul> <li>\u6784\u9020\u51fd\u6570\uff0c\u7528\u4e8e <code>INT</code> \u548c <code>FLOAT</code> \u7c7b\u578b\u7684\u5217\u3002\u6839\u636e <code>type</code> \u81ea\u52a8\u8bbe\u7f6e <code>len_</code> \u4e3a\u5bf9\u5e94\u6570\u636e\u7c7b\u578b\u7684\u5927\u5c0f\u3002</li> </ul> </li> <li><code>Column::Column(std::string column_name, TypeId type, uint32_t length, uint32_t index, bool nullable, bool unique)</code>:<ul> <li>\u6784\u9020\u51fd\u6570\uff0c\u4e13\u95e8\u7528\u4e8e <code>CHAR</code> \u7c7b\u578b\u7684\u5217\u3002\u9700\u8981\u989d\u5916\u6307\u5b9a <code>length</code> \u53c2\u6570\u3002</li> </ul> </li> <li><code>Column::Column(const Column *other)</code>:<ul> <li>\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7528\u4e8e\u521b\u5efa <code>Column</code> \u5bf9\u8c61\u7684\u526f\u672c\u3002</li> </ul> </li> <li><code>uint32_t Column::SerializeTo(char *buf) const</code>:<ul> <li>\u5c06 <code>Column</code> \u5bf9\u8c61\u7684\u5143\u6570\u636e\u5e8f\u5217\u5316\u5230 <code>buf</code> \u4e2d\u3002</li> <li>\u8fd4\u56de\u5199\u5165\u7684\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>uint32_t Column::GetSerializedSize() const</code>:<ul> <li>\u8ba1\u7b97 <code>Column</code> \u5bf9\u8c61\u5e8f\u5217\u5316\u540e\u6240\u9700\u7684\u603b\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>static uint32_t Column::DeserializeFrom(char *buf, Column *&amp;column)</code>:<ul> <li>\u4ece <code>buf</code> \u4e2d\u53cd\u5e8f\u5217\u5316\u6570\u636e\uff0c\u91cd\u5efa <code>Column</code> \u5bf9\u8c61\u3002</li> <li>\u9996\u5148\u68c0\u67e5\u9b54\u6570\u4ee5\u9a8c\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u3002</li> <li>\u6839\u636e\u53cd\u5e8f\u5217\u5316\u51fa\u7684\u6570\u636e\u7c7b\u578b\u9009\u62e9\u6b63\u786e\u7684 <code>Column</code> \u6784\u9020\u51fd\u6570\u3002</li> <li>\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002</li> </ul> </li> </ul> <p><code>record/row.h</code> / <code>record/row.cpp</code></p> <ul> <li><code>uint32_t Row::SerializeTo(char *buf, Schema *schema) const</code>:<ul> <li>\u5c06 <code>Row</code> \u5bf9\u8c61\u4e2d\u7684\u6240\u6709 <code>Field</code> \u6570\u636e\u5e8f\u5217\u5316\u5230 <code>buf</code> \u4e2d\u3002</li> <li>\u5e8f\u5217\u5316\u5305\u62ec\u5b57\u6bb5\u6570\u91cf\u3001\u7a7a\u503c\u4f4d\u56fe\u548c\u5404\u4e2a\u975e\u7a7a\u5b57\u6bb5\u7684\u6570\u636e\u3002</li> <li>\u8fd4\u56de\u5199\u5165\u7684\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>uint32_t Row::DeserializeFrom(char *buf, Schema *schema)</code>:<ul> <li>\u4ece <code>buf</code> \u4e2d\u53cd\u5e8f\u5217\u5316\u6570\u636e\uff0c\u91cd\u5efa <code>Row</code> \u5bf9\u8c61\u3002</li> <li>\u8bfb\u53d6\u5b57\u6bb5\u6570\u91cf\u548c\u7a7a\u503c\u4f4d\u56fe\uff0c\u7136\u540e\u6839\u636e\u4f4d\u56fe\u548c <code>Schema</code> \u4fe1\u606f\u8c03\u7528 <code>Field::DeserializeFrom</code> \u521b\u5efa <code>Field</code> \u5bf9\u8c61\u3002</li> <li>\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>uint32_t Row::GetSerializedSize(Schema *schema) const</code>:<ul> <li>\u8ba1\u7b97 <code>Row</code> \u5bf9\u8c61\u5e8f\u5217\u5316\u540e\u6240\u9700\u7684\u603b\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>void Row::GetKeyFromRow(const Schema *schema, const Schema *key_schema, Row &amp;key_row)</code>:<ul> <li>\u6839\u636e <code>key_schema</code> \u4ece\u5f53\u524d <code>Row</code> \u4e2d\u63d0\u53d6\u51fa\u5bf9\u5e94\u5b57\u6bb5\uff0c\u5e76\u6784\u5efa\u4e00\u4e2a\u65b0\u7684 <code>key_row</code>\u3002</li> </ul> </li> </ul> <p><code>schema.cpp</code></p> <ul> <li><code>uint32_t Schema::SerializeTo(char *buf) const</code>:<ul> <li>\u5c06 <code>Schema</code> \u5bf9\u8c61\u7684\u5143\u6570\u636e\u5e8f\u5217\u5316\u5230 <code>buf</code> \u4e2d\u3002</li> <li>\u8fd4\u56de\u5199\u5165\u7684\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>uint32_t Schema::GetSerializedSize() const</code>:<ul> <li>\u8ba1\u7b97 <code>Schema</code> \u5bf9\u8c61\u5e8f\u5217\u5316\u540e\u6240\u9700\u7684\u603b\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>static uint32_t Schema::DeserializeFrom(char *buf, Schema *&amp;schema)</code>:<ul> <li>\u4ece <code>buf</code> \u4e2d\u53cd\u5e8f\u5217\u5316\u6570\u636e\uff0c\u91cd\u5efa <code>Schema</code> \u5bf9\u8c61\u3002</li> <li>\u9996\u5148\u68c0\u67e5\u9b54\u6570\uff0c\u7136\u540e\u8bfb\u53d6\u5217\u6570\u91cf\uff0c\u5e76\u5faa\u73af\u8c03\u7528 <code>Column::DeserializeFrom</code> \u6765\u91cd\u5efa\u6240\u6709 <code>Column</code>\u3002</li> <li>\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002</li> </ul> </li> </ul> <p><code>types.cpp</code></p> <ul> <li><code>Type::type_singletons_[]</code>:<ul> <li>\u9759\u6001\u6570\u7ec4\uff0c\u5b58\u50a8\u4e86\u5404\u79cd <code>Type</code>\uff08<code>TypeInt</code>, <code>TypeFloat</code>, <code>TypeChar</code>\uff09\u7684\u5355\u4f8b\u5b9e\u4f8b\u3002</li> </ul> </li> <li><code>uint32_t TypeInt::SerializeTo(const Field &amp;field, char *buf) const</code>:<ul> <li>\u9488\u5bf9 <code>INT</code> \u7c7b\u578b\uff0c\u5c06 <code>Field</code> \u4e2d\u7684\u6574\u6570\u503c\u5e8f\u5217\u5316\u5230 <code>buf</code>\u3002</li> </ul> </li> <li><code>uint32_t TypeInt::DeserializeFrom(char *storage, Field **field, bool is_null) const</code>:<ul> <li>\u9488\u5bf9 <code>INT</code> \u7c7b\u578b\uff0c\u4ece <code>storage</code> \u4e2d\u53cd\u5e8f\u5217\u5316\u6574\u6570\u503c\uff0c\u5e76\u521b\u5efa\u65b0\u7684 <code>Field</code> \u5bf9\u8c61\u3002</li> </ul> </li> <li><code>uint32_t TypeInt::GetSerializedSize(const Field &amp;field, bool is_null) const</code>:<ul> <li>\u9488\u5bf9 <code>INT</code> \u7c7b\u578b\uff0c\u8ba1\u7b97\u5e8f\u5217\u5316\u540e\u6240\u9700\u5b57\u8282\u6570\u3002</li> </ul> </li> <li><code>CmpBool TypeInt::CompareEquals(const Field &amp;left, const Field &amp;right) const</code>:<ul> <li>\u9488\u5bf9 <code>INT</code> \u7c7b\u578b\uff0c\u6bd4\u8f83\u4e24\u4e2a <code>Field</code> \u7684\u503c\u3002\u5728\u6bd4\u8f83\u524d\u4f1a\u68c0\u67e5\u662f\u5426\u53ef\u6bd4\u8f83\u4ee5\u53ca\u662f\u5426\u6709\u7a7a\u503c\u3002</li> </ul> </li> <li><code>TypeFloat</code> \u548c <code>TypeChar</code> \u7c7b\u7684\u6bd4\u8f83\u65b9\u6cd5:<ul> <li>\u529f\u80fd\u4e0e <code>TypeInt</code> \u7c7b\u4f3c\uff0c\u4f46\u9488\u5bf9\u5404\u81ea\u7684\u6570\u636e\u7c7b\u578b\u5b9e\u73b0\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u3001\u53cd\u5e8f\u5217\u5316\u548c\u6bd4\u8f83\u903b\u8f91\u3002<code>TypeChar</code> \u4f1a\u989d\u5916\u5904\u7406\u5b57\u7b26\u4e32\u957f\u5ea6\u3002</li> </ul> </li> </ul> <p><code>table_heap.cpp</code></p> <ul> <li><code>bool TableHeap::InsertTuple(Row &amp;row, Txn *txn)</code>:<ul> <li>\u5411\u8868\u5806\u4e2d\u63d2\u5165\u4e00\u6761 <code>Row</code> \u8bb0\u5f55\u3002</li> <li>\u68c0\u67e5 <code>Row</code> \u5927\u5c0f\u662f\u5426\u8d85\u51fa\u9875\u9762\u9650\u5236\u3002</li> <li>\u904d\u5386\u9875\u9762\u94fe\u8868\u67e5\u627e\u6709\u8db3\u591f\u7a7a\u95f4\u7684 <code>TablePage</code>\uff0c\u5982\u679c\u9700\u8981\u5219\u521b\u5efa\u65b0\u9875\u9762\u5e76\u94fe\u63a5\u3002</li> <li>\u8c03\u7528 <code>TablePage::InsertTuple</code> \u5728\u9875\u9762\u4e2d\u63d2\u5165\u5b9e\u9645\u6570\u636e\u3002</li> </ul> </li> <li><code>bool TableHeap::UpdateTuple(Row &amp;new_row, const RowId &amp;rid, Txn *txn)</code>:<ul> <li>\u66f4\u65b0\u6307\u5b9a <code>RowId</code> \u7684\u8bb0\u5f55\u3002</li> <li>\u5c1d\u8bd5\u5728\u539f\u9875\u9762\u66f4\u65b0\u3002\u5982\u679c\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5219\u5148 <code>MarkDelete</code> \u539f\u8bb0\u5f55\uff0c\u518d <code>InsertTuple</code> \u65b0\u8bb0\u5f55\uff0c\u6700\u540e <code>ApplyDelete</code> \u7269\u7406\u5220\u9664\u65e7\u8bb0\u5f55\u3002</li> </ul> </li> <li><code>void TableHeap::ApplyDelete(const RowId &amp;rid, Txn *txn)</code>:<ul> <li>\u7269\u7406\u5220\u9664\u6307\u5b9a <code>RowId</code> \u7684\u8bb0\u5f55\uff0c\u91ca\u653e\u5176\u5728\u9875\u9762\u4e2d\u7684\u7a7a\u95f4\u3002</li> </ul> </li> <li><code>bool TableHeap::GetTuple(Row *row, Txn *txn)</code>:<ul> <li>\u6839\u636e <code>RowId</code> \u83b7\u53d6\u6307\u5b9a\u7684 <code>Row</code> \u8bb0\u5f55\u3002</li> <li>\u4ece <code>BufferPoolManager</code> \u83b7\u53d6\u5bf9\u5e94\u9875\u9762\uff0c\u5e76\u8c03\u7528 <code>TablePage::GetTuple</code> \u8bfb\u53d6\u6570\u636e\u3002</li> </ul> </li> <li><code>TableIterator TableHeap::Begin(Txn *txn)</code>:<ul> <li>\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8868\u5806\u4e2d\u7b2c\u4e00\u6761\u6709\u6548\u8bb0\u5f55\u7684\u8fed\u4ee3\u5668\u3002</li> <li>\u4f1a\u904d\u5386\u9875\u9762\u94fe\u8868\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u6761\u8bb0\u5f55\u3002</li> </ul> </li> <li><code>TableIterator TableHeap::End()</code>:<ul> <li>\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8868\u7ed3\u675f\u7684\u8fed\u4ee3\u5668\u3002</li> </ul> </li> <li><code>bool TableHeap::MarkDelete(const RowId &amp;rid, Txn *txn)</code>:<ul> <li>\u6807\u8bb0\u6307\u5b9a <code>RowId</code> \u7684\u8bb0\u5f55\u4e3a\u903b\u8f91\u5220\u9664\u3002</li> </ul> </li> <li><code>void TableHeap::RollbackDelete(const RowId &amp;rid, Txn *txn)</code>:<ul> <li>\u56de\u6eda\u5bf9\u6307\u5b9a <code>RowId</code> \u8bb0\u5f55\u7684\u903b\u8f91\u5220\u9664\u6807\u8bb0\u3002</li> </ul> </li> <li><code>void TableHeap::DeleteTable(page_id_t page_id)</code>:<ul> <li>\u9012\u5f52\u5220\u9664\u8868\u5806\u4e2d\u7684\u6240\u6709\u9875\u9762\uff0c\u91ca\u653e\u5360\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\u3002</li> </ul> </li> </ul> <p><code>table_iterator.cpp</code></p> <ul> <li><code>TableIterator::TableIterator(TableHeap *table_heap, RowId rid, Txn *txn)</code>:<ul> <li>\u6784\u9020\u51fd\u6570\uff0c\u6839\u636e\u7ed9\u5b9a\u7684 <code>TableHeap</code> \u548c <code>RowId</code> \u521d\u59cb\u5316\u8fed\u4ee3\u5668\u3002</li> <li>\u5c1d\u8bd5\u83b7\u53d6 <code>RowId</code> \u5bf9\u5e94\u7684 <code>Row</code> \u6570\u636e\u3002</li> </ul> </li> <li><code>TableIterator::TableIterator(const TableIterator &amp;other)</code>:<ul> <li>\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5b9e\u73b0\u5bf9 <code>current_row_</code> \u7684\u6df1\u62f7\u8d1d\u3002</li> </ul> </li> <li><code>TableIterator::TableIterator(TableIterator &amp;&amp;other) noexcept</code>:<ul> <li>\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3002</li> </ul> </li> <li><code>TableIterator::~TableIterator()</code>:<ul> <li>\u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e <code>current_row_</code> \u6240\u5360\u7528\u7684\u5185\u5b58\u3002</li> </ul> </li> <li><code>bool TableIterator::operator==(const TableIterator &amp;itr) const</code>:<ul> <li>\u5224\u65ad\u4e24\u4e2a\u8fed\u4ee3\u5668\u662f\u5426\u6307\u5411\u540c\u4e00\u6761\u8bb0\u5f55\u6216\u90fd\u8868\u793a\u7ed3\u675f\u3002</li> </ul> </li> <li><code>bool TableIterator::operator!=(const TableIterator &amp;itr) const</code>:<ul> <li>\u5224\u65ad\u4e24\u4e2a\u8fed\u4ee3\u5668\u662f\u5426\u4e0d\u76f8\u7b49\u3002</li> </ul> </li> <li><code>const Row &amp;TableIterator::operator*()</code>:<ul> <li>\u89e3\u5f15\u7528\u64cd\u4f5c\u7b26\uff0c\u8fd4\u56de\u5f53\u524d\u8fed\u4ee3\u5668\u6307\u5411\u7684 <code>Row</code> \u5bf9\u8c61\u7684\u5f15\u7528\u3002</li> </ul> </li> <li><code>Row *TableIterator::operator-&gt;()</code>:<ul> <li>\u6210\u5458\u8bbf\u95ee\u64cd\u4f5c\u7b26\uff0c\u8fd4\u56de\u6307\u5411\u5f53\u524d <code>Row</code> \u5bf9\u8c61\u7684\u6307\u9488\u3002</li> </ul> </li> <li><code>TableIterator &amp;TableIterator::operator=(const TableIterator &amp;itr) noexcept</code>:<ul> <li>\u8d4b\u503c\u64cd\u4f5c\u7b26\uff0c\u5b9e\u73b0\u6df1\u62f7\u8d1d\u3002</li> </ul> </li> <li><code>TableIterator &amp;TableIterator::operator++()</code>:<ul> <li>\u524d\u7f00\u9012\u589e\u64cd\u4f5c\u7b26\u3002\u5c06\u8fed\u4ee3\u5668\u524d\u8fdb\u5230\u4e0b\u4e00\u6761\u6709\u6548\u8bb0\u5f55\u3002</li> <li>\u5982\u679c\u5f53\u524d\u9875\u9762\u6ca1\u6709\u66f4\u591a\u8bb0\u5f55\uff0c\u4f1a\u4ece <code>TableHeap</code> \u83b7\u53d6\u4e0b\u4e00\u4e2a\u9875\u9762\u5e76\u67e5\u627e\u7b2c\u4e00\u6761\u8bb0\u5f55\u3002</li> <li>\u5982\u679c\u627e\u4e0d\u5230\u4e0b\u4e00\u6761\u8bb0\u5f55\uff0c\u5219\u5c06\u8fed\u4ee3\u5668\u8bbe\u7f6e\u4e3a <code>End()</code>\u3002</li> </ul> </li> <li><code>TableIterator TableIterator::operator++(int)</code>:<ul> <li>\u540e\u7f00\u9012\u589e\u64cd\u4f5c\u7b26\u3002\u521b\u5efa\u5f53\u524d\u8fed\u4ee3\u5668\u7684\u4e00\u4e2a\u526f\u672c\uff0c\u7136\u540e\u9012\u589e\u5f53\u524d\u8fed\u4ee3\u5668\uff0c\u5e76\u8fd4\u56de\u4e4b\u524d\u521b\u5efa\u7684\u526f\u672c\u3002</li> </ul> </li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#lock-manager","title":"<code>LOCK MANAGER</code> \u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/lyj_report/#1_2","title":"1\u3001\u67b6\u6784\u8bbe\u8ba1","text":"<p><code>Lock Manager</code> \u6a21\u5757\u4e3b\u8981\u8d1f\u8d23\u6570\u636e\u5e93\u4e2d\u7684\u5e76\u53d1\u63a7\u5236\uff0c\u786e\u4fdd\u4e8b\u52a1\u5728\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u65f6\u7684\u4e00\u81f4\u6027\u3002\u5b83\u901a\u8fc7\u5b9e\u73b0\u4e24\u9636\u6bb5\u9501\u534f\u8bae (2PL) \u548c\u6b7b\u9501\u68c0\u6d4b\u6765\u7ba1\u7406\u4e8b\u52a1\u5bf9\u6570\u636e\u884c\u7684\u9501\u8bf7\u6c42\u3002</p> <ul> <li> <p>LockManager (\u9501\u7ba1\u7406\u5668): \u7ba1\u7406\u884c\u7ea7\u9501\uff0c\u5904\u7406\u4e8b\u52a1\u7684\u9501\u8bf7\u6c42\uff08S\u9501\u3001X\u9501\u3001\u9501\u5347\u7ea7\uff09\u548c\u9501\u91ca\u653e\uff0c\u5e76\u5728\u53d1\u751f\u6b7b\u9501\u65f6\u8fdb\u884c\u68c0\u6d4b\u548c\u5904\u7406\u3002</p> <ul> <li>\u4e24\u9636\u6bb5\u9501 (2PL) \u534f\u8bae:<ul> <li>\u589e\u957f\u9636\u6bb5 (Growing Phase): \u4e8b\u52a1\u53ef\u4ee5\u83b7\u53d6\u65b0\u7684\u9501\uff0c\u4f46\u4e0d\u80fd\u91ca\u653e\u4efb\u4f55\u5df2\u6301\u6709\u7684\u9501\u3002</li> <li>\u6536\u7f29\u9636\u6bb5 (Shrinking Phase): \u4e8b\u52a1\u53ef\u4ee5\u91ca\u653e\u5df2\u6301\u6709\u7684\u9501\uff0c\u4f46\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u65b0\u7684\u9501\u3002</li> </ul> </li> <li>\u9501\u7c92\u5ea6: \u5b9e\u73b0\u884c\u7ea7\u9501\uff0c\u6bcf\u4e2a\u9501\u90fd\u9488\u5bf9\u8868\u4e2d\u7684\u4e00\u4e2a\u7279\u5b9a\u884c\u3002</li> <li>\u9501\u6a21\u5f0f:<ul> <li>\u5171\u4eab\u9501 (S\u9501): \u5141\u8bb8\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u8bfb\u53d6\u540c\u4e00\u884c\u6570\u636e\u3002</li> <li>\u6392\u4ed6\u9501 (X\u9501): \u786e\u4fdd\u5355\u4e2a\u4e8b\u52a1\u72ec\u5360\u5199\u6743\u9650\uff0c\u7528\u4e8e\u4fee\u6539\u6570\u636e\u3002</li> <li>\u9501\u5347\u7ea7: \u5141\u8bb8\u5c06\u4e8b\u52a1\u5df2\u6301\u6709\u7684 S \u9501\u5347\u7ea7\u4e3a X \u9501\uff0c\u9002\u7528\u4e8e\u5148\u8bfb\u540e\u5199\u7684\u573a\u666f\u3002</li> </ul> </li> <li>\u7b49\u5f85\u56fe (Waits-for Graph): \u7528\u4e8e\u6b7b\u9501\u68c0\u6d4b\u3002\u8282\u70b9\u4e3a\u4e8b\u52a1ID\uff0c\u6709\u5411\u8fb9 T1\u2192T2 \u8868\u793a T1 \u6b63\u5728\u7b49\u5f85 T2 \u91ca\u653e\u9501\u3002</li> <li>\u6b7b\u9501\u68c0\u6d4b:<ul> <li>\u5b9a\u671f\u904d\u5386\u7b49\u5f85\u56fe\uff0c\u4f7f\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u68c0\u6d4b\u662f\u5426\u5b58\u5728\u73af\u3002</li> <li>\u82e5\u68c0\u6d4b\u5230\u73af\uff0c\u5219\u9009\u62e9\u73af\u4e2d\u4e8b\u52a1ID\u6700\u5927\u7684\u4e8b\u52a1\u8fdb\u884c\u56de\u6eda\u3002</li> <li>\u88ab\u56de\u6eda\u4e8b\u52a1\u72b6\u6001\u8bbe\u7f6e\u4e3a <code>kAborted</code>\uff0c\u5e76\u5524\u9192\u5176\u7b49\u5f85\u7684\u6240\u6709\u9501\u8bf7\u6c42\u3002</li> </ul> </li> <li>\u6570\u636e\u7ed3\u6784:<ul> <li><code>lock_table_</code>: \u5b58\u50a8\u6bcf\u4e2a <code>RowId</code> \u5bf9\u5e94\u7684\u9501\u8bf7\u6c42\u961f\u5217\u3002</li> <li><code>latch_</code>: \u4fdd\u62a4 <code>lock_table_</code> \u548c <code>waits_for_</code> \u7684\u4e92\u65a5\u9501\u3002</li> <li><code>waits_for_</code>: \u4e8b\u52a1\u7b49\u5f85\u56fe\u3002</li> <li><code>visited_set_</code>: DFS \u8fc7\u7a0b\u4e2d\u5df2\u8bbf\u95ee\u8282\u70b9\u7684\u96c6\u5408\u3002</li> <li><code>visited_path_</code>: DFS \u8fc7\u7a0b\u4e2d\u5f53\u524d\u904d\u5386\u8def\u5f84\u7684\u6808\u3002</li> <li><code>revisited_node_</code>: DFS \u8fc7\u7a0b\u4e2d\u68c0\u6d4b\u5230\u73af\u65f6\u91cd\u65b0\u8bbf\u95ee\u7684\u8282\u70b9\u3002</li> <li><code>enable_cycle_detection_</code>: \u63a7\u5236\u6b7b\u9501\u68c0\u6d4b\u662f\u5426\u542f\u7528\u7684\u539f\u5b50\u6807\u5fd7\u3002</li> <li><code>cycle_detection_interval_</code>: \u6b7b\u9501\u68c0\u6d4b\u7684\u8fd0\u884c\u95f4\u9694\u3002</li> <li><code>txn_mgr_</code>: \u4e8b\u52a1\u7ba1\u7406\u5668\u7684\u6307\u9488\uff0c\u7528\u4e8e\u534f\u4f5c\u3002</li> </ul> </li> </ul> </li> <li> <p>LockRequestQueue (\u9501\u8bf7\u6c42\u961f\u5217): \u4e3a\u6bcf\u4e2a\u88ab\u8bf7\u6c42\u9501\u7684 RowId \u7ef4\u62a4\u4e00\u4e2a\u961f\u5217\u3002</p> <ul> <li><code>req_list_</code> (<code>std::list&lt;LockRequest&gt;</code>): \u5b58\u50a8\u6240\u6709\u9501\u8bf7\u6c42\uff08\u5305\u62ec\u5df2\u6388\u4e88\u548c\u7b49\u5f85\u4e2d\u7684\uff09\u3002</li> <li><code>req_list_iter_map_</code> (<code>std::unordered_map&lt;txn_id_t, std::list&lt;LockRequest&gt;::iterator&gt;</code>): \u5feb\u901f\u67e5\u627e\u7279\u5b9a\u4e8b\u52a1\u7684\u9501\u8bf7\u6c42\u3002</li> <li><code>cv_</code> (<code>std::condition_variable</code>): \u7528\u4e8e\u7b49\u5f85\u548c\u5524\u9192\u7b49\u5f85\u5728\u8be5 RowId \u4e0a\u7684\u4e8b\u52a1\u3002</li> <li><code>sharing_cnt_</code> (<code>int</code>): \u5f53\u524d\u6301\u6709\u5171\u4eab\u9501\u7684\u4e8b\u52a1\u6570\u91cf\u3002</li> <li><code>is_writing_</code> (<code>bool</code>): \u662f\u5426\u6709\u4e8b\u52a1\u6301\u6709\u6392\u4ed6\u9501\u3002</li> <li><code>is_upgrading_</code> (<code>bool</code>): \u662f\u5426\u6709\u4e8b\u52a1\u6b63\u5728\u8fdb\u884c\u9501\u5347\u7ea7\u3002</li> </ul> </li> <li> <p>TxnManager (\u4e8b\u52a1\u7ba1\u7406\u5668): \u8d1f\u8d23\u4e8b\u52a1\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\u3002</p> <ul> <li>\u4e0e LockManager \u4ea4\u4e92: \u5728\u4e8b\u52a1\u63d0\u4ea4\u6216\u4e2d\u6b62\u65f6\uff0c\u8c03\u7528<code>LockManager::ReleaseLocks</code> \u91ca\u653e\u4e8b\u52a1\u6301\u6709\u7684\u6240\u6709\u9501\u3002</li> <li>\u4e8b\u52a1\u72b6\u6001: \u7ef4\u62a4\u4e8b\u52a1\u7684\u5f53\u524d\u72b6\u6001\uff08<code>kGrowing</code>, <code>kShrinking</code>, <code>kCommitted</code>, <code>kAborted</code>\uff09\u3002</li> </ul> </li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#2_3","title":"2. \u6838\u5fc3\u6d41\u7a0b\u56fe\u793a","text":"<ul> <li>\u83b7\u53d6\u9501\u6d41\u7a0b\u56fe</li> </ul> <ul> <li>\u5347\u7ea7\u9501\u6d41\u7a0b\u56fe</li> </ul> <ul> <li>\u6b7b\u9501\u68c0\u6d4b\u4e0e\u5904\u7406\u6d41\u7a0b\u56fe</li> </ul> <ul> <li>2pl\u6d41\u7a0b\u56fe</li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#3","title":"3\u3001\u4ee3\u7801\u5206\u6790","text":"<p><code>lock_manager.cpp</code></p> <ul> <li> <p><code>void LockManager::SetTxnMgr(TxnManager *txn_mgr)</code>:</p> <ul> <li>\u8bbe\u7f6e\u6307\u5411 <code>TxnManager</code> \u7684\u6307\u9488\uff0c\u4fbf\u4e8e\u6b7b\u9501\u68c0\u6d4b\u65f6\u56de\u8c03\u4e2d\u6b62\u4e8b\u52a1\u3002</li> </ul> </li> <li> <p><code>bool LockManager::LockShared(Txn *txn, const RowId &amp;rid)</code>:</p> <ul> <li>\u7533\u8bf7\u5171\u4eab\u9501\uff08S\u9501\uff09\u3002</li> <li>\u68c0\u67e5\u4e8b\u52a1\u72b6\u6001\u548c\u9694\u79bb\u7ea7\u522b\uff0c\u83b7\u53d6/\u521b\u5efa\u5bf9\u5e94\u7684\u9501\u961f\u5217\u3002</li> <li>\u82e5\u6709\u6392\u4ed6\u9501\u6216\u9501\u5347\u7ea7\u6b63\u5728\u8fdb\u884c\uff0c\u5219\u8fdb\u5165\u7b49\u5f85\uff0c\u5e76\u66f4\u65b0\u7b49\u5f85\u56fe\u3002</li> <li>\u6b7b\u9501\u68c0\u6d4b\u671f\u95f4\u82e5\u4e8b\u52a1\u88ab\u4e2d\u6b62\uff0c\u5219\u6e05\u7406\u5e76\u8fd4\u56de <code>false</code>\u3002</li> <li>\u6210\u529f\u540e\u6807\u8bb0\u4e3a\u5df2\u6388\u4e88\uff0c\u66f4\u65b0\u8ba1\u6570\uff0c\u5e76\u5c06 RowId \u52a0\u5165\u4e8b\u52a1\u7684 S\u9501\u96c6\u5408\u3002</li> </ul> </li> <li> <p><code>bool LockManager::LockExclusive(Txn *txn, const RowId &amp;rid)</code>:</p> <ul> <li>\u7533\u8bf7\u6392\u4ed6\u9501\uff08X\u9501\uff09\u3002</li> <li>\u68c0\u67e5\u4e8b\u52a1\u72b6\u6001\uff0c\u83b7\u53d6/\u521b\u5efa\u9501\u961f\u5217\u3002</li> <li>\u82e5\u6709\u5176\u4ed6\u9501\u6216\u9501\u5347\u7ea7\u6b63\u5728\u8fdb\u884c\uff0c\u5219\u8fdb\u5165\u7b49\u5f85\uff0c\u5e76\u66f4\u65b0\u7b49\u5f85\u56fe\u3002</li> <li>\u6b7b\u9501\u68c0\u6d4b\u671f\u95f4\u82e5\u4e8b\u52a1\u88ab\u4e2d\u6b62\uff0c\u5219\u6e05\u7406\u5e76\u8fd4\u56de <code>false</code>\u3002</li> <li>\u6210\u529f\u540e\u6807\u8bb0\u4e3a\u5df2\u6388\u4e88\uff0c\u8bbe\u7f6e\u5199\u6807\u5fd7\uff0c\u66f4\u65b0\u4e8b\u52a1\u9501\u96c6\u5408\u3002</li> </ul> </li> <li> <p><code>bool LockManager::LockUpgrade(Txn *txn, const RowId &amp;rid)</code>:</p> <ul> <li>S\u9501\u5347\u7ea7\u4e3aX\u9501\u3002</li> <li>\u68c0\u67e5\u4e8b\u52a1\u72b6\u6001\u548c\u662f\u5426\u6301\u6709S\u9501\uff0c\u82e5\u6709\u5176\u4ed6\u4e8b\u52a1\u6b63\u5728\u5347\u7ea7\u5219\u56de\u6eda\u5f53\u524d\u4e8b\u52a1\u3002</li> <li>\u8bbe\u7f6e\u5347\u7ea7\u6807\u5fd7\uff0c\u7b49\u5f85\u5176\u4ed6\u9501\u91ca\u653e\uff0c\u671f\u95f4\u66f4\u65b0\u7b49\u5f85\u56fe\u3002</li> <li>\u6b7b\u9501\u68c0\u6d4b\u671f\u95f4\u82e5\u4e8b\u52a1\u88ab\u4e2d\u6b62\u5219\u6e05\u7406\u5e76\u8fd4\u56de <code>false</code>\u3002</li> <li>\u6210\u529f\u540e\u53d6\u6d88\u5347\u7ea7\u6807\u5fd7\uff0c\u4fee\u6539\u8bf7\u6c42\u6a21\u5f0f\uff0c\u66f4\u65b0\u8ba1\u6570\u548c\u4e8b\u52a1\u9501\u96c6\u5408\uff0c\u5e76\u5524\u9192\u7b49\u5f85\u961f\u5217\u3002</li> </ul> </li> <li> <p><code>bool LockManager::Unlock(Txn *txn, const RowId &amp;rid)</code>:</p> <ul> <li>\u91ca\u653e\u4e8b\u52a1\u6301\u6709\u7684 S\u9501\u6216 X\u9501\u3002</li> <li>\u66f4\u65b0\u9501\u961f\u5217\u72b6\u6001\uff0c\u79fb\u9664\u4e8b\u52a1\u9501\u8bf7\u6c42\u3002</li> <li>\u82e5\u4e8b\u52a1\u5904\u4e8e\u589e\u957f\u9636\u6bb5\uff0c\u5219\u5207\u6362\u4e3a\u6536\u7f29\u9636\u6bb5\u3002</li> <li>\u4ece\u7b49\u5f85\u56fe\u4e2d\u5220\u9664\u76f8\u5173\u8fb9\uff0c\u5524\u9192\u7b49\u5f85\u961f\u5217\u3002</li> </ul> </li> <li> <p><code>void LockManager::AddEdge(txn_id_t t1, txn_id_t t2)</code>:</p> <ul> <li>\u5728\u7b49\u5f85\u56fe\u4e2d\u6dfb\u52a0\u4e00\u6761\u4ece t1 \u5230 t2 \u7684\u6709\u5411\u8fb9\u3002</li> </ul> </li> <li> <p><code>void LockManager::RemoveEdge(txn_id_t t1, txn_id_t t2)</code>:</p> <ul> <li>\u79fb\u9664\u7b49\u5f85\u56fe\u4e2d\u7684\u4e00\u6761\u8fb9\uff0c\u82e5 t1 \u65e0\u5176\u4ed6\u7b49\u5f85\u5219\u79fb\u9664\u8282\u70b9\u3002</li> </ul> </li> <li> <p><code>bool LockManager::HasCycle(txn_id_t &amp;max_tid)</code>:</p> <ul> <li>\u4f7f\u7528 DFS \u68c0\u6d4b\u7b49\u5f85\u56fe\u4e2d\u662f\u5426\u5b58\u5728\u73af\uff08\u6b7b\u9501\uff09\u3002</li> <li>\u82e5\u6709\u73af\uff0c\u8fd4\u56de\u73af\u4e2d\u6700\u5927\u4e8b\u52a1ID\u3002</li> </ul> </li> <li> <p><code>void LockManager::DeleteNode(txn_id_t txn_id)</code>:</p> <ul> <li>\u4ece\u7b49\u5f85\u56fe\u4e2d\u5220\u9664\u6307\u5b9a\u4e8b\u52a1\u76f8\u5173\u7684\u8282\u70b9\u548c\u6240\u6709\u8fb9\u3002</li> </ul> </li> <li> <p><code>void LockManager::RunCycleDetection()</code>:</p> <ul> <li>\u72ec\u7acb\u7ebf\u7a0b\u5b9a\u671f\u8fd0\u884c\u6b7b\u9501\u68c0\u6d4b\u3002</li> <li>\u68c0\u6d4b\u5230\u6b7b\u9501\u65f6\u4e2d\u6b62\u6700\u5927ID\u4e8b\u52a1\uff0c\u5e76\u5524\u9192\u76f8\u5173\u7b49\u5f85\u961f\u5217\u3002</li> </ul> </li> <li> <p><code>void LockManager::LockPrepare(Txn *txn, const RowId &amp;rid)</code>:</p> <ul> <li>\u4e8b\u52a1\u8fdb\u5165\u7b49\u5f85\u524d\uff0c\u6839\u636e\u5f53\u524d\u9501\u961f\u5217\u5df2\u6388\u4e88\u7684\u9501\uff0c\u6784\u5efa\u7b49\u5f85\u56fe\u7684\u8fb9\u3002</li> </ul> </li> <li> <p><code>void LockManager::CheckAbort(Txn *txn, LockManager::LockRequestQueue &amp;req_queue)</code>:</p> <ul> <li>\u8be5\u51fd\u6570\u4e3a\u7a7a\uff0c\u901a\u8fc7 txn-&gt;GetState() == TxnState::kAborted \u68c0\u67e5\u66ff\u4ee3\u5176\u529f\u80fd\u3002</li> </ul> </li> <li> <p><code>std::vector&lt;std::pair&lt;txn_id_t, txn_id_t&gt;&gt; LockManager::GetEdgeList()</code>:</p> <ul> <li>\u4ec5\u7528\u4e8e\u6d4b\u8bd5\uff0c\u8fd4\u56de\u7b49\u5f85\u56fe\u4e2d\u6240\u6709\u8fb9\u7684\u5217\u8868\u3002</li> </ul> </li> </ul>"},{"location":"sp25/db/report/minisql/lyj_report/#_4","title":"\u56db\u3001 \u5b9e\u9a8c\u7ed3\u679c\u5c55\u793a","text":"<ul> <li>\u8fd0\u884c<code>minisql_test</code>\uff1a  </li> </ul> <ul> <li>\u8fdb\u884c<code>main</code>\u51fd\u6570\u6574\u4f53\u8fd0\u884c\u7ed3\u679c\u89c1\u5c0f\u7ec4\u603b\u4f53\u8bbe\u8ba1\u62a5\u544a</li> </ul>"},{"location":"sp25/db/report/minisql/minisql_overview/","title":"Minisql overview","text":"<p>"},{"location":"sp25/db/report/minisql/minisql_overview/#database-system","title":"DataBase System","text":""},{"location":"sp25/db/report/minisql/minisql_overview/#minisql","title":"MiniSQL \u603b\u4f53\u8bbe\u8ba1\u62a5\u544a","text":"\u59d3\u540d\uff1a\u2003\u2003\u6768\u4ebf\u916c \u5218\u5955\u5609 \u949f\u5251"},{"location":"sp25/db/report/minisql/minisql_overview/#_1","title":"\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7cbe\u7b80\u578b\u5355\u7528\u6237SQL\u5f15\u64ceMiniSQL\uff0c\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u5b57\u7b26\u754c\u9762\u8f93\u5165SQL\u8bed\u53e5\u5b9e\u73b0\u57fa\u672c\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\uff0c\u5e76\u80fd\u591f\u901a\u8fc7\u7d22\u5f15\u6765\u4f18\u5316\u6027\u80fd\u3002</li> <li>\u901a\u8fc7\u5bf9MiniSQL\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7f16\u7a0b\u80fd\u529b\uff0c\u52a0\u6df1\u5bf9\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u5e95\u5c42\u8bbe\u8ba1\u7684\u7406\u89e3\u3002</li> </ul>"},{"location":"sp25/db/report/minisql/minisql_overview/#overview","title":"Overview","text":"<p> MiniSQL\u91c7\u7528\u7ecf\u5178\u7684\u4e09\u5c42\u6570\u636e\u5e93\u67b6\u6784\u8bbe\u8ba1\uff0c\u5305\u542b\uff1a</p> <p>1.SQL\u63a5\u53e3\u5c42\uff1a\u8d1f\u8d23\u7528\u6237\u4ea4\u4e92\u548cSQL\u89e3\u6790 2.\u67e5\u8be2\u5904\u7406\u5c42\uff1a\u6267\u884c\u67e5\u8be2\u4f18\u5316\u548c\u8ba1\u5212\u751f\u6210 3.\u5b58\u50a8\u5f15\u64ce\u5c42\uff1a\u7ba1\u7406\u6570\u636e\u5b58\u50a8\u548c\u4e8b\u52a1\u5904\u7406</p> <p>1.SQL\u89e3\u6790  2.\u6838\u5fc3\u90e8\u4ef6\u534f\u4f5c  \u67e5\u8be2\u6267\u884c\u6d41\u7a0b\u5305\u62ec\uff1a \u89e3\u6790SQL\u751f\u6210\u8bed\u6cd5\u6811 \u9a8c\u8bc1\u8bed\u4e49\u5e76\u751f\u6210\u6267\u884c\u8ba1\u5212 \u901a\u8fc7Catalog\u83b7\u53d6\u8868\u4fe1\u606f \u901a\u8fc7Index\u5b9a\u4f4d\u6570\u636e Record Manager\u8bfb\u53d6\u8bb0\u5f55 \u7ed3\u679c\u96c6\u7ec4\u88c5\u8fd4\u56de </p> <p>Recovery Manager\u4e0eLock Manager\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\uff0c\u5b9e\u73b0\u4e86\u5f02\u5e38\u6062\u590d\u4e0e\u9501\u7ba1\u7406\u7684\u57fa\u672c\u529f\u80fd\uff0c\u4e3a\u6570\u636e\u5e93\u7684\u8fdb\u4e00\u6b65\u7ba1\u7406\u4e0e\u4f18\u5316\u63d0\u4f9b\u4e86\u57fa\u7840</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#disk-and-buffer-pool-manager","title":"Disk and Buffer Pool Manager","text":""},{"location":"sp25/db/report/minisql/minisql_overview/#_2","title":"\u67b6\u6784\u8bbe\u8ba1","text":"<p>DiskManager\uff1a\u8d1f\u8d23\u78c1\u76d8\u6587\u4ef6\u7ba1\u7406\u548c\u9875\u5206\u914d\u56de\u6536 BitmapPage\uff1a\u4f7f\u7528\u4f4d\u56fe\u7ba1\u7406\u6570\u636e\u9875\u5206\u914d\u72b6\u6001 BufferPoolManager\uff1a\u7ba1\u7406\u5185\u5b58\u4e2d\u7684\u9875\u7f13\u5b58 LRUReplacer\uff1a\u5b9e\u73b0LRU\u9875\u9762\u66ff\u6362\u7b97\u6cd5</p> <p>\u91c7\u7528\u4f4d\u56fe\u673a\u5236\u7ba1\u7406\u7a7a\u95f2\u9875 \u5b9e\u73b0\u903b\u8f91\u9875\u53f7\u5230\u7269\u7406\u9875\u53f7\u7684\u6620\u5c04 \u652f\u6301\u810f\u9875\u56de\u5199\u548c\u9875\u56fa\u5b9a\u673a\u5236 \u4f7f\u7528LRU\u7b56\u7565\u8fdb\u884c\u9875\u9762\u66ff\u6362</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#record-manager","title":"Record Manager","text":"<p>Record Manager\u8d1f\u8d23\u7ba1\u7406\u6570\u636e\u8868\u4e2d\u6240\u6709\u7684\u8bb0\u5f55\uff0c\u5b83\u80fd\u591f\u652f\u6301\u8bb0\u5f55\u7684\u63d2\u5165\u3001\u5220\u9664\u4e0e\u67e5\u627e\u64cd\u4f5c\uff0c\u5e76\u5bf9\u5916\u63d0\u4f9b\u76f8\u5e94\u7684\u63a5\u53e3</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#_3","title":"\u6838\u5fc3\u7ec4\u4ef6","text":"<p>Column\uff1a\u8868\u5217\u7684\u5143\u6570\u636e Row\uff1a\u8868\u4e2d\u7684\u8bb0\u5f55\u884c Schema\uff1a\u8868\u7ed3\u6784\u5b9a\u4e49 Field\uff1a\u884c\u4e2d\u7684\u5b57\u6bb5\u503c TableHeap\uff1a\u7ba1\u7406\u8868\u7684\u6570\u636e\u9875 TableIterator\uff1a\u8868\u8bb0\u5f55\u8fed\u4ee3\u5668</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#index-manager","title":"Index Manager","text":"<p>Index Manager \u8d1f\u8d23\u6570\u636e\u8868\u7d22\u5f15\u7684\u5b9e\u73b0\u548c\u7ba1\u7406\uff0c\u5305\u62ec\uff1a\u7d22\u5f15\u7684\u521b\u5efa\u548c\u5220\u9664\uff0c\u7d22\u5f15\u952e\u7684\u7b49\u503c\u67e5\u627e\uff0c\u7d22\u5f15\u952e\u7684\u8303\u56f4\u67e5\u627e\uff08\u8fd4\u56de\u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\uff09\uff0c\u4ee5\u53ca\u63d2\u5165\u548c\u5220\u9664\u952e\u503c\u7b49\u64cd\u4f5c\uff0c\u5e76\u5bf9\u5916\u63d0\u4f9b\u76f8\u5e94\u7684\u63a5\u53e3\u3002</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#b","title":"B+\u6811\u5b9e\u73b0","text":"<p>\u8282\u70b9\u8bbe\u8ba1\uff1a - \u5185\u90e8\u8282\u70b9\uff1a\u5b58\u50a8\u952e\u548c\u5b50\u8282\u70b9\u6307\u9488 - \u53f6\u5b50\u8282\u70b9\uff1a\u5b58\u50a8\u952e\u548c\u8bb0\u5f55\u4f4d\u7f6e</p> <p>\u5173\u952e\u64cd\u4f5c\uff1a - \u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664 - \u8282\u70b9\u5206\u88c2\u4e0e\u5408\u5e76 - \u952e\u91cd\u5206\u914d</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#_4","title":"\u7d22\u5f15\u7ba1\u7406","text":"<p>\u652f\u6301unique\u7d22\u5f15 \u5b9e\u73b0\u53f6\u8282\u70b9\u94fe\u8868\u4fbf\u4e8e\u8303\u56f4\u67e5\u8be2 \u4e0e\u8bb0\u5f55\u7ba1\u7406\u5668\u534f\u540c\u5de5\u4f5c</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#catalog-manager","title":"Catalog Manager","text":"<p>Catalog Manager \u8d1f\u8d23\u7ba1\u7406\u548c\u7ef4\u62a4\u6570\u636e\u5e93\u7684\u6240\u6709\u6a21\u5f0f\u4fe1\u606f\uff0c\u5305\u62ec\uff1a - \u6570\u636e\u5e93\u4e2d\u6240\u6709\u8868\u7684\u5b9a\u4e49\u4fe1\u606f\uff0c\u5305\u62ec\u8868\u7684\u540d\u79f0\u3001\u8868\u4e2d\u5b57\u6bb5\uff08\u5217\uff09\u6570\u3001\u4e3b\u952e\u3001\u5b9a\u4e49\u5728\u8be5\u8868\u4e0a\u7684\u7d22\u5f15\u3002 - \u8868\u4e2d\u6bcf\u4e2a\u5b57\u6bb5\u7684\u5b9a\u4e49\u4fe1\u606f\uff0c\u5305\u62ec\u5b57\u6bb5\u7c7b\u578b\u3001\u662f\u5426\u552f\u4e00\u7b49\u3002 - \u6570\u636e\u5e93\u4e2d\u6240\u6709\u7d22\u5f15\u7684\u5b9a\u4e49\uff0c\u5305\u62ec\u6240\u5c5e\u8868\u3001\u7d22\u5f15\u5efa\u7acb\u5728\u90a3\u4e2a\u5b57\u6bb5\u4e0a\u7b49\u3002</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#_5","title":"\u5b9e\u73b0\u8981\u70b9","text":"<p>\u5143\u6570\u636e\u5e8f\u5217\u5316\u4e0e\u6301\u4e45\u5316 \u8868\u4e0e\u7d22\u5f15\u7684\u521b\u5efa/\u5220\u9664 \u6a21\u5f0f\u4fe1\u606f\u7f13\u5b58</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#planner-and-executor","title":"Planner and Executor","text":""},{"location":"sp25/db/report/minisql/minisql_overview/#_6","title":"\u6267\u884c\u6d41\u7a0b","text":"<p>\u89e3\u6790SQL\u751f\u6210\u8bed\u6cd5\u6811 \u9a8c\u8bc1\u8bed\u4e49\u5e76\u751f\u6210\u6267\u884c\u8ba1\u5212 \u6267\u884c\u8ba1\u5212\u5e76\u8fd4\u56de\u7ed3\u679c</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#_7","title":"\u5173\u952e\u7279\u6027","text":"<p>\u652f\u6301\u57fa\u672cDML\u64cd\u4f5c \u5b9e\u73b0\u6761\u4ef6\u8fc7\u6ee4 \u63d0\u4f9b\u4e8b\u52a1\u652f\u6301\u63a5\u53e3</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#recovery-manager","title":"Recovery Manager","text":"<p>Recovery Manager \u8d1f\u8d23\u7ba1\u7406\u548c\u7ef4\u62a4\u6570\u636e\u6062\u590d\u7684\u8fc7\u7a0b\uff0c\u5305\u62ec\uff1a - \u65e5\u5fd7\u7ed3\u6784\u7684\u5b9a\u4e49 - \u68c0\u67e5\u70b9CheckPoint\u7684\u5b9a\u4e49 - \u6267\u884cRedo\u3001Undo\u7b49\u64cd\u4f5c\uff0c\u5904\u7406\u63d2\u5165\u3001\u5220\u9664\u3001\u66f4\u65b0\uff0c\u4e8b\u52a1\u7684\u5f00\u59cb\u3001\u63d0\u4ea4\u3001\u56de\u6eda\u7b49\u65e5\u5fd7\uff0c\u5c06\u6570\u636e\u5e93\u6062\u590d\u5230\u5b95\u673a\u4e4b\u524d\u7684\u72b6\u6001</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#_8","title":"\u5173\u952e\u7b97\u6cd5","text":"<p>\u4eceCheckPoint\u5f00\u59cbRedo \u5bf9\u672a\u63d0\u4ea4\u4e8b\u52a1\u6267\u884cUndo \u4fdd\u8bc1\u6545\u969c\u6062\u590d\u4e00\u81f4\u6027</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#lock-manager","title":"Lock Manager","text":""},{"location":"sp25/db/report/minisql/minisql_overview/#_9","title":"\u5e76\u53d1\u63a7\u5236","text":"<p>\u5b9e\u73b0\u884c\u7ea7\u9501 \u652f\u6301\u5171\u4eab\u9501\u548c\u6392\u4ed6\u9501 \u9501\u5347\u7ea7\u673a\u5236</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#_10","title":"\u6b7b\u9501\u5904\u7406","text":"<p>\u7b49\u5f85\u56fe\u68c0\u6d4b\u73af \u9009\u62e9\u727a\u7272\u4e8b\u52a1\u4e2d\u6b62 \u4e24\u9636\u6bb5\u9501\u534f\u8bae</p>"},{"location":"sp25/db/report/minisql/minisql_overview/#_11","title":"\u7cfb\u7edf\u9a8c\u8bc1\u6d4b\u8bd5","text":"<ul> <li>\u8fd0\u884c<code>minisql_test</code>\u8fdb\u884c\u6a21\u62df\u6574\u4f53\u8fd0\u884c\u540e\uff1a </li> </ul> <ul> <li> <p>\u8fdb\u884c<code>main</code>\u51fd\u6570\u6574\u4f53\u8fd0\u884c\uff1b</p> </li> <li> <p>\u5b8c\u6210\u6570\u636e\u5e93\u4e0e\u8868\u683c\u5efa\u7acb\uff1a   </p> </li> <li>\u6570\u636e\u63d2\u5165\uff1a    </li> <li>100000\u6761\u6570\u636e\u67e5\u8be2\uff1a   </li> <li>\u4e3b\u952e\u67e5\u8be2\u4e0e\u975e\u4e3b\u952e\u67e5\u8be2\uff1a   </li> <li>\u591a\u6761\u4ef6\u67e5\u8be2<code>select * from account where id &lt; 12515000 and name &gt; \"name14500\"</code>\uff1a   </li> <li>\u552f\u4e00\u6027\u7ea6\u675f\uff1a   </li> <li>\u7d22\u5f15\u5efa\u7acb\u4e0e\u67e5\u8be2\uff1a   </li> <li>\u6570\u636e\u66f4\u65b0\uff1a   </li> <li>\u6570\u636e\u5220\u9664\uff1a   </li> <li>\u5220\u9664\u7d22\u5f15\uff1a   </li> <li>\u8868\u683c\u5185\u5bb9\u6574\u4f53\u5220\u9664\uff1a   </li> <li>\u5220\u9664\u8868\u683c\uff1a   </li> <li>\u5220\u9664\u6570\u636e\u5e93\uff1a   </li> <li>\u9000\u51fa\u540e\u91cd\u65b0\u8fdb\u5165\uff1a    </li> </ul>"},{"location":"sp25/db/report/minisql/yyc_report/","title":"Yyc report","text":"<p>"},{"location":"sp25/db/report/minisql/yyc_report/#database-system","title":"DataBase System","text":""},{"location":"sp25/db/report/minisql/yyc_report/#minisql","title":"MiniSQL \u4e2a\u4eba\u8bbe\u8ba1\u62a5\u544a","text":"\u59d3\u540d\uff1a\u2003\u2003\u6768\u2003\u4ebf\u2003\u916c"},{"location":"sp25/db/report/minisql/yyc_report/#_1","title":"\u4e00\u3001 \u5b9e\u9a8c\u80cc\u666f\u4e0e\u76ee\u7684","text":"<ul> <li>\u57fa\u4e8e\u7ed9\u5b9a\u6846\u67b6\u57fa\u7840\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7cbe\u7b80\u578b\u5355\u7528\u6237SQL\u5f15\u64ceMinSQL</li> <li>\u5728\u672c\u6b21\u9879\u76ee\u4e2d\uff0c\u5b9e\u73b0SQL\u5f15\u64ce\u652f\u6301\u7528\u6237\u901a\u8fc7\u5b57\u7b26\u754c\u9762\u8f93\u5165SQL\u8bed\u53e5\u5b9e\u73b0\u7b80\u5355\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c</li> <li>\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u8fdb\u884c\u67e5\u8be2\u7684\u6027\u80fd\u4f18\u5316</li> <li>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c \u8bbe\u8ba1\u5e76\u5b8c\u6210Index \u4e0e\u90e8\u5206 Executor</li> </ul>"},{"location":"sp25/db/report/minisql/yyc_report/#_2","title":"\u4e8c\u3001 \u8bbe\u8ba1\u5b8c\u6210\u5185\u5bb9","text":"<ul> <li>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u8bbe\u8ba1\u5b8c\u6210\u4e86\uff1a</li> <li><code>CATALOG</code>\u76f8\u5173\u6587\u4ef6\uff1a   </li> <li><code>RECOVERY MANAGER</code>\u76f8\u5173\u6587\u4ef6\uff1a   </li> <li>\u5e76\u53c2\u4e0e\u5de5\u7a0b\u8fc7\u7a0b\u4e2d\u7684\u6d4b\u8bd5\u4e0ebug\u4fee\u590d  </li> </ul>"},{"location":"sp25/db/report/minisql/yyc_report/#_3","title":"\u4e09\u3001 \u5177\u4f53\u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/yyc_report/#catalog-manager","title":"<code>Catalog Manager</code>\u76f8\u5173\u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/yyc_report/#1","title":"1\u3001 \u6574\u4f53\u67b6\u6784","text":"<p>Catalog Manager \u8d1f\u8d23\u7ba1\u7406\u548c\u7ef4\u62a4\u6570\u636e\u5e93\u7684\u6240\u6709\u6a21\u5f0f\u4fe1\u606f\uff0c\u5305\u62ec\uff1a \u25cf \u6570\u636e\u5e93\u4e2d\u6240\u6709\u8868\u7684\u5b9a\u4e49\u4fe1\u606f\uff0c\u5305\u62ec\u8868\u7684\u540d\u79f0\u3001\u8868\u4e2d\u5b57\u6bb5\uff08\u5217\uff09\u6570\u3001\u4e3b\u952e\u3001\u5b9a\u4e49\u5728\u8be5\u8868\u4e0a\u7684\u7d22\u5f15\u3002 \u25cf \u8868\u4e2d\u6bcf\u4e2a\u5b57\u6bb5\u7684\u5b9a\u4e49\u4fe1\u606f\uff0c\u5305\u62ec\u5b57\u6bb5\u7c7b\u578b\u3001\u662f\u5426\u552f\u4e00\u7b49\u3002 \u25cf \u6570\u636e\u5e93\u4e2d\u6240\u6709\u7d22\u5f15\u7684\u5b9a\u4e49\uff0c\u5305\u62ec\u6240\u5c5e\u8868\u3001\u7d22\u5f15\u5efa\u7acb\u5728\u90a3\u4e2a\u5b57\u6bb5\u4e0a\u7b49\u3002 \u8fd9\u4e9b\u6a21\u5f0f\u4fe1\u606f\u5728\u88ab\u521b\u5efa\u3001\u4fee\u6539\u548c\u5220\u9664\u540e\u8fd8\u5e94\u88ab\u6301\u4e45\u5316\u5230\u6570\u636e\u5e93\u6587\u4ef6\u4e2d\u3002\u6b64\u5916\uff0cCatalog Manager\u8fd8\u9700\u8981\u4e3a\u4e0a\u5c42\u7684\u6267\u884c\u5668Executor\u63d0\u4f9b\u516c\u5171\u63a5\u53e3\u4ee5\u4f9b\u6267\u884c\u5668\u83b7\u53d6\u76ee\u5f55\u4fe1\u606f\u5e76\u751f\u6210\u6267\u884c\u8ba1\u5212\u3002  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#2","title":"2\u3001 \u7cfb\u7edf\u5404\u6a21\u5757\u7684\u8bbe\u8ba1\u601d\u8def\u548c\u5b9e\u73b0","text":""},{"location":"sp25/db/report/minisql/yyc_report/#indexinfoinit","title":"IndexInfo::Init","text":"<p>1.\u521d\u59cb\u5316meta_data_ 2.\u521d\u59cb\u5316key_schema_(\u4f7f\u7528\u6d45\u62f7\u8d1d) 3.CreateIndex\u521b\u5efa\u7d22\u5f15  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#getserializedsize","title":"GetSerializedSize()","text":"<p>\u4f9d\u636eSerializeTo,DeserializeFrom\u7684\u5b9e\u73b0\uff0c\u8ba1\u7b97\u5e8f\u5217\u5316\u5927\u5c0f(CatalogMeta,TableMetadata,IndexMetadata) \u4ee5CatalogMeta\u4e3a\u4f8b <pre><code>void CatalogMeta::SerializeTo(char *buf) const {\n  MACH_WRITE_UINT32(buf, CATALOG_METADATA_MAGIC_NUM);\n  buf += 4;\n  MACH_WRITE_UINT32(buf, table_meta_pages_.size());\n  buf += 4;\n  MACH_WRITE_UINT32(buf, index_meta_pages_.size());\n  buf += 4;\n  for (auto iter : table_meta_pages_) {\n    MACH_WRITE_TO(table_id_t, buf, iter.first);\n    buf += 4;\n    MACH_WRITE_TO(page_id_t, buf, iter.second);\n    buf += 4;\n  }\n  for (auto iter : index_meta_pages_) {\n    MACH_WRITE_TO(index_id_t, buf, iter.first);\n    buf += 4;\n    MACH_WRITE_TO(page_id_t, buf, iter.second);\n    buf += 4;\n  }\n}\n</code></pre> \u7531\u4e0a\u53ef\u89c1CatalogMeta\u4e2d\u7684\u6570\u636e\u5305\u542b: 4 bytes magic num + 4 bytes table_page num + 4 bytes index_page num + table_page nums * (4 bytes table id + 4 bytes page id) + index_page nums * (4 bytes index id + 4 bytes page id) <pre><code>uint32_t CatalogMeta::GetSerializedSize() const {\n  return 4 + 4 + 4 \n  + table_meta_pages_.size() * (4 + 4) \n  + index_meta_pages_.size() * (4 + 4);\n}\n</code></pre></p>"},{"location":"sp25/db/report/minisql/yyc_report/#catalogcpp","title":"Catalog.cpp","text":""},{"location":"sp25/db/report/minisql/yyc_report/#catalogmanager-ctor","title":"CatalogManager Ctor","text":"<p>1.\u83b7\u53d6catalog_meta_page 2.\u6839\u636einit\u65b0\u5efa\u6216\u8bfb\u53d6metadata     init == true     1)NewInstance()\u65b0\u5efametadata     2)\u83b7\u53d6catalog_meta_page\u7684Data\u5e76\u5e8f\u5217\u5316     init == false     1)\u83b7\u53d6catalog_meta_page\u7684Data\u5e76\u53cd\u5e8f\u5217\u5316     2)GetTable/IndexMetaPages\u8bfb\u53d6table\u4e0eindex metadata 3.set next page id 4.unpin fetched page  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#createtable","title":"CreateTable","text":"<p>1.create table_heap using DEEPCOPY SCHEMA 2.create table metadata 3.serialize to meta page 4.update catalog meta 5.create tableinfo 6.update table_names,tables_ in catalog 7.create index for unique attributes(primary key)  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#createindex","title":"CreateIndex","text":"<p>1.create index metadata 2.serialize to meta page 3.update catalog meta 4.create indexinfo 5.update index_names_,indexes_ 6.build up the tree(\u901a\u8fc7table_heap\u5411bptree\u9010\u884c\u63d2\u5165\uff0c\u8c03\u7528InsertEntry)  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#gettablesgetindexgettableindexes","title":"GetTable(s)/GetIndex/GetTableIndexes","text":"<p>\u5229\u7528table_name\u904d\u5386tables_,(\u6279\u91cf)\u8fd4\u56detable_info \u5229\u7528table_name\u904d\u5386index_names_,\u8fd4\u56deindex_id,\u518d\u5229\u7528index_name\u904d\u5386indexes_\u8fd4\u56deindex_info \u5229\u7528table_name\u904d\u5386index_names_,\u6279\u91cf\u8fd4\u56deindex_id,\u5229\u7528index_id\u904d\u5386indexes_\u6279\u91cf\u8fd4\u56deindex_info</p>"},{"location":"sp25/db/report/minisql/yyc_report/#droptabledropindex","title":"DropTable/DropIndex","text":"<p>1.delete metadata page 2.delete table_heap 3.update catalog meta 4.erase table_names,tables_/index_names_,indexes_  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#flushcatalogmetapage","title":"FlushCatalogMetaPage","text":"<p>1.get catalogmetapage 2.serialize catalog_meta_ 3.unpin page(set dirty)  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#loadtableloadindex","title":"LoadTable/LoadIndex","text":"<p>1.get table/index metadata page 2.deserialize table/index metadata 3.create table_heap/get table info 4.create table_info/index_info 5.update tables_,table_names_/index_names_,indexes_ 6.unpin page(set not dirty)  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#recovery-manager","title":"<code>Recovery Manager</code>\u76f8\u5173\u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/yyc_report/#1_1","title":"1\u3001 \u6574\u4f53\u67b6\u6784","text":"<p>Recovery Manager \u8d1f\u8d23\u7ba1\u7406\u548c\u7ef4\u62a4\u6570\u636e\u6062\u590d\u7684\u8fc7\u7a0b\uff0c\u5305\u62ec\uff1a \u25cf \u65e5\u5fd7\u7ed3\u6784\u7684\u5b9a\u4e49 \u25cf \u68c0\u67e5\u70b9CheckPoint\u7684\u5b9a\u4e49 \u25cf \u6267\u884cRedo\u3001Undo\u7b49\u64cd\u4f5c\uff0c\u5904\u7406\u63d2\u5165\u3001\u5220\u9664\u3001\u66f4\u65b0\uff0c\u4e8b\u52a1\u7684\u5f00\u59cb\u3001\u63d0\u4ea4\u3001\u56de\u6eda\u7b49\u65e5\u5fd7\uff0c\u5c06\u6570\u636e\u5e93\u6062\u590d\u5230\u5b95\u673a\u4e4b\u524d\u7684\u72b6\u6001 \u51fa\u4e8e\u5b9e\u73b0\u590d\u6742\u5ea6\u7684\u8003\u8651\uff0c\u540c\u65f6\u4e3a\u4e86\u907f\u514d\u5404\u6a21\u5757\u8026\u5408\u592a\u5f3a\uff0c\u524d\u9762\u6a21\u5757\u7684\u95ee\u9898\u5bfc\u81f4\u540e\u9762\u6a21\u5757\u5b8c\u5168\u65e0\u6cd5\u5b8c\u6210\uff0c\u540c\u7ec4\u6210\u5458\u7684\u5de5\u4f5c\u4e4b\u95f4\u5f71\u54cd\u8fc7\u6df1\uff0c\u6211\u4eec\u5c06Recovery Manager\u6a21\u5757\u5355\u72ec\u62c6\u4e86\u51fa\u6765\u3002\u53e6\u5916\u4e3a\u4e86\u51cf\u5c11\u91cd\u590d\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u4e0d\u91cd\u590d\u5b9e\u73b0\u65e5\u5fd7\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u64cd\u4f5c\uff0c\u5b9e\u73b0\u4e00\u4e2a\u7eaf\u5185\u5b58\u7684\u6570\u636e\u6062\u590d\u6a21\u5757\u5373\u53ef\u3002  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#2_1","title":"2\u3001 \u7cfb\u7edf\u5404\u6a21\u5757\u7684\u8bbe\u8ba1\u601d\u8def\u548c\u5b9e\u73b0","text":"<p><pre><code>    std::map&lt;lsn_t, LogRecPtr&gt; log_recs_{}; //\u65e5\u5fd7\u4fe1\u606f\n    lsn_t persist_lsn_{INVALID_LSN};        //\u5df2\u6301\u4e45\u5316\u7684\u65e5\u5fd7\u5e8f\u53f7\n    ATT active_txns_{};                     //\u6d3b\u8dc3\u4e8b\u52a1\u7f16\u53f7\n    KvDatabase data_{};                     //\u6570\u636e\n\nstruct CheckPoint { //CheckPoint\u68c0\u67e5\u70b9\u7ed3\u6784\n    lsn_t checkpoint_lsn_{INVALID_LSN};       //checkpoint\u6240\u5728\u65e5\u5fd7\u5e8f\u53f7\n    ATT active_txns_{}; // txn_id -&gt; last_lsn //checkpoint\u65f6\u6d3b\u8dc3\u4e8b\u52a1\u5373\u5176last_lsn_\n    KvDatabase persist_data_{};               //checkpoint\u65f6\u6570\u636e\u5e93\u6570\u636e\n};\n</code></pre> \u6309\u7167recovery_manager_test.cpp\u7684\u5185\u5bb9\uff0c\u5e94\u5b9e\u73b0\u5982\u4e0b\u7684\u4e8b\u52a1\u6062\u590d <pre><code>0. &lt;T0 Start&gt;\n1. &lt;T0,A,2000,2050&gt;\n2. &lt;T0,B,1000,-&gt;\n3. &lt;T1 Start&gt;          \n3. &lt;CheckPoint{T0,T1}&gt; Redo\n4. &lt;T1,C,-,600&gt;        |   \n5. &lt;T1 Commit&gt;         |   \n6. &lt;T0,C,600,700&gt;      |   \n                       |   \n7. &lt;T0 Abort&gt;          |   Undo(A=2000,B=1000,C=600,D=-)\n8. &lt;T2 Start&gt;          |   \u2191\n9. &lt;T2,D,-,30000&gt;      |   |\n10.&lt;T2,C,600,800&gt;      \u2193   |\n                   Undo list{T2}(A=2000,B=1000,C=800,D=30000)\n11.&lt;T2,C,800,600&gt;\n12.&lt;T2,D,-&gt;\n13.&lt;T2 Abort&gt;\n</code></pre> 1.\u4ececheckpoint\u5f00\u59cbredo\u76f4\u81f3\u6700\u65b0\u7684\u4e8b\u52a1\uff0c\u8bb0\u5f55\u672a\u5b8c\u6210\u7684\u4e8b\u52a1\u5230undo list 2.\u6309\u7167undo list\u6700\u672a\u5b8c\u6210\u4e8b\u52a1\u7684\u65e5\u5fd7\u505a\u8865\u507f\u64cd\u4f5c\uff0c\u5e76\u5c06\u8865\u507f\u64cd\u4f5c\u6dfb\u52a0\u5230\u65e5\u5fd7\u4e2d  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#redophase","title":"RedoPhase","text":"<p>Redo\u4ececheckpoint\u8bb0\u5f55\u7684\u5df2\u6301\u4e45\u5316\u7684\u65e5\u5fd7persist_lsn_\u5f00\u59cb\u5230\u65e5\u5fd7\u672b\u5c3e\u7684\u5185\u5bb9 \u6839\u636e\u64cd\u4f5c\u7684\u7c7b\u578b\u5bf9data_\u505a\u589e\u5220\u6539\u64cd\u4f5c \u5bf9Begin\u64cd\u4f5c\uff0c\u5728\u6d3b\u8dc3\u4e8b\u52a1\u4e2d\u6dfb\u52a0\u4e8b\u52a1\u7f16\u53f7(undo list) \u5bf9Commit\u64cd\u4f5c\uff0c\u4ece\u6d3b\u8dc3\u4e8b\u52a1\u4e2d\u79fb\u9664\u4e8b\u52a1\u7f16\u53f7 \u5bf9Abort\u64cd\u4f5c\uff0c\u4ece\u5f53\u524d\u64cd\u4f5c\u8d77\uff0c\u901a\u8fc7prev_lsn\u4e0eprev_log\u83b7\u5f97Abort\u4e8b\u52a1\u7684\u8fc7\u53bb\u64cd\u4f5c\uff0c\u5bf9\u589e\u5220\u6539\u505a\u56de\u6eda\u76f4\u81f3Begin   \u6700\u540e\u5c06persist_lsn_\u8bbe\u7f6e\u4e3a\u65e5\u5fd7\u672b\u5c3e\u7684lsn <pre><code>    void RedoPhase() {\n        for(std::map&lt;lsn_t, LogRecPtr&gt;::iterator it = log_recs_.upper_bound(persist_lsn_); it != log_recs_.end(); ++it)\n        {\n            LogRecPtr log = it-&gt;second;\n            switch (log-&gt;type_) {\n                case LogRecType::kInsert:\n                    data_[log-&gt;kv_data.key] = log-&gt;kv_data.val; \n                    break;\n                case LogRecType::kDelete:\n                    data_.erase(log-&gt;kv_data.key);\n                    break;\n                case LogRecType::kUpdate:\n                    data_[log-&gt;update_data.new_key] = log-&gt;update_data.new_val;\n                    break;\n                case LogRecType::kBegin:\n                    active_txns_[log-&gt;txn_id_] = log-&gt;lsn_;\n                    break;\n                case LogRecType::kCommit:\n                    active_txns_.erase(log-&gt;txn_id_);\n                    break;\n                case LogRecType::kAbort:{\n                    lsn_t prev_lsn = log-&gt;prev_lsn_;\n                    LogRecPtr prev_log = log_recs_[prev_lsn]; \n                    while (prev_log-&gt;type_ != LogRecType::kBegin) {\n                        if (prev_log-&gt;type_ == LogRecType::kInsert) \n                            data_.erase(prev_log-&gt;kv_data.key); \n                        else if (prev_log-&gt;type_ == LogRecType::kDelete) \n                            data_[prev_log-&gt;kv_data.key] = prev_log-&gt;kv_data.val;\n                        else if (prev_log-&gt;type_ == LogRecType::kUpdate) \n                            data_[prev_log-&gt;update_data.old_key] = prev_log-&gt;update_data.old_val;\n                        prev_lsn = prev_log-&gt;prev_lsn_;\n                        prev_log = log_recs_[prev_lsn]; \n                      }\n                    active_txns_.erase(log-&gt;txn_id_); \n                    break;\n                    }\n            }\n            persist_lsn_ = log-&gt;lsn_;\n        }\n    }\n</code></pre></p>"},{"location":"sp25/db/report/minisql/yyc_report/#undophase","title":"UndoPhase","text":"<p>\u6839\u636eRedoPhase\u83b7\u5f97\u7684Undo list(active_txns_),\u5bf9\u672a\u63d0\u4ea4\u4e8b\u52a1\u7684\u589e\u5220\u6539\u64cd\u4f5c\u505a\u8865\u507f\u64cd\u4f5c,\u5bf9Begin\u64cd\u4f5c\u505aAbort,\u5e76\u901a\u8fc7AppendLogRec\u6dfb\u52a0\u8bb0\u5f55 <pre><code>    void UndoPhase() {\n        for(lsn_t undo_lsn_ = persist_lsn_; !active_txns_.empty(); undo_lsn_--)\n        {\n            LogRecPtr log = log_recs_[undo_lsn_];\n            if(active_txns_.find(log-&gt;txn_id_) != active_txns_.end())\n            {\n                switch(log-&gt;type_) {\n                    case LogRecType::kInsert:\n                        data_.erase(log-&gt;kv_data.key);\n                        AppendLogRec(CreateDeleteLog(log-&gt;txn_id_, log-&gt;kv_data.key, log-&gt;kv_data.val));\n                        break;\n                    case LogRecType::kDelete:\n                        data_[log-&gt;kv_data.key] = log-&gt;kv_data.val;\n                        AppendLogRec(CreateInsertLog(log-&gt;txn_id_, log-&gt;kv_data.key, log-&gt;kv_data.val));\n                        break;\n                    case LogRecType::kUpdate:\n                        data_[log-&gt;update_data.old_key] = log-&gt;update_data.old_val; \n                        AppendLogRec(CreateUpdateLog(\n                            log-&gt;txn_id_,\n                            log-&gt;update_data.new_key, \n                            log-&gt;update_data.new_val,\n                            log-&gt;update_data.old_key,\n                            log-&gt;update_data.old_val\n                        ));\n                        break;\n                    case LogRecType::kBegin:\n                        AppendLogRec(CreateAbortLog(log-&gt;txn_id_));\n                        active_txns_.erase(log-&gt;txn_id_); \n                        break;\n                    case LogRecType::kCommit:\n                        break;\n                    case LogRecType::kAbort:\n                        break;\n                    case LogRecType::kInvalid:\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n</code></pre></p>"},{"location":"sp25/db/report/minisql/yyc_report/#3","title":"3\u3001 \u601d\u8003\u9898","text":"<p>\u672c\u6a21\u5757\u4e2d\uff0c\u4e3a\u4e86\u7b80\u5316\u5b9e\u9a8c\u96be\u5ea6\uff0c\u6211\u4eec\u5c06Recovery Manager\u6a21\u5757\u72ec\u7acb\u51fa\u6765\u3002\u5982\u679c\u4e0d\u72ec\u7acb\u51fa\u6765\uff0c\u771f\u6b63\u505a\u5230\u6570\u636e\u5e93\u5728\u4efb\u4f55\u65f6\u5019\u65ad\u7535\u90fd\u80fd\u6062\u590d\uff0c\u540c\u65f6\u652f\u6301\u4e8b\u52a1\u7684\u56de\u6eda\uff0cRecovery Manager\u5e94\u8be5\u600e\u6837\u8bbe\u8ba1\u5462\uff1f\u6b64\u5916\uff0cCheckPoint\u673a\u5236\u5e94\u8be5\u600e\u6837\u8bbe\u8ba1\u5462\uff1f </p> <p>1.checkpoint\u673a\u5236\uff1a\u6dfb\u52a0serialize\u4e0edeserialize,\u4fbf\u4e8eLogManager\u5199\u5165CheckPoint\u4fe1\u606f <pre><code>struct CheckPoint {\n    lsn_t checkpoint_lsn_{INVALID_LSN};\n    ATT active_txns_{}; // txn_id -&gt; last_lsn\n    KvDatabase persist_data_{};\n\n    void SerializeTo(char *buf) const {\n        // checkpoint_lsn_\n        MACH_WRITE_TO(lsn_t, buf, checkpoint_lsn_);\n        buf += sizeof(lsn_t);\n\n        // active_txns_\u7684\u5927\u5c0f\n        uint32_t active_txns_size = static_cast&lt;uint32_t&gt;(active_txns_.size());\n        MACH_WRITE_UINT32(buf, active_txns_size);\n        buf += 4;\n\n        // active_txns_\u6761\u76ee\n        for (const auto&amp; [txn_id, last_lsn] : active_txns_) {\n            MACH_WRITE_TO(txn_id_t, buf, txn_id);\n            buf += sizeof(txn_id_t);\n            MACH_WRITE_TO(lsn_t, buf, last_lsn);\n            buf += sizeof(lsn_t);\n        }\n\n        // persist_data_\u7684\u5927\u5c0f\n        uint32_t data_size = static_cast&lt;uint32_t&gt;(persist_data_.size());\n        MACH_WRITE_UINT32(buf, data_size);\n        buf += 4;\n\n        // persist_data_\u6761\u76ee\n        for (const auto&amp; [key, val] : persist_data_) {\n            key.SerializeTo(buf);\n            buf += key.GetSerializedSize();\n            val.SerializeTo(buf);\n            buf += val.GetSerializedSize();\n        }\n    }\n\n    static CheckPoint DeserializeFrom(char *buf) {\n        CheckPoint checkpoint;\n\n        // \u8bfb\u53d6checkpoint_lsn_\n        checkpoint.checkpoint_lsn_ = MACH_READ_FROM(lsn_t, buf);\n        buf += sizeof(lsn_t);\n\n        // \u8bfb\u53d6active_txns_\u7684\u5927\u5c0f\n        uint32_t active_txns_size = MACH_READ_UINT32(buf);\n        buf += 4;\n\n        // \u8bfb\u53d6active_txns_\u6761\u76ee\n        for (uint32_t i = 0; i &lt; active_txns_size; ++i) {\n            txn_id_t txn_id = MACH_READ_FROM(txn_id_t, buf);\n            buf += sizeof(txn_id_t);\n            lsn_t last_lsn = MACH_READ_FROM(lsn_t, buf);\n            buf += sizeof(lsn_t);\n            checkpoint.active_txns_[txn_id] = last_lsn;\n        }\n\n        // \u8bfb\u53d6persist_data_\u7684\u5927\u5c0f\n        uint32_t data_size = MACH_READ_UINT32(buf);\n        buf += 4;\n\n        // \u8bfb\u53d6persist_data_\u6761\u76ee\n        for (uint32_t i = 0; i &lt; data_size; ++i) {\n            KeyType key = KeyType::DeserializeFrom(buf);\n            buf += key.GetSerializedSize();\n            ValType val = ValType::DeserializeFrom(buf);\n            buf += val.GetSerializedSize();\n            checkpoint.persist_data_.emplace(std::move(key), std::move(val));\n        }\n        return checkpoint;\n    }\n\n    size_t GetSerializedSize() const {\n        size_t size = sizeof(lsn_t) + 4;\n\n        // \u6d3b\u8dc3\u4e8b\u52a1\u6761\u76ee\u5927\u5c0f\n        size += active_txns_.size() * (sizeof(txn_id_t) + sizeof(lsn_t));\n\n        // \u6301\u4e45\u5316\u6570\u636e\u5927\u5c0f\n        size += 4; // data_size\n        for (const auto&amp; [key, val] : persist_data_) {\n            size += key.GetSerializedSize() + val.GetSerializedSize();\n        }\n        return size;\n    }\n};\n\n// \u5728RecoveryManager\u4e2d\u8865\u5145CreateNewCheckpoint()\u51fd\u6570\nlsn_t CreateNewCheckpoint() {\n    // \u83b7\u53d6\u5f53\u524d\u6700\u65b0\u7684LSN\n    lsn_t current_lsn = log_manager_-&gt;GetNextLSN();\n\n    // \u521b\u5efa\u65b0\u7684Checkpoint\n    CheckPoint checkpoint;\n    checkpoint.checkpoint_lsn_ = current_lsn;\n\n    // \u83b7\u53d6\u6240\u6709\u6d3b\u8dc3\u4e8b\u52a1\u53ca\u5176\u6700\u540eLSN\n    auto active_txns = txn_manager_-&gt;GetActiveTransactions();\n    for (auto txn : active_txns) {\n        checkpoint.AddActiveTxn(txn-&gt;GetTransactionId(), txn-&gt;GetLastLSN());\n    }\n\n    // \u83b7\u53d6\u9700\u8981\u6301\u4e45\u5316\u7684\u6570\u636e\n\n    // \u5e8f\u5217\u5316\u5e76\u5199\u5165\u78c1\u76d8\n    size_t serialized_size = checkpoint.GetSerializedSize();\n    char *buf = new char[serialized_size];\n    checkpoint.SerializeTo(buf);\n    disk_manager_-&gt;Write(buf, serialized_size);\n    delete[] buf;\n\n    return current_lsn;\n}\n</code></pre> 2.LogManager\u5728log buffer\u5145\u6ee1\u6216timeout\u53d1\u751f\u65f6\u5c06\u65e5\u5fd7\u4fe1\u606f\u5199\u5165\u78c1\u76d8\u5e76\u6e05\u7a7alog buffer <pre><code>public:\n    void AppendLog(LogRecPtr log_rec) {\n        std::lock_guard&lt;std::mutex&gt; lock(latch_);\n        log_buffer_.push_back(log_rec);\n        if (log_buffer_.size() &gt;= log_buffer_size_ || timeout()) {\n            FlushLogBuffer();\n        }\n    }\n\n    void FlushLogBuffer() {\n        // \u5c06log_buffer_\u4e2d\u7684\u65e5\u5fd7\u5199\u5165\u78c1\u76d8\n        disk_manager.write(log_buffer_);\n        log_buffer_.clear();\n        // \u521b\u5efa\u65b0\u7684Checkpoint\u8868\u793a\u6570\u636e\u5df2\u7ecf\u6301\u4e45\u5316\n        recovery_manager.CreateNewCheckpoint();\n    }\n\nprivate:\n    RecoveryManager recovery_manager;\n    std::vector&lt;LogRecPtr&gt; log_buffer_;\n    size_t log_buffer_size_;\n    std::mutex latch_;\n    DiskManager disk_manager;\n    lsn_t persist_lsn;\n};\n</code></pre> 3.\u5728Executor\u4e2d\u5c06\u6bcf\u4e00\u6761\u6267\u884c\u7684\u64cd\u4f5c\u5199\u5165log buffer(\u4f18\u5148\u5199\u65e5\u5fd7,WAL) 4.\u4e3a\u4e86\u652f\u6301\u4e8b\u52a1\uff0c\u5728Executor\u652f\u6301\u4e8b\u52a1Begin,Commit\u4e0eAbort Begin\u8981\u6c42\u4e3a\u521b\u5efa\u65b0\u4e8b\u52a1\u5e76\u5199\u5165\u5f00\u59cb\u65e5\u5fd7\uff0c\u4e8b\u52a1\u901a\u8fc7txn_manager\u7ba1\u7406\uff0ctxn_manager\u5df2\u7ecf\u5b9e\u73b0 <pre><code>dberr_t ExecuteEngine::ExecuteTrxBegin(pSyntaxNode ast, ExecuteContext *context) {\n#ifdef ENABLE_EXECUTE_DEBUG\n  LOG(INFO) &lt;&lt; \"ExecuteTrxBegin\" &lt;&lt; std::endl;\n#endif\n  // \u68c0\u67e5\u5f53\u524d\u662f\u5426\u5df2\u6709\u6d3b\u8dc3\u4e8b\u52a1\n  if (context-&gt;GetTransaction() != nullptr) {\n    LOG(ERROR) &lt;&lt; \"Transaction already in progress\" &lt;&lt; endl;\n    return DB_FAILED;\n  }\n\n  // \u521b\u5efa\u65b0\u4e8b\u52a1\n  txn_id_t txn_id = next_txn_id_++;\n  Transaction *txn = new Transaction(txn_id);\n  context-&gt;SetTransaction(txn);\n\n  // \u8bb0\u5f55\u4e8b\u52a1\u5f00\u59cb\u65e5\u5fd7\n  LogRecPtr begin_log = log_manager_-&gt;CreateBeginLog(txn_id);\n  log_manager_-&gt;AppendLog(begin_log);\n\n  // \u5c06\u4e8b\u52a1\u52a0\u5165\u4e8b\u52a1\u7ba1\u7406\u5668\n  txn_manager_-&gt;Begin(txn);\n\n  LOG(INFO) &lt;&lt; \"Transaction \" &lt;&lt; txn_id &lt;&lt; \" started successfully\" &lt;&lt; endl;\n  return DB_SUCCESS;\n}\n</code></pre> Commit\u8981\u6c42\u5c06\u4e8b\u52a1\u7684\u5168\u90e8\u64cd\u4f5c\u5237\u76d8\uff0c\u5728lock_manager\u91ca\u653e\u9501\uff0c\u5728txn_manager\u63d0\u4ea4\u4e8b\u52a1 <pre><code>dberr_t ExecuteEngine::ExecuteTrxCommit(pSyntaxNode ast, ExecuteContext *context) {\n#ifdef ENABLE_EXECUTE_DEBUG\n  LOG(INFO) &lt;&lt; \"ExecuteTrxCommit\" &lt;&lt; std::endl;\n#endif\n  // \u83b7\u53d6\u5f53\u524d\u4e8b\u52a1\n  Transaction *txn = context-&gt;GetTransaction();\n  if (txn == nullptr) {\n    LOG(ERROR) &lt;&lt; \"No transaction to commit\" &lt;&lt; endl;\n    return DB_FAILED;\n  }\n\n  // \u8bb0\u5f55\u4e8b\u52a1\u63d0\u4ea4\u65e5\u5fd7\n  LogRecPtr commit_log = log_manager_-&gt;CreateCommitLog(txn-&gt;GetTransactionId());\n  log_manager_-&gt;AppendLog(commit_log);\n\n  // \u5f3a\u5236\u65e5\u5fd7\u5237\u76d8\u786e\u4fdd\u6301\u4e45\u6027\n  log_manager_-&gt;FlushLogBuffer();\n\n  // \u91ca\u653e\u6240\u6709\u9501\n  lock_manager_-&gt;UnlockAll(txn);\n\n  // \u63d0\u4ea4\u4e8b\u52a1\n  txn_manager_-&gt;Commit(txn);\n\n  // \u6e05\u7406\u4e0a\u4e0b\u6587\n  context-&gt;SetTransaction(nullptr);\n  delete txn;\n\n  LOG(INFO) &lt;&lt; \"Transaction \" &lt;&lt; txn-&gt;GetTransactionId() &lt;&lt; \" committed successfully\" &lt;&lt; endl;\n  return DB_SUCCESS;\n}\n</code></pre> Abort\u8981\u6c42\u5c06\u4e8b\u52a1\u7684\u6240\u6709\u64cd\u4f5c\u56de\u6eda\uff0c\u8bb0\u5f55\u56de\u6eda\u65e5\u5fd7\uff0c\u91ca\u653e\u9501 <pre><code>dberr_t ExecuteEngine::ExecuteTrxRollback(pSyntaxNode ast, ExecuteContext *context) {\n#ifdef ENABLE_EXECUTE_DEBUG\n  LOG(INFO) &lt;&lt; \"ExecuteTrxRollback\" &lt;&lt; std::endl;\n#endif\n  // \u83b7\u53d6\u5f53\u524d\u4e8b\u52a1\n  Transaction *txn = context-&gt;GetTransaction();\n  if (txn == nullptr) {\n    LOG(ERROR) &lt;&lt; \"No transaction to rollback\" &lt;&lt; endl;\n    return DB_FAILED;\n  }\n\n  // \u8bb0\u5f55\u4e8b\u52a1\u56de\u6eda\u65e5\u5fd7\n  LogRecPtr abort_log = log_manager_-&gt;CreateAbortLog(txn-&gt;GetTransactionId());\n  log_manager_-&gt;AppendLog(abort_log);\n\n  // \u6267\u884c\u56de\u6eda\u64cd\u4f5c\n  txn_manager_-&gt;Abort(txn);\n\n  // \u91ca\u653e\u6240\u6709\u9501\n  lock_manager_-&gt;UnlockAll(txn);\n\n  // \u6e05\u7406\u4e0a\u4e0b\u6587\n  context-&gt;SetTransaction(nullptr);\n  delete txn;\n\n  LOG(INFO) &lt;&lt; \"Transaction \" &lt;&lt; txn-&gt;GetTransactionId() &lt;&lt; \" rolled back successfully\" &lt;&lt; endl;\n  return DB_SUCCESS;\n}\n</code></pre> 5.\u5bf9quit\u64cd\u4f5c\uff0c\u505a\u5f3a\u5236\u5237\u76d8\u4e0echeckpoint\u7684\u66f4\u65b0 <pre><code>dberr_t ExecuteEngine::ExecuteQuit(pSyntaxNode ast, ExecuteContext *context) {\n#ifdef ENABLE_EXECUTE_DEBUG\n  LOG(INFO) &lt;&lt; \"ExecuteQuit\" &lt;&lt; std::endl;\n#endif\n  // \u68c0\u67e5\u662f\u5426\u6709\u6d3b\u8dc3\u4e8b\u52a1\n  if (context-&gt;GetTransaction() != nullptr) {\n    LOG(WARNING) &lt;&lt; \"Active transaction found during quit, rolling back...\" &lt;&lt; endl;\n    ExecuteTrxRollback(nullptr, context);  // \u56de\u6eda\u5f53\u524d\u4e8b\u52a1\n  }\n\n  // \u5f3a\u5236\u5237\u76d8\u6240\u6709\u65e5\u5fd7\n  log_manager_-&gt;FlushLogBuffer();\n\n  // \u521b\u5efa\u6700\u7ec8checkpoint\n  recovery_manager_-&gt;CreateNewCheckpoint();\n\n  // \u786e\u4fddcheckpoint\u6570\u636e\u5199\u5165\u78c1\u76d8\n  disk_manager_-&gt;Sync();\n\n  LOG(INFO) &lt;&lt; \"Database shutdown.\" &lt;&lt; endl;\n  return DB_SUCCESS;\n}\n</code></pre> 6.\u5f53\u6570\u636e\u5e93\u5f02\u5e38\u9000\u51fa\u518d\u542f\u52a8\u65f6\uff0c\u5728Catalog\u7684\u6784\u9020\u51fd\u6570\u6253\u5f00\u65e5\u5fd7\uff0c\u4ece\u6700\u8fd1\u7684\u4e00\u4e2acheckpoint\u5f00\u59cbredo\u4e0eundo\uff0c\u5168\u90e8\u5b8c\u6210\u540e\u8bbe\u7f6e\u4e00\u4e2acheckpoint <pre><code>CatalogManager::CatalogManager(BufferPoolManager *buffer_pool_manager, LockManager *lock_manager,LogManager *log_manager, bool init)\n    : buffer_pool_manager_(buffer_pool_manager), lock_manager_(lock_manager), log_manager_(log_manager) {\n\n    // ...\n    if(init == true)\n        // ...\n    else {\n        //load existing metadata,table,index\n        //...\n        RecoveryManager recovery_manager = log_manager-&gt;GetRecoveryManager();\n        recovery_manager.Init(last_checkpoint);\n        recovery_manager.RedoPhase();\n        recovery_manager.UndoPhase();\n        last_checkpoint = recovery_manager.CreateNewCheckpoint();\n        log_manager-&gt;FlushLogBuffer();\n    }\n}\n</code></pre></p> <p>\u5b8c\u6210\u4ee5\u4e0a\u90e8\u5206\u540e\uff0c\u65ad\u7535\u540e\u5df2\u88ab\u5199\u5165\u78c1\u76d8\u7684\u65e5\u5fd7\u90fd\u88ab\u6b63\u786eredo\u4e0eundo\uff0c\u5728log buffer\u4e2d\u7684\u65e5\u5fd7\u4f1a\u4e22\u5931\uff0c\u4fdd\u969c\u4e86\u6570\u636e\u5e93\u7684\u4e00\u81f4\u6027  </p>"},{"location":"sp25/db/report/minisql/yyc_report/#_4","title":"\u56db\u3001 \u5b9e\u9a8c\u7ed3\u679c\u5c55\u793a","text":"<ul> <li>\u8fd0\u884c<code>minisql_test</code>\uff1a  </li> </ul> <ul> <li>\u8fdb\u884c<code>main</code>\u51fd\u6570\u6574\u4f53\u8fd0\u884c\u7ed3\u679c\u89c1\u5c0f\u7ec4\u603b\u4f53\u8bbe\u8ba1\u62a5\u544a</li> </ul>"},{"location":"sp25/db/report/minisql/zj_report/","title":"Zj report","text":"<p>"},{"location":"sp25/db/report/minisql/zj_report/#database-system","title":"DataBase System","text":""},{"location":"sp25/db/report/minisql/zj_report/#minisql","title":"MiniSQL \u4e2a\u4eba\u8bbe\u8ba1\u62a5\u544a","text":"\u59d3\u540d\uff1a\u2003\u2003\u2003\u949f\u2003\u5251\u2003\u2003\u2003         \u65e5\u671f\uff1a\u2003\u20036 \u6708 4 \u65e5"},{"location":"sp25/db/report/minisql/zj_report/#_1","title":"\u4e00\u3001 \u5b9e\u9a8c\u80cc\u666f\u4e0e\u76ee\u7684","text":"<ul> <li>\u57fa\u4e8e\u7ed9\u5b9a\u6846\u67b6\u57fa\u7840\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7cbe\u7b80\u578b\u5355\u7528\u6237SQL\u5f15\u64ceMinSQL</li> <li>\u5728\u672c\u6b21\u9879\u76ee\u4e2d\uff0c\u5b9e\u73b0SQL\u5f15\u64ce\u652f\u6301\u7528\u6237\u901a\u8fc7\u5b57\u7b26\u754c\u9762\u8f93\u5165SQL\u8bed\u53e5\u5b9e\u73b0\u7b80\u5355\u7684\u589e\u3001\u5220\u3001\u6539\u3001\u67e5\u64cd\u4f5c</li> <li>\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u8fdb\u884c\u67e5\u8be2\u7684\u6027\u80fd\u4f18\u5316</li> <li>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c \u8bbe\u8ba1\u5e76\u5b8c\u6210Index \u4e0e\u90e8\u5206 Executor</li> </ul>"},{"location":"sp25/db/report/minisql/zj_report/#_2","title":"\u4e8c\u3001 \u8bbe\u8ba1\u5b8c\u6210\u5185\u5bb9","text":"<ul> <li>\u5728\u672c\u6b21\u5b9e\u9a8c\u4e2d\uff0c\u8bbe\u8ba1\u5b8c\u6210\u4e86\uff1a</li> <li><code>B+ tree</code>\u76f8\u5173<code>index</code>,<code>page</code>\u6a21\u5757,\u76f8\u5173\u6587\u4ef6\uff1a    </li> <li><code>executor_engine</code>\u6267\u884c\u76f8\u5173\u6a21\u5757\uff0c\u76f8\u5173\u6587\u4ef6\uff1a   </li> <li>\u5e76\u53c2\u4e0e\u5de5\u7a0b\u6700\u540e\u7684\u8c03\u8bd5\u4e0e\u4f18\u5316</li> </ul>"},{"location":"sp25/db/report/minisql/zj_report/#_3","title":"\u4e09\u3001 \u5177\u4f53\u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/zj_report/#b-tree","title":"<code>B+ Tree</code>\u76f8\u5173\u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"sp25/db/report/minisql/zj_report/#1","title":"1\u3001 \u6574\u4f53\u67b6\u6784","text":""},{"location":"sp25/db/report/minisql/zj_report/#_4","title":"\u8282\u70b9\u6570\u636e\u9875\u7ba1\u7406","text":"<ul> <li><code>b plus tree leaf page</code> \u4e0e <code>b plus tree internal page</code>\u90fd\u7ee7\u627f\u81ea <code>b plus tree page</code>\u3002</li> <li>\u6bcf\u4e2a<code>Page</code>\u6bb5\u5305\u542b\u591a\u4e2a\u952e\u503c\u5bf9<code>pair</code>(<code>key</code> , <code>value</code>)\uff1a</li> <li>\u5bf9 <code>Internal Page</code>:   <ul> <li>\u5bf9\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\uff0c\u5176\u4e2d\u5305\u542bm\u4e2apair, \u5176\u4e2d\u6709 m-1 \u4e2a <code>key</code>\uff0cm \u4e2a <code>pointer</code>\u5373\u5b50\u8282\u70b9\u9875\u53f7\uff0c\u9700\u8981\u6ce8\u610f\u952e\u4e0e\u6307\u9488\u6570\u91cf\u4e0d\u540c\uff0c\u56e0\u6b64\u7b2c\u4e00\u4e2a\u7f6e\u4e3a<code>invalid</code></li> <li>\u800c<code>middle key</code>\u6307\u7684\u6b63\u662f\u8fd9\u4e2a<code>invalid</code>\u4f4d\u7f6e\u5e94\u8be5\u50a8\u5b58\u7684<code>key</code>\u3002\u5f53\u4e00\u4e2a\u5185\u90e8\u8282\u70b9\u5206\u88c2\uff0c\u9700\u8981\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u7684<code>key</code>\u79fb\u5230\u7236\u8282\u70b9\u4e2d\u5b58\u50a8\uff1b \u800c\u5f53\u6b64\u5185\u90e8\u8282\u70b9\u9700\u8981\u8fdb\u884cmerge \u6216\u8005 redistribute\uff0c\u5219\u9700\u8981\u4ece\u7236\u8282\u70b9\u4e2d\u53d6\u51fa<code>middle key</code>\u5b58\u56de\u8be5\u8282\u70b9\u3002</li> </ul> </li> <li>\u5bf9 <code>Leaf Page</code> :   <ul> <li>\u5bf9\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5176\u4e2d\u5305\u542bm\u4e2apair, \u5176\u4e2d\u6709 m \u4e2a <code>key</code>\uff0cm\u4e2a <code>RowId</code>(\u8bb0\u5f55<code>key</code>\u5bf9\u5e94row\u5728table heap\u4e2d\u7684\u4f4d\u7f6e) \u3002</li> </ul> </li> </ul>"},{"location":"sp25/db/report/minisql/zj_report/#b","title":"B+ \u6811\u6574\u4f53\u7ed3\u6784","text":"<ul> <li>\u5f53\u9700\u8981\u5efa\u7acb\u4e00\u4e2a\u7d22\u5f15\u65f6\uff0c\u9700\u8981\u5148\u5c06\u7d22\u5f15\u52a0\u5165<code>Index Root Page</code>\u4e2d\uff0c\u7136\u540e\u7c4d\u6b64\u5efa\u7acb\u7d22\u5f15 B+ \u6811\u3002</li> <li>\u5f53\u7528\u5230\u67d0\u9875\u65f6\uff0c\u9700\u8981\u4ecebuffer pool\u4e2d<code>fetch</code>\uff0c\u4f46\u4f7f\u7528\u5b8c\u540e\u9700\u8981\u8fdb\u884c<code>unpin</code>\uff0c\u907f\u514d\u5f15\u7528\u8ba1\u6570\u4e00\u76f4\u4e0d\u51cf\u5c11\uff0c\u65e0\u6cd5\u56de\u6536\u9875\u3002</li> </ul>"},{"location":"sp25/db/report/minisql/zj_report/#2","title":"2\u3001 \u90e8\u5206\u4ee3\u7801\u5206\u6790","text":"<p>\u7531\u4e8e\u5177\u4f53\u4ee3\u7801\u8f83\u591a\uff0c\u56e0\u6b64\u4ec5\u7ed9\u51fa\u90e8\u5206\u4ee3\u7801\u53ca\u51fd\u6570\u540d\uff0c\u8be6\u7ec6\u53ef\u5728\u6e90\u7801\u4e2d\u67e5\u770b\u3002</p>"},{"location":"sp25/db/report/minisql/zj_report/#internal-page","title":"Internal Page","text":"<ul> <li><code>Lookup</code>\u51fd\u6570\uff1a\u627e\u5230\u5b58\u6709\u67e5\u627e<code>key</code>\u7684\u5185\u90e8\u8282\u70b9\u4e2d\u5bf9\u5e94\u7684<code>index</code></li> <li>\u4e3a\u52a0\u5feb\u67e5\u627e\u901f\u5ea6\uff0c\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u6cd5\u5bf9\u9700\u8981\u7684\u8282\u70b9\u8fdb\u884c\u67e5\u627e,\u4f7f\u7528<code>KeyManager</code>\u7c7b\u4e2d\u7684\u6bd4\u8f83\u51fd\u6570\u6765\u8fdb\u884c<code>Key</code>\u7684\u5e8f\u5217\u5316\u6bd4\u8f83</li> <li> <p>\u6b64\u51fd\u6570\u7528\u4e8e\u67e5\u627e\u6240\u9700key\u7684\u53f6\u5b50\u8282\u70b9</p> </li> <li> <p><code>InsertNodeAfter()</code>\u51fd\u6570\uff1a\u5c06\u4e00\u4e2a\u65b0\u7684(key, value)\u63d2\u5165\u5230\u5185\u90e8\u8282\u70b9\u4e2d\u7684<code>old_value</code>\u4e4b\u540e</p> </li> <li>\u901a\u8fc7\u5c06<code>old_value</code>\u4e4b\u540e\u7684\u952e\u503c\u5bf9\u6574\u4f53\u540e\u79fb\uff0c\u5728\u7a7a\u51fa\u7684\u4f4d\u7f6e\u4e0a\u653e\u4e0a\u9700\u8981\u63d2\u5165\u7684\u952e\u503c\u5bf9</li> <li>\u540c\u65f6\u9700\u8981\u5c06\u5f53\u524d\u8282\u70b9\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf\u52a0\u4e00</li> <li> <p>\u7531\u4e8e\u9875\u76f8\u5173\u51fd\u6570\u90fd\u662f\u5bf9\u8282\u70b9\u7684\u57fa\u7840\u64cd\u4f5c\u5355\u5143\u5316\uff0c\u56e0\u6b64\u5728\u8fd9\u91cc\u6682\u65f6\u4e0d\u4f1a\u8fdb\u884c\u63d2\u5165\u540esplit\u68c0\u6d4b</p> </li> <li> <p><code>CopyNFrom()</code>\u51fd\u6570\uff1a\u5c06N\u4e2a\u952e\u503c\u5bf9\u4ece\u4f20\u5165\u5730\u5740\u79fb\u52a8\u5230\u7ed9\u5b9a\u5730\u5740</p> </li> <li>\u4ece\u4f20\u5165\u5730\u5740\u5f00\u59cb\uff0c\u9009\u62e9N\u4e2a\u952e\u503c\u5bf9\uff0c\u653e\u7f6e\u5728\u7ed9\u5b9a\u5730\u5740\u540e</li> <li>\u9700\u8981\u6ce8\u610f\u7531\u4e8e\u8fd9\u91cc\u4e00\u822c\u662f\u5bf9\u5185\u90e8\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u88ab\u79fb\u52a8\u8282\u70b9\u7684\u5b50\u8282\u70b9(adopt_child)\u8fdb\u884c\u4fee\u6539</li> <li> <p>\u9700\u8981\u904d\u5386\u5c06adopt child\u7684\u7236\u8282\u70b9\u4fee\u6539\u4e3a\u76ee\u6807\u5185\u90e8\u8282\u70b9</p> </li> <li> <p><code>CopyLastFrom()</code>\u51fd\u6570\uff1a \u5c06\u4e00\u4e2apair\u79fb\u52a8\u5230\u5f53\u524d\u9875\u7684\u672b\u5c3e</p> </li> <li>\u5c06\u5f53\u524d\u9875\u7684\u62e5\u6709\u952e\u503c\u5bf9\u6570\u91cf\u52a0\u4e00\uff0c\u540c\u65f6\u5c06\u9700\u8981\u79fb\u52a8\u7684\u952e\u503c\u5bf9\u6dfb\u52a0\u5230\u5f53\u524d\u9875\u672b\u5c3e</li> <li> <p>\u540c\u65f6\u7531\u4e8e\u79fb\u52a8\u4e86\u952e\u503c\u5bf9\uff0c\u5176\u6307\u5411\u7684adopt child\u7684\u7236\u8282\u70b9\u4e5f\u9700\u8981\u8fdb\u884c\u8fdb\u884c\u8c03\u6574\uff0c\u8c03\u6574\u4e3a\u5f53\u524d\u9875\u7684page_id</p> </li> <li> <p><code>MoveFirstToEndOf()</code>\u51fd\u6570\uff1a \u5c06\u5f53\u524d\u9875\u7684\u9996Pair\u79fb\u52a8\u5230\u76ee\u6807\u9875\u672b\u5c3e</p> </li> <li>\u53d6\u5f97\u5f53\u524d\u9875\u7684\u7b2c\u4e00\u4e2apair\uff0c\u9700\u8981\u6ce8\u610f\u7531\u4e8e\u5185\u90e8\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a<code>key</code>\u4e3ainvalid\uff0c\u56e0\u6b64\u9700\u8981\u4ece\u4ece\u7236\u8282\u70b9\u4e2d\u83b7\u5f97<code>middle key</code></li> <li>\u76f4\u63a5\u8ba9\u76ee\u6807\u9875\u8c03\u7528<code>CopyLastFrom()</code>\u51fd\u6570\uff0c\u5c06\u4f20\u5165pair\u653e\u5728\u672b\u5c3e</li> <li> <p>\u6700\u540e\u9700\u8981\u5220\u9664\u5f53\u524d\u9875\u7684\u7b2c\u4e00\u4e2apair</p> </li> <li> <p><code>CopyFirstFrom()</code>\u51fd\u6570\uff1a \u5c06\u4e00\u4e2apair\u79fb\u52a8\u5230\u5f53\u524d\u9875\u7684\u5f00\u5934</p> </li> <li>\u76f4\u63a5\u8c03\u7528<code>InsertNodeAfter()</code>\u51fd\u6570\uff0c\u7531\u4e8e\u662f\u5f00\u5934\uff0c\u56e0\u6b64\u5c06<code>old_value</code>\u8bbe\u7f6e\u4e3a<code>INVALID_PAGE_ID</code></li> <li> <p>\u540c\u65f6\u9700\u8981\u6ce8\u610f\u7531\u4e8e\u5f53\u524d\u9875\u5f00\u5934\u7684<code>key</code>\u4e3ainvalid\uff0c\u56e0\u6b64\u9700\u8981\u83b7\u5f97\u7236\u8282\u70b9\u7684<code>middle key</code>\uff0c\u8fd9\u6837\u624d\u80fd\u6210\u4e3a\u4e00\u4e2a\u5b8c\u6574\u7684\u5185\u90e8\u8282\u70b9</p> </li> <li> <p><code>MoveLastToFrontOf()</code>\u51fd\u6570\uff1a  \u5c06\u5f53\u524d\u9875\u7684\u672b\u5c3ePair\u79fb\u52a8\u5230\u76ee\u6807\u9875\u7684\u5f00\u5934</p> </li> <li>\u5c06\u76ee\u6807\u9875\u7684\u7b2c\u4e00\u4e2a<code>key</code>\u66f4\u65b0\u4e3a<code>middle key</code></li> <li>\u53d6\u5f97\u5f53\u524d\u9875\u7684\u672b\u5c3evalue\uff0c\u5e76\u8ba9\u76ee\u6807\u9875\u76f4\u63a5\u8c03\u7528<code>CopyFirstFrom()</code>\uff0c\u4f7f\u5f97<code>value</code>\u80fd\u591f\u63d2\u5165\u5230\u76ee\u6807\u9875\u7684\u5f00\u5934</li> <li> <p>\u5220\u9664\u5f53\u524d\u9875\u7684\u7b2c\u4e00\u4e2apair</p> </li> <li> <p><code>MoveAllTo()</code>\u51fd\u6570\uff1a \u5c06\u5f53\u524d\u9875\u7684\u6240\u6709\u952e\u503c\u5bf9\u79fb\u52a8\u5230\u76ee\u6807\u9875</p> </li> <li>\u53d6\u5f97\u5f53\u524d\u9875\u952e\u503c\u5bf9\u5f00\u59cb\u5730\u5740</li> <li>\u76ee\u6807\u9875\u76f4\u63a5\u8c03\u7528<code>CopyNFrom</code>\u51fd\u6570\uff0c\u5c06\u6240\u6709\u952e\u503c\u5bf9\u653e\u5728\u81ea\u8eab\u952e\u503c\u5bf9\u540e</li> <li> <p>\u540c\u65f6\u9700\u8981\u6ce8\u610f\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u8fdb\u884c\u5185\u90e8\u8282\u70b9\u7684merge\uff0c\u56e0\u6b64\u9700\u8981\u4ece\u7236\u8282\u70b9\u83b7\u5f97<code>middle key</code></p> </li> <li> <p><code>MoveHalfTo()</code>\u51fd\u6570\uff1a \u5c06\u5f53\u524d\u8282\u70b9\u7684\u4e00\u534a\u952e\u503c\u5bf9\u79fb\u52a8\u5230\u76ee\u6807\u8282\u70b9</p> </li> <li>\u7528\u4e8e\u5185\u90e8\u8282\u70b9\u7684split</li> <li>\u9700\u8981\u5c06\u5f53\u524d\u8282\u70b9\u7684\\(\\lceil \\frac{size}{2} \\rceil\\) \u4fdd\u7559\uff0c\u540c\u65f6\u5c06\u53e6\u4e00\u534a\u79fb\u52a8\u5230\u76ee\u6807\u8282\u70b9</li> <li> <p>\u6ce8\u610f\u9700\u8981\u8c03\u6574\u5f53\u524d\u9875\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf</p> </li> <li> <p><code>Remove()</code>\u51fd\u6570\uff1a \u6839\u636e\u4f20\u5165\u7684\u5e8f\u53f7\u5c06\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u4ece\u5f53\u524d\u5185\u90e8\u8282\u70b9\u4e2d\u5220\u9664</p> </li> <li>\u4ece\u51fa\u5165\u5e8f\u53f7\u8d77\uff0c\u5c06\u540e\u9762\u7684\u952e\u503c\u5bf9\u4f9d\u6b21\u5411\u524d\u79fb\u52a8</li> <li> <p>\u540c\u65f6\u5c06\u5f53\u524d\u9875\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf\u51cf\u4e00</p> </li> <li> <p><code>RemoveAndReturnOnlyChild()</code>: \u5220\u9664\u5185\u90e8\u8282\u70b9\u4e2d\u552f\u4e00\u7684\u952e\u503c\u5bf9</p> </li> </ul> <p></p>"},{"location":"sp25/db/report/minisql/zj_report/#leaf-page","title":"Leaf Page","text":"<ul> <li><code>KeyIndex()</code>\u51fd\u6570\uff1a \u7528\u4e8e\u67e5\u770b<code>key</code>\u662f\u5426\u5728\u5f53\u524d\u53f6\u8282\u70b9\u4e2d</li> <li>\u4f7f\u7528\u4e8c\u5206\u67e5\u627e\u6cd5\u8fdb\u884c\u67e5\u627e</li> <li> <p>\u627e\u5230\u9700\u8981\u7684<code>key</code>\u5728\u5f53\u524d\u9875\u4e2d\u7684<code>index</code></p> </li> <li> <p><code>Insert()</code>\u51fd\u6570\uff1b \u5c06\u4e00\u4e2a\u952e\u503c\u5bf9\u63d2\u5165\u5230\u7ed9\u5b9a\u7684<code>key</code>\u4e4b\u540e</p> </li> <li>\u9996\u5148\u8c03\u7528<code>KeyIndex</code>\u627e\u5230\u7ed9\u5b9a<code>key</code>\u5728\u9875\u4e2d\u7684<code>index</code></li> <li>\u63a5\u7740\u5c06<code>index</code>\u540e\u7684\u952e\u503c\u5bf9\u4f9d\u6b21\u540e\u79fb\uff0c\u540c\u65f6\u5728index\u4f4d\u7f6e\u63d2\u5165\u952e\u503c\u5bf9</li> <li> <p>\u6700\u540e\u5c06\u5f53\u524d\u9875\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf\u52a0\u4e00</p> </li> <li> <p><code>Lookup</code>: \u67e5\u770b<code>key</code>\u662f\u5426\u4f4d\u4e8e\u5f53\u524d\u53f6\u8282\u70b9\u4e2d</p> </li> <li>\u8c03\u7528<code>KeyIndex</code>\u8fdb\u884c\u67e5\u627e\uff0c\u5982\u679cindex\u6240\u5904\u4f4d\u7f6e\u662f\u6b63\u5e38\u8303\u56f4</li> <li>\u5e76\u4e14\u4e0eindex\u4f4d\u7f6e\u4e0a\u7684key\u8fdb\u884c\u6bd4\u8f83\uff0c\u5224\u65ad\u662f\u5426\u4f4d\u4e8e\u5f53\u524d\u8282\u70b9</li> <li> <p>\u7528\u4e8e\u5224\u65ad\u662f\u5426\u662f\u91cd\u590dKey\uff0c \u5373\u552f\u4e00\u6027\u5224\u65ad</p> </li> <li> <p><code>RemoveAndDeleteRecord()</code>: \u5220\u9664\u4f20\u5165key\u5bf9\u5e94\u7684\u952e\u503c\u5bf9</p> </li> <li>\u901a\u8fc7<code>KeyIndex</code>\u627e\u5230key\u5bf9\u5e94\u7684\u4f4d\u7f6e\uff0c\u5c06\u540e\u9762\u7684\u952e\u503c\u5bf9\u4f9d\u6b21\u5411\u524d\u79fb\u52a8</li> <li> <p>\u540c\u65f6\u5c06\u5f53\u524d\u8282\u70b9\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf\u51cf\u4e00</p> </li> <li> <p><code>CopyNFrom()</code>\uff1a \u4ece\u539f\u5730\u5740\u79fb\u52a8N\u4e2a\u952e\u503c\u5bf9\u5230\u76ee\u6807\u5730\u5740</p> </li> <li> <p>\u76f4\u63a5\u8fdb\u884c\u79fb\u52a8\uff0c\u540c\u65f6\u5c06\u76ee\u6807\u9875\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf\u589e\u52a0\u5bf9\u5e94\u503c</p> </li> <li> <p><code>MoveHalfTo()</code>: \u5c06\u5f53\u524d\u8282\u70b9\u7684\u952e\u503c\u5bf9\u79fb\u52a8\u5230\u76ee\u6807\u9875</p> </li> <li>\u5c06\u5f53\u524d\u8282\u70b9\u7684\\(\\lceil \\frac{size}{2} \\rceil\\) \u952e\u503c\u5bf9\u4fdd\u7559\uff0c\u540c\u65f6\u5c06\u53e6\u4e00\u534a\u79fb\u52a8\u5230\u76ee\u6807\u8282\u70b9</li> <li>\u8ba9\u76ee\u6807\u9875\u8c03\u7528<code>CopyNFrom</code>\u51fd\u6570\u5c06\u5bf9\u5e94\u6570\u91cf\u7684\u952e\u503c\u5bf9\u653e\u7f6e\u5728\u672b\u5c3e</li> <li> <p>\u5c06\u5f53\u524d\u9875\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf\u51cf\u5c11</p> </li> <li> <p>\u5176\u4f59\u51fd\u6570\u5904\u7406\u4e0eInternal Page \u76f8\u4f3c\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5f53\u8fdb\u884c\u952e\u503c\u5bf9\u7684\u79fb\u52a8\u65f6\uff0c\u53f6\u5b50\u8282\u70b9\u4e0d\u9700\u8981\u5bf9<code>middle key</code>\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u53f6\u5b50\u8282\u70b9\u672c\u8eab\u5c31\u4f1a\u5305\u542b\u6240\u6709\u7684<code>key</code>\u4fe1\u606f</p> </li> </ul> <p></p>"},{"location":"sp25/db/report/minisql/zj_report/#b-plus-tree","title":"B Plus Tree \u5b9e\u73b0","text":"<ul> <li><code>FindLeafPage()</code>\u51fd\u6570\uff1a \u67e5\u627e\u9700\u8981\u7684\u53f6\u5b50\u8282\u70b9</li> <li>\u8be5\u51fd\u6570\u6709\u4e24\u79cd\u67e5\u627e\u65b9\u5f0f\uff0c\u53d6\u51b3\u4e8e\u4f20\u5165\u7684bool\u578b\u53c2\u6570\uff1a<ul> <li>\u67e5\u627e\u4f20\u5165key\u5e94\u8be5\u63d2\u5165\u7684\u53f6\u5b50\u8282\u70b9</li> <li>\u4ece\u5f53\u524d\u6839\u8282\u70b9\u51fa\u53d1\u67e5\u627e\u6700\u5de6\u8fb9\u7684\u53f6\u5b50\u8282\u70b9</li> </ul> </li> <li>\u901a\u8fc7\u4e0d\u65ad\u8fed\u4ee3\u8fdb\u884c\u67e5\u8be2\uff0c\u6700\u7ec8\u4e00\u76f4\u8fed\u4ee3\u5230\u53f6\u5b50\u8282\u70b9</li> <li> <p>\u5728\u8fd9\u4e2a\u8fed\u4ee3\u9014\u4e2d\u9700\u8981\u7279\u522b\u6ce8\u610f\u4f7f\u7528page\u7684unpin</p> </li> <li> <p><code>Insert()</code>\u51fd\u6570\uff1b \u5c06\u4e00\u4e2a\u65b0\u7684\u503c\u63d2\u5165B+\u6811\u4e2d</p> </li> <li>\u5982\u679c\u5f53\u524d\u6811\u4e3a\u7a7a\uff0c\u90a3\u4e48\u65b0\u5efa\u6839\u8282\u70b9</li> <li> <p>\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u5148\u5411\u53f6\u8282\u70b9\u8fdb\u884c\u63d2\u5165</p> </li> <li> <p><code>InsertIntoLeaf()</code>\u51fd\u6570\uff1b \u5c06\u65b0\u7684\u503c\u63d2\u5165\u5408\u9002\u53f6\u5b50\u8282\u70b9\u4e2d</p> </li> <li>\u9996\u5148\u8c03\u7528<code>FindLeafPage</code>\u51fd\u6570\uff0c\u4ece\u8fd9\u68f5\u6811\u7684\u6839\u8282\u70b9\u51fa\u53d1\uff0c\u627e\u5230\u65b0\u7684\u503c\u5e94\u8be5\u63d2\u5165\u7684\u8282\u70b9\uff0c\u5373\u5305\u542b\u7b26\u5408\u8fd9\u4e2a\u65b0\u503c\u8303\u56f4\u7684\u8282\u70b9<code>leaf_to_insert</code></li> <li>\u63a5\u7740\u8c03\u7528<code>lookup</code>\u51fd\u6570\u5224\u65ad\u5f53\u524d\u8282\u70b9\u4e2d\u662f\u5426\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u76f8\u540c\u7684\u503c\uff0c\u786e\u4fddindex\u7684\u552f\u4e00\u6027\uff0c\u5982\u679c\u6709\u90a3\u4e48\u63d2\u5165\u5931\u8d25</li> <li>\u5728\u6210\u529f\u63d2\u5165\u540e\uff0c\u9700\u8981\u5bf9\u5f53\u524d\u53f6\u5b50\u8282\u70b9\u8bb0\u5f55\u7684\u952e\u503c\u5bf9\u6570\u91cf\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u6570\u91cf\u8fbe\u5230\u6700\u5927\uff0c\u90a3\u4e48\u9700\u8981\u8c03\u7528<code>Split</code>\u51fd\u6570\u8fdb\u884c\u53f6\u5b50\u8282\u70b9\u7684\u5206\u88c2</li> <li> <p>\u540c\u65f6\u5982\u679c\u8fdb\u884c\u4e86\u5206\u88c2\uff0c\u9700\u8981\u5c06\u65b0\u751f\u6210\u53f6\u5b50\u8282\u70b9\u7684\u7d22\u5f15\u52a0\u5165\u5230\u7236\u8282\u70b9\u4e2d\uff0c\u56e0\u6b64\u9700\u8981\u518d\u8c03\u7528<code>InsertIntoParent</code>\u8fdb\u884c\u5904\u7406</p> </li> <li> <p><code>InsertIntoParent()</code>\u51fd\u6570\uff1a \u5c06\u65b0\u7684\u8282\u70b9\u4fe1\u606f\u63d2\u5165\u5230\u7236\u8282\u70b9\u4e2d</p> </li> <li>\u5982\u679c\u521a\u624d\u53d1\u751f\u5206\u88c2\u7684\u662f\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u65b0\u7684\u6839\u8282\u70b9\uff0c\u5c06\u5206\u88c2\u8282\u70b9\u7684\u4fe1\u606f\u4fdd\u5b58\u5230\u8fd9\u4e2a\u6839\u7ed3\u70b9\u4e2d\uff1b\u540c\u65f6\u9700\u8981\u66f4\u65b0\u539f\u6765\u5206\u88c2\u8282\u70b9\u7684\u4fe1\u606f</li> <li>\u5982\u679c\u4e0d\u662f\u6839\u8282\u70b9\uff0c\u90a3\u4e48\u8ba9\u7236\u8282\u70b9\u8c03\u7528<code>InsertNodeAfter</code>\u51fd\u6570\u8fdb\u884c\u65b0\u8282\u70b9\u4fe1\u606f\u7684\u63d2\u5165</li> <li> <p>\u540c\u65f6\u9700\u8981\u5bf9\u7236\u8282\u70b9\u8fdb\u884c\u5224\u65ad\uff0c\u5f53\u524d\u7684\u63d2\u5165\u662f\u5426\u8fbe\u5230\u4e86\u6700\u5927\u503c\uff0c\u5982\u679c\u8fbe\u5230\u4e86\u6700\u5927\u503c\u9700\u8981\u7ee7\u7eed\u8fdb\u884c\u9012\u5f52\u6267\u884c\u66f4\u65b0</p> </li> <li> <p><code>Split()</code>\u51fd\u6570\uff1a \u5c06\u4e00\u4e2a\u6ee1\u8282\u70b9\u8fdb\u884c\u5206\u88c2</p> </li> <li>\u5206\u4e3a\u5206\u88c2\u5185\u90e8\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9</li> <li>\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u7a7a\u7684\u76f8\u540c\u7c7b\u578b\u9875\uff0c\u540c\u65f6\u5c06\\(\\lceil \\frac{size}{2} \\rceil\\)\u952e\u503c\u5bf9\u7559\u5728\u5f53\u524d\u8282\u70b9\uff0c\u5c06\\(\\lfloor \\frac{size}{2} \\rfloor\\)\u79fb\u52a8\u5230\u65b0\u8282\u70b9\uff0c\u8fd9\u91cc\u76f4\u63a5\u8c03\u7528<code>MoveHalfTo()</code>\u6765\u8fdb\u884c\u5b9e\u73b0</li> <li> <p>\u540c\u65f6\u5982\u679c\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u9700\u8981\u5bf9\u5f53\u524d\u8282\u70b9\u548c\u65b0\u5efa\u8282\u70b9\u7684<code>Next_Page_Id</code>\u8fdb\u884c\u8c03\u6574</p> </li> <li> <p><code>Redistribute()</code>\u51fd\u6570\uff1a \u5982\u679c\u4e24\u4e2a\u8282\u70b9\u952e\u503c\u5bf9\u6570\u91cf\u76f8\u52a0\u5927\u4e8e\u6216\u7b49\u4e8e\\(Max\\_Size\\)\uff0c\u90a3\u4e48\u9700\u8981\u8fdb\u884c\u952e\u503c\u5bf9\u7684\u91cd\u5206\u914d</p> </li> <li>\u6839\u636e\u4f20\u5165\u7684\u4e24\u4e2a\u8282\u70b9\uff0c\u4e0e\u5206\u914d\u7c7b\u578b\u53c2\u6570\u6765\u5224\u65ad\u5f53\u524d\u5206\u914d\u65b9\u5f0f</li> <li>\u5982\u679c\u5206\u914d\u7c7b\u578b\u4e3a1\uff0c\u90a3\u4e48\u5c06<code>pre</code>\u7684\u672b\u5c3e\u952e\u503c\u5bf9\u79fb\u52a8\u5230<code>node</code>\u7684\u5f00\u5934</li> <li>\u5982\u679c\u5206\u914d\u7c7b\u578b\u4e3a0\uff0c\u90a3\u4e48\u5c06<code>next</code>\u7684\u5f00\u5934\u952e\u503c\u5bf9\u79fb\u52a8\u5230<code>node</code>\u7684\u672b\u5c3e</li> <li> <p>\u5176\u4e2d\u4f1a\u76f4\u63a5\u8c03\u7528<code>MoveFirstToEndOf</code>\u6216\u8005<code>MoveEndToFrontOf</code>\u6765\u8fdb\u884c\u952e\u503c\u5bf9\u79fb\u52a8</p> </li> <li> <p><code>Coalesce()</code>\u51fd\u6570\uff1a \u5982\u679c\u4e24\u4e2a\u8282\u70b9\u952e\u503c\u5bf9\u6570\u91cf\u76f8\u52a0\u5c0f\u4e8e\\(Max\\_Size\\)\uff0c\u90a3\u4e48\u9700\u8981\u5c06\u8282\u70b9\u8fdb\u884c\u5408\u5e76</p> </li> <li>\u76f4\u63a5\u8c03\u7528<code>MoveAllTo</code>\u51fd\u6570\u5c06\u952e\u503c\u5bf9\u8fdb\u884c\u6574\u4f53\u79fb\u52a8</li> <li> <p>\u63a5\u7740\u8c03\u7528\u5185\u90e8\u8282\u70b9\u7684<code>Remove</code>\u51fd\u6570\u6765\u8fdb\u884c\u7236\u8282\u70b9\u4e2d\u88ab\u79fb\u52a8\u8282\u70b9\u7684\u4fe1\u606f</p> </li> <li> <p><code>CoalesceOrRedistribute()</code>\u51fd\u6570\uff1a \u5f53\u4e00\u4e2a\u8282\u70b9\u7684\u8282\u70b9\u6570\u8fc7\u5c11\u65f6\uff0c\u9700\u8981\u4e0e\u5144\u5f1f\u8fdb\u884c\u91cd\u5206\u914d\u6216\u8005\u76f4\u63a5\u5408\u5e76</p> </li> <li>\u5982\u679c\u5f53\u524d\u8282\u70b9\u5220\u9664\u540e\uff0c\u952e\u503c\u5bf9\u6570\u91cf \\(&lt; \\frac{Max\\_Size}{2}\\),\u90a3\u4e48\u5c31\u9700\u8981\u4e0e\u5144\u5f1f\u8282\u70b9\u8fdb\u884c\u91cd\u5206\u914d\u6216\u8005\u5408\u5e76</li> <li>\u9996\u5148\u5224\u65ad\u5f53\u524d\u8282\u70b9\u952e\u503c\u5bf9\u6570\u91cf\u4e0e\u524d\u540e\u8282\u70b9\u952e\u503c\u5bf9\u6570\u91cf\u76f8\u52a0\u662f\u5426\u5927\u4e8e\\(Max\\_Size\\), \u5982\u679c\u5927\u4e8e\u6216\u7b49\u4e8e\u90a3\u4e48\u9700\u8981\u8c03\u7528<code>Redistribute</code>\u8fdb\u884c\u8282\u70b9\u7684\u79fb\u52a8</li> <li> <p>\u5982\u679c\u5c0f\u4e8e\\(Max\\_Size\\), \u90a3\u4e48\u5219\u9700\u8981\u8c03\u7528<code>Coalesce()</code>\u8fdb\u884c\u4e24\u4e2a\u8282\u70b9\u7684\u5408\u5e76</p> </li> <li> <p><code>Remove()</code>\u51fd\u6570\uff1a \u9700\u8981\u5220\u9664\u67d0\u4e2a<code>key</code>\u65f6\uff0c\u76f4\u63a5\u8c03\u7528<code>Remove</code>\u8fdb\u884c\u5220\u9664</p> </li> <li>\u9996\u5148\u901a\u8fc7<code>FindLeafPage</code>\u6765\u627e\u5230\u5bf9\u5e94<code>key</code>\u6240\u5728\u7684\u53f6\u5b50\u8282\u70b9\uff0c\u63a5\u7740\u76f4\u63a5\u8c03\u7528<code>RemoveAndDeleteRecord</code>\u6765\u5220\u9664\u8fd9\u4e2a\u952e\u503c\u5bf9</li> <li>\u63a5\u7740\u9700\u8981\u5224\u65ad\u5220\u9664\u952e\u503c\u5bf9\u540e\u8fd9\u4e2a\u8282\u70b9\u662f\u5426\u9700\u8981\u8fdb\u884c\u91cd\u5206\u914d\u548c\u5408\u5e76\uff0c\u5982\u679c\u5f53\u524d\u952e\u503c\u5bf9\u6570\u91cf \\(&lt; \\frac{Max\\_Size}{2}\\),\u90a3\u4e48\u5c31\u76f4\u63a5\u8c03\u7528<code>CoalesceOrRedistribute</code>\u6765\u8fdb\u884c\u5904\u7406</li> <li>\u53e6\u4e00\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u5220\u9664\u7684\u952e\u503c\u5bf9\u662f\u8282\u70b9\u7684\u7b2c\u4e00\u4e2a\uff0c\u90a3\u4e48\u5219\u9700\u8981\u8c03\u6574\u7236\u8282\u70b9\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u540c\u65f6\u7531\u4e8e\u5185\u90e8\u8282\u70b9\u6027\u8d28\uff08index\u4e3a0\u7684key\u662f\u4e0d\u5b58\u50a8\u4fe1\u606f\u7684\uff09,\u56e0\u6b64\u9700\u8981\u4e0d\u65ad\u8fed\u4ee3\u5411\u4e0a\u627e\u5230\u771f\u6b63\u5b58\u50a8\u4fe1\u606f\u7684\u5185\u90e8\u8282\u70b9\uff0c\u8fdb\u884c\u4fee\u6539</li> </ul> <p></p> <ul> <li>\u9664\u6b64\u4e4b\u5916\uff0c\u5b8c\u6210\u53f6\u8282\u70b9\u94fe\u8868\u8fed\u4ee3\u5668\u5b9e\u73b0</li> </ul> <p></p>"},{"location":"sp25/db/report/minisql/zj_report/#executor","title":"<code>Executor</code>\u76f8\u5173\u6a21\u5757\u8bbe\u8ba1","text":"<ul> <li>\u6b64\u90e8\u5206\u4e3b\u8981\u6839\u636e\u6267\u884c\u6267\u884c\u6307\u4ee4\u7684\u8bed\u6cd5\u6811\u8fdb\u884c\u4fe1\u606f\u8bfb\u53d6    </li> <li> <p>\u4e0d\u540c\u7684\u6307\u4ee4\u8bed\u6cd5\u6811\u4e0d\u540c\u9700\u8981\u901a\u8fc7\u53ef\u89c6\u5316\u56fe\u5f62\u8fdb\u884c\u67e5\u770b\u6765\u786e\u5b9a\u5177\u4f53\u4fe1\u606f\u4f4d\u7f6e</p> </li> <li> <p>\u901a\u8fc7\u627e\u5230\u4fe1\u606f\u540e\u8c03\u7528\u5177\u4f53\u51fd\u6570\u6765\u8fdb\u884c\u6267\u884c\u64cd\u4f5c\uff0c\u540c\u65f6\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u51fa\u76f8\u5173\u4fe1\u606f</p> </li> </ul> <p></p>"},{"location":"sp25/db/report/minisql/zj_report/#_5","title":"\u56db\u3001 \u5b9e\u9a8c\u7ed3\u679c\u5c55\u793a","text":"<ul> <li>\u8fd0\u884c<code>minisql_test</code>\u8fdb\u884c\u6a21\u62df\u6574\u4f53\u8fd0\u884c\u540e\uff1a  </li> </ul> <ul> <li> <p>\u8fdb\u884c<code>main</code>\u51fd\u6570\u6574\u4f53\u8fd0\u884c\uff1b</p> </li> <li> <p>\u5b8c\u6210\u6570\u636e\u5e93\u4e0e\u8868\u683c\u5efa\u7acb\uff1a   </p> </li> <li>\u6570\u636e\u63d2\u5165\uff1a    </li> <li>100000\u6761\u6570\u636e\u67e5\u8be2\uff1a   </li> <li>\u4e3b\u952e\u67e5\u8be2\u4e0e\u975e\u4e3b\u952e\u67e5\u8be2\uff1a   </li> <li>\u591a\u6761\u4ef6\u67e5\u8be2<code>select * from account where id &lt; 12515000 and name &gt; \"name14500\"</code>\uff1a   </li> <li>\u552f\u4e00\u6027\u7ea6\u675f\uff1a   </li> <li>\u7d22\u5f15\u5efa\u7acb\u4e0e\u67e5\u8be2\uff1a   </li> <li>\u6570\u636e\u66f4\u65b0\uff1a   </li> <li>\u6570\u636e\u5220\u9664\uff1a   </li> <li>\u5220\u9664\u7d22\u5f15\uff1a   </li> <li>\u8868\u683c\u5185\u5bb9\u6574\u4f53\u5220\u9664\uff1a   </li> <li>\u5220\u9664\u8868\u683c\uff1a   </li> <li>\u5220\u9664\u6570\u636e\u5e93\uff1a   </li> <li>\u9000\u51fa\u540e\u91cd\u65b0\u8fdb\u5165\uff1a    </li> </ul>"},{"location":"sp25/line_dance/","title":"\u6392\u821e  1.0\u5b66\u5206","text":""},{"location":"sp25/line_dance/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u53f2\u5029\u7389</p>"},{"location":"sp25/line_dance/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4f53\u80b2\u8bfe</p>"},{"location":"sp25/line_dance/#_3","title":"\u5206\u6570\u6784\u6210","text":"<p>\u4e13\u9879\u90e8\u520640\u5206\u7531\u96c6\u4f53\u8003\u8bd5\u4e0e\u4e2a\u4eba\u8003\u8bd5\u4e24\u90e8\u5206\u6784\u6210 \u96c6\u4f53\u8003\u8bd5\u4e8e\u590f\u4e94\u5468\u5468\u672b\u8fdb\u884c\uff0c\u4e2a\u4eba\u8003\u8bd5\u4e8e\u590f\u516d\u5468\u8bfe\u4e0a\u4e3e\u884c\uff0c\u590f\u516b\u5468\u4e0d\u4e0a\u8bfe  </p>"},{"location":"sp25/line_dance/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u96c6\u4f53\u8003\u8bd5\u4e3a\u4e09\u597d\u676f\uff0c\u4e2a\u4eba\u8003\u8bd5\u4e3a\u6307\u5b9a\u66f2\u76ee\uff0c\u4e13\u9879\u5206\u5927\u81f4\u572836\u5206\u4ee5\u4e0a \u6d59\u5927\u4f53\u827a\u4e0a\u5361\u7ee9\u4e86\uff0c\u4f46\u767b\u5206\u65f6\u88ab\u635e\u4e86\uff0c\u731c\u6d4b\u4e3a\u75c5\u5047\u5206\u6700\u540e\u6ca1\u6263 sqy\u8001\u5e08\u4eba\u7f8e\u5fc3\u5584\uff0c\u4f46\u8fd9\u95e8\u8bfe\u7a0b\u4e8b\u5b9e\u5728\u591a\uff0c\u9119\u4eba\u5df2\u7ecfptsd\u4e86-^-  </p>"},{"location":"sp25/marx/","title":"\u9a6c\u514b\u601d\u4e3b\u4e49\u57fa\u672c\u539f\u7406\uff08H\uff09  3.0\u5b66\u5206","text":""},{"location":"sp25/marx/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u65b9\u745e</p>"},{"location":"sp25/marx/#_2","title":"\u8ba4\u5b9a","text":"<p>\u601d\u653f\u519b\u4f53\u8bfe</p>"},{"location":"sp25/marx/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u5e73\u65f6\u6210\u7ee960%\uff1a  </li> <li>\u5f53\u5802\u4f5c\u6587\uff1a\u300a\u9752\u5e74\u5728\u804c\u4e1a\u9009\u62e9\u65f6\u7684\u8003\u8651\u300b\u6625\u4e09\u5468  </li> <li>\u4e00\u6b21presentation\uff1a15-20\u5206\u949f\uff0c\u7531\u6bcf\u7ec4\u7ec4\u957f\u5728pre\u7ed3\u675f\u540e\u8bc4\u5206  </li> <li>\u5f53\u5802\u4f5c\u4e1a\uff1a  <ul> <li>\u54f2\u5b66\u57fa\u672c\u95ee\u9898 \u6625\u4e94\u5468  </li> <li>\u771f\u7406\u89c2 \u590f\u4e8c\u5468  </li> </ul> </li> <li>\u8003\u52e4\uff1a\u4e00\u6b21 \u5012\u6570\u7b2c\u4e8c\u6b21\u8bfe</li> <li>\u70b9\u540d\u56de\u7b54\u95ee\u9898\uff1a  </li> <li>\u8bfb\u4e66\u62a5\u544a\uff1a\u5728\u6307\u5b9a\u4e66\u5355\u4e2d\u9009\u62e9\u4e00\u672c\u64b0\u51992000\u5b57\u4ee5\u5185 \u590f\u56db\u5468  </li> <li>\u6309\u7167A\u3001B\u3001C\u3001D\u8bc4\u7ea7\uff0c\u5177\u4f53\u7ec6\u5219\u672a\u77e5</li> <li>\u671f\u672b\u8003\u8bd540%(\u95ed\u5377)\uff1a  </li> <li>\u5355\u9009\uff1a40*1'  </li> <li>\u8bba\u8ff0\u9898\uff1a3*20'  <ul> <li>\u8fa9\u8bc1\u6cd5  </li> <li>\u5386\u53f2\u552f\u7269\u4e3b\u4e49  </li> <li>\u653f\u6cbb\u7ecf\u6d4e\u5b66  </li> </ul> </li> </ul>"},{"location":"sp25/marx/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>fr\u8001\u5e08\u4e0a\u8bfe\u662f\u6781\u597d\u7684\uff0c\u8001\u5e08\u975e\u5e38\u4eb2\u5207\u4e5f\u4f1a\u5173\u5fc3\u5b66\u751f\u751f\u6d3b\u5b9e\u9645\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u53d6\u5f97\u597d\u6210\u7ee9\u5efa\u8bae\u4e00\u542c \u671f\u672b\u8003\u8bd5\u6309\u7167\u63d0\u7eb2\u4e0efr\u8001\u5e08\u6700\u540e\u4e00\u8282\u8bfe\u5212\u7684\u91cd\u70b9\u590d\u4e60\uff0c\u8fa9\u8bc1\u6cd5\u3001\u5386\u53f2\u552f\u7269\u4e3b\u4e49\u4e0e\u653f\u6cbb\u7ecf\u6d4e\u5b66\u7684\u5173\u952e\u6982\u5ff5\u4e0e\u539f\u7406\u8981\u80cc\u4e0b  </p> <p>\u671f\u672b\u590d\u4e60\u8bb2\u4e49 \u91cd\u70b9\u63d0\u7eb2</p>"},{"location":"sp25/marx/highlight/","title":"Highlight","text":""},{"location":"sp25/marx/highlight/#110","title":"1.\u5bfc\u8bba(10')","text":"<p>\u4e0d\u8981\u6309\u8bb2\u4e49\u590d\u4e60\uff08\u667a\u4e91\u91cd\u70b9\uff09 \u9a6c\u514b\u601d\u4e3b\u4e49\u662f\u7531\u9a6c\u514b\u601d\u3001\u6069\u683c\u65af\u521b\u7acb\u5e76\u4e3a\u540e\u7ee7\u8005\u6240\u4e0d\u65ad\u53d1\u5c55\u7684\u79d1\u5b66\u7406\u8bba\u4f53\u7cfb \u9a6c\u514b\u601d\u4e3b\u4e49\u54f2\u5b66\u3001\u9a6c\u514b\u601d\u4e3b\u4e49\u653f\u6cbb\u7ecf\u6d4e\u5b66\u548c\u79d1\u5b66\u793e\u4f1a\u4e3b\u4e49\u662f\u5176\u4e09\u4e2a\u57fa\u672c\u7ec4\u6210\u90e8\u5206 \u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u57fa\u672c\u7acb\u573a:\u4eba\u6c11\u7acb\u573a \u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u57fa\u672c\u89c2\u70b9\uff0c\u662f\u5173\u4e8e\u81ea\u7136\u3001\u793e\u4f1a\u548c\u4eba\u7c7b\u601d\u7ef4\u53d1\u5c55\u4e00\u822c\u89c4\u5f8b\u7684\u79d1\u5b66\u8ba4\u8bc6 \u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u662f\u5efa\u7acb\u5728\u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49\u548c\u5386\u53f2\u552f\u7269\u4e3b\u4e49\u4e16\u754c\u89c2\u548c\u65b9\u6cd5\u8bba\u57fa\u7840\u4e0a\uff0c\u6307\u5bfc\u6211\u4eec\u6b63\u786e\u8ba4\u8bc6\u4e16\u754c\u548c\u6539\u9020\u4e16\u754c\u7684\u601d\u60f3\u65b9\u6cd5\u548c\u5de5\u4f5c\u65b9\u6cd5</p> <p>\u5173\u4e8e\u8d39\u5c14\u5df4\u54c8\u7684\u63d0\u7eb2 \u5fb7\u610f\u5fd7\u610f\u8bc6\u5f62\u6001 \u8d44\u672c\u8bba \u5171\u4ea7\u515a\u5ba3\u8a00 \u5fb7\u6cd5\u5e74\u9274</p> <pre><code>1871\u5e743\u6708\uff0c\u5df4\u9ece\u5de5\u4eba\u8d77\u4e49\u5e76\u6210 \n\u7acb\u5df4\u9ece\u516c\u793e\uff0c\u9a6c\u514b\u601d\u4ee3\u8868\u7b2c\u4e00\u56fd\u9645\u5199\u51fa\u4e86\u8457\u540d\u7684\u300a\u6cd5\u5170\u897f\u5185\u6218\u300b\uff0c\u9ad8\u5ea6 \n\u8d5e\u626c\u4e86\u5df4\u9ece\u5de5\u4eba\u7684\u4f1f\u5927\u521b\u4e3e\uff0c\u79d1\u5b66\u603b\u7ed3\u4e86\u5df4\u9ece\u516c\u793e\u7684\u5386\u53f2\u7ecf\u9a8c\u3002\u8be5\u4e66\u4ee5 \n\u53ca\u51e0\u5e74\u540e\u4ed6\u5199\u7684\u300a\u54e5\u8fbe\u7eb2\u9886\u6279\u5224\u300b\uff0c\u8fdb\u4e00\u6b65\u4e30\u5bcc\u4e86\u79d1\u5b66\u793e\u4f1a\u4e3b\u4e49\u5b66\u8bf4\u3002 \n1876\u20141878\u5e74\uff0c\u6069\u683c\u65af\u5199\u51fa\u4e86\u300a\u53cd\u675c\u6797\u8bba\u300b\uff0c\u5168\u9762\u9610\u8ff0\u4e86\u9a6c\u514b\u601d\u4e3b\u4e49\u7406 \n\u8bba\u4f53\u7cfb\n</code></pre> <p>\u79d1\u5b66\u6027\u3001\u4eba\u6c11\u6027\u3001\u5b9e\u8df5\u6027\u3001\u53d1\u5c55\u6027</p> <p>\u4eba\u6c11\u81f3\u4e0a\u662f\u9a6c\u514b\u601d\u4e3b\u4e49\u7684\u653f\u6cbb\u7acb\u573a</p> <p>\u4e0e\u65f6\u4ff1\u8fdb\u7684\u7406\u8bba\u54c1\u8d28</p> <p>\u79d1\u5b66\u6027\u4e0e\u9769\u547d\u6027\u7684\u7edf\u4e00</p> <p>\u8bba\u8ff0\u98981:\u7269\u8d28\u548c\u610f\u8bc6\u7684\u8fa9\u8bc1\u5173\u7cfb\u95ee\u9898  </p>"},{"location":"sp25/marx/highlight/#245","title":"2.\u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49(45')","text":"<p>\u5b9e\u8df5\u5bf9\u8ba4\u8bc6\u7684\u51b3\u5b9a\u4f5c\u7528P78 \u8ba4\u8bc6\u7684\u672c\u8d28\u4e0e\u8fc7\u7a0b(\u552f\u7269\u548c\u552f\u5fc3\u7684\u533a\u5206)P80 \u5b9e\u8df5\u4e0e\u8ba4\u8bc6\u7684\u8fa9\u8bc1\u8fd0\u52a8\u53ca\u5176\u89c4\u5f8bP89 \u771f\u7406\u7684\u7edd\u5bf9\u6027\u548c\u76f8\u5bf9\u6027P93(\u53cd\u5bf9\u7edd\u5bf9\u4e3b\u4e49\u548c\u76f8\u5bf9\u4e3b\u4e49)</p> <p>\u79d1\u5b66\u6280\u672f\uff08\u6b63\uff1a\u63a8\u52a8\u751f\u4ea7\u529b\uff0c\u8d1f\uff1a\u5265\u524a\uff09</p>"},{"location":"sp25/marx/highlight/#3","title":"3.\u653f\u6cbb\u7ecf\u6d4e\u5b66","text":""},{"location":"sp25/marx/highlight/#_1","title":"\u671f\u672b\u590d\u4e60","text":"<p>\u5e73\u65f6\u5360\u6bd460%\uff0c\u7b49\u7ea7\u6210\u7ee9 \u671f\u672b\u5360\u6bd440%,\u65a9\u6740\u7ebf40\u5206 \u95ed\u5377\u8003\u8bd5 40\u5355\u9009\uff0840 1'\uff09+3\u9053\u8bba\u8ff0\u9898(3 20',\u6bcf\u9898\u4e24\u5c0f\u95ee) \u5747\u520631 + 16 + 17 + 12 = 76 \u8003\u8bd5\u8303\u56f4\uff1a\u5bfc\u8bba-\u7b2c5\u7ae0 \u5e8f\u53f7  </p> <p>\u79ef\u6781\u4e0e\u6d88\u6781</p>"},{"location":"sp25/marx/highlight/#_2","title":"\u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49","text":"<p>\u552f\u7269\u8fa9\u8bc1\u6cd5 = \u552f\u7269\u8bba + \u8fa9\u8bc1\u6cd5</p>"},{"location":"sp25/marx/highlight/#11","title":"\u552f\u7269\u8bba\uff081.1\uff09","text":""},{"location":"sp25/marx/highlight/#_3","title":"\u7269\u8d28\u4e0e\u610f\u8bc6\u7684\u8fa9\u8bc1\u5173\u7cfb\u539f\u7406","text":"<p>\u7269\u8d28\u51b3\u5b9a\u610f\u8bc6\uff0c\u610f\u8bc6\u5bf9\u7269\u8d28\u6709\u80fd\u52a8\u7684\u53cd\u4f5c\u7528 \u5c0a\u91cd\u5ba2\u89c2\u89c4\u5f8b\uff0c\u5229\u7528\u5ba2\u89c2\u89c4\u5f8b\uff0c\u53d1\u6325\u4e3b\u89c2\u80fd\u52a8\u6027  </p>"},{"location":"sp25/marx/highlight/#_4","title":"\u8fa9\u8bc1\u6cd5","text":""},{"location":"sp25/marx/highlight/#_5","title":"\u8054\u7cfb\u4e0e\u53d1\u5c55","text":""},{"location":"sp25/marx/highlight/#_6","title":"\u4e09\u5927\u89c4\u5f8b","text":"<p>\u77db\u76fe\u7684\u5bf9\u7acb\u7edf\u4e00\uff1a\u540c\u4e00\u6027\u4e0e\u6597\u4e89\u6027\uff0c\u666e\u904d\u6027\u4e0e\u7279\u6b8a\u6027 -&gt; \u4e24\u70b9\u8bba\uff08\u4e3b\u6b21\u77db\u76fe\uff09\u4e0e\u91cd\u70b9\u8bba\uff08\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\uff09\u76f8\u7ed3\u5408 \u91cf\u8d28\u4e92\u53d8 -&gt; \u91cd\u89c6\u91cf\u7684\u79ef\u7d2f\uff0c\u628a\u63e1\u673a\u4f1a\u4fc3\u6210\u8d28\u7684\u53d8\u5316 \u5426\u5b9a\u4e4b\u5426\u5b9a -&gt; \u626c\u5f03\uff0c\u524d\u9014\u662f\u5149\u660e\u7684\u9053\u8def\u662f\u66f2\u6298\u7684  </p>"},{"location":"sp25/marx/highlight/#_7","title":"\u4e94\u5927\u8303\u7574","text":"<p>\u539f\u56e0\u4e0e\u7ed3\u679c\u3001\u5fc5\u7136\u6027\u4e0e\u5076\u7136\u6027\u3001\u53ef\u80fd\u6027\u4e0e\u73b0\u5b9e\u6027\u3001\u5f62\u5f0f\u4e0e\u5185\u5bb9\u3001\u73b0\u8c61\u4e0e\u672c\u8d28</p>"},{"location":"sp25/marx/highlight/#12","title":"\u8ba4\u8bc6\u8bba\uff081.2\uff09","text":""},{"location":"sp25/marx/highlight/#_8","title":"\u5b9e\u8df5\u4e0e\u8ba4\u8bc6\u7684\u8fa9\u8bc1\u5173\u7cfb","text":"<p>\u5b9e\u8df5\u662f\u8ba4\u8bc6\u7684\u6765\u6e90,\u5b9e\u8df5\u662f\u8ba4\u8bc6\u7684\u53d1\u5c55\u52a8\u529b,\u5b9e\u8df5\u662f\u68c0\u9a8c\u8ba4\u8bc6\u7684\u552f\u4e00\u6807\u51c6,\u5b9e\u8df5\u662f\u8ba4\u8bc6\u7684\u6700\u7ec8\u76ee\u7684</p>"},{"location":"sp25/marx/highlight/#_9","title":"\u8ba4\u8bc6\u8fc7\u7a0b","text":"<p>\u611f\u6027\u8ba4\u8bc6\uff0c\u7406\u6027\u8ba4\u8bc6</p>"},{"location":"sp25/marx/highlight/#_10","title":"\u771f\u7406\u7684\u7edd\u5bf9\u6027\u4e0e\u76f8\u5bf9\u6027","text":"<p>\u7edd\u5bf9\u6027\uff1a\u4e0e\u8c2c\u8bef\u7684\u533a\u5206\uff0c\u53ea\u6709\u4e00\u4e2a \u76f8\u5bf9\u6027\uff1a\u8ba4\u8bc6\u80fd\u529b\uff0c\u5b9e\u8df5\u6c34\u5e73\u5dee\u5f02\uff0c\u5386\u53f2\u573a\u666f  </p>"},{"location":"sp25/marx/highlight/#_11","title":"\u5386\u53f2\u552f\u7269\u4e3b\u4e49\uff08\u552f\u7269\u53f2\u89c2\uff09","text":""},{"location":"sp25/marx/highlight/#_12","title":"\u793e\u4f1a\u5b58\u5728\u4e0e\u793e\u4f1a\u610f\u8bc6\u7684\u8fa9\u8bc1\u5173\u7cfb","text":"<p>\u793e\u4f1a\u5b58\u5728\uff1a\u81ea\u7136\u73af\u5883\u3001\u4eba\u53e3\u3001\u751f\u4ea7\u65b9\u5f0f  </p>"},{"location":"sp25/marx/highlight/#_13","title":"\u793e\u4f1a\u5386\u53f2\u7684\u57fa\u672c\u77db\u76fe/\u89c4\u5f8b","text":"<p>\u751f\u4ea7\u529b\u4e0e\u751f\u4ea7\u5173\u7cfb\u3001\u7ecf\u6d4e\u57fa\u7840\u4e0e\u4e0a\u5c42\u5efa\u7b51  </p>"},{"location":"sp25/marx/highlight/#_14","title":"\u4eba\u6c11\u7fa4\u4f17\u662f\u5386\u53f2\u7684\u521b\u9020\u8005","text":"<p>\u7269\u8d28\u8d22\u5bcc\uff0c\u7cbe\u795e\u8d22\u5bcc\uff0c\u63a8\u52a8\u5386\u53f2\u53d8\u9769\u7684\u51b3\u5b9a\u6027\u529b\u91cf</p>"},{"location":"sp25/marx/highlight/#_15","title":"\u653f\u6cbb\u7ecf\u6d4e\u5b66","text":"<p>\u4ef7\u503c\u89c4\u5f8b\uff08\u5546\u54c1\u7ecf\u6d4e\u7684\u57fa\u672c\u89c4\u5f8b\uff09\u7684\u5185\u5bb9\u53ca\u5176\u4f5c\u7528 \u5185\u5bb9\uff1a\u5546\u54c1\u7684\u4ef7\u503c\u91cf\u7531\u751f\u4ea7\u5546\u54c1\u7684\u793e\u4f1a\u5fc5\u8981\u52b3\u52a8\u65f6\u95f4\u51b3\u5b9a,\u5546\u54c1\u4ea4\u6362\u4ee5\u4ef7\u503c\u91cf\u4e3a\u57fa\u7840\uff0c\u6309\u7167\u7b49\u4ef7\u4ea4\u6362\u7684\u539f\u5219\u8fdb\u884c\u3002 \u4f5c\u7528\uff1a \u79ef\u6781\uff1a\u81ea\u53d1\u5730\u8c03\u8282\u751f\u4ea7\u8d44\u6599\u548c\u52b3\u52a8\u529b\u5728\u793e\u4f1a\u5404\u751f\u4ea7\u90e8\u95e8\u4e4b\u95f4\u7684\u5206\u914d\u6bd4\u4f8b\uff0c\u81ea\u53d1\u5730\u523a\u6fc0\u751f\u4ea7\u529b\u7684\u53d1\u5c55\uff0c\u81ea\u53d1\u5730\u8c03\u8282\u793e\u4f1a\u6536\u5165\u7684\u5206\u914d \u6d88\u6781\uff1a\u5bfc\u81f4\u793e\u4f1a\u8d44\u6e90\u6d6a\u8d39\uff0c\u963b\u788d\u6280\u672f\u7684\u8fdb\u6b65\uff0c\u5bfc\u81f4\u6536\u5165\u4e24\u6781\u5206\u5316  </p> <p>8kg\u68c9\u82b1\uff1a5/kg 8kg\u9762\u7eb1\uff1a10/kg \u673a\u5668\u78e8\u635f\uff1a8 \u5de5\u8d44\uff1a20 c\uff1a\u4e0d\u53d8\u8d44\u672c\uff08\u6280\u672f\uff09,v\uff08\u5de5\u8d44\uff09\uff1a\u53ef\u53d8\u8d44\u672c,m\uff1a\u5269\u4f59\u4ef7\u503c\uff08\u8d44\u672c\u5bb6\u7684\u5229\u6da6\uff09 \u5269\u4f59\u4ef7\u503c\u7387m' \\(m'=\\frac{m}{v} = \\frac{80-68}{20} = 60\\%\\) </p> <p>\u8d44\u672c\u7684\u6709\u673a\u6784\u6210\uff1a\\(\\frac{c}{v}\\) \u4ef7\u503c\u6784\u6210\uff0c\u6280\u672f\u6784\u6210  </p> <p>\u6709\u4ef7\u503c\u7684\u4e00\u5b9a\u6709\u4f7f\u7528\u4ef7\u503c\uff0c\u4f46\u6709\u4f7f\u7528\u4ef7\u503c\u7684\u4e0d\u4e00\u5b9a\u6709\u4ef7\u503c\uff08\u5929\u7136\u7269\u54c1\uff09</p> <p>\u8d27\u5e01\u804c\u80fd\uff1a\u652f\u4ed8\u624b\u6bb5\uff08\u4e0e\u6d41\u901a\u533a\u5206\uff01\uff01\uff01\uff09 \u4e70\u5356\u5206\u79bb \u5de5\u8d44\u7684\u672c\u8d28\uff1a\u52b3\u52a8\u529b\u7684\u4ef7\u503c \u5269\u4f59\u4ef7\u503c \u9884\u4ed8\u8d44\u672c\uff1a\u751f\u4ea7\u8d44\u6599\uff0c\u5de5\u4eba\u7684\u5fc5\u8981\u52b3\u52a8\u65f6\u95f4 \u8d44\u672c\u7684\u672c\u8d28\uff1a\u53ef\u4ee5\u5e26\u6765\u5269\u4f59\u4ef7\u503c\uff08\u5229\u6da6\uff09\u7684\u4ef7\u503c  </p> <p>\u4ef7\u503c\u7684\u589e\u6b96\u8fc7\u7a0b \u8d44\u672c\u4e3b\u4e49\u4e3a\u4ec0\u4e48\u4f1a\u706d\u4ea1\uff08\u7ecf\u6d4e\u5371\u673a\u7206\u53d1\u7684\u539f\u56e0\uff09\uff1a\u63d0\u9ad8\u8d44\u672c\u6709\u673a\u8fc7\u7a0b\uff0c\u52b3\u52a8\u529b\u76f8\u5bf9\u8fc7\u5269\uff0c\u5931\u4e1a\uff0c\u8d2d\u4e70\u529b\u4e0b\u964d\uff0c\u751f\u4ea7\u8fc7\u5269\uff08\u4e3b\u8981\u8868\u73b0\uff09\uff0c\u7ecf\u6d4e\u5371\u673a</p>"},{"location":"sp25/marx/pre/","title":"\u5f53\u4ee3\u9752\u5e74\u201c\u8d5b\u535a\u4eba\u683c\u201d\u89e3\u6784\u62a5\u544a\uff1a\u5f53\u793e\u6050\u6210\u4e3a\u7406\u6027\u9632\u5fa1\u5de5\u4e8b","text":""},{"location":"sp25/marx/pre/#_2","title":"\u5f15\u8a00","text":"<p>[Video]</p>"},{"location":"sp25/marx/pre/#_3","title":"\u8c03\u67e5\u7814\u7a76","text":"<p>\u5927\u5b66\u751f\u793e\u4ea4\u6050\u60e7\u73b0\u8c61\u5728\u4e0d\u540c\u7fa4\u4f53\u4e2d\u7684\u5206\u5e03\u5177\u6709\u4e00\u5b9a\u5dee\u5f02\u6027\uff0c\u4f46\u5e76\u975e\u5b8c\u5168\u7531\u5355\u4e00\u56e0\u7d20\u51b3\u5b9a\uff0c\u800c\u662f\u4e0e\u5b66\u4e1a\u538b\u529b\u3001\u4e13\u4e1a\u7279\u70b9\u3001\u5e74\u7ea7\u9002\u5e94\u9636\u6bb5\u53ca\u793e\u4f1a\u671f\u5f85\u7b49\u590d\u6742\u56e0\u7d20\u76f8\u5173\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u5206\u6790\uff1a</p>"},{"location":"sp25/marx/pre/#_4","title":"\u5b66\u6821\u7c7b\u578b\uff1a\u538b\u529b\u4e0e\u7ade\u4e89\u73af\u5883\u7684\u5f71\u54cd","text":""},{"location":"sp25/marx/pre/#_5","title":"\u9ad8\u6c34\u5e73\u9662\u6821","text":"<p>\u8868\u73b0\u66f4\u7a81\u51fa\uff1a\u9876\u5c16\u9ad8\u6821\u5b66\u751f\u5e38\u9762\u4e34\u66f4\u9ad8\u5f3a\u5ea6\u7684\u5b66\u4e1a\u7ade\u4e89\u548c\u540c\u8f88\u538b\u529b\uff08\u5982\u4fdd\u7814\u3001\u79d1\u7814\u7ade\u8d5b\uff09\uff0c\u5bb9\u6613\u56e0\u201c\u80fd\u529b\u7126\u8651\u201d\u56de\u907f\u793e\u4ea4\uff08\u4f8b\u5982\u62c5\u5fc3\u5728\u4f18\u79c0\u7fa4\u4f53\u4e2d\u66b4\u9732\u4e0d\u8db3\uff09\u3002</p> <p>\u9690\u6027\u793e\u6050\u6bd4\u4f8b\u9ad8\uff1a\u90e8\u5206\u5b66\u751f\u901a\u8fc7\u201c\u4f2a\u88c5\u9002\u5e94\u201d\uff08\u5982\u5f3a\u8feb\u81ea\u5df1\u53c2\u52a0\u793e\u56e2\uff09\u63a9\u76d6\u5185\u5fc3\u7126\u8651\uff0c\u5bfc\u81f4\u95ee\u9898\u957f\u671f\u79ef\u7d2f\u3002</p>"},{"location":"sp25/marx/pre/#_6","title":"\u666e\u901a\u9662\u6821\u4e0e\u804c\u4e1a\u9662\u6821","text":"<p>\u4f4e\u81ea\u6211\u8ba4\u540c\u611f\u9a71\u52a8\u56de\u907f\uff1a\u90e8\u5206\u5b66\u751f\u56e0\u9ad8\u8003\u5931\u5229\u6216\u793e\u4f1a\u504f\u89c1\u4ea7\u751f\u81ea\u5351\u5fc3\u7406\uff0c\u503e\u5411\u4e8e\u901a\u8fc7\u56de\u907f\u793e\u4ea4\u4fdd\u62a4\u81ea\u5c0a\u3002</p> <p>\u5b9e\u8df5\u7c7b\u4e13\u4e1a\u7684\u77db\u76fe\uff1a\u804c\u4e1a\u9662\u6821\u5f3a\u8c03\u5b9e\u64cd\u4e0e\u56e2\u961f\u5408\u4f5c\uff0c\u793e\u4ea4\u9700\u6c42\u66f4\u9ad8\uff0c\u4f46\u90e8\u5206\u5b66\u751f\u56e0\u6280\u80fd\u7126\u8651\uff08\u5982\u8868\u8fbe\u80fd\u529b\u5f31\uff09\u66f4\u6613\u4ea7\u751f\u9000\u7f29\u884c\u4e3a\u3002</p>"},{"location":"sp25/marx/pre/#_7","title":"\u4e13\u4e1a\u5dee\u5f02\uff1a\u5b66\u79d1\u7279\u6027\u4e0e\u793e\u4ea4\u9700\u6c42","text":""},{"location":"sp25/marx/pre/#_8","title":"\u7406\u5de5\u79d1\uff08\u5982\u8ba1\u7b97\u673a\u3001\u673a\u68b0\u5de5\u7a0b\uff09","text":"<p>\u9ad8\u53d1\u7fa4\u4f53\uff1a\u957f\u671f\u4e0e\u5b9e\u9a8c\u3001\u4ee3\u7801\u7b49\u975e\u4eba\u9645\u5bf9\u8c61\u4e92\u52a8\uff0c\u793e\u4ea4\u6280\u80fd\u953b\u70bc\u673a\u4f1a\u8f83\u5c11\uff0c\u6613\u5f62\u6210\u201c\u5de5\u5177\u7406\u6027\u601d\u7ef4\u201d\uff08\u91cd\u7ed3\u679c\u8f7b\u5173\u7cfb\uff09\u3002</p> <p>\u6027\u522b\u6bd4\u4f8b\u5f71\u54cd\uff1a\u7537\u6027\u5360\u6bd4\u9ad8\u7684\u4e13\u4e1a\u4e2d\uff0c\u60c5\u611f\u8868\u8fbe\u7684\u6587\u5316\u6291\u5236\u53ef\u80fd\u52a0\u5267\u538b\u6291\u503e\u5411\uff08\u5982\u201c\u7537\u751f\u4e0d\u8be5\u793a\u5f31\u201d\uff09\u3002</p>"},{"location":"sp25/marx/pre/#_9","title":"\u4eba\u6587\u793e\u79d1\uff08\u5982\u5fc3\u7406\u5b66\u3001\u6587\u5b66\uff09","text":"<p>\u8868\u9762\u9002\u5e94\u6027\u77db\u76fe\uff1a\u5c3d\u7ba1\u8bfe\u7a0b\u6d89\u53ca\u4eba\u9645\u6c9f\u901a\u7406\u8bba\uff0c\u4f46\u90e8\u5206\u5b66\u751f\u9677\u5165\u201c\u7406\u8bba\u7cbe\u901a\uff0c\u5b9e\u8df5\u65e0\u80fd\u201d\u7684\u56f0\u5883\uff08\u5982\u64c5\u957f\u5206\u6790\u4ed6\u4eba\u5fc3\u7406\u5374\u5bb3\u6015\u771f\u5b9e\u4e92\u52a8\uff09\u3002</p>"},{"location":"sp25/marx/pre/#_10","title":"\u827a\u672f\u7c7b\uff08\u5982\u97f3\u4e50\u3001\u8bbe\u8ba1\uff09","text":"<p>\u4e2a\u4f53\u521b\u4f5c\u4e0e\u96c6\u4f53\u5c55\u793a\u7684\u51b2\u7a81\uff1a\u6ce8\u91cd\u4e2a\u4eba\u624d\u534e\u5c55\u793a\u7684\u4e13\u4e1a\u4e2d\uff0c\u516c\u5f00\u8bc4\u4ef7\u538b\u529b\u53ef\u80fd\u5bfc\u81f4\u201c\u8868\u6f14\u578b\u7126\u8651\u201d\uff08\u5982\u5bb3\u6015\u4f5c\u54c1\u88ab critique \u8fde\u5e26\u5426\u5b9a\u81ea\u6211\u4ef7\u503c\uff09\u3002</p>"},{"location":"sp25/marx/pre/#_11","title":"\u5e74\u7ea7\u9636\u6bb5\uff1a\u9002\u5e94\u671f\u4e0e\u8f6c\u578b\u671f\u98ce\u9669","text":""},{"location":"sp25/marx/pre/#_12","title":"\u5927\u4e00\u65b0\u751f","text":"<p>\u73af\u5883\u7a81\u53d8\u89e6\u53d1\u9000\u7f29\uff1a\u8131\u79bb\u5bb6\u5ead\u4fdd\u62a4\u540e\uff0c\u9700\u72ec\u7acb\u5904\u7406\u5bbf\u820d\u5173\u7cfb\u3001\u793e\u56e2\u7ade\u4e89\u7b49\u65b0\u793e\u4ea4\u573a\u666f\uff0c\u9002\u5e94\u4e0d\u826f\u8005\u6613\u9677\u5165\u201c\u65b0\u751f\u6c89\u9ed8\u671f\u201d\u3002</p> <p>\u4fe1\u606f\u8fc7\u8f7d\u4e0e\u9009\u62e9\u56f0\u96be\uff1a\u9762\u5bf9\u8fc7\u591a\u793e\u56e2\u62db\u65b0\u3001\u793e\u4ea4\u6d3b\u52a8\uff0c\u90e8\u5206\u5b66\u751f\u56e0\u51b3\u7b56\u75b2\u52b3\u9009\u62e9\u201c\u5168\u9762\u56de\u907f\u201d\u3002</p>"},{"location":"sp25/marx/pre/#_13","title":"\u5927\u4e8c\u81f3\u5927\u4e09","text":"<p>\u5b66\u4e1a\u4e0e\u793e\u4ea4\u7684\u4f18\u5148\u7ea7\u51b2\u7a81\uff1a\u5907\u8003\u8bc1\u4e66\u3001\u53c2\u4e0e\u79d1\u7814\u9879\u76ee\u7b49\u538b\u529b\u4e0b\uff0c\u5b66\u751f\u53ef\u80fd\u4e3b\u52a8\u51cf\u5c11\u793e\u4ea4\u4ee5\u201c\u8282\u7701\u7cbe\u529b\u201d\uff0c\u957f\u671f\u758f\u79bb\u5bfc\u81f4\u80fd\u529b\u9000\u5316\u3002</p>"},{"location":"sp25/marx/pre/#_14","title":"\u5927\u56db\u53ca\u7814\u7a76\u751f","text":"<p>\u6c42\u804c\u7126\u8651\u7684\u6295\u5c04\uff1a\u9762\u8bd5\u3001\u5b9e\u4e60\u4e2d\u7684\u632b\u8d25\u53ef\u80fd\u6cdb\u5316\u4e3a\u5bf9\u4e00\u5207\u793e\u4ea4\u573a\u666f\u7684\u6050\u60e7\uff08\u5982\u201c\u88abHR\u5426\u5b9a=\u88ab\u5168\u793e\u4f1a\u5426\u5b9a\u201d\uff09\u3002</p> <p>\u5b66\u672f\u793e\u4ea4\u58c1\u5792\uff1a\u7814\u7a76\u751f\u9700\u9891\u7e41\u53c2\u4e0e\u5b66\u672f\u4f1a\u8bae\u3001\u5bfc\u5e08\u4eba\u9645\u7f51\u7edc\u7ef4\u62a4\uff0c\u90e8\u5206\u5185\u5411\u8005\u56e0\u201c\u529f\u5229\u6027\u793e\u4ea4\u201d\u538c\u6076\u52a0\u5267\u56de\u907f\u884c\u4e3a\u3002</p>"},{"location":"sp25/marx/pre/#_15","title":"\u5176\u4ed6\u6f5c\u5728\u9ad8\u98ce\u9669\u7fa4\u4f53","text":""},{"location":"sp25/marx/pre/#_16","title":"\u7ecf\u6d4e\u56f0\u96be\u5b66\u751f","text":"<p>\u56e0\u6d88\u8d39\u6c34\u5e73\u5dee\u5f02\u56de\u907f\u805a\u9910\u3001\u65c5\u884c\u7b49\u793e\u4ea4\u6d3b\u52a8\uff0c\u9010\u6e10\u88ab\u8fb9\u7f18\u5316\u3002</p>"},{"location":"sp25/marx/pre/#lgbtq","title":"LGBTQ+\u7fa4\u4f53","text":"<p>\u5bf9\u8eab\u4efd\u66b4\u9732\u7684\u6050\u60e7\u5bfc\u81f4\u793e\u4ea4\u4e2d\u8fc7\u5ea6\u8c28\u614e\uff0c\u5f62\u6210\u201c\u53cc\u91cd\u9690\u85cf\u201d\uff08\u65e2\u9690\u85cf\u6027\u53d6\u5411\uff0c\u53c8\u9690\u85cf\u793e\u4ea4\u9700\u6c42\uff09\u3002</p>"},{"location":"sp25/marx/pre/#_17","title":"\u8f6c\u4e13\u4e1a/\u590d\u5b66\u751f","text":"<p>\u539f\u6709\u793e\u4ea4\u5708\u65ad\u88c2\uff0c\u65b0\u73af\u5883\u4e2d\u201c\u5c40\u5916\u4eba\u201d\u8eab\u4efd\u52a0\u5267\u878d\u5165\u56f0\u96be\u3002</p>"},{"location":"sp25/marx/pre/#_18","title":"\u73b0\u8c61\u5206\u6790","text":"<p>\u3010\u793e\u4f1a\u8f6c\u578b\u671f\u7684\u8eab\u4efd\u4ee3\u507f\u3011 \u5728\u539f\u5b50\u5316\u793e\u4f1a\u4e0e\u6570\u5b57\u5316\u751f\u5b58\u7684\u5939\u7f1d\u4e2d\uff0c\u201ci\u4eba\u201d\u6807\u7b7e\u672c\u8d28\u662f\u4ee3\u9645\u8ba4\u77e5\u5931\u8c03\u7684\u7f13\u51b2\u5e26\u3002\u5f53\u4f20\u7edf\u719f\u4eba\u793e\u4f1a\u7684\u8bc4\u4ef7\u4f53\u7cfb\uff08\u5a5a\u604b\u72b6\u51b5\u3001\u793e\u4ea4\u80fd\u529b\uff09\u4e0e\u4e92\u8054\u7f51\u65f6\u4ee3\u7684\u4ef7\u503c\u6807\u5c3a\uff08\u4e2a\u4ebaIP\u3001\u5782\u76f4\u6280\u80fd\uff09\u6fc0\u70c8\u78b0\u649e\uff0c\u5e74\u8f7b\u4eba\u9009\u62e9\u7528\u201c\u793e\u6050\u201d\u5efa\u6784\u4eba\u683c\u76fe\u724c\u2014\u2014\u65e2\u5c4f\u853d\u957f\u8f88\u7684\u793e\u4ea4\u5ba1\u89c6\uff0c\u53c8\u907f\u514d\u5728\u540c\u8f88\u7ade\u4e89\u4e2d\u66b4\u9732\u77ed\u677f\u3002\u8fd9\u79cd\u8eab\u4efd\u58f0\u660e\u5b9e\u4e3a\u65b0\u578b\u793e\u4ea4\u8d27\u5e01\uff0c\u7cbe\u51c6\u6807\u6ce8\u81ea\u5df1\u5728\u6570\u5b57\u4e1b\u6797\u7684\u751f\u6001\u4f4d\u3002</p> <p>\u3010\u9ad8\u5bc6\u5ea6\u793e\u4ea4\u4e0b\u7684\u8282\u80fd\u7b97\u6cd5\u3011 \u5f53\u4ee3\u793e\u4ea4\u65e9\u5df2\u8d85\u51fa\u4eba\u7c7b\u795e\u7ecf\u7cfb\u7edf\u7684\u8377\u8f7d\u9608\u503c\uff0c\u5e74\u8f7b\u4eba\u7684\u201c\u793e\u6050\u201d\u672c\u8d28\u662f\u5927\u8111\u5f00\u53d1\u7684\u8282\u80fd\u7b97\u6cd5\u3002\u5f53\u73b0\u5b9e\u793e\u4ea4\u6ca6\u4e3a\u7b80\u5386\u4eba\u8109\u7684\u671f\u8d27\u4ea4\u6613\uff0c\u7ebf\u4e0a\u4e92\u52a8\u5f02\u5316\u4e3a\u6570\u636e\u52b3\u5de5\u7684\u60c5\u7eea\u751f\u4ea7\uff0c\u81ea\u79f0i\u4eba\u5b9e\u4e3a\u542f\u52a8\u201c\u8ba4\u77e5\u8fc7\u8f7d\u4fdd\u62a4\u201d\u2014\u2014\u7528\u6700\u5c0f\u793e\u4ea4\u80fd\u8017\u7ef4\u6301\u57fa\u672c\u4eba\u9645\u5173\u7cfb\uff0c\u5c06\u5269\u4f59\u7b97\u529b\u5206\u914d\u7ed9\u66f4\u5177\u6295\u8d44\u56de\u62a5\u7387\u7684\u6280\u80fd\u53d8\u73b0\u3002\u8fd9\u4e0d\u662f\u793e\u4ea4\u9000\u5316\uff0c\u800c\u662f\u4eba\u7c7b\u5728\u5143\u5b87\u5b99\u524d\u591c\u7684\u9002\u5e94\u6027\u8fdb\u5316\u3002</p> <p>\u3010\u865a\u62df\u6b96\u6c11\u5730\u7684\u5fc3\u7406\u4ee3\u507f\u3011 Z\u4e16\u4ee3\u5f00\u521b\u4e86\u72ec\u7279\u7684\u793e\u4ea4\u53cc\u8f68\u5236\uff1a\u73b0\u5b9e\u4e16\u754c\u4e3b\u52a8\u964d\u566a\uff0c\u6570\u5b57\u738b\u56fd\u75af\u72c2\u6269\u5bb9\u3002\u8fd9\u79cd\u5206\u88c2\u6e90\u81ea\u5bf9\u786e\u5b9a\u6027\u7684\u7cbe\u51c6\u628a\u63a7\u2014\u2014\u670b\u53cb\u5708\u4ec5\u4e09\u5929\u53ef\u89c1\uff0c\u4f46B\u7ad9\u6536\u85cf\u5939\u585e\u6ee1\u884c\u4e1a\u767d\u76ae\u4e66\uff1b\u7ebf\u4e0b\u805a\u4f1a\u5982\u5750\u9488\u6be1\uff0c\u5374\u5728\u6e38\u620f\u5de5\u4f1a\u6307\u6325\u767e\u4eba\u56e2\u6218\u3002\u770b\u4f3c\u77db\u76fe\u7684\u80cc\u540e\uff0c\u662f\u4ee3\u9645\u6027\u7684\u638c\u63a7\u6b32\u5347\u7ea7\uff1a\u65e2\u8981\u89c4\u907f\u73b0\u5b9e\u793e\u4ea4\u7684\u4e0d\u53ef\u63a7\u98ce\u9669\uff0c\u53c8\u8981\u5728\u53ef\u63a7\u9886\u57df\u5efa\u7acb\u7edd\u5bf9\u4e3b\u6743\u3002</p> <p>\u3010\u53cd\u7aa5\u89c6\u65f6\u4ee3\u7684\u8eab\u4efd\u6e38\u51fb\u6218\u3011 \u5f53\u6444\u50cf\u5934\u3001\u5927\u6570\u636e\u548cKPI\u5408\u8c0b\u56f4\u527f\u4e2a\u4f53\u7a7a\u95f4\uff0c\u201c\u793e\u6050\u201d\u5ba3\u8a00\u5b9e\u4e3a\u4fe1\u606f\u65f6\u4ee3\u7684\u53cd\u4fa6\u5bdf\u7b56\u7565\u3002\u5e74\u8f7b\u4eba\u7528i\u4eba\u6807\u7b7e\u6784\u7b51\u9632\u5fa1\u5de5\u4e8b\uff1a\u4ee5\u201c\u793e\u4ea4\u4f4e\u6b32\u671b\u201d\u5bf9\u6297\u4f01\u4e1a\u6587\u5316\u7684\u96c6\u4f53\u88f9\u631f\uff0c\u7528\u201c\u7ebf\u4e0a\u81ea\u95ed\u75c7\u201d\u9632\u5fa1\u7b97\u6cd5\u7684\u4eba\u683c\u753b\u50cf\uff0c\u501f\u201c\u9009\u62e9\u6027\u5931\u8bed\u201d\u5b88\u4f4f\u6700\u540e\u7684\u9690\u79c1\u8fb9\u7586\u3002\u8fd9\u79cd\u7b56\u7565\u6027\u6c89\u9ed8\u4e0d\u662f\u9003\u907f\uff0c\u800c\u662f\u5bf9\u8fc7\u5ea6\u66b4\u9732\u793e\u4f1a\u7684\u975e\u66b4\u529b\u4e0d\u5408\u4f5c\u3002</p> <p>\u3010\u65b0\u7ecf\u6d4e\u5f62\u6001\u4e0b\u7684\u7406\u6027\u6295\u8d44\u3011 \u5728\u96f6\u5de5\u7ecf\u6d4e\u4e0e\u659c\u6760\u65f6\u4ee3\u7684\u53cc\u91cd\u6324\u538b\u4e0b\uff0c\u793e\u6050\u6210\u4e3a\u65f6\u95f4\u7ba1\u7406\u7684\u98ce\u63a7\u6a21\u578b\u3002\u5e74\u8f7b\u4eba\u6e05\u9192\u8ba1\u7b97\u7740\u793e\u4ea4ROI\uff1a\u65e0\u6548\u996d\u5c40\u76843\u5c0f\u65f6\uff0c\u8db3\u4ee5\u5b8c\u6210Python\u7f51\u8bfe\u5e76\u83b7\u5f97\u8bc1\u4e66\uff1b\u5ba2\u5957\u5bd2\u6684\u6d88\u8017\u7684\u60c5\u7eea\u503c\uff0c\u80fd\u591f\u8f6c\u5316\u5c0f\u7ea2\u4e66\u8d26\u53f7\u7684\u7206\u6b3e\u7b14\u8bb0\u3002\u5f53\u793e\u4f1a\u5173\u7cfb\u52a0\u901f\u8bc1\u5238\u5316\uff0c\u81ea\u79f0i\u4eba\u76f8\u5f53\u4e8e\u5ba3\u5e03\u201c\u6682\u505c\u60c5\u611fIPO\u201d\uff0c\u8f6c\u800c\u5c06\u6ce8\u610f\u529b\u4f5c\u4e3a\u79c1\u52df\u57fa\u91d1\u6295\u5411\u4e2a\u4eba\u6210\u957f\u8d5b\u9053\u3002</p> <p>\u8fd9\u573a\u96c6\u4f53\u6027\u7684\u201c\u793e\u4ea4\u6218\u7565\u6536\u7f29\u201d\uff0c\u672c\u8d28\u662f\u6570\u5b57\u539f\u4f4f\u6c11\u91cd\u6784\u7684\u751f\u5b58\u8bed\u6cd5\u3002\u4ed6\u4eec\u7528i\u4eba\u8eab\u4efd\u5bf9\u6297\u8fc7\u5ea6\u8fde\u63a5\u7684\u793e\u4f1a\uff0c\u5c06\u8282\u7701\u7684\u8ba4\u77e5\u8d44\u6e90\u8f6c\u5316\u4e3a\u786c\u6838\u7ade\u4e89\u529b\u3002\u5f53\u8001\u4e00\u8f88\u8fd8\u5728\u62c5\u5fe7\u201c\u5b64\u50fb\u8bef\u7ec8\u8eab\u201d\uff0c\u5e74\u8f7b\u4eba\u65e9\u5df2\u609f\u900f\uff1a\u5728\u6ce8\u610f\u529b\u901a\u80c0\u7684\u65f6\u4ee3\uff0c\u6700\u7a00\u7f3a\u7684\u4e0d\u518d\u662f\u793e\u4ea4\u5e7f\u5ea6\uff0c\u800c\u662f\u6301\u7eed\u6df1\u6316\u81ea\u6211\u4ef7\u503c\u7684\u5fc3\u7406\u5e26\u5bbd\u3002</p>"},{"location":"sp25/marx/pre/#_19","title":"\u539f\u56e0\u5206\u6790","text":"<p>\u7406\u8bba\u6846\u67b6\uff1a\u9a6c\u514b\u601d\u4e3b\u4e49\u793e\u4f1a\u4ea4\u5f80\u7406\u8bba \u9a6c\u514b\u601d\u4e3b\u4e49\u793e\u4f1a\u4ea4\u5f80\u7406\u8bba\u6307\u51fa\uff0c\u793e\u4f1a\u4ea4\u5f80\u662f\u4eba\u7684\u5b58\u5728\u65b9\u5f0f\uff0c\u5176\u672c\u8d28\u662f\u4e00\u5207\u793e\u4f1a\u5173\u7cfb\u7684\u603b\u548c\u3002\u8fd9\u4e00\u7406\u8bba\u4e3a\u6211\u4eec\u5206\u6790\u5f53\u4ee3\u5927\u5b66\u751f\u7684\u793e\u4ea4\u6050\u60e7\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840\u3002\u7ed3\u5408\u793e\u4f1a\u8f6c\u578b\u671f\u7684\u7279\u5f81\u4e0e\u9752\u5e74\u5fc3\u7406\u9700\u6c42\u7684\u53d8\u5316\uff0c\u5f53\u4ee3\u5927\u5b66\u751f\u7684\u793e\u4ea4\u6050\u60e7\u73b0\u8c61\u53ef\u4ee5\u4ece\u4ee5\u4e0b\u591a\u4e2a\u7ef4\u5ea6\u8fdb\u884c\u6df1\u5165\u5256\u6790\u3002</p>"},{"location":"sp25/marx/pre/#_20","title":"\u4e00\u3001\u7cbe\u795e\u9700\u6c42\u7684\u77db\u76fe\u6027","text":"<p>\u9a6c\u514b\u601d\u6307\u51fa\uff0c\u4eba\u533a\u522b\u4e8e\u52a8\u7269\u7684\u91cd\u8981\u4e00\u70b9\u662f\u610f\u8bc6\u5230\u201c\u81ea\u6211\u201d\u7684\u5b58\u5728\u3002\u5728\u5f53\u4eca\u7684\u4e2a\u4f53\u5316\u65f6\u4ee3\uff0c\u9752\u5e74\u793e\u4ea4\u4ee5\u81ea\u6211\u6ee1\u8db3\u4e3a\u9996\u8981\u524d\u63d0\uff0c\u8ffd\u6c42\u4e2a\u6027\u5f20\u626c\u548c\u81ea\u6211\u8868\u8fbe\uff0c\u66f4\u6ce8\u91cd\u81ea\u6211\u9700\u6c42\u7684\u5b9e\u73b0\uff0c\u4eab\u53d7\u201c\u72ec\u7acb\u4e50\u6d3b\u201d\u7684\u60a6\u5df1\u4f53\u9a8c\uff0c\u540c\u65f6\uff0c\u6b63\u662f\u8fd9\u79cd\u81ea\u6211\u6027\u7684\u7a81\u51fa\uff0c\u4ed6\u4eec\u9700\u8981\u5728\u793e\u4ea4\u4e2d\u7ef4\u62a4\u81ea\u8eab\u8fb9\u754c\u611f\uff0c\u6784\u5efa\u201c\u5fc3\u4e4b\u58c1\u201d\uff0c\u7528\u4e8e\u4fdd\u6301\u81ea\u6211\u3002\u7136\u800c\uff0c\u5728\u539f\u5b50\u5316\u7684\u4e2a\u4eba\u5fe7\u601d\u4e2d\uff0c\u4ed6\u4eec\u53c8\u6e34\u671b\u201c\u4eb2\u5bc6\u966a\u4f34\u201d\uff0c\u6e34\u671b\u6df1\u5ea6\u4ea4\u5fc3\u7684\u60c5\u611f\u4f53\u9a8c\uff0c\u5e0c\u671b\u5728\u793e\u4ea4\u5173\u7cfb\u4e2d\u5efa\u7acb\u76f8\u4e92\u5173\u7167\u3001\u76f8\u4e92\u4f9d\u8d56\u7684\u4eb2\u5bc6\u5173\u7cfb\u3002 \u8fd9\u79cd\u7cbe\u795e\u9700\u6c42\u7684\u77db\u76fe\u6027\u8fdb\u4e00\u6b65\u52a0\u5267\u4e86\u793e\u4ea4\u7126\u8651\u3002\u5f53\u4ee3\u5927\u5b66\u751f\u5728\u7cbe\u795e\u9700\u6c42\u4e0a\u8868\u73b0\u51fa\u663e\u8457\u7684\u77db\u76fe\u6027\uff1a\u4e00\u65b9\u9762\uff0c\u4ed6\u4eec\u8ffd\u6c42\u201c\u76f8\u4e92\u6e29\u6696\u800c\u53c8\u4e0d\u76f8\u6b20\u3001\u76f8\u4e92\u6276\u6301\u800c\u53c8\u4e0d\u675f\u7f1a\u201d\u7684\u7406\u60f3\u793e\u4ea4\u6a21\u5f0f\uff0c\u5f62\u6210\u4e86\u6ce8\u91cd\u60c5\u611f\u4f53\u9a8c\u7684\u201c\u642d\u5b50\u793e\u4ea4\u201d\u548c\u201c\u6d45\u793e\u4ea4\u201d\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u4ed6\u4eec\uff0c\u540c\u65f6\u6ce8\u91cd\u6df1\u5ea6\u4ea4\u5f80\u7684\u60c5\u611f\u4f53\u9a8c\u548c\u4f9d\u5b58\u5173\u7cfb\u3002</p>"},{"location":"sp25/marx/pre/#_21","title":"\u4e8c\u3001\u9ad8\u5bc6\u5ea6\u793e\u4ea4\u548c\u793e\u4f1a\u8f6c\u578b\u4e0b\u7684\u8282\u80fd\u7b97\u6cd5\u4e0e\u8fc7\u9ad8\u7684\u81ea\u6211\u610f\u8bc6","text":"<p>\u5f53\u4ee3\u4e92\u8054\u7f51\u7684\u53d1\u5c55\u4f7f\u793e\u4ea4\u6210\u4e3a\u4e00\u79cd\u76f8\u5f53\u5ec9\u4ef7\u4e14\u8f7b\u6613\u7684\u4e8b\u60c5\uff0c\u793e\u4ea4\u5df2\u8d85\u51fa\u4eba\u7c7b\u795e\u7ecf\u7cfb\u7edf\u7684\u8377\u8f7d\u9608\u503c\uff0c\u540c\u65f6\u65f6\u4ee3\u53d8\u5316\u7684\u5939\u5c42\u4e2d\uff0c\u4f20\u7edf\u719f\u4eba\u793e\u4f1a\u7684\u8bc4\u4ef7\u4f53\u7cfb\u4e0e\u65b0\u65f6\u4ee3\u9752\u5e74\u7684\u4ef7\u503c\u6807\u5c3a\u5728\u5404\u65b9\u9762\u4ea7\u751f\u6fc0\u70c8\u51b2\u7a81\u3002\u5728\u8fd9\u4e9b\u538b\u529b\u4e0b\uff0c\u5e74\u8f7b\u4eba\u7684\u201c\u793e\u6050\u201d\u672c\u8d28\u662f\u5927\u8111\u7684\u4e00\u79cd\u201c\u8282\u80fd\u7b97\u6cd5\u201d\u3002\u73b0\u5b9e\u793e\u4ea4\u9010\u6e10\u6ca6\u4e3a\u4eba\u8109\u4ea4\u6613\uff0c\u7ebf\u4e0a\u4e92\u52a8\u5f02\u5316\u4e3a\u6570\u636e\u52b3\u5de5\u7684\u60c5\u7eea\u751f\u4ea7\uff0c\u65b0\u65e7\u4ef7\u503c\u89c2\u7684\u5de8\u5927\u5dee\u5f02\uff0c\u81ea\u79f0\u201ci\u4eba\u201d\u5b9e\u9645\u4e0a\u662f\u5927\u8111\u7684\u4ee5=\u4e00\u79cd\u8ba4\u77e5\u4fdd\u62a4\uff0c\u8ba9\u6211\u4eec\u7528\u6700\u5c0f\u793e\u4ea4\u80fd\u8017\u7ef4\u6301\u57fa\u672c\u4eba\u9645\u5173\u7cfb\uff0c\u5c06\u5269\u4f59\u7b97\u529b\u5206\u914d\u7ed9\u66f4\u5177\u56de\u62a5\u7387\u7684\u6280\u80fd\u53d8\u73b0\u3002\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\uff0c\u8fd9\u5e76\u975e\u793e\u4ea4\u9000\u5316\uff0c\u800c\u6216\u8bb8\u662f\u4e00\u79cd\u4eba\u7c7b\u5728\u5143\u5b87\u5b99\u524d\u591c\u7684\u9002\u5e94\u6027\u8fdb\u5316\u3002 \u7136\u800c\uff0c\u5728\u8fd9\u79cd\u8282\u80fd\u7b97\u6cd5\u7684\u80cc\u540e\uff0c\u4e5f\u53cd\u6620\u4e86\u8fc7\u9ad8\u7684\u81ea\u6211\u610f\u8bc6\u4e0e\u8ba4\u77e5\u504f\u5dee\u3002\u81ea\u79f0\u793e\u6050\u7684\u4eba\u5f80\u5f80\u8fc7\u5ea6\u62c5\u5fe7\u4ed6\u4eba\u8bc4\u4ef7\uff0c\u8fdb\u884c\u8d1f\u9762\u81ea\u6211\u5bf9\u8bdd\uff0c\u8fd9\u4e9b\u8ba4\u77e5\u504f\u5dee\u52a0\u5267\u4e86\u793e\u4ea4\u7126\u8651\u3002\u5b9e\u9645\u4e0a\uff0c\u4ed6\u4eba\u5e76\u4e0d\u4f1a\u8fc7\u591a\u5173\u6ce8\u4e2a\u4f53\u7684\u8868\u73b0\uff0c\u4f46\u81ea\u6211\u610f\u8bc6\u5f15\u5bfc\u4e2a\u4f53\u7591\u8651\u3001\u6000\u7591\uff0c\u8fdb\u800c\u4e0d\u6562\u8868\u73b0\u3001\u4e0d\u6562\u81ea\u6211\u8868\u8fbe\u3002</p>"},{"location":"sp25/marx/pre/#_22","title":"\u4e09\u3001\u865a\u62df\u6b96\u6c11\u5730\u7684\u5fc3\u7406\u4ee3\u507f\u4e0e\u865a\u62df\u793e\u4ea4\u7684\u5c40\u9650\u6027","text":"<p>Z\u4e16\u4ee3\u5f00\u521b\u4e86\u72ec\u7279\u7684\u793e\u4ea4\u53cc\u8f68\u5236\uff1a\u73b0\u5b9e\u4e16\u754c\u4e3b\u52a8\u964d\u566a\uff0c\u6570\u5b57\u738b\u56fd\u75af\u72c2\u6269\u5bb9\u3002\u8fd9\u79cd\u5206\u88c2\u6e90\u81ea\u5bf9\u786e\u5b9a\u6027\u7684\u7cbe\u51c6\u628a\u63a7\u7684\u6e34\u671b\uff0c\u5728\u865a\u62df\u4e16\u754c\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u5730\u638c\u7ba1\u6211\u4eec\u5730\u4e00\u5207\uff0c\u6211\u4eec\u53ef\u4ee5\u4ed8\u51fa\u6211\u4eec\u60f3\u4ed8\u51fa\u7684\uff0c\u51b3\u5b9a\u6211\u4eec\u60f3\u51b3\u5b9a\u7684\uff0c\u8fd9\u79cd\u786e\u5b9a\u6027\u7684\u628a\u63e1\u5f15\u53d1\u4e86\u5728\u73b0\u5b9e\u793e\u4ea4\u7684\u4ee3\u507f\u3002\u5728\u73b0\u5b9e\u548c\u6570\u5b57\u770b\u4f3c\u77db\u76fe\u7684\u80cc\u540e\uff0c\u662f\u4ee3\u9645\u6027\u7684\u638c\u63a7\u6b32\u5347\u7ea7\uff1a\u65e2\u8981\u89c4\u907f\u73b0\u5b9e\u793e\u4ea4\u7684\u4e0d\u53ef\u63a7\u98ce\u9669\uff0c\u53c8\u8981\u5728\u53ef\u63a7\u9886\u57df\u5efa\u7acb\u7edd\u5bf9\u4e3b\u6743\u3002 \u7136\u800c\uff0c\u865a\u62df\u793e\u4ea4\u73af\u5883\u867d\u7136\u7531\u4e92\u8054\u7f51\u548c\u6570\u5b57\u6280\u672f\u642d\u5efa\uff0c\u5b9e\u73b0\u4e86\u8de8\u8d8a\u7269\u7406\u8ddd\u79bb\u7684\u4e92\u52a8\uff0c\u4f46\u5176\u5e26\u6765\u7684\u60c5\u611f\u6ee1\u8db3\u5e76\u4e0d\u5168\u9762\u3002\u865a\u62df\u4e16\u754c\u7684\u8fc7\u5ea6\u4ea4\u9645\u4e0e\u73b0\u5b9e\u4e16\u754c\u7684\u793e\u4ea4\u9700\u6c42\u4e4b\u95f4\u7684\u77db\u76fe\u4e0e\u5931\u8861\uff0c\u8fdb\u4e00\u6b65\u52a0\u6df1\u4e86\u4eba\u4eec\u5bf9\u73b0\u5b9e\u793e\u4ea4\u7684\u7126\u8651\u3002</p>"},{"location":"sp25/marx/pre/#_23","title":"\u56db\u3001\u9ad8\u5ea6\u7ade\u4e89\u7684\u793e\u4f1a\u6c1b\u56f4\u4e0e\u529f\u5229\u5316\u503e\u5411","text":"<p>\u5f53\u4ee3\u5927\u5b66\u751f\u793e\u4ea4\u6050\u60e7\u7684\u6210\u56e0\u4e2d\uff0c\u9ad8\u5ea6\u7ade\u4e89\u7684\u793e\u4f1a\u6c1b\u56f4\u4e0e\u529f\u5229\u5316\u503e\u5411\u662f\u4e00\u4e2a\u4e0d\u53ef\u5ffd\u89c6\u7684\u91cd\u8981\u56e0\u7d20\u3002\u8fd9\u79cd\u793e\u4f1a\u6c1b\u56f4\u6df1\u523b\u5f71\u54cd\u4e86\u9752\u5e74\u7684\u793e\u4ea4\u5fc3\u7406\u548c\u884c\u4e3a\u6a21\u5f0f\u3002\u5e94\u8bd5\u6559\u80b2\u5bfc\u5411\u4e0b\uff0c\u4ee5\u6210\u7ee9\u4e3a\u6838\u5fc3\u7684\u8bc4\u4ef7\u4f53\u7cfb\u5ffd\u89c6\u60c5\u611f\u6559\u80b2\u548c\u793e\u4ea4\u6280\u80fd\u7684\u57f9\u517b\uff0c\u5bfc\u81f4\u5b66\u751f\u7f3a\u4e4f\u5904\u7406\u4eba\u9645\u51b2\u7a81\u7684\u5b9e\u8df5\u673a\u4f1a\uff0c\u540c\u65f6\u540c\u4f34\u95f4\u7684\u5b66\u4e1a\u5185\u5377\u52a0\u5267\u4e86\u81ea\u5351\u5fc3\u7406\uff0c\u5f62\u6210\u201c\u907f\u514d\u88ab\u8bc4\u4ef7\u201d\u7684\u9632\u5fa1\u673a\u5236\u3002\u793e\u4f1a\u5bf9\u5916\u8c8c\u3001\u6210\u7ee9\u3001\u804c\u4e1a\u524d\u666f\u7684\u8fc7\u5ea6\u6807\u7b7e\u5316\uff0c\u4f7f\u5927\u5b66\u751f\u5728\u793e\u4ea4\u4e2d\u8fc7\u5ea6\u81ea\u6211\u5ba1\u67e5\uff0c\u5bb3\u6015\u66b4\u9732\u201c\u4e0d\u5b8c\u7f8e\u201d\uff0c\u800c\u5bb6\u5ead\u548c\u793e\u4f1a\u5bf9\u5b66\u4e1a\u6216\u793e\u4ea4\u8868\u73b0\u7684\u9ad8\u8981\u6c42\uff0c\u5219\u53ef\u80fd\u5f15\u53d1\u201c\u5b8c\u7f8e\u4e3b\u4e49\u7126\u8651\u201d\uff0c\u8fdb\u4e00\u6b65\u52a0\u5267\u5bf9\u793e\u4ea4\u5931\u8d25\u7684\u6050\u60e7\u3002</p>"},{"location":"sp25/marx/pre/#_24","title":"\u5fc3\u7406","text":""},{"location":"sp25/marx/pre/#_25","title":"\u5bb6\u5ead\u73af\u5883\u7684\u5f71\u54cd","text":""},{"location":"sp25/marx/pre/#_26","title":"\u8fc7\u5ea6\u4fdd\u62a4\u6216\u5ffd\u89c6","text":"<p>\u7236\u6bcd\u8fc7\u5ea6\u63a7\u5236\u6216\u60c5\u611f\u5ffd\u89c6\u53ef\u80fd\u5bfc\u81f4\u5b50\u5973\u7f3a\u4e4f\u72ec\u7acb\u793e\u4ea4\u7684\u673a\u4f1a\uff0c\u5f62\u6210\u4f9d\u8d56\u6216\u56de\u907f\u503e\u5411\u3002</p>"},{"location":"sp25/marx/pre/#_27","title":"\u9ad8\u671f\u5f85\u4e0e\u6279\u8bc4","text":"<p>\u5bb6\u5ead\u5bf9\u5b66\u4e1a\u6216\u793e\u4ea4\u8868\u73b0\u7684\u9ad8\u8981\u6c42\uff0c\u53ef\u80fd\u5f15\u53d1\u201c\u5b8c\u7f8e\u4e3b\u4e49\u7126\u8651\u201d\uff0c\u5bfc\u81f4\u5bf9\u793e\u4ea4\u5931\u8d25\u7684\u6050\u60e7\u3002</p>"},{"location":"sp25/marx/pre/#_28","title":"\u5b66\u6821\u6559\u80b2\u6a21\u5f0f\u7684\u5c40\u9650","text":""},{"location":"sp25/marx/pre/#_29","title":"\u5e94\u8bd5\u6559\u80b2\u5bfc\u5411","text":"<p>\u4ee5\u6210\u7ee9\u4e3a\u6838\u5fc3\u7684\u8bc4\u4ef7\u4f53\u7cfb\uff0c\u5ffd\u89c6\u60c5\u611f\u6559\u80b2\u548c\u793e\u4ea4\u6280\u80fd\u57f9\u517b\uff0c\u5b66\u751f\u7f3a\u4e4f\u5904\u7406\u4eba\u9645\u51b2\u7a81\u7684\u5b9e\u8df5\u673a\u4f1a\u3002</p>"},{"location":"sp25/marx/pre/#_30","title":"\u7ade\u4e89\u538b\u529b","text":"<p>\u540c\u4f34\u95f4\u7684\u5b66\u4e1a\u5185\u5377\u53ef\u80fd\u52a0\u5267\u81ea\u5351\u5fc3\u7406\uff0c\u5f62\u6210\u201c\u907f\u514d\u88ab\u8bc4\u4ef7\u201d\u7684\u9632\u5fa1\u673a\u5236\u3002</p>"},{"location":"sp25/marx/pre/#_31","title":"\u793e\u4f1a\u6587\u5316\u56e0\u7d20","text":""},{"location":"sp25/marx/pre/#_32","title":"\u6570\u5b57\u5316\u793e\u4ea4\u4f9d\u8d56","text":"<p>\u865a\u62df\u4e92\u52a8\uff08\u5982\u793e\u4ea4\u5a92\u4f53\uff09\u66ff\u4ee3\u73b0\u5b9e\u4ea4\u6d41\uff0c\u524a\u5f31\u9762\u5bf9\u9762\u6c9f\u901a\u80fd\u529b\uff0c\u52a0\u5267\u5bf9\u771f\u5b9e\u793e\u4ea4\u573a\u666f\u7684\u964c\u751f\u611f\u3002</p>"},{"location":"sp25/marx/pre/#_33","title":"\u793e\u4f1a\u8bc4\u4ef7\u538b\u529b","text":"<p>\u5916\u8c8c\u3001\u6210\u7ee9\u3001\u804c\u4e1a\u524d\u666f\u7684\u8fc7\u5ea6\u6807\u7b7e\u5316\uff0c\u5bfc\u81f4\u5927\u5b66\u751f\u5728\u793e\u4ea4\u4e2d\u8fc7\u5ea6\u81ea\u6211\u5ba1\u67e5\uff0c\u5bb3\u6015\u66b4\u9732\u201c\u4e0d\u5b8c\u7f8e\u201d\u3002</p>"},{"location":"sp25/marx/pre/#_34","title":"\u4e2a\u4eba\u5fc3\u7406\u7279\u8d28\u4e0e\u7ecf\u5386","text":""},{"location":"sp25/marx/pre/#_35","title":"\u521b\u4f24\u6027\u4f53\u9a8c","text":"<p>\u5982\u6821\u56ed\u9738\u51cc\u3001\u516c\u5f00\u573a\u5408\u7684\u5c34\u5c2c\u7ecf\u5386\uff0c\u53ef\u80fd\u5f62\u6210\u6761\u4ef6\u53cd\u5c04\u5f0f\u7684\u56de\u907f\u884c\u4e3a\u3002</p>"},{"location":"sp25/marx/pre/#_36","title":"\u4f4e\u81ea\u6211\u4ef7\u503c\u611f","text":"<p>\u957f\u671f\u5426\u5b9a\u81ea\u6211\u80fd\u529b\u6216\u5438\u5f15\u529b\uff0c\u5bfc\u81f4\u201c\u9884\u5224\u5931\u8d25\u201d\u7684\u5fc3\u7406\u9884\u671f\uff08\u5982\u201c\u6211\u8bf4\u7684\u8bdd\u6ca1\u4eba\u611f\u5174\u8da3\u201d\uff09\u3002</p>"},{"location":"sp25/marx/pre/#_37","title":"\u793e\u4f1a","text":""},{"location":"sp25/marx/pre/#_38","title":"\u6559\u80b2\u4f53\u7cfb\u7684\u5931\u8861","text":"<p>\u91cd\u667a\u529b\u8f7b\u60c5\u5546\u7684\u6559\u80b2\u6a21\u5f0f\uff0c\u5bfc\u81f4\u5b66\u751f\u7f3a\u4e4f\u5e94\u5bf9\u73b0\u5b9e\u793e\u4f1a\u590d\u6742\u4eba\u9645\u5173\u7cfb\u7684\u80fd\u529b\u3002</p>"},{"location":"sp25/marx/pre/#_39","title":"\u9ad8\u5ea6\u7ade\u4e89\u7684\u793e\u4f1a\u6c1b\u56f4","text":"<p>\u201c\u6210\u529f\u7126\u8651\u201d\u8513\u5ef6\uff0c\u5927\u5b66\u751f\u5c06\u793e\u4ea4\u89c6\u4e3a\u201c\u80fd\u529b\u7ade\u8d5b\u201d\uff0c\u800c\u975e\u60c5\u611f\u8054\u7ed3\uff0c\u52a0\u5267\u5bf9\u4eba\u9645\u4e92\u52a8\u7684\u529f\u5229\u5316\u6050\u60e7\u3002</p>"},{"location":"sp25/marx/pre/#_40","title":"\u5bb6\u5ead\u529f\u80fd\u5f31\u5316","text":"<p>\u6838\u5fc3\u5bb6\u5ead\u7ed3\u6784\u4e0b\uff0c\u4ee3\u9645\u6c9f\u901a\u65ad\u5c42\uff08\u5982\u7236\u6bcd\u5fd9\u4e8e\u5de5\u4f5c\uff09\uff0c\u5b50\u5973\u7684\u60c5\u611f\u9700\u6c42\u672a\u88ab\u5145\u5206\u6ee1\u8db3\uff0c\u8f6c\u800c\u4f9d\u8d56\u865a\u62df\u793e\u4ea4\u3002</p>"},{"location":"sp25/marx/pre/#_41","title":"\u6570\u5b57\u65f6\u4ee3\u7684\u4eba\u9645\u5f02\u5316","text":"<p>\u7b97\u6cd5\u63a8\u9001\u7684\u201c\u4fe1\u606f\u8327\u623f\u201d\u5f3a\u5316\u4e2a\u4f53\u5bf9\u76f8\u4f3c\u5708\u5c42\u7684\u4f9d\u8d56\uff0c\u964d\u4f4e\u5bf9\u591a\u5143\u5316\u793e\u7fa4\u7684\u9002\u5e94\u80fd\u529b\u3002</p>"},{"location":"sp25/marx/pre/#_42","title":"\u8d1f\u9762\u5f71\u54cd","text":""},{"location":"sp25/marx/pre/#_43","title":"\u4e2a\u4eba\u7684\u5371\u5bb3","text":""},{"location":"sp25/marx/pre/#_44","title":"\u5b66\u4e1a\u4e0e\u804c\u4e1a\u53d7\u963b","text":"<p>\u9003\u907f\u5c0f\u7ec4\u5408\u4f5c\u3001\u9762\u8bd5\u7b49\u573a\u666f\uff0c\u53ef\u80fd\u9519\u5931\u53d1\u5c55\u673a\u4f1a\u3002</p>"},{"location":"sp25/marx/pre/#_45","title":"\u5fc3\u7406\u5065\u5eb7\u6076\u5316","text":"<p>\u957f\u671f\u5b64\u72ec\u6613\u5f15\u53d1\u6291\u90c1\u3001\u7126\u8651\uff0c\u751a\u81f3\u5bfc\u81f4\u81ea\u4f24\u6216\u81ea\u6740\u503e\u5411\u3002</p>"},{"location":"sp25/marx/pre/#_46","title":"\u60c5\u611f\u80fd\u529b\u9000\u5316","text":"<p>\u7f3a\u4e4f\u4eb2\u5bc6\u5173\u7cfb\u4f53\u9a8c\uff0c\u53ef\u80fd\u5f71\u54cd\u672a\u6765\u5a5a\u604b\u4e0e\u5bb6\u5ead\u5efa\u7acb\u3002</p>"},{"location":"sp25/marx/pre/#_47","title":"\u793e\u4f1a\u7684\u6f5c\u5728\u98ce\u9669","text":""},{"location":"sp25/marx/pre/#_48","title":"\u52b3\u52a8\u529b\u5e02\u573a\u9002\u914d\u5ea6\u4e0b\u964d","text":"<p>\u6c9f\u901a\u534f\u4f5c\u80fd\u529b\u4e0d\u8db3\u7684\u5458\u5de5\u6bd4\u4f8b\u589e\u52a0\uff0c\u5f71\u54cd\u56e2\u961f\u6548\u7387\u4e0e\u521b\u65b0\u3002</p>"},{"location":"sp25/marx/pre/#_49","title":"\u793e\u4f1a\u4fe1\u4efb\u5371\u673a","text":"<pre><code>\u4eba\u9645\u758f\u79bb\u524a\u5f31\u793e\u533a\u51dd\u805a\u529b\uff0c\u589e\u52a0\u201c\u539f\u5b50\u5316\u4e2a\u4f53\u201d\u5bf9\u793e\u4f1a\u4e8b\u4ef6\u7684\u51b7\u6f20\u6001\u5ea6\u3002\n</code></pre>"},{"location":"sp25/marx/pre/#_50","title":"\u516c\u5171\u8d44\u6e90\u8d1f\u62c5","text":"<p>\u5fc3\u7406\u95ee\u9898\u9ad8\u53d1\u9700\u66f4\u591a\u533b\u7597\u6295\u5165\uff0c\u800c\u56de\u907f\u578b\u4eba\u683c\u8005\u5f80\u5f80\u5ef6\u8fdf\u6c42\u52a9\uff0c\u52a0\u5267\u95ee\u9898\u4e25\u91cd\u6027\u3002</p>"},{"location":"sp25/marx/pre/#_51","title":"\u9a6c\u514b\u601d\u4e3b\u4e49\u7406\u8bba","text":""},{"location":"sp25/marx/pre/#_52","title":"\u4e00\u3001 \u793e\u4f1a\u5b58\u5728\u51b3\u5b9a\u793e\u4f1a\u610f\u8bc6","text":"<ol> <li>\u7ecf\u6d4e\u57fa\u7840\u4e0e\u4e0a\u5c42\u5efa\u7b51\uff1a\u5f53\u4ee3\u793e\u4f1a\u9ad8\u901f\u53d1\u5c55\uff0c\u7ecf\u6d4e\u5168\u7403\u5316\u4e0e\u4fe1\u606f\u5316\u4f7f\u5f97\u7ade\u4e89\u65e5\u76ca\u6fc0\u70c8\u3002\u5927\u5b66\u751f\u4f5c\u4e3a\u5373\u5c06\u6b65\u5165\u793e\u4f1a\u7684\u7fa4\u4f53\uff0c\u9762\u4e34\u7740\u4e25\u5cfb\u7684\u5c31\u4e1a\u538b\u529b\u548c\u9ad8\u6807\u51c6\u7684\u671f\u671b\u503c\u3002\u8fd9\u79cd\u7ecf\u6d4e\u57fa\u7840\u7684\u53d8\u5316\u53cd\u6620\u5728\u4e0a\u5c42\u5efa\u7b51\u4e2d\uff0c\u8868\u73b0\u4e3a\u6559\u80b2\u4f53\u7cfb\u5bf9\u5927\u5b66\u751f\u7efc\u5408\u7d20\u8d28\u7684\u8981\u6c42\u4e0d\u65ad\u63d0\u9ad8\uff0c\u4e0d\u4ec5\u6ce8\u91cd\u5b66\u672f\u6210\u7ee9\uff0c\u8fd8\u5f3a\u8c03\u793e\u4ea4\u80fd\u529b\u3001\u5b9e\u8df5\u7ecf\u9a8c\u7b49\u591a\u65b9\u9762\u7684\u53d1\u5c55\u3002\u7136\u800c\uff0c\u8fd9\u79cd\u9ad8\u538b\u73af\u5883\u5bb9\u6613\u5f15\u53d1\u5927\u5b66\u751f\u7684\u7126\u8651\u60c5\u7eea\uff0c\u5bf9\u793e\u4ea4\u4ea7\u751f\u6050\u60e7\u611f\u3002</li> <li>\u793e\u4f1a\u5173\u7cfb\u7684\u53d8\u5316\uff1a\u968f\u7740\u4e92\u8054\u7f51\u7684\u666e\u53ca\uff0c\u4eba\u4e0e\u4eba\u4e4b\u95f4\u7684\u4ea4\u5f80\u65b9\u5f0f\u53d1\u751f\u4e86\u5de8\u5927\u53d8\u9769\u3002\u7ebf\u4e0a\u4ea4\u6d41\u7684\u4fbf\u6377\u6027\u4f7f\u5f97\u90e8\u5206\u5927\u5b66\u751f\u4e60\u60ef\u4e8e\u865a\u62df\u793e\u4ea4\uff0c\u800c\u7f3a\u4e4f\u9762\u5bf9\u9762\u4ea4\u6d41\u7684\u7ecf\u9a8c\u4e0e\u6280\u5de7\u3002\u9a6c\u514b\u601d\u4e3b\u4e49\u8ba4\u4e3a\uff0c\u4eba\u7684\u672c\u8d28\u662f\u793e\u4f1a\u5173\u7cfb\u7684\u603b\u548c\u3002\u865a\u62df\u793e\u4ea4\u7684\u76db\u884c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u524a\u5f31\u4e86\u5927\u5b66\u751f\u73b0\u5b9e\u4e2d\u7684\u793e\u4ea4\u80fd\u529b\uff0c\u5bfc\u81f4\u4ed6\u4eec\u5728\u9762\u5bf9\u771f\u5b9e\u793e\u4ea4\u573a\u666f\u65f6\u4ea7\u751f\u6050\u60e7\u5fc3\u7406\u3002</li> </ol>"},{"location":"sp25/marx/pre/#_53","title":"\u4e8c\u3001 \u77db\u76fe\u662f\u4e8b\u7269\u53d1\u5c55\u7684\u6839\u672c\u52a8\u529b","text":"<ol> <li>\u7406\u60f3\u4e0e\u73b0\u5b9e\u7684\u77db\u76fe\uff1a\u5927\u5b66\u751f\u666e\u904d\u6000\u63e3\u7740\u5bf9\u672a\u6765\u7684\u7f8e\u597d\u61a7\u61ac\uff0c\u4f46\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u79cd\u79cd\u6311\u6218\uff0c\u5982\u5b66\u4e1a\u538b\u529b\u3001\u5c31\u4e1a\u7ade\u4e89\u3001\u4eba\u9645\u5173\u7cfb\u7b49\uff0c\u5f80\u5f80\u4e0e\u4ed6\u4eec\u7684\u7406\u60f3\u72b6\u6001\u5b58\u5728\u8f83\u5927\u5dee\u8ddd\u3002\u8fd9\u79cd\u7406\u60f3\u4e0e\u73b0\u5b9e\u7684\u77db\u76fe\u5bb9\u6613\u4f7f\u5927\u5b66\u751f\u4ea7\u751f\u632b\u8d25\u611f\uff0c\u8fdb\u800c\u5bf9\u793e\u4ea4\u6d3b\u52a8\u4ea7\u751f\u62b5\u89e6\u548c\u6050\u60e7\u3002</li> <li>\u81ea\u6211\u8ba4\u77e5\u4e0e\u793e\u4f1a\u8bc4\u4ef7\u7684\u77db\u76fe\uff1a\u5f53\u4ee3\u5927\u5b66\u751f\u6b63\u5904\u4e8e\u81ea\u6211\u8ba4\u77e5\u5f62\u6210\u7684\u5173\u952e\u65f6\u671f\uff0c\u4ed6\u4eec\u6e34\u671b\u5f97\u5230\u793e\u4f1a\u7684\u8ba4\u53ef\u548c\u80af\u5b9a\u3002\u7136\u800c\uff0c\u793e\u4f1a\u8bc4\u4ef7\u4f53\u7cfb\u7684\u591a\u5143\u5316\u548c\u590d\u6742\u6027\u4f7f\u5f97\u5927\u5b66\u751f\u96be\u4ee5\u51c6\u786e\u5b9a\u4f4d\u81ea\u5df1\uff0c\u5bb9\u6613\u4ea7\u751f\u81ea\u5351\u3001\u7126\u8651\u7b49\u8d1f\u9762\u60c5\u7eea\u3002\u8fd9\u79cd\u81ea\u6211\u8ba4\u77e5\u4e0e\u793e\u4f1a\u8bc4\u4ef7\u4e4b\u95f4\u7684\u77db\u76fe\uff0c\u8fdb\u4e00\u6b65\u52a0\u5267\u4e86\u5927\u5b66\u751f\u7684\u793e\u4ea4\u6050\u60e7\u3002</li> </ol>"},{"location":"sp25/marx/pre/#_54","title":"\u4e09\u3001 \u5386\u53f2\u552f\u7269\u4e3b\u4e49\u89c6\u89d2","text":"<ol> <li>\u5bb6\u5ead\u6559\u80b2\u7684\u7f3a\u5931\uff1a\u5bb6\u5ead\u662f\u4e2a\u4eba\u793e\u4f1a\u5316\u7684\u91cd\u8981\u573a\u6240\uff0c\u5bb6\u957f\u7684\u6559\u80b2\u65b9\u5f0f\u5bf9\u5b69\u5b50\u7684\u6027\u683c\u5f62\u6210\u5177\u6709\u6df1\u8fdc\u5f71\u54cd\u3002\u5728\u5f53\u4ee3\u793e\u4f1a\u4e2d\uff0c\u90e8\u5206\u5bb6\u957f\u8fc7\u4e8e\u6ce8\u91cd\u5b69\u5b50\u7684\u5b66\u4e60\u6210\u7ee9\uff0c\u800c\u5ffd\u89c6\u4e86\u60c5\u611f\u6559\u80b2\u548c\u793e\u4ea4\u80fd\u529b\u7684\u57f9\u517b\u3002\u6b64\u5916\uff0c\u4e00\u4e9b\u5bb6\u5ead\u5b58\u5728\u4eb2\u5b50\u6c9f\u901a\u4e0d\u7545\u3001\u7236\u6bcd\u5173\u7231\u4e0d\u8db3\u7b49\u95ee\u9898\uff0c\u5bfc\u81f4\u5b69\u5b50\u7f3a\u4e4f\u5b89\u5168\u611f\uff0c\u5728\u793e\u4ea4\u4e2d\u8868\u73b0\u51fa\u9000\u7f29\u548c\u6050\u60e7\u3002</li> <li>\u793e\u4f1a\u6587\u5316\u7684\u5f71\u54cd\uff1a\u5f53\u4ee3\u793e\u4f1a\u6587\u5316\u4e2d\uff0c\u4e2a\u4f53\u4e3b\u4e49\u503e\u5411\u65e5\u76ca\u660e\u663e\uff0c\u4eba\u4eec\u66f4\u52a0\u6ce8\u91cd\u4e2a\u4eba\u9690\u79c1\u548c\u72ec\u7acb\u7a7a\u95f4\u3002\u8fd9\u79cd\u6587\u5316\u6c1b\u56f4\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u524a\u5f31\u4e86\u4eba\u4e0e\u4eba\u4e4b\u95f4\u7684\u8054\u7ed3\u611f\uff0c\u4f7f\u5f97\u5927\u5b66\u751f\u5728\u793e\u4ea4\u4e2d\u66f4\u52a0\u8c28\u614e\u548c\u4fdd\u5b88\u3002\u540c\u65f6\uff0c\u793e\u4ea4\u5a92\u4f53\u7684\u666e\u53ca\u4e5f\u52a0\u5267\u4e86\u793e\u4ea4\u6bd4\u8f83\u73b0\u8c61\uff0c\u4f7f\u5f97\u5927\u5b66\u751f\u5bb9\u6613\u4ea7\u751f\u81ea\u5351\u548c\u7126\u8651\u60c5\u7eea\uff0c\u8fdb\u800c\u56de\u907f\u793e\u4ea4\u6d3b\u52a8\u3002</li> </ol>"},{"location":"sp25/marx/pre/#_55","title":"\u56db\u3001 \u8fa9\u8bc1\u552f\u7269\u4e3b\u4e49\u89c6\u89d2","text":"<ol> <li>\u4e3b\u89c2\u56e0\u7d20\u4e0e\u5ba2\u89c2\u73af\u5883\u7684\u76f8\u4e92\u4f5c\u7528\uff1a\u5927\u5b66\u751f\u7684\u793e\u4ea4\u6050\u60e7\u662f\u4e3b\u89c2\u5fc3\u7406\u56e0\u7d20\u4e0e\u5ba2\u89c2\u793e\u4f1a\u73af\u5883\u5171\u540c\u4f5c\u7528\u7684\u7ed3\u679c\u3002\u4e00\u65b9\u9762\uff0c\u5927\u5b66\u751f\u81ea\u8eab\u53ef\u80fd\u5b58\u5728\u6027\u683c\u5185\u5411\u3001\u81ea\u5351\u3001\u7126\u8651\u7b49\u5fc3\u7406\u7279\u8d28\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u793e\u4f1a\u73af\u5883\u4e2d\u7684\u9ad8\u538b\u7ade\u4e89\u3001\u590d\u6742\u4eba\u9645\u5173\u7cfb\u7b49\u56e0\u7d20\u4e5f\u5bb9\u6613\u8bf1\u53d1\u793e\u4ea4\u6050\u60e7\u3002</li> <li>\u77db\u76fe\u7684\u666e\u904d\u6027\u4e0e\u7279\u6b8a\u6027\uff1a\u793e\u4ea4\u6050\u60e7\u5728\u5f53\u4ee3\u5927\u5b66\u751f\u4e2d\u5177\u6709\u666e\u904d\u6027\uff0c\u4f46\u6bcf\u4e2a\u5927\u5b66\u751f\u7684\u5177\u4f53\u60c5\u51b5\u53c8\u5177\u6709\u7279\u6b8a\u6027\u3002\u56e0\u6b64\uff0c\u5728\u5206\u6790\u548c\u89e3\u51b3\u5927\u5b66\u751f\u793e\u4ea4\u6050\u60e7\u95ee\u9898\u65f6\uff0c\u9700\u8981\u575a\u6301\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\u7684\u539f\u5219\uff0c\u65e2\u8981\u770b\u5230\u666e\u904d\u6027\u56e0\u7d20\uff0c\u4e5f\u8981\u5173\u6ce8\u4e2a\u4f53\u5dee\u5f02\uff0c\u5236\u5b9a\u6709\u9488\u5bf9\u6027\u7684\u5e72\u9884\u63aa\u65bd\u3002</li> </ol>"},{"location":"sp25/marx/pre/#_56","title":"\u7ed3\u8bba\u542f\u793a","text":""},{"location":"sp25/marx/pre/#_57","title":"\u4e2a\u4f53\u5c42\u9762\uff1a\u5fc3\u7406\u8d4b\u80fd\u4e0e\u6280\u80fd\u8bad\u7ec3","text":""},{"location":"sp25/marx/pre/#cbt","title":"\u8ba4\u77e5\u884c\u4e3a\u7597\u6cd5\uff08CBT\uff09","text":"<p>\u6311\u6218\u8d1f\u9762\u601d\u7ef4\uff1a\u901a\u8fc7\u8bb0\u5f55\u201c\u793e\u4ea4\u707e\u96be\u5316\u60f3\u8c61\u201d\uff08\u5982\u201c\u522b\u4eba\u4f1a\u5632\u7b11\u6211\u201d\uff09\uff0c\u7528\u73b0\u5b9e\u8bc1\u636e\u53cd\u9a73\u975e\u7406\u6027\u4fe1\u5ff5\u3002</p> <p>\u66b4\u9732\u7597\u6cd5\uff1a\u5206\u9636\u6bb5\u63a5\u89e6\u793e\u4ea4\u573a\u666f\uff08\u5982\u5148\u4e0e\u719f\u4eba\u804a\u5929\uff0c\u518d\u53c2\u4e0e\u5c0f\u7ec4\u8ba8\u8bba\uff09\uff0c\u9010\u6b65\u8131\u654f\u5bf9\u793e\u4ea4\u7684\u6050\u60e7\u3002</p>"},{"location":"sp25/marx/pre/#_58","title":"\u793e\u4ea4\u6280\u80fd\u63d0\u5347","text":"<p>\u89d2\u8272\u626e\u6f14\u7ec3\u4e60\uff1a\u6a21\u62df\u9762\u8bd5\u3001\u805a\u4f1a\u7b49\u573a\u666f\uff0c\u5b66\u4e60\u773c\u795e\u4ea4\u6d41\u3001\u503e\u542c\u4e0e\u8868\u8fbe\u6280\u5de7\u3002</p> <p>\u60c5\u7eea\u65e5\u8bb0\uff1a\u8bb0\u5f55\u793e\u4ea4\u540e\u7684\u60c5\u7eea\u53d8\u5316\uff0c\u8bc6\u522b\u89e6\u53d1\u7126\u8651\u7684\u5177\u4f53\u7ec6\u8282\uff0c\u5217\u51fa\u5bfc\u81f4\u7126\u8651\u7684\u539f\u56e0\u3002</p>"},{"location":"sp25/marx/pre/#_59","title":"\u81ea\u6211\u63a5\u7eb3\u4e0e\u6b63\u5ff5\u8bad\u7ec3","text":"<p>\u901a\u8fc7\u51a5\u60f3\u3001\u547c\u5438\u7ec3\u4e60\u964d\u4f4e\u751f\u7406\u7126\u8651\uff0c\u57f9\u517b\u201c\u5141\u8bb8\u81ea\u5df1\u4e0d\u5b8c\u7f8e\u201d\u7684\u5fc3\u6001\uff0c\u51cf\u5c11\u81ea\u6211\u6279\u5224\u3002</p>"},{"location":"sp25/marx/pre/#_60","title":"\u5bb6\u5ead\u5c42\u9762\uff1a\u8c03\u6574\u517b\u80b2\u6a21\u5f0f","text":""},{"location":"sp25/marx/pre/#_61","title":"\u6539\u5584\u4eb2\u5b50\u6c9f\u901a","text":"<p>\u51cf\u5c11\u5bf9\u6210\u7ee9\u7684\u5355\u5411\u5173\u6ce8\uff0c\u589e\u52a0\u60c5\u611f\u4ea4\u6d41\u3002</p>"},{"location":"sp25/marx/pre/#_62","title":"\u5b66\u6821\u5c42\u9762\uff1a\u6559\u80b2\u6a21\u5f0f\u6539\u9769","text":""},{"location":"sp25/marx/pre/#_63","title":"\u5fc3\u7406\u5de5\u4f5c\u574a\uff1a\u7ec4\u7ec7\u201c\u964c\u751f\u4eba\u5348\u9910\u4f1a\u201d\u201c\u5373\u5174\u620f\u5267\u8bfe\u201d\u7b49\u4f4e\u538b\u529b\u793e\u4ea4\u6d3b\u52a8\uff0c\u964d\u4f4e\u53c2\u4e0e\u95e8\u69db","text":""},{"location":"sp25/marx/pre/#_64","title":"\u57f9\u8bad\u6559\u5e08\u6210\u4e3a\u201c\u5fc3\u7406\u5065\u5eb7\u5b88\u95e8\u4eba\u201d\uff0c\u4f8b\u5982\u901a\u8fc7\u89c2\u5bdf\u8bfe\u5802\u53d1\u8a00\u9891\u7387\u8bc6\u522b\u6f5c\u5728\u793e\u6050\u5b66\u751f\uff0c\u4e3b\u52a8\u63d0\u4f9b\u652f\u6301\u3002","text":""},{"location":"sp25/marx/pre/#_65","title":"\u670b\u8f88\u4e92\u52a9\u673a\u5236","text":""},{"location":"sp25/marx/pre/#_66","title":"\u5efa\u7acb\u201c\u5b66\u957f\u5bfc\u5e08\u5236\u201d\uff0c\u7531\u9ad8\u5e74\u7ea7\u5b66\u751f\u5206\u4eab\u793e\u4ea4\u7ecf\u9a8c\uff0c\u7ec4\u7ec7\u65b0\u751f\u7834\u51b0\u6d3b\u52a8\uff08\u5982\u6237\u5916\u5f92\u6b65\u3001\u5267\u672c\u6740\uff09\u3002","text":""},{"location":"sp25/marx/pre/#_67","title":"\u793e\u4f1a\u5c42\u9762\uff1a\u73af\u5883\u652f\u6301\u4e0e\u4ef7\u503c\u5f15\u5bfc","text":""},{"location":"sp25/marx/pre/#20001","title":"\u653f\u5e9c\u8d44\u52a9\u9ad8\u6821\u5fc3\u7406\u54a8\u8be2\u4e2d\u5fc3\u5efa\u8bbe\uff0c\u8981\u6c42\u6bcf2000\u540d\u5b66\u751f\u914d\u59071\u540d\u4e13\u804c\u5fc3\u7406\u6559\u5e08\u3002","text":""},{"location":"sp25/marx/pre/#_68","title":"\u5c06\u201c\u793e\u4ea4\u7126\u8651\u7b5b\u67e5\u201d\u7eb3\u5165\u65b0\u751f\u5165\u5b66\u4f53\u68c0\uff0c\u65e9\u671f\u53d1\u73b0\u9ad8\u98ce\u9669\u7fa4\u4f53\u3002","text":""},{"location":"sp25/marx/pre/#_69","title":"\u5a92\u4f53\u6587\u5316\u91cd\u6784","text":""},{"location":"sp25/marx/pre/#_70","title":"\u79d1\u6280\u5de5\u5177\u8f85\u52a9","text":""},{"location":"sp25/marx/pre/#ai","title":"AI\u6a21\u62df\u793e\u4ea4\u8bad\u7ec3","text":""},{"location":"sp25/marx/pre/#_71","title":"\u957f\u671f\u8ddf\u8e2a\u4e0e\u8bc4\u4f30","text":""},{"location":"sp25/marx/pre/#_72","title":"\u9ad8\u6821\u5efa\u7acb\u201c\u793e\u4ea4\u80fd\u529b\u6210\u957f\u6863\u6848\u201d\uff0c\u8bb0\u5f55\u5b66\u751f\u53c2\u4e0e\u793e\u4ea4\u6d3b\u52a8\u7684\u9891\u7387\u3001\u7126\u8651\u6307\u6570\u53d8\u5316\uff0c\u52a8\u6001\u8c03\u6574\u5e72\u9884\u65b9\u6848\u3002","text":""},{"location":"sp25/marx/pre/#_73","title":"\u6784\u5efa\u201c\u5305\u5bb9\u6027\u793e\u4ea4\u751f\u6001\u201d","text":"<p>\u89e3\u51b3\u793e\u6050\u95ee\u9898\u5e76\u975e\u5f3a\u884c\u6539\u9020\u5185\u5411\u8005\uff0c\u800c\u662f\u5efa\u7acb\u5141\u8bb8\u201c\u5dee\u5f02\u5316\u793e\u4ea4\u9700\u6c42\u201d\u5171\u5b58\u7684\u73af\u5883\uff1a</p> <ul> <li> <p>\u5c0a\u91cd\u9009\u62e9\uff1a\u63a5\u7eb3\u201c\u5c11\u91cf\u9ad8\u8d28\u91cf\u793e\u4ea4\u201d\u7684\u5408\u7406\u6027\uff0c\u907f\u514d\u5c06\u201c\u70ed\u8877\u793e\u4ea4\u201d\u4f5c\u4e3a\u552f\u4e00\u5065\u5eb7\u6807\u51c6\u3002</p> </li> <li> <p>\u591a\u5143\u8def\u5f84\uff1a\u63d0\u4f9b\u7ebf\u4e0a\u7ebf\u4e0b\u6df7\u5408\u793e\u4ea4\u6a21\u5f0f\uff0c\u5982\u5141\u8bb8\u8fdc\u7a0b\u53c2\u4e0e\u5c0f\u7ec4\u8ba8\u8bba\u7684\u201c\u534a\u865a\u62df\u793e\u56e2\u201d\u3002</p> </li> <li> <p>\u7ec8\u8eab\u652f\u6301\uff1a\u4ece\u6821\u56ed\u5ef6\u4f38\u5230\u804c\u573a\uff08\u5982\u4f01\u4e1a\u65b0\u4eba\u5fc3\u7406\u8f85\u5bfc\uff09\uff0c\u5f62\u6210\u6301\u7eed\u6027\u7684\u793e\u4f1a\u652f\u6301\u94fe\u6761\u3002</p> </li> </ul> <p>\u9010\u6b65\u6d88\u89e3\u793e\u4ea4\u6050\u60e7\u7684\u6076\u6027\u5faa\u73af\uff0c\u5e2e\u52a9\u5927\u5b66\u751f\u5728\u81ea\u6211\u63a5\u7eb3\u4e0e\u793e\u4f1a\u9002\u5e94\u95f4\u627e\u5230\u5e73\u8861\u70b9\u3002</p>"},{"location":"sp25/oop/","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1  2.5 \u5b66\u5206","text":""},{"location":"sp25/oop/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p><sub>~\u8bb8\u5a01\u5a01</sub>~\u7fc1\u607a</p>"},{"location":"sp25/oop/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"sp25/oop/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u5e73\u65f6\u6210\u7ee950%\uff1a7\u6b21\u4f5c\u4e1a  </li> <li>\u671f\u672b\u8003\u8bd550%\uff1a </li> <li>\u9009\u62e9\u9898\uff1a10*2'  </li> <li>\u7a0b\u5e8f\u8f93\u51fa\u9898\uff1a30'  </li> <li>\u7a0b\u5e8f\u586b\u7a7a\u9898\uff1a30'  </li> <li>\u7f16\u7a0b/\u8bbe\u8ba1\u9898\uff1a20'  </li> </ul>"},{"location":"sp25/oop/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5230\u8bfe\u4eba\u6570\u8fc7\u5c11\u70b9\u8fc7\u4e00\u6b21\u540d\uff0c\u5bf9\u540d\u5355\u4e00\u4e2a\u4e2a\u53eb\u540d\u5b57\uff0c\u53ef\u4ee5\u4e0b\u8bfe\u8865\u7b7e\uff0c\u611f\u89c9\u5bf9\u603b\u8bc4\u6ca1\u5f71\u54cd 7\u6b21\u4f5c\u4e1a\u6309\u7167\u5b66\u5728\u6d59\u5927\u8bbe\u7f6e\u7684\u622a\u6b62\u65f6\u95f4\u63d0\u4ea4\uff0c\u9700\u8981\u6ce8\u610f\u8bfe\u4e0a\u53ef\u80fd\u4f1a\u63d0\u5230\u7684\u7279\u6b8a\u8981\u6c42\uff08\u7ffb\u770b\u667a\u4e91\uff09 \u4ee5\u4e0b\u5217\u51fa\u4e00\u4e9b\u672c\u4eba\u8e29\u8fc7\u7684\u5751\u252d\u252e\ufe4f\u252d\u252e\uff1a Student2 -1\uff1a Each student can take an arbitrary number of courses. Each record consists of the course id/name and the score the student got.  </p> <p>Your course number is limited to 9(\"Chinese\", \"Math\" , \"English\", \"Physics\", \"Chemistry\", \"Biology\", \"History\", \"Politics\" , \"Geography\"). Try to use map to store student course-score pairs.    <p>eg input file: studentA ads 93 oop 91 fds 79  </p> <p>studentB cg 87 bs 92 os 88 Fraction -3: \u521b\u5efa 4/-8 \u8f93\u51fa\u6d41\u672a\u7ea6\u5206 \u7b26\u53f7\u4e0d\u5728\u6700\u524d \u5927\u4f5c\u4e1a\u5728g++ -std=c++17 -Wall -O0 -march=native -o main xxx.cpp\u6307\u4ee4\u7f16\u8bd1\u6d4b\u8bd5\u3002 \u4e3b\u8981\u9488\u5bf9\u5927\u91cf\u5c0f\u5185\u5b58\u52a8\u6001\u5206\u914d\u6d4b\u8bd5\uff0c\u53d6100\u6b21\u8fd0\u884c\u65f6\u95f4\u7684\u5747\u503c\u6765\u6392\u5e8f\u3002 \u5bf9\u4e8e\u56e0\u4e3a\u63d0\u524d\u7533\u8bf7\u8f83\u5927\u5185\u5b58\u6216\u4f7f\u7528\u8f83\u5927\u5757\u5bfc\u81f4\u7684\u901f\u5ea6\u4e0b\u964d\uff0c\u5df2\u5728\u8bc4\u6d4b\u4e2d\u76f8\u5e94\u8c03\u6574\u3002 \u6700\u7ec8\u6309\u7167\u8fd0\u884c\u65f6\u95f4\u6392\u5e8f\uff0c\u5e76\u8f85\u4ee5\u62a5\u544a\u548c\u4ee3\u7801\u8d28\u91cf\u8bc4\u4f30\uff0c\u5728[48, 60]\u533a\u95f4\u5185\u5206\u914d\u6210\u7ee9\u3002 xww\u73ed\u7ea7\u7684\u5e73\u65f6\u4efb\u52a1\u662f\u6700\u5c11\u7684\uff0c\u6240\u4ee5\u4ecd\u7136\u5efa\u8bae\u9009\u62e9\uff0c\u5e76\u542cwk/cx\u7684\u667a\u4e91 \u6ce8\u610f\u8003\u8bd5\u8303\u56f4\u662f\u5404\u4e2a\u8001\u5e08\u8bb2\u6388\u5185\u5bb9\u7684\u5e76\u96c6\uff08\u6ce8\u610f\u67d0\u4e9b\u8001\u5e08\u53ef\u80fd\u4e0d\u4f1a\u8bb2\u7684<code>namespace</code>,<code>cast</code>\uff09 \u671f\u672b\u8003\u8bd5\u8bbe\u8ba1\u9898\u4e3a\u5728pta\u4e3b\u89c2\u9898\u6587\u672c\u6846\u91cc\u5199markdown\uff0c\u4e0d\u7f16\u8bd1\uff0c\u4e0d\u6d4b\u8bd5\uff0c\u6bd4\u8f83\u7b80\u5355\uff0c\u6ce8\u610f\u4e0d\u8981\u6f0f\u6389<code>const</code>\uff0c<code>override</code>\u7b49\u5173\u952e\u5b57 \u671f\u672b\u8003\u8bd5\u770b\u4f3c\u7b80\u5355\u4f46\u5f97\u9ad8\u5206\u96be\u5ea6\u4e0d\u5c0f\uff0c\u672c\u4eba\u4e00\u5ea6\u8ba4\u4e3a\u6279\u6539\u6709\u95ee\u9898\u545c\u545c\uff0c\u8003\u5bdf\u6bd4\u8f83\u7ec6\u4e14\u5751\u5f88\u591a\uff0c\u7a0b\u5e8f\u586b\u7a7a\u6709<code>const</code>\u5efa\u8bae\u586b\u4e0a  </p>"},{"location":"sp25/oop/note/","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u7fc1\u607a\u73ed\u7684\u7b14\u8bb0\uff0c\u8865\u5145\u4e86\u9648\u7fd4\u73ed\u8bfe\u7a0b\u7684\u90e8\u5206\u5185\u5bb9</p>"},{"location":"sp25/oop/note/#using-objects-week-1chenxiang","title":"Using Objects Week 1(ChenXiang)","text":""},{"location":"sp25/oop/note/#the-string-class","title":"The string class","text":"<p><pre><code>#include&lt;string&gt;\nstring str;\nstring str = \"Hello\";\ncin &gt;&gt; str;\ncout &lt;&lt; str;\n</code></pre> <pre><code>char charr1[20];\nchar charr2[20] = \"jaguar\";\n\nstring str1; //fixed value('\\0') in str1(different from C)\nstring str2 = \"panther\";\n\ncharr1 = charr2; //illegal(in C,we have to use strcpy)\nstr1 = str2; //legal\n</code></pre> <pre><code>string str3;\nstr3 = str1 + str2;\nstr1 += str2;\nstr1 += \"a string literal\";\n</code></pre> constructors(ctors) <pre><code>string(const char *cp,int len);\nstring(const string&amp; s2,int pos);\nstring(const string&amp; s2,int pos,int len);\n\nsubstr(int pos,int len);\n\nassign(...);\ninsert(const string&amp;,int len);\ninsert(int pos,const string&amp; s);\nerase(...);\nappend(...);\nreplace(...);\nreplace(int pos,int len,const string&amp; s);\n</code></pre></p>"},{"location":"sp25/oop/note/#file-io","title":"File I/O","text":"<pre><code>#include &lt;ifstream&gt; //read from file\n#include &lt;ofstream&gt; //write to file\n\nofstream file1(\"C:\\\\test.txt\");\nfile1 &lt;&lt; \"Hello World\" &lt;&lt; std::endl;\nifstream file2(\"C:\\\\test.txt\");\nstd::string str;\nfile2 &gt;&gt; str;\n</code></pre>"},{"location":"sp25/oop/note/#a-quick-tour-of-c-week-2chenxiang","title":"A Quick Tour of C++ Week 2(ChenXiang)","text":""},{"location":"sp25/oop/note/#stl-week-3chenxiang","title":"STL Week 3(ChenXiang)","text":"<p>Standard Template Library [Definition]Part of the ISO Standard C++ Library,Data Structure and Algorithms  </p> <ul> <li>Containers:class templates,data structures  </li> <li>Algorithms  </li> <li>Iterators:uniform access of manners  </li> </ul>"},{"location":"sp25/oop/note/#containers","title":"Containers","text":"<ul> <li>Sequential:array(static),vector(dynamic),deque(double-ended queue),(forward_)list  </li> <li>Associative:set(key),map(key-value),multiset,multimap</li> <li>Unordered associative  </li> <li>Adaptors:stack,(priority_)queue  </li> </ul>"},{"location":"sp25/oop/note/#vector","title":"vector","text":"<ul> <li>Constructor,destructor  </li> <li>Element access:at,operator[],front,back,data,...  </li> <li>Iterators:begin,end,cbegin,cend,...  </li> <li>Capacity:empty,size,reserve,capacity,...  </li> <li>Modifiers:clear,insert,erase,push_back,...  </li> </ul> <pre><code>vector&lt;int&gt; v;\nv[100] = 1; //Whoops!\n//use push_back() or resize()\n</code></pre>"},{"location":"sp25/oop/note/#list","title":"list","text":"<p>(doubly-linked) <code>push_back</code>,<code>list&lt;string&gt;::iterator p;</code></p>"},{"location":"sp25/oop/note/#map","title":"map","text":"<p><code>map&lt;string,float&gt; price;</code> multi-map:one key corresponds to multiple values</p>"},{"location":"sp25/oop/note/#stack","title":"stack","text":"<p>adaptor:\u8f6c\u6362\u5668  </p>"},{"location":"sp25/oop/note/#algorithms","title":"Algorithms","text":"<ul> <li>[first,last)</li> <li>for_each,find,count,...  </li> <li>copy,fill,transform,replace,rotate,...  </li> <li>sort,partial_sort,nth_element,...</li> <li>set_difference,set_union,...  </li> <li>accumulate,partial_sum,...  </li> </ul>"},{"location":"sp25/oop/note/#iterators","title":"Iterators","text":"<p>STL::iterator xxx   <ul> <li>input iterator  </li> <li>output iterator  </li> <li>forward iterator:++p,p++,*p,==,!=,=(forward list,unordered_map,unordered_set)  </li> <li>bidirectional iterator:...,--p,p--(list,set,map)  </li> <li>random access iterator:p+=i,p-=i,p+i,p-1,p[i],&lt;,&gt;,&lt;=,&gt;=,p2-p1(vector,deque)  </li> <li>\u4e0d\u652f\u6301\u8fed\u4ee3\u5668\uff1astack,queue  </li> </ul> <p>begin(),end() end()\u5e38\u4e0d\u80fd\u8fbe\u5230\uff0c\u7528!=stl.end()\u4f5c\u4e3a\u7ed3\u675f\u6761\u4ef6 <pre><code>list&lt;int&gt; L;\nlist&lt;int&gt;::iterator li;\nli = L.begin();\n++li;\n*li = 10;\nL.erase(li);\n++li; //ERROR\n//\u53ef\u4ee5\u4f7f\u7528li = L.erase(li)\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684iterator\n</code></pre></p>"},{"location":"sp25/oop/note/#typedefs","title":"Typedefs","text":"<p><code>auto</code>:\u7f16\u8bd1\u5668\u63a8\u65ad <code>using</code> <code>typedef map&lt;Name,list&lt;PhoneNum&gt;&gt; PB;</code> </p>"},{"location":"sp25/oop/note/#defining-class-week-3","title":"Defining Class Week 3","text":"<p><pre><code>void print(Point *p)\nvoid move(Point *p,int dx,int dy)\n</code></pre> Q1:All the functions take a pointer to Point as the first parameter,why?If we take it as a global var,is it OK? ANS:No,because we need to tell the function which struct to deal with Solution:put the functions into the struct -&gt; member functions class <code>::</code>\u6240\u6709\u683cresolver <pre><code>void S::f() //function f in class S\n{\n    ::f(); //global function f,instead of recursively call\n    ::a++; //global a\n    a--;   //local a\n}\n</code></pre> How does the compiler kknow its members when executing member functions? <code>this</code> is a pointer points to the object  </p>"},{"location":"sp25/oop/note/#object","title":"Object","text":"<p>Object = Attributes + Service = Data(private) + Operations(Public) UML:name,attribute,service(operations) class\u2248struct(class\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\u4e3aprivate\u800cstruct\u4e3apublic) \u4efb\u4f55class\u90fd\u9700\u8981\u5206\u5728.h\u4e0e.cpp\u4e24\u4e2a\u6587\u4ef6\u4e2d\uff0c.h\u63d0\u4f9b\u58f0\u660e\u4f9b\u4ed6\u4eba\u4f7f\u7528\uff0c.cpp\u63d0\u4f9bprivate\u5b9e\u4f53 One class definition per header.h Only declarations are allowed in .h  </p> <ul> <li>extern var  </li> <li>function prototypes  </li> <li>class/struct definition </li> </ul>"},{"location":"sp25/oop/note/#include","title":"include","text":"<ul> <li>#include \"xx.h\"\uff1a\u4f18\u5148\u641c\u7d22.cpp\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u518d\u5230\u6307\u5b9a\u4f4d\u7f6e\u641c\u7d22</li> <li>#include\uff1a\u6307\u5b9a\u4f4d\u7f6e\u641c\u7d22   \u81ea\u5e26\u5934\u6587\u4ef6   \u73af\u5883\u53d8\u91cf   -I <li>#include\uff1a\u4e0e\u76f8\u540c"},{"location":"sp25/oop/note/#constructor","title":"Constructor","text":"<p>What will happen if we forget to initialize? Without initialization,we won't get fixed value. <pre><code>struct Point\n{\n    int x;\n    int y;\n    Point(int x,int y) // \u6784\u9020\u51fd\u6570\n    {\n        this-&gt;x = x;\n        this-&gt;y = y;\n    }\n};\n\nint main()\n{\n    Point p(1,2);\n    Point p2{1,2};\n}\n</code></pre> \u6784\u9020\u51fd\u6570\u540d\u5b57\u4e0e\u7ed3\u6784\u540d\u76f8\u540c\uff0c\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b \u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff1adefault \u6210\u5458\u53d8\u91cf\u7684\u8d4b\u503c  </p> <ul> <li>\u5728\u7ed3\u6784\u4f53\u4e2d\u8d4b\u503c  </li> <li>\u5728\u6784\u9020\u51fd\u6570\u5934\u4e2d\u6dfb\u52a0\u521d\u59cb\u5316\u5217\u8868<code>Point(int xx,int yy):x(xx),y(yy)</code> \u6210\u5458\u53d8\u91cf\u540d(\u521d\u59cb\u5316\u503c)</li> <li>\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8d4b\u503c  </li> <li>\u4ee5\u4e0a\u4e09\u79cd\u6309\u5e8f\u8fdb\u884c</li> </ul> <pre><code>struct Y\n{\n    float f;\n    int i;\n    Y(int a);\n    //\u5982\u679c\u5b9a\u4e49\u4e86\u5176\u4ed6\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n    //\u9664\u975e\u663e\u793a\u8bf4\u660eY() = default;\n}\nY y1[] = {Y(1),Y(2),Y(3)}; //OK\nY y2[2] = {Y(1)}; //ERROR\nY y3[7]; //ERROR\nY y4; //ERROR\n</code></pre>"},{"location":"sp25/oop/note/#destructor","title":"Destructor","text":"<p><pre><code>struct Y{\n    ~Y();//cannot have any parameter\n};\n~Y(){\n    //auto\n    ...\n}\n</code></pre> What happens with <code>goto</code> and <code>switch</code>? Not allowed.  </p>"},{"location":"sp25/oop/note/#inside-object-week-4","title":"Inside Object Week 4","text":"<p>what to do and how to do</p>"},{"location":"sp25/oop/note/#access-control","title":"Access Control","text":"<ul> <li>public  </li> <li>friend:\u6388\u6743\uff08\u6240\u6709\uff09\u79c1\u6709\u6210\u5458\uff0c\u88ab\u4ee5\u4e0b\u63a5\u6536   \u81ea\u7531\u51fd\u6570   \u7c7b\u4e2d\u7684\u51fd\u6570   \u6574\u4e2a\u7c7b  </li> <li>private:\u79c1\u6709\u7684\u8fb9\u754c\u662f\u7c7b\uff0c\u4e0d\u662f\u5bf9\u8c61   \u540c\u4e00\u7c7b\u7684\u4e0d\u540c\u5bf9\u8c61\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95eeprivate\u6210\u5458   e.g.\u62f7\u8d1d\u6784\u9020\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u79c1\u6709\u53d8\u91cf\u4f20\u53c2  </li> <li>protected:\u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee  </li> </ul>"},{"location":"sp25/oop/note/#objects-in-different-places","title":"Objects in different places","text":"<p>  \u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\u90fd\u53ea\u5c5e\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b  </p>"},{"location":"sp25/oop/note/#static","title":"Static","text":"<p>Initialization Dependency:not guaranteed strong recommend:no global vars!  </p> <ul> <li>static storage  </li> <li>restricted access  </li> </ul> <p>use static only inside functions and classes</p> <ul> <li>static free function:deprecated  </li> <li>static global vars:deprecated  </li> <li>static local vars:persistent storage  </li> <li>static member vars:shared  </li> <li>static member functions:shared  </li> </ul> <p>static object:initialized when first called,destruct as a global var static member:\u4e0d\u5728class\u7684\u5b58\u50a8\u7a7a\u95f4\u4e2d\uff0c\u88ab\u4e0d\u540c\u5bf9\u8c61\u5171\u4eab\uff08\u88ab\u89c6\u4e3a\u540c\u4e00\u4e2a\uff09 <pre><code>class M{\n    static int m_h; //declaration,not belonging to the class\n    int m_w; //declaration\n};\n\nint M::m_h;\nstatic int M::m_h;//ERROR\n</code></pre> static function:no <code>this</code>,\u4e0d\u80fd\u8bbf\u95ee\u4efb\u4f55\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u6216\u51fd\u6570 \u4e0d\u9700\u8981\u5236\u9020\u5bf9\u8c61\u5373\u53ef\u8c03\u7528(::)\uff0c\u548c\u4efb\u4f55\u5bf9\u8c61\u90fd\u65e0\u5173 \u5e94\u7528\uff1a\u63d0\u4f9b\u5236\u9020\u7c7b\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u4f5c\u4e3a\u5236\u9020\u51fd\u6570  <p>local vars\u7684\u7a7a\u95f4\u5206\u914d\u53d1\u751f\u5728\u8fdb\u5165\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u7b97\u597d\u6240\u6709\u672c\u5730\u53d8\u91cf\u9700\u8981\u7684\u6700\u5927\u7a7a\u95f4\u4e0e\u5730\u5740</p> <p>static local variable:\u5728\u7a0b\u5e8f\u7ed3\u675f\u524d\u6790\u6784\uff0c\u5728\u51fd\u6570\u5185\u8bbf\u95ee static member variable\u7684\u6784\u9020\u4e0e\u6790\u6784\u4e0eglobal variable\u76f8\u540c\uff0c\u5728\u7c7b\u5185\u8bbf\u95ee  </p> <p>!!! danger \"static\u53d8\u91cf/\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u5916(.cpp)\u4e2d\u58f0\u660e\uff01  </p>"},{"location":"sp25/oop/note/#constant-object","title":"Constant object","text":"<p>How can the object be protected from change? Solution:declare member functions const <pre><code>int Data::set_date(int d){\n    day = d;\n}\nint Data::get_date() const{\n    day++;      //ERROR modify data member\n    set_day(12);//ERROR call non-const member function\n    return day;//OK\n}\n</code></pre> const\u4fee\u9970this \u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u53ef\u80fd\u662fconst\uff0c\u56e0\u4e3a\u6ca1\u6709this\u6307\u9488\uff0c\u53ea\u80fd\u5728\u521d\u59cb\u5316\u5217\u8868\u521d\u59cb\u5316(const\u662f\u65e0\u7528\u7684\uff0cconst\u786e\u4fdd\u7c7b\u5bf9\u8c61\u4e0d\u88ab\u4fee\u6539\uff0c\u800cstatic member\u4e0d\u5c5e\u4e8e\u7c7b) const and non-const member function can coexist(overload)  </p>"},{"location":"sp25/oop/note/#memory-model-week-4chenxiang","title":"Memory model Week 4(ChenXiang)","text":""},{"location":"sp25/oop/note/#variables","title":"variables","text":"<pre><code>int i;//global vars\nstring str;\nstatic int j;//static global vars\nf()\n{\n    int k;//local vars\n    static l;//static local vars\n    int *p = malloc(sizeof(int));//allocated local vars\n}\n</code></pre> <ul> <li>Global data:global vars,static global vars,static local vars(i,j,l,str)  </li> <li>Stack:local vars(k)  </li> <li>Heap:dynamically allocated vars(*p)  </li> </ul> <p>global vars:vars defined outside any functions and classes and can be shared between .cpp files(extern)  </p> <p>static vars:inhibit to be accessed outside .cpp</p> <p>static local vars:keep its state btw functions</p> <p>static  </p> <ul> <li>restricted access scope  </li> <li>persistent storage  </li> </ul>"},{"location":"sp25/oop/note/#reference","title":"reference","text":"<p><code>ps = &amp;s</code>,<code>(*ps).length()</code>,<code>ps-&gt;length()</code> \u7ed1\u5b9a\u522b\u540d(alias)(\u4e00\u6b21\u6027\u4e0d\u53ef\u8ba1\u7b97\u7684\u6307\u9488)\uff0c\u901a\u8fc7\u5f15\u7528\u76f4\u63a5\u64cd\u4f5c\u539f\u59cb\u53d8\u91cf\uff0c\u5171\u4eab\u5b58\u50a8\uff0c\u4e0d\u662f\u6307\u9488\uff0c\u4e0d\u9700\u8981\u89e3\u5f15\u7528 <pre><code>char p;\nchar* s = &amp;p;//a pointer to a character,s points to the addr of p\nchar* s = p;//ERROR\n*s = x;//\u628ax\u7684\u503c\u8d4b\u503c\u7ed9s\u6307\u5411\u7684\u53d8\u91cf\uff0c*\u662f\u4e00\u4e2a\u8fd0\u7b97\u7b26\nchar&amp; r = q;//a reference\n\nint  x = 47;\nint&amp; y = x;\nint&amp; y = z;//ERROR,reference is permanent and cannot be changed\nint&amp; y;//ERROR,reference cannot be null\ncout &lt;&lt; \"y = \" &lt;&lt; y &lt;&lt; endl;//y = 47\ny = 18;\ncout &lt;&lt; \"x = \" &lt;&lt; x &lt;&lt; endl;//x = 18\ny = z;//copy the value of z to y(a.k.a x)\n</code></pre> <pre><code>void f(int&amp;);\nf(i * 3)//not allowed\n//i * 3\u662f\u53f3\u503c\uff0c\u4e0d\u80fd\u51fa\u73b0\u5728\u8d4b\u503c\u53f7\u5de6\u8fb9\uff0c\u4e0d\u80fd\u88abreference\u63a5\u6536\n//reference\u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u5de6\u503c\n//\u53f3\u503c\uff1a\u53ea\u80fd\u653e\u5728\u8d4b\u503c\u53f7\u53f3\u8fb9\n//\u5de6\u503c\uff1a\u5373\u53ef\u4ee5\u653e\u5230\u8d4b\u503c\u53f7\u5de6\u8fb9\u53c8\u53ef\u4ee5\u653e\u5728\u8d4b\u503c\u53f7\u53f3\u8fb9*,[],.,-&gt;\nint&amp;* p;//illegal,reference\u6ca1\u6709\u5b9e\u4f53\uff0c\u65e0\u6cd5\u88ab\u6307\u5411\nvoid f(int*&amp; p);//legal,the reference of pointer\n//no reference to reference\n//no array of reference\n</code></pre> <pre><code>void f(int&amp; x){\n    x++;\n}\nint main()\n{\n    int y = 5;\n    f(y);\n    cout &lt;&lt; y &lt;&lt; endl; // 6\n    //\u4e0d\u518d\u662f\u503c\u4f20\u9012 f(y)\u80fd\u6210\u529f\u7684\u4fee\u6539y\u4e86\n}\n</code></pre></p>"},{"location":"sp25/oop/note/#_2","title":"*\u53f3\u503c\u5f15\u7528","text":"<pre><code>T&amp;&amp; a = i * 6;//\u5c06\u4ea1\u503c\nT y = a * 2;\na = 100;\n//\u5ef6\u957f\u4e34\u65f6\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\n</code></pre>"},{"location":"sp25/oop/note/#dynamic-memory-allocation","title":"dynamic memory allocation","text":"<p><pre><code>new int;//malloc(\u5411\u7a0b\u5e8f\u8fd0\u884c\u7684\u8fdb\u7a0b\u7533\u8bf7\u7a7a\u95f4)\nnew Stash;//construct object in heap\nnew int[10];\n\ndelete p;//free\ndelete[] p;\n</code></pre> new and delete triggers and ensures the correctness of Ctor/Dtor(\u8fd0\u7b97\u7b26) cannot delete twice but can delete nullptr  </p> <p>new \u8fd4\u56de\u7684\u662f\u6307\u9488</p> <p><pre><code>int* psome = new int[10];//\u957f\u5ea6\u4e0d\u786e\u5b9a\u7684\u6570\u7ec4\ndelete[] psome;\n</code></pre> <pre><code>int* p =new int;//heap\u4e0a\u7684\u7a7a\u95f4\u5206\u914d\uff1aMagic number(4bytes) + bytes allocated '4'(4bytes) + p(4bytes)\nint* a =new int[10];\nStudent* q = new Student();//\u53ef\u4f20\u53c2\nStudent* r = new Student[10];\ndelete p;//-8 bytes,check\u662f\u5426\u662fmagic number,\u5982\u679c\u4e0d\u662f\u5219\u62a5\u9519\na++;\ndelete[] a;//ERROR\ndelete q;//Destructor,then check magic number\ndelete r;//1 destructor,then delete 1 student(ERROR in some compilers)\ndelete[] r;//10 destructor\n</code></pre></p>"},{"location":"sp25/oop/note/#constant","title":"constant","text":"<p><pre><code>const int x = 123;\nx = 27; //illegal\nx++;    //illegal\n\nint y = x;       //legal,copy const to non-const\ny = x;           //legal\nconst int z = y; //legal\n</code></pre> <code>const</code> is an internal linkage</p> <ul> <li>Compile time constants    </li> <li>Run-time constants <pre><code>//compile time\nconst int class_size = 12;  //store in .text\nint finalgrade[class_size]; //legal\n\n//run time\nint x;\ncin &gt;&gt; x;\n\nconst int size = x;\ndouble classaverage[size]; //error,static array length must be fixed when compiling!\n</code></pre> <pre><code>int a[] = {53,54,55};\nint * const p = a;// p(pointer) is a const\n*p = 20; //legal\np++;     //illegal\n\nconst int *p = a; // (*p)(the object pointer p points to) is a const\n*p = 20; //illgal\np++;     //legal\n//\u4e0d\u80fd\u901a\u8fc7\u6307\u9488\u4fee\u6539\u53d8\u91cf\uff08\u53d8\u91cf\u672c\u8eab\u80fd\u5426\u4fee\u6539\u53d6\u51b3\u4e8e\u53d8\u91cf\u672c\u8eab\u662f\u5426\u6709const\uff09\n//\u89c2\u5bdfconst\u5728*\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\n</code></pre> <pre><code>int i;\nconst int ci;\nint* ip;\nconst int* cip;\nip = &amp;i;\nip = &amp;ci; //illegal,ci cannot be modified but ip can,this is not allowed\ncip = &amp;i;\ncip = &amp;ci;\n*ip = 54; //always legal\n*cip = 54;//never legal\n</code></pre> String literals:in .text,read only <pre><code>(const)char* s = \"Hello World!\";\n//sizeof(s) = 8\n//s in stack,\"Hello World!\" in .text\nchar s[] = \"Hello World!\";\n//in stack\n//sizeof(s) = 14\n</code></pre> <pre><code>void f(const int* x)\n{\n    (*x)++;//illegal\n}\n//\u5b9e\u9645\u8bbe\u8ba1\u4e2d\u5e38\u901a\u8fc7\u4f20\u6307\u9488\u66ff\u4ee3\u4f20\u7ed3\u6784\n//\u4f7f\u7528const\u4fee\u9970\u786e\u4fdd\u6307\u9488\u6307\u5411\u5185\u5bb9\u4e0d\u88ab\u4fee\u6539\n</code></pre></li> </ul>"},{"location":"sp25/oop/note/#inside-class-week-6","title":"Inside Class Week 6","text":""},{"location":"sp25/oop/note/#overload","title":"Overload","text":"<p><pre><code>class point{\n    int x,y;\npublic:\n    point():x(0),y(0){}\n    point(int xx,int yy):x(xx),y(yy){};\n};\n\nint main()\n{\n    point p(1,2);\n    point p2;\n    point a[10];\n}\n</code></pre> \u51fd\u6570\u540d\u76f8\u540c\uff0c\u53c2\u6570\u8868\u4e0d\u540c <pre><code>    point(int x,int y):x(0),y(0){}\n    point(int xx,int yy):x(xx),y(yy){};\n    //\u76f8\u540c\u7684\u53c2\u6570\u8868\n</code></pre> <pre><code>//auto-cast\nvoid f(short);\nvoid f(double);\nf('a'); //ERROR\nf(2);//ERROR\nf(2L);//long ERROR\nf(3.2);\n</code></pre> const and non-const is an overload,non-const can be put to const.  </p> <p>\u4e0d\u540c\u7684\u8fd4\u56de\u7c7b\u578b\u4e0d\u6784\u6210\u91cd\u8f7d</p> <p><pre><code>//*Delegating Ctors\nclass Info{\npublic:\n    Info(){InitRest();}\n    Info(int i):Info(){type = i;}\n    Info(char e):Info(){name = e;}\n}\n//\u9010\u7ea7\u4ee3\u7406\nclass class_c{\npublic:\n    int max;\n    int min;\n    int middle;\n    class_c(int my_max){\n        max = my_max &gt; 0 ? my_max : 10;\n    }\n    class_c(int my_max,int my_min):class_c(my_max){\n        min = my_min &gt; 0 &amp;&amp; my_min &lt; max ? my_min : 1;\n    }\n    class_c(int my_max,int my_min,int my_middle):class_c(my_max,my_min){\n        //\u53ea\u80fd\u6709\u4e00\u4e2a\u4ee3\u7406\u6784\u9020\uff0c\u65e9\u4e8e\u521d\u59cb\u5316\u5217\u8868\uff0c\u665a\u4e8e\u5b9a\u4e49\u521d\u59cb\u5316\n        middle = my_middle &lt; max &amp;&amp; my_middle &gt; min ? my_middle : 5;\n    }\n}\n</code></pre> \u53ef\u4ee5\u5c06\u4ee3\u7406\u6784\u9020\u7684\u76ee\u6807\u9690\u85cf\u8d77\u6765(private) \u4e0d\u80fd\u5faa\u73af\u4ee3\u7406  </p>"},{"location":"sp25/oop/note/#default-argument","title":"Default argument","text":"<p>\u5728\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u8868\u4e2d\u653e\u5165\u9ed8\u8ba4\u503c <pre><code>class point{\n    int x,int y;\npublic:\n    void k(int a,int x=0,int y=0) const {\n        cout &lt;&lt; x &lt;&lt; endl;\n    }\n};\n\nint main()\n{\n    const point p;\n    p.k();//ERROR\n    p.k(9);\n    p.k(9,10);\n    p.k(9,10,11);\n}\n</code></pre> <code>void k(int a,int x=0,int y)</code>:not allowed,default arguments written from right to left \u9ed8\u8ba4\u53c2\u6570\u503c\u5199\u5728\u58f0\u660e(.h)\u4e2d\u800c\u4e0d\u8981\u5199\u5728\u5b9a\u4e49(.cpp)\u4e2d \u56e0\u4e3a\u53c2\u6570\u503c\u662f\u4f9d\u636e\u5934\u6587\u4ef6\u7531\u7f16\u8bd1\u5668\u586b\u5165\u7684\uff08\u4e0e\u51fd\u6570\u5185\u90e8\u65e0\u5173\uff09  </p>"},{"location":"sp25/oop/note/#inline-functions","title":"Inline functions","text":"<p>overhead(\u989d\u5916\u5f00\u9500) for a function call:context_switch <code>inline</code>\u662fC\u8bed\u8a00\u7684\u7279\u6027 <pre><code>inline int f(int i){\n    return i*2;\n}\nmain(){\n    int a = 4;\n    int b = f(a);\n    //Compiler does:b = a*2;\n}\n</code></pre> <code>inline</code>\u7684\u4ee3\u4ef7:\u6d6a\u8d39\u7a7a\u95f4 \u9700\u8981\u5728\u58f0\u660e\u4e0e\u5b9a\u4e49repeat <code>inline</code>\u5173\u952e\u5b57 \u4e0d\u4f1a\u5728obj\u4e2d\u4ea7\u751f\u4efb\u4f55\u4ee3\u7801(\u65e0\u6cd5\u94fe\u63a5) <pre><code>g++ -c a.cpp #\u53ea\u7f16\u8bd1\u4e0d\u94fe\u63a5\nobjdump -t a.o |grep xx\n</code></pre> \u9700\u8981\u5c06<code>inline</code>\u51fd\u6570\u7684body\u5199\u5728.h\u4e2d\uff0c\u4ee5\u4f9b\u7f16\u8bd1\u5668'\u6284\u5199' Better than <code>define</code>,<code>inline</code>\u4f1a\u68c0\u67e5\u53d8\u91cf\u7684\u7c7b\u578b.  \u662f\u5426\u771f\u7684<code>inline</code>\u662f\u7531\u7f16\u8bd1\u5668\u6839\u636e\u51fd\u6570\u5927\u5c0f\u6216\u51fd\u6570\u662f\u5426\u9012\u5f52\u3001\u5faa\u73af\u3001\u662f\u5426\u6709\u9759\u6001\u53d8\u91cf\u81ea\u884c\u51b3\u5b9a\u7684  </p>"},{"location":"sp25/oop/note/#composition-week-7","title":"Composition Week 7","text":"<p>composition:construct new object with existing objects Reuse the implementation ways of composition </p> <ul> <li>fully(Ctor and Dtor are automatically called)(Only C++)  </li> <li>by reference   logical relationship is not fully(e.g.supervisor &amp; employee)   size-of is unknown beforehand   resource is to be allocated/connected at run time(exception)  </li> </ul> <p><pre><code>class SavingsAccount{\npublic:\n    SavingsAccount(\n        const char* name,\n        const char* address,\n        int cents);\n    ~SavingsAccount();\n    void print();\nprivate:\n    Person m_saver;\n    Currency m_balance;\n};\n\nclass Employee{\n    ...\nprivate:\n    Supervisor *m_supervisor;\n};\n</code></pre> Composition\u5728\u5185\u5b58\u7684\u5b58\u50a8\u4e0e\u5b9a\u4e49\u7c7b\u65f6\u7684\u987a\u5e8f\u6709\u5173 \u4f20\u503c\u6784\u9020 <pre><code>class A{\n    int i=0;\npublic:\n    A(int ii):i(ii){cout &lt;&lt; \"A::A()\" &lt;&lt; endl;}//\u5fc5\u987b\u4f20\u503c\u6784\u9020\n    //A(int ii=0):i(ii){} //\u53ef\u4f5c\u4e3a\u9ed8\u8ba4\u6784\u9020\n    ~A(){cout &lt;&lt; \"A::~A()\" &lt;&lt; endl;}\n}\n\nclass B{\n    int j=1;\n    B(int i):j(i){cout &lt;&lt; \"B::B()\" &lt;&lt; endl;}\n    ~B(){cout &lt;&lt; \"B::~B()\" &lt;&lt; endl;}\n}\n\nclass C{\n    A a;\n    B b;\npublic:\n    C():b(1),a(2){}//\u521d\u59cb\u5316\u5217\u8868\u987a\u5e8f\u4e0e\u6784\u9020\u987a\u5e8f\u65e0\u5173\n}\n</code></pre> \u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868 <pre><code>SavingsAccount::SavingsAccount(\n    const char* name,\n    const char* address,\n    int cents):m_saver(name,address),m_balance(0,cents){}\n    //\u53c2\u6570\u6784\u9020m_saver,m_balance\nvoid SavingsAccount::print(){\n    m_saver.print();\n    m_balance.print();\n}\n\nSavingsAccount::SavingsAccount(\n    const char* name,\n    const char* address,\n    int cents){\n    m_saver.set_name(name);\n    m_saver.set_address(address);\n    m_balance.set_balance(cents);\n    //\u9ed8\u8ba4\u6784\u9020\u518d\u8d4b\u503c\n    }\n//\n</code></pre> It is common to make embedded objects <code>private</code>. Example:clock display  </p>"},{"location":"sp25/oop/note/#inheritance-week-8","title":"Inheritance Week 8","text":"<p>Inheritance is to take the existing class,clone it,and then make additions and modifications to the clone. Reuse the interface OOP\u7684\u4e09\u5927\u7279\u6027\uff1a\u5c01\u88c5\uff0c\u7ee7\u627f\uff0c\u591a\u6001 Example:DoME(Database of Multimedia Entertainment)  </p> <ul> <li>CD:title,artist,tracks,playingtime,got-it,comment  </li> <li>DVD:title,director,playingtime,got-it,comment  </li> <li><code>list</code> and <code>print</code> </li> </ul> <p>\u53ef\u4fee\u6539\uff1a\u53ef\u7ef4\u62a4\u6027 \u4e0d\u9700\u8981\u4fee\u6539\uff1a\u53ef\u6269\u5c55\u6027 \u57fa\u7c7b\uff08\u7236\u7c7b\uff09-&gt;\u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09  </p>"},{"location":"sp25/oop/note/#what-does-it-inherited","title":"What does it inherited?","text":"<ul> <li>private member vars.     inaccessible     exist in derived class(\u5185\u5b58\u4e2d\u5148\u4e8e\u5b50\u7c7b\u7684member vars\uff0c\u7236\u7c7b\u5d4c\u5165\u5b50\u7c7b\u5bf9\u8c61)  </li> <li>public member functions     are public mumber functions of derived class too  </li> <li>private member functions     inaccessible in derived class  </li> <li>protected members     fully and only accessible in derived class  </li> <li>static members     a change to all  </li> </ul> <p>\u7236\u7c7b\u5148\u88abCtor\u540e\u88abDtor  </p>"},{"location":"sp25/oop/note/#name-hiding","title":"Name hiding","text":"<p>\u5b50\u7c7b\u4e2d\u91cd\u5199\u7236\u7c7boverloaded\u51fd\u6570\u4e2d\u7684\u4e00\u4e2a\uff0c\u4f1a\u5bfc\u81f4\u5176\u4ed6\u91cd\u8f7d\u51fd\u6570\u9690\u85cf Use <code>virtual</code> to affect function overloading(Polymorphism)  private\u7ee7\u627f\u53ef\u4ee5\u7406\u89e3\u4e3acomposition  </p>"},{"location":"sp25/oop/note/#polymorphism-week-9-10","title":"Polymorphism Week 9 - 10","text":"<p>Subtyping <pre><code>Vehicle *v1 = new Vehicle();\nVehicle *v2 = new Car();\nVehicle *v3 = new Bicycle();//\u901a\u8fc7v3,\u6211\u4eec\u53ea\u8ba4\u4e3a\u4ed6\u662f\u4e00\u4e2avehicle\n</code></pre> Parameter passing <pre><code>public class Database{\n    public void addItem(const Item &amp;item)\n    {\n        ...\n    }\n}\nDVD dvd;\nDVD cd;\nDatabase.addItem(dvd);\nDatabase.addItem(cd);\n</code></pre></p>"},{"location":"sp25/oop/note/#casting","title":"casting","text":"<p>casting:\u7c7b\u578b\u8f6c\u6362 <pre><code>(int)6.3 = 6;\n</code></pre> Up-casting:\u9020\u578b <pre><code>Person *p = new Student();\n//Student is still a student,we just not treat it as a student  \nManager pete(\"Pete\",\"444-55-6666\",\"Bakery\");\nEmployee* ep =&amp;pete;\nEmployee&amp; er =pete;\nep-&gt;print(cout);//lose type information about the object  \n</code></pre> UML\u56fe\u793a </p>"},{"location":"sp25/oop/note/#virtual","title":"virtual","text":"<p>[Question] What's the point of saying it's a subclass object? [Example] Shapes:Rectangle,Circle &amp; Ellipse Operations:render,resize,move Data:center <code>virtual</code> (together with pointer) calls the relevant subclass member function(dynamic binding) <pre><code>    rectangle r;\n    draw(&amp;r);\n    r.render();//static binding:compile time\n    shape* p = &amp;r;//p is a polymorphic variable\n    //static(declared) type:shape,dynamic(run-time) type:rectangle\n    p-&gt;render();\n    //(*p -&gt; vptr -&gt; vtable[?])()\n    //to select which function to call:binding\n    //dynamic binding:run time\n\noutput:(without `virtual`)\nshape::render()\nrectangle::render()\nshape::render()\n</code></pre> binding:which function to call static binding:call the function as the code dynamic binding:call the function of the object  virtual functions  </p> <ul> <li>non-virtual:compiler generates static </li> <li>virtual   can be transparently overridden(\u8986\u76d6)   objects carry a pack of their virtual functions   compiler checks pack and dynamically call  </li> </ul>"},{"location":"sp25/oop/note/#how-does-virtual-work","title":"How does <code>virtual</code> work?","text":"<p>note:the sizeof a class with no member var is '1'(not '0' which is unscientific) without <code>virtual</code>,sizeof(subclass) = sizeof(superclass) + 4 * number of member vars(unless sizeof(superclass) == 1) with <code>virtual</code>(no matter how many),a vptr(virtual pointer) is generated,which points to vtable(owned by the class) vtable consists all the function pointer in the class sizeof(vptr) = 8(in x64) or 4(in x86) <pre><code>Rectangle r;\nShape s;\ns = r;\nShape* p = &amp;s;\np-&gt;render();//Shape::render()\np = &amp;r;\np-&gt;render();//Rectangle::render()\n</code></pre> [Question] What happens to vptr? vptr won't be transferred,because vptr is generated in constructor </p>"},{"location":"sp25/oop/note/#virtual-destructors","title":"Virtual destructors","text":"<p>Why? <pre><code>Shape* p = new Ellipse(100.0F,200.0F);...\ndelete p;// p-&gt;~ then free()\n//problem:which ~ to call\n</code></pre> We consider every class has a virtual destructor Therefore,every class ought to have a vptr  </p>"},{"location":"sp25/oop/note/#override","title":"Override","text":"<p>Superclass and subclass define methods with the same signature(function prototype) Suppose D is derived from B,should D::f() and B::f() have the same input type and output type? <pre><code>class expr {\npublic:\n    virtual expr* newexpr();\n    virtual expr&amp; clone();\n    virtual expr self();\n};\nclass binaryexpr : public expr {\npublic:\n    virtual binaryexpr* newexpr();//OK\n    virtual binaryexpr&amp; clone();//OK\n    virtual binaryexpr self();//Error!Type not match,c++ prohibit this operation\n    //note:virtual in subclass can be neglected\n};\n</code></pre> Name hiding still exists with virtual Only override on virtual functions! Shape is an abstruct class,we actually don't want a shape object to be created. <pre><code>class shape {\npublic:\n    virtual void render() = 0;\n    //\u7eaf\u865a\u51fd\u6570\n}\n</code></pre> \u67d0\u4e00\u4e2a\u51fd\u6570<code>virtual f() = 0</code>\uff0c\u8868\u793a\u7c7b\u662f\u62bd\u8c61\u7684\uff0c\u62bd\u8c61\u7c7b\u4e0d\u80fd\u6784\u9020\u5bf9\u8c61 \u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\u53ef\u4ee5\u662f\u62bd\u8c61\u7c7b <pre><code>    Mammal *M = new Mammal();\n    Male m;\n    *M = m;//\u5bf9\u8c61\u5207\u7247\n\n    Employee* b = new Manager(); //\u6ca1\u6709\u53d1\u751f\u5bf9\u8c61\u5207\u7247\n</code></pre></p>"},{"location":"sp25/oop/note/#multiple-inheritance","title":"*Multiple Inheritance","text":"<p>\u4e00\u4e2a\u7c7b\u6709\u591a\u4e2a\u7236\u7c7b(only c++):\u83f1\u5f62\u7ee7\u627f\u7684\u95ee\u9898\uff0c\u5176\u4f59oop\u8bed\u8a00\u7684\u5355\u6839\u7ed3\u6784\uff08\u6240\u6709\u7c7b\u90fd\u662fobject\u7c7b\u7684\u5b50\u7c7b\uff0c\u5bb9\u6613\u5b9e\u73b0\u5bb9\u5668\uff09 c++\u901a\u8fc7\u591a\u7ee7\u627f\u5236\u9020\u5bb9\u5668 \u865a\u7ee7\u627f\uff1a\u6307\u9488\u6307\u5411\u7237\u7c7b \u865a\u7ee7\u627f\u89e3\u51b3\u591a\u7ee7\u627f\uff0c\u591a\u7ee7\u627f\u89e3\u51b3\u6ca1\u6709\u5355\u6839\u7ed3\u6784\u7684\u95ee\u9898\uff0c\u6700\u7ec8\u88ab\u6a21\u677f\u53d6\u4ee3 \u591a\u7ee7\u627f\u53ea\u6709\u5728\u591a\u4e2a\u7236\u7c7b\u53ea\u6709\u4e00\u4e2a\u662f\u5b9e\u9645\u7c7b\u7684\u65f6\u5019\u53ef\u4ee5\u8fdb\u884c  </p>"},{"location":"sp25/oop/note/#copy-and-move-week-10","title":"Copy and Move Week 10","text":""},{"location":"sp25/oop/note/#copying","title":"Copying","text":"<p>get a copy of the existing object unconsciously E.g. <pre><code>void func(Currency p) {\n    cout &lt;&lt; \"X = \" &lt;&lt; p.dollars();\n}\n...\nCurrency bucks(100, 0);\nfunc(bucks);//bucks is copies into p\n//Currency p = buck; or Currency p(buck);\n//we actually do a construct\n//but we can only call a default constructor(see howmany.cpp)\n</code></pre> Copy Constructor:\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u662f\u81ea\u5df1\u7c7b\u7684\u5bf9\u8c61(const reference) <code>HowMany(const HowMany&amp; r) {}</code> When will copy happen ?  </p> <ul> <li><code>ClassType a = b;</code> </li> <li>function call  </li> <li>function return  </li> </ul> <p>When must we have a copy ctor ? When we have a pointer in member var(or other non-memory resources,e.g.\u53e5\u67c4) why?See person.cpp  default constructor:member-wise copy(\u4f9d\u6b21\u8c03\u7528\u6210\u5458\u62f7\u8d1d\u6784\u9020)/binary copy(\u9010\u5b57\u8282\u62f7\u8d1d\uff0c\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u6307\u9488) <pre><code>Person copy_func(char *who) {\n    Person local(who);\n    local.print();\n    return local;// copy ctor called unless NRVO applied\n}\nPerson nocopy_func(char *who) {\n    return Person(who);\n}//no copy needed,RVO automatically applied\n</code></pre> Compiler helps:RVO (Return Value Optimization) and NRVO (Named Return Value Optimization) Note:\u6ce8\u610f\u62f7\u8d1d\u4e0e\u8d4b\u503c\u7684\u533a\u522b 1.try to create own copy ctor if needed 2.declare a private copy ctor to avoid getting copied  </p>"},{"location":"sp25/oop/note/#types-of-function-parameters-and-return-value","title":"Types of function parameters and return value","text":"<p><pre><code>void f(Student i);//copy ctor,protect outside object\nvoid f(Student *p);//indicate that we may modify the object\nvoid f(Student&amp; i);//better with const if won't modify\n</code></pre> <pre><code>Student f(); //create a new object\nStudent* f();\nStudent&amp; f();\n</code></pre> <pre><code>char *foo() {\n    char *p;\n    p = new char[10]; //\u4e0d\u8981\u5728\u51fd\u6570\u4e2d\u7533\u8bf7\u5185\u5b58\u518d\u4ea4\u51fa\u53bb\n    strcpy(p,\"something\");\n    return p;\n}\nvoid bar() {\n    char *p = foo();\n    printf(\"%s\",p);\n    delete p; //What if someone forget,how can she know a delete is needed\n}\n</code></pre> <pre><code>//a better version\nchar *foo(char *p) { //\u4f20\u5165\u6307\u9488\n    strcpy(p,\"something\");\n    return p; //\u64cd\u4f5c\u5b8c\u6210\u540e\u4f20\u51fa\u53bb\n}\nvoid bar() {\n    char p[10]; \n    char *p = foo(p);\n    printf(\"%s\",p);\n    // delete p; //no longer needed\n}\n</code></pre></p>"},{"location":"sp25/oop/note/#moving","title":"*Moving","text":"<p>get all the info of the original object while destroying the original one \u53c2\u6570\u4e3a\u53f3\u503c\u5f15\u7528(&amp;&amp;)\u7684\u62f7\u8d1d\u6784\u9020 <pre><code>DynamicArray(DynamicArray&amp;&amp; rhs):m_size{rhs.m_size},m_array{rhs.m_array}\n{\n    rhs.m_size = 0;\n    rhs.m_array = nullptr;\n    cout &lt;&lt; \"Move constructor:dynamic array is moved! &lt;&lt; endl;\n}\n</code></pre> only c++,for moving the object itself(not pointer)(<code>Student s</code>) \u4f7f\u7528std::move\u83b7\u5f97\u53f3\u503c <pre><code>vector&lt;int&gt; v1{1,2,3,4};\nvector&lt;int&gt; v2 = v1;//copy ctor\nvector&lt;int&gt; v3 = std::move(v1); //move ctor\n//std::move\u5c06v1\u8f6c\u5316\u4e3a\u53f3\u503c\uff0c\u79fb\u52a8\u540ev1\u6d88\u5931\n</code></pre> \u5bf9\u8c61\u521d\u59cb\u5316 <pre><code>string str(\"hello\");\nstring str = \"hello\";\nstruct student {\n    char *name;\n    int age;\n};\nstudent s = {\"dablelv\",18};\nstudent sarr[] = {{\"dablelv\",18},{\"tommy\",19}};\nclass test {\n    int a;\n    int b;\npublic:\n    test(int i,int j);\n};\ntest t{0,0};\ntest *pt = new test{1,2};\nint *a = new int[3]{1,2,0};\n//{} only in c++11\n</code></pre> using <pre><code>class Base {\npublic:\n    void f();\n};\nclass Child : public Base {\npublic:\n    using Base::f;\n    void f(int i) {}\n}\n</code></pre></p>"},{"location":"sp25/oop/note/#overloaded-operator-week-11","title":"Overloaded Operator Week 11","text":"<p>[Recall] Overload\u7684\u6761\u4ef6\uff1a\u51fd\u6570\u7684\u540d\u79f0\u76f8\u540c\u53c2\u6570\u8868\u4e0d\u540c\uff08\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u6216\u7c7b\u578b\u4e0d\u540c\u4e14\u7c7b\u578b\u4e0d\u4f1a\u5f15\u8d77\u6b67\u4e49\uff09 \u5b50\u7c7b\u548c\u7236\u7c7b\u7684\u6307\u9488\u4e0d\u6784\u6210overload(\u6b67\u4e49)\uff0cconst\u4e0enon-const\u6784\u6210overload operators can be overloaded <pre><code>+ - * / % ^ &amp; | ~\n= += -= *= /= %= ^= &amp;= |=\n&lt;&lt; &gt;&gt; &lt;&lt;= &gt;&gt;= \n== != &lt; &gt; &lt;= &gt;= \n! &amp;&amp; || ++ --\n, -&gt;*(a.i) -&gt;()(a.f(i)) []\nnew delete\nnew[] delete[] \n</code></pre> operators cannot be overloaded <pre><code>. .* :: ?:\nsizeof typeid\nstatic_cast dynamic_cast const_cast reinterpret_cast(\u7c7b\u578b\u8f6c\u6362)\n</code></pre> Only existing operators can be overloaded(<code>**</code> cannot be overloaded) Operators must be overloaded on a class or *enumeration type<code>enum{__,__,__}</code> Overloaded must preserve the number of operands and precedence(\u4f18\u5148\u7ea7) <pre><code>const String String::operator +(const String&amp; that);\n//example see a.cpp\n</code></pre> How to overload? <pre><code>A a1(1);\nA a3 = a1 + 3;//3 is converted to A type\nA a4 = 3 + a1;//ERROR\n</code></pre></p>"},{"location":"sp25/oop/note/#as-member-function","title":"As member function","text":"<p>implicit first argument no type conversion performed on receiver  </p>"},{"location":"sp25/oop/note/#as-global-function","title":"As global function","text":"<p>use <code>friend</code> Only one side need to be the class(<code>3+a1</code> is allowed) Choose between member function and global function </p> <ul> <li>Unary operators(\u5355\u6b65\u8fd0\u7b97<code>-,~</code>) should be member  </li> <li><code>= () [] -&gt; -&gt;*</code> must be member  </li> <li>assignment operators should be member  </li> <li>other binary operators are encouraged to be global  </li> </ul> <p>\u671f\u672b\u5927\u9898\uff0c\u591a\u4e2a\u8fd0\u7b97\u7b26\u7684\u53c2\u6570\u8868\u4e0e\u8fd4\u56de\u7c7b\u578b</p>"},{"location":"sp25/oop/note/#passing-parameter","title":"passing parameter","text":"<ul> <li>read only(<code>+,&gt;,...</code>)(not read only:\u8d4b\u503c\u8fd0\u7b97\u7b26<code>++,--,=,...</code>):pass it as <code>const reference</code> </li> <li>member function that won't modify <code>this</code>,use const member function  </li> <li>global function that will change its left-hand-side,pass it as <code>reference</code>(but not <code>const reference</code>)  </li> </ul>"},{"location":"sp25/oop/note/#return-value","title":"return value","text":"<p>\u5de6\u503c\u8fd0\u7b97\u7b26 <pre><code>a + b = 6; //\u975e\u5de6\u503c\u8fd0\u7b97\u7b26\n*p = 6;\na[i] = 6;\na.k = 6;\n</code></pre> \u5de6\u503c\u8fd0\u7b97\u7b26\u5e94\u8fd4\u56de\u53ef\u5199\u503c\uff0c\u800c\u975e\u5de6\u503c\u8fd0\u7b97\u7b26\u8fd4\u56de\u4e0d\u53ef\u5199\u503c(add <code>const</code> before <code>operator</code>)   </p> <ul> <li>if a new object is to generated,return a const object  </li> <li>logical operators return <code>bool</code> </li> </ul>"},{"location":"sp25/oop/note/#prototypes-of-operators","title":"prototypes of operators","text":"<ul> <li><code>+-*/%^&amp;|~</code> <code>const T operatorX(const T&amp; l,const T&amp; r);</code> </li> <li><code>! &amp;&amp; || &lt; &lt;= == &gt;= &gt;</code> <code>bool operatorX(const T&amp; l,const T&amp; r);</code> </li> <li><code>[]</code> <code>E&amp; T::operator[](int index);</code> </li> </ul>"},{"location":"sp25/oop/note/#and-","title":"<code>++</code> and <code>--</code>","text":"<pre><code>class Integer {\npublic:\n    ...\n    const Integer&amp; operator++(); //++i\n    const Integer operator++(int); //i++(\u8fd4\u56de\u53e6\u4e00\u4e2a\u5bf9\u8c61,this\u4e2d\u7684i\u52a01)\n    //we often transfer '0' for int\n    ...\n}\nconst Integet&amp; Integer::operator++() {\n    *this += 1;\n    return *this;\n}\nconst Integet Integer::operator++(int) {\n    Integer old(*this);\n    ++(*this);\n    return old;\n}\n</code></pre>"},{"location":"sp25/oop/note/#relational-operator","title":"Relational operator","text":"<p>use <code>== &lt;</code> to implement <code>!= &gt; &lt;= &gt;=</code> <pre><code>bool Integer::operator==(const Integer&amp; rhs)const {\n    return i == rhs.i;\n}\nbool Integer::operator!=(const Integer&amp; rhs)const {\n    return !(*this == rhs);\n}\nbool Integer::operator&lt;(const Integer&amp; rhs)const {\n    return i &lt; rhs.i;\n}\n</code></pre></p>"},{"location":"sp25/oop/note/#_3","title":"[]","text":"<pre><code>const int&amp; Vector::operator[](const int ind) {\n    return buf[ind];\n}\nVector v(100);\nv[10] = 45;\n</code></pre>"},{"location":"sp25/oop/note/#stream-extractorinserter-and-manipulator","title":"stream extractor/inserter and manipulator","text":"<p><pre><code>//global function not const\nistream&amp; operator&gt;&gt;(istream&amp; is,T&amp; obj) {\n    is &gt;&gt; p.name &gt;&gt; p.age;\n    return is;\n}\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c; \nostream&amp; operator&lt;&lt;(ostream&amp; os,const T&amp; obj) {\n    os &lt;&lt; p.name &lt;&lt; p.age;\n    return os;\n}\ncout &lt;&lt; a &lt;&lt; b &lt;&lt; c;\n</code></pre> <pre><code>ostream&amp; manip(ostream&amp; out) {\n    ...\n    return out;\n}\nostream&amp; tab(ostream&amp; out) {\n    return out &lt;&lt; \"\\t\";\n}\ncout &lt;&lt; \"Hello\" &lt;&lt; tab &lt;&lt; \"World\";\n</code></pre></p>"},{"location":"sp25/oop/note/#copying-initialization","title":"copying &amp; initialization","text":"<pre><code>T&amp; T::operator=(const T&amp; rhs)\n{\n    if(this != &amp;rhs){   //this is a must,in case `a=a` delete itself\n        ...\n    }\n    return *this;\n}\n</code></pre>"},{"location":"sp25/oop/note/#value-classes","title":"value classes","text":"<p><code>explicit</code>:indicating that the ctor cannot be used for data conversions <pre><code>class PathName {\n    string name;\npublic:\n    explicit PathName(const string&amp;);\n    ~PathName();\n};\n...\nstring abc(\"abc\");\nPathName xyz(abc);//OK\nxyz = abc;//ERROR with explicit \n</code></pre> Conversion operators<code>X::operator T()</code> <pre><code>class Rational {\npublic:\n    operator double() const;//Rational to double\n    //\u65e0\u8fd4\u56de\u7c7b\u578b\n};\nRational::operator double() const {\n    return numerator_/(double)denominator_;\n}\nRational r(1,3);\ndouble d = 1.3 * r;\n</code></pre> note:<code>C(T)</code> and <code>operator C()</code> cannot be both accessible(compiler may confuse) Usually,we'd rather use <code>double todouble() const;</code> overloading and type conversion:c++ check each argument for a best match  </p>"},{"location":"sp25/oop/note/#template-week-12","title":"Template Week 12","text":"<p>[Insights] similar code for different types Other oop language solution:common superclass <pre><code>//a c implementation \nclass Stack {\n    void push(void *);\n    void* pop();\n    //Stack();\n    Stack(int cap,int os);//capacity,object_size\nprivate:\n    //void **pBuf;\n    void *pBuf;\n    //cannot deal with pointer when copy  \n};\npBuf = new char[cap * os];\nStack(100,sizeof(Student));\n</code></pre> [Classification] reuse source code(generic\u6cdb\u578b\uff0cuse types as parameters in class or function definitions),function template\u51fd\u6570\u6a21\u677f,class template\u7c7b\u6a21\u677f  </p>"},{"location":"sp25/oop/note/#function-templates","title":"Function templates","text":"<p><pre><code>template &lt;class T&gt; // or typename\nvoid swap(T&amp; x,T&amp; y) {\n    T temp = x;\n    x = y;\n    y = temp;\n}\n</code></pre> Instantiation\u5b9e\u4f8b\u5316 <pre><code>nm -CU a.out\n</code></pre> No instantiation is not used,c.f.function instantiated if not called <code>inline</code> functions are declarations,so is templates. Function with no <code>template</code> is found first Only exact type match on types is used for <code>template</code>,<code>template</code> does not support type conversion at all <pre><code>int add(int a, int b)\n{\n    return a + b;\n}\ntemplate &lt;typename T&gt;\nT add(T a,T b)\n{       \n    return a + b;\n}\ncout &lt;&lt; add(1.1,2.2f) &lt;&lt; endl;//int add is called\n//if no int add,ERROR\n</code></pre> unique function match &gt; unique function template match &gt; overloading(conversion) <pre><code>template &lt;typename T&gt;\nT foo(void){\n    /*...T is used inside function*/\n    /*compiler don't know what is T because no parameter to infer*/\n}\nfoo&lt;int&gt;();//tell the compiler what is T\nfoo&lt;float&gt;();\n</code></pre></p>"},{"location":"sp25/oop/note/#class-templates","title":"Class templates","text":"<p><code>stack&lt;int&gt;,list&lt;Person&gt;,queue&lt;Job&gt;</code> <pre><code>template &lt;typename T&gt;\nclass Vector {\npublic:\n    Vector(int);\n    ~Vector();\n    Vector(const Vector&amp;);\n    Vector&amp; operator=(const Vector&amp;);\n    T&amp; operator[](int);\nprivate:\n    T* m_elements;\n    int m_size;\n};\n\ntemplate &lt;typename T&gt;\nT&amp; Vector&lt;T&gt;::operator[](int i)//\u5fc5\u8003\uff1aT&amp; Vector&lt;?&gt;\n{\n    return content[i];\n}\n</code></pre> Usage <pre><code>Vector&lt;int&gt; v1[100];\nVector&lt;Complex&gt; v2[256];\nv1[20] = 10;\nv2[20] = v1[20]; //OK if int-&gt;Complex is defined\n</code></pre></p>"},{"location":"sp25/oop/note/#parameters","title":"parameters","text":"<p><pre><code>template &lt;typename KEY,typename VALUE&gt;\nclass HashTable{\n    const VALUE&amp; lookup(const KEY&amp;) const;\n    void install(const KEY&amp;,const VALUE&amp;);\n    ...\n};\n</code></pre> <code>Vector&lt; Vector&lt;double *&gt; &gt;</code>,space between&gt;&gt; is recommended <code>Vector&lt; int (*)(Vector&lt;double&gt;&amp;,int )&gt;</code>\u51fd\u6570\u6307\u9488\uff0c\u76f8\u5f53\u4e8e<code>Vector&lt; int f(Vector&lt;double&gt;&amp;,int )&gt;</code> Expression <pre><code>template &lt;typename T,int bounds = 100&gt;\nclass FixedVector {\npublic:\n    FixedVector();\n    // ...\n    T&amp; operator[](int);\nprivate:\n    T elements[bounds]; //fixed size array\n    //bounds is no longer a variable after instantiation\n    //not allowed otherwise,see vector.cpp\n};\n\ntemplate &lt;typename T,int bounds&gt;\nT&amp; FixedVector&lt;T,bounds&gt;::operator[](int i){\n    return elements[i];\n}\nFixedVector&lt;int,10&gt; v1;\nFixedVector&lt;int&gt; v2; //default bounds\n//no pointer,copy ctor &amp; overloaded assignment is not needed\n</code></pre> \u53d8\u957f\u6570\u7ec4 <pre><code>struct A {\n    int size;\n    int a[]\n};\nA *p = malloc(sizeof(int) * 101);\np-&gt;size = 100;\n</code></pre></p>"},{"location":"sp25/oop/note/#inheritance","title":"Inheritance","text":"<p><pre><code>template &lt;typename A&gt;\nclass Derived:public Base{}\ntemplate &lt;typename A&gt;\nclass Derived:public List&lt;A&gt;{}\nclass SupervisorGroup:public List&lt;Employee*&gt;{}//\u4ece\u6a21\u677f\u5b9e\u4f8b\u51fa\u6765\u7684\u7c7b\u5f97\u5230\u7ee7\u627f\n</code></pre> \u7c7b\u4e0d\u80fd\u4ece\u6a21\u677f\u4e2d\u5f97\u5230\u7ee7\u627f\uff0c\u4ece\u6a21\u677f\u5f97\u5230\u7ee7\u627f\u7684\u4e5f\u662f\u6a21\u677f <code>friend</code>,<code>static members</code> are allowed IN GENERAL,put the definition and declaration for the template in the header file template SHOULD NOT have a <code>.cpp</code> compiler/linker can remove multiple definition of templates automatically  </p>"},{"location":"sp25/oop/note/#exception-week-13","title":"Exception Week 13","text":"<p>The basic philosophy of C++ is that \"badly formed code will not be run\" more strict type check than C Run-time error:\u53ef\u9884\u89c1\uff0c\u4e0d\u53ef\u907f\u514d\uff0c\u4e0d\u4e00\u5b9a\u53d1\u751f  </p>"},{"location":"sp25/oop/note/#try-catch","title":"Try-catch","text":"<p>Why needed? Readability of code,Convenience of Modification No further code will be executed if an exception happened,and we won't come back after exception handled What is a good exception handle choice? 1.return random object 2.return special value 3.die(<code>exit</code>) 4.die gracefully(<code>assert</code>)  </p>"},{"location":"sp25/oop/note/#exception-handle-chain","title":"Exception handle chain","text":"<p><pre><code>template&lt;typename T&gt;\nT&amp; Vector&lt;T&gt;::operator[](int indx) {\n    if(indx &lt; 0 || indx &gt;= m_size)\n        throw &lt;&lt;something&gt;&gt;; //something can be any type\n    return m_elements[indx];\n}\n</code></pre> What to throw? <pre><code>class VectorIndexError {\npublic:\n    VectorIndexError(int v):m_badvalue(v) {}\n    ~VectorIndexError(){}\n    void diagnostic() {\n        cerr &lt;&lt; \"index\" &lt;&lt; m_badvalue &lt;&lt; \"out of range!\" &lt;&lt; endl;\n    }\nprivate:\n    int m_badvalue;\n};\n</code></pre> <code>throw VectorIndexError(indx);</code>:throw the object itself <pre><code>int func() {\n    Vector&lt;int&gt; v(12);\n    v[3] = 5;\n    int i = v[42]; // i won't get value;\n    return i * 5; //won't be done\n}\n// return to where caller calls func\n// caller gets the exception raise from func\n</code></pre> <pre><code>void outer() {\ntry {\n    func();// throw VIE\n    func2();\n} catch (VectorIndexError&amp; e) {\n    e.diagnostic();\n}\n</code></pre> <pre><code>void outer2() {\n    String err(\"exception caught\");\n    try {\n        func();\n    } catch (VectorIndexError&amp; e) {\n        cout &lt;&lt; err;\n        throw; //propagate the exception\n    }\n}\n</code></pre> <pre><code>void outer3() {\n    try {\n        outer2();\n    } catch(...) {\n        //... catches all exceptions\n        cout &lt;&lt; \"Exception stops here!\";\n    }\n}\n</code></pre> Basic steps: Is surrounding(<code>{}</code>) a try? - No:leave the scope(e.g. if)     - Is it a function body?         Yes:return to the caller(Dtor the objects except the Error object)         the Error object Dtor happens only after caught         No:Is surrounding(<code>{}</code>) a try? - Yes:try to match a catch     - Match?         Yes:do the clause         No:(try means a throw,attempt to find another try)Is surrounding(<code>{}</code>) a try?  </p> <p>handler selection Handlers check in order of appearance,if exception \"is a\" object of the type in catch block <pre><code>A:\nB:public A\ncatch(A &amp;a); //A and B will be caught here\ncatch(B &amp;b); //meaningless \n</code></pre></p>"},{"location":"sp25/oop/note/#standard-library-exceptions","title":"Standard library exceptions","text":""},{"location":"sp25/oop/note/#new","title":"new","text":"<p><code>malloc()</code> returns NULL if failed <code>new</code> raises a <code>bad_alloc</code> exception <pre><code>void func(){\n    try {\n        while(1)\n            char *p = new char[1000000];\n    } catch (bad alloc&amp; e){\n    }\n}\n</code></pre> </p>"},{"location":"sp25/oop/note/#bad-exception","title":"Bad Exception","text":"<p>Exception specification <pre><code>void abc(int a) throw(MathErr)\n/*c++ compiler doesn't know whether MathErr is handled properly\njava compiler does*/\n{\n    ...\n}\n//If other exceptions thrown,compiler gives a bad exception  \nvoid goodguy() throw (...){\n//handles all exceptions\n}\nvoid goodguy() throw (){\n//no exceptions\n}\nvoid average() {} //no checking\nvoid lala() noexcept; \n//tell the compiler the function should not raise exceptions\n</code></pre></p>"},{"location":"sp25/oop/note/#design-considerations","title":"Design considerations","text":"<p>Exception should be used for errors <pre><code>try{\n    for(; ;)\n        p = list.next();\n} catch (List::end_of_list) {\n}\n// a bad design,but python actually did it\n</code></pre> Don't use exception for good conditions  </p>"},{"location":"sp25/oop/note/#more-exceptions","title":"More exceptions","text":""},{"location":"sp25/oop/note/#failure-in-ctor","title":"Failure in ctor","text":"<p><code>A* p = new A();</code> the space is allocated,but no pointer points to it(memory leak) <code>delete this</code> only for objects newed and a well-written dtor two stages construction Ctor cannot raise exception(only variable assignment) Every operation that need memory allocation should be done after ctor(Additional initialization including file,network connection &amp; memory allocation in <code>Init()</code>)  </p>"},{"location":"sp25/oop/note/#failure-in-dtor","title":"Failure in dtor","text":"<p>Stack unwinding:If dtor is called when handling other exceptions,and it throws an exception,call <code>terminate()</code> to terminate the programme <pre><code>class Resource {\npublic:\n    ~Resource() noexcept(false) { \n        throw std::runtime_error(\"Oops\"); // dangerous!\n    }\n};\n\nint main() {\n    try {\n        Resource res;\n        throw std::runtime_error(\"First error\"); // stack unwinding\n        //two exceptions co-exists,c++ calls std::terminate()\n    } catch (...) { \n        // never executed\n    }\n}\n</code></pre></p>"},{"location":"sp25/oop/note/#design-and-usage","title":"Design and usage","text":"<p><pre><code>struct X {};\nstruct Y : public X {};\ntry {\n    throw Y();\n} catch (X x){\n    // copy ctor,loses of some info\n}\n//use reference instead!\n</code></pre> <pre><code>try {\n    throw new Y();\n} catch (Y* p) {\n    //forget to delete \n}\n//java can delete automatically,but in c++,try to avoid pointer in catch\n</code></pre> unexpected <pre><code>#include &lt;exception&gt;  \nvoid my_handler(){\n    std::cout &lt;&lt; \"Unexpected exception!\\n\";\n    exit(1);\n}\nvoid f() throw(X,Y) {\n    throw Z();\n}\nvoid main() {\n    std::set_unexpected(my_handler);\n    //unexpected exception go to `my_handler()`\n    try {\n        f();\n    } catch(...){\n        //won't execute\n    }\n}\n</code></pre> terminate If an exception is thrown but not caught,<code>std::terminate()</code> will be called <pre><code>// an intercepted terminate\nvoid my_terminate() {}\nset_terminate(my_terminate);\n</code></pre></p>"},{"location":"sp25/oop/note/#reminder","title":"Reminder","text":"<p>1.return special value is always an efficient way,don't give it up! 2.Exception 3.assert  </p>"},{"location":"sp25/oop/note/#smart-pointer-week-14","title":"Smart pointer Week 14","text":"<p>goals:reference counting(the object is pointed by how many pointers) for garbage collection    Class <code>UCObject</code> holds the count,<code>UCPointer</code> is a smart pointer to a <code>UCObject</code> <code>UCPointer</code> is an object implemented using a template and overloads <code>operator-&gt;</code> and unary <code>operator*</code> <pre><code>class String {\nprivate:\n    //char* s;\n    UCObject *s; //has a reference count\npublic:\n    string(const char* ss) {\n        s = new char(strlen(ss) + 1);\n        //strcpy(s,ss);\n        s = ss;\n    }\n    ~string(){delete[] s;}\n};\nString abc(\"abcdef\");\nString def = abc; //copy ctor,point to \"abcdef\",reference count ++\nabc = \"Hello world\"; //COW\n</code></pre></p>"},{"location":"sp25/oop/note/#reference-counting","title":"Reference counting","text":"<p><pre><code>//p = q\np -&gt; decrement(); //check,if count == 0,delete this\np -&gt; *q;\nq -&gt; increment();\n</code></pre> <pre><code>#include &lt;assert.h&gt;\nclass UCObject {\npublic:\n    UCObject():m_refCount(0) {}\n    virtual ~UCObject() {assert(m_refCount == 0);};\n    UCObject(const UCObject&amp;) : m_refCount(0) {} //new UCObject\n    void incr() {m_refCount ++;}\n    void decr();\n    int refereces(){return m_refCount;}\nprivate:\n    int m_refCount;\n};\n\ninline void UCObject::decr() {\n    m_refCount -= 1;\n    if (m_refCount == 0)\n        delete this;\n}\n</code></pre> <pre><code>template &lt;typename T&gt; //we hope T is inherited from UCObject\nclass UCPointer {\nprivate:\n    T* m_pObj;\n    void increment(){if(m_pObj) m_pObj-&gt;incr();}\n    void decrement(){if(m_pObj) m_pObj-&gt;decr();}\npublic:\n    UCPointer(T* r=0):m_pObj(r){increment();}\n    ~UCPointer(){decrement();}\n    UCPointer(const UCPointer&lt;T&gt;&amp; p);\n    UCPointer&amp; operator=(const UCPointer&lt;T&gt; &amp;);\n    T* operator-&gt;() const;\n    T&amp; operator*() const {return *m_pObj;};\n};\n\ntemplate&lt;typename T&gt;\nUCPointer&lt;T&gt;::UCPointer(const UCPointer&lt;T&gt;&amp; p) {\n    m_pObj = p.m_pObj;\n    increment();\n}\ntemplate&lt;typename T&gt;\nUCPointer&lt;T&gt;&amp; UCPointer&lt;T&gt;::operator=(const UCPointer&lt;T&gt; &amp;p){\n    if(m_pObj != p.m_pObj) {\n        decrement();\n        m_pObj = p.m_pObj;\n        increment();\n    }\n    return *this;\n}\ntemplate&lt;typename T&gt;\nT* UCPointer&lt;T&gt;::operator-&gt;() const {\n    return m_pObj;\n}\n</code></pre> <pre><code>class String {\npublic:\n    String(const char *);\n    ...\nprivate:\n    UCPointer&lt;StringRep&gt; m_rep;\n};\nString::String(const char *s):m_rep(0) {\n    m_rep = new StringRep(s);// ctor an object use the pointer\n}\n</code></pre> <pre><code>class StringRep:public UCObject {\npublic:\n    StringRep(const char *);\n    ...\nprivate:\n    char *m_pChars;\n    // no assignment op!\n    void operator=(const StringRep&amp;) {}\n};\nStringRep::StringRep(const char *s) {\n    if(s) {\n        int len = strlen(s) + 1;\n        m_pChars = new char[len];\n        strcpy(m_pChars,s);\n    } else {\n        m_pChars = new char[1];\n        *m_pChars = '\\0';\n    }\n}\n</code></pre> In standard library,<code>std::auto_ptr</code> can be used as <code>UCPointer</code> </p>"},{"location":"sp25/oop/note/#oop-design-concept-week-15","title":"OOP Design Concept Week 15","text":""},{"location":"sp25/oop/note/#coupling","title":"Coupling\u8026\u5408","text":"<p>loose coupling:understand one class without reading others;change one class without affecting others Make the coupling between reusable parts(\u53ef\u91cd\u7528) and other classes as loose as possible  </p>"},{"location":"sp25/oop/note/#call-back","title":"call-back","text":"<p>\u56de\u8c03\u51fd\u6570<code>addlistener(Listener *pl)</code> Ioc:\u6ce8\u5165\u53cd\u8f6c,\u53d1\u51fa\u6d88\u606f\u7684\u7c7b\u6784\u9020\u53ef\u63a5\u6536\u5bf9\u8c61\uff0c\u63a5\u6536\u65b9\u6784\u9020\u63a5\u6536\u5b50\u7c7b\uff0c\u901a\u8fc7\u6ce8\u518c\u5bf9\u8c61\u8c03\u7528\u63a5\u6536\u65b9\u4ee3\u7801 <pre><code>class Listener { // \u53ef\u63a5\u6536\u5bf9\u8c61\n    virtual void action() = 0;\n};\nclass Button { // \u53d1\u51fa\u65b9\npublic:\n    onpressed(){pl;} // \u901a\u8fc7\u6ce8\u518c\u5bf9\u8c61\u8c03\u7528\u63a5\u6536\u65b9\u4ee3\u7801\n    addListener(Listener *pl);\nprivate:\n    Listener *pl;\n};\nclass Actor(Button *pB) { // \u63a5\u6536\u65b9\n    pB -&gt; addListener(Actor::f()); //\u6ce8\u518c\u5bf9\u8c61\n    void f() {dance();}\n};\nclass ActorListener: public Listener { // \u63a5\u6536\u5b50\u7c7b\n    void action();\n};\n</code></pre></p>"},{"location":"sp25/oop/note/#message-mech","title":"message mech.","text":"<p>\u6d88\u606f\u673a\u5236\uff1a [model1] \u6240\u4ee5\u5bf9\u8c61\u76f8\u4e92\u72ec\u7acb\uff0c\u4f46\u90fd\u6ce8\u518c\u5728\u4e00\u4e2a\u4e2d\u592e\u6d88\u606f\u673a\u5236\u4e2d\uff0c\u901a\u8fc7\u5411\u4e2d\u592e\u53d1\u9001\u4ea4\u7ed9\u53e6\u4e00\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u5b9e\u73b0\u4fe1\u606f\u4f20\u9012\uff08\u5b57\u7b26\u4e32\u5339\u914d\uff09 [model2] \u5bf9\u6d88\u606f\u673a\u5236\u5212\u5206\u89d2\u8272\uff0c\u5bf9\u8c61\u5411\u4e2d\u592e\u6ce8\u518c\u51fd\u6570 </p>"},{"location":"sp25/oop/note/#cohesion","title":"Cohesion\u5185\u805a","text":"<p>[Definition] the number of diversity of tasks that a single unit is responsible for We aim for high cohesion  </p>"},{"location":"sp25/oop/note/#code-duplication","title":"Code duplication","text":"<p>bad design,hard maintenance </p>"},{"location":"sp25/oop/note/#responsibility-driven-design","title":"Responsibility-driven design","text":"<p>Each class should be responsible for manipulating its own data localizing change When a change is needed,as few classes as possible should be affected  </p>"},{"location":"sp25/oop/note/#refactoring","title":"Refactoring\u91cd\u6784","text":"<p>classes and methons should be refactoried to maintain high cohesion and low coupling Test before and after refactoring  </p>"},{"location":"sp25/oop/note/#extensibility","title":"extensibility","text":"<p>\u53ef\u6269\u5c55\u6027\uff1a\u5982\u679c\u6709\u9700\u6c42\u53d8\u66f4\uff0c\u4ee3\u7801\u4e0d\u7ecf\u4fee\u6539\u5c31\u53ef\u4ee5\u9002\u5e94\u65b0\u7684\u9700\u6c42 \u53ef\u7ef4\u62a4\u6027\uff1a\u5982\u679c\u6709\u9700\u6c42\u53d8\u66f4\uff0c\u4ee3\u7801\u7b80\u5355\u4fee\u6539\u5c31\u53ef\u4ee5\u9002\u5e94\u65b0\u7684\u9700\u6c42  </p>"},{"location":"sp25/oop/note/#encapsulation","title":"Encapsulation","text":"<p>having all the data member private:\u9650\u5236\u6570\u636e\u8bbf\u95ee\uff0c\u907f\u514d\u975e\u6cd5\u72b6\u6001\uff0c\u9690\u85cf\u5b9e\u73b0\u7ec6\u8282\uff0c\u63d0\u9ad8\u5b89\u5168\u6027\u4e0e\u53ef\u7ef4\u62a4\u6027\uff0c\u964d\u4f4e\u8026\u5408  </p>"},{"location":"sp25/oop/note/#stream-week-16","title":"Stream Week 16","text":"<p>[Definition] common logical interface to a device,sequential,one-direction &amp; 1D,produce and consume value at a certain position generic(iostream),file(fstream),string(sstream) extractor<code>&gt;&gt;</code>,insertor<code>&lt;&lt;</code>,manipulation(change the stream state,e.g.<code>endl</code>)  </p>"},{"location":"sp25/oop/note/#kinds-of-stream","title":"Kinds of stream","text":"<p>1.text stream text stream is a special kind of binary stream(everything in a computer is binary) (1)every character is readable (2)organized by line(<code>\\n</code>) (3)perform some character translation(e.g. binary-&gt;text,<code>\\n</code>,0d0a -&gt; 0d by Linux kernel) 2.binary stream no translation  </p>"},{"location":"sp25/oop/note/#predefined-streams","title":"Predefined streams","text":"<p><code>cin</code>,<code>cout</code>,<code>cerr</code>,<code>clog</code> <code>cerr</code>:unbuffered debugging output <code>clog</code>:buffered debugging output <pre><code>cout &lt;&lt; \"Hello\\n\";\ncerr &lt;&lt; \"Bye\\n\";\n/*\n    ./a.out &gt;1   \n    Bye\n    cat 1\n    Hello\n    ./a.out 2&gt;1  # direct cerr to 1\n    Hello\n    cat 1\n    Bye\n    ./a.out &gt;1 2&gt;2\n    cat 1\n    Hello\n    cat 2\n    Bye\n    ./a.out &gt;&gt;1 2&gt;&gt;2 # \u6dfb\u52a0\n    cat 1\n    Hello\n    Hello\n    cat 2\n    Bye\n    Bye\n*/\n</code></pre></p>"},{"location":"sp25/oop/note/#input-operation","title":"Input Operation","text":"<p><pre><code>istream&amp; operator&gt;&gt;(istream&amp; is,T&amp; obj) {\n    return is;\n}\n</code></pre> <code>int get()</code> <pre><code>int ch;\nwhile((ch == cin.get())!= EOF)\n    cout.put(ch);\n</code></pre> <code>istream&amp; get(char&amp; ch)</code>(similar to <code>int get()</code>) <code>istream&amp; getline(istream&amp; is,string&amp; str,char delim='\\n');</code> free function compared,<code>cin.getline(char* ,int size)</code> is not preferred <code>cin.ignore(int limit=1,int delim=EOF)</code> skip over <code>limit</code> or to delimit <code>int gcount()</code>:how many characters read during the last operation <code>void pushback(char)</code> on cin:push a character back to stream <code>char peek()</code>:examine next character without reading it (get &amp; pushback)  </p>"},{"location":"sp25/oop/note/#output-operation","title":"Output Operation","text":"<p><pre><code>ostream&amp; operator&lt;&lt;(ostream&amp; os,const T&amp; obj) {\n    return os;\n}\n</code></pre> <code>put(char)</code>:prints a single character <code>flush()</code>:force c++ buffer written(whether OS &amp; disk is written cannot be determined)  </p>"},{"location":"sp25/oop/note/#manipulator","title":"Manipulator","text":"<p><code>#include&lt;iomanip&gt;</code> <pre><code>int n;\ncout &lt;&lt; \"enter a number in hexdecimal\" &lt;&lt; flush;\ncin &gt;&gt; hex &gt;&gt; n; //\u630916\u8fdb\u5236\u8bfb,all cin holds the state afterwards until we meet a dec\ncout &lt;&lt; setprecision(2) &lt;&lt; 1000.243 &lt;&lt; endl;//\u7cbe\u5ea6\ncout &lt;&lt; setw(20) &lt;&lt; \"OK!\";//\u5bbd\u5ea6\n</code></pre> <code>dec</code>,<code>hex</code>,<code>oct</code>,<code>endl</code>,<code>flush</code>,<code>setw(int)</code>,<code>setfill(char)</code>(\u5de6\u586b\u5145),<code>setbase(int)</code>(\u5176\u4ed6\u8fdb\u5236),<code>ws</code>(\u8df3\u8fc7\u7a7a\u683c),<code>setprecision(int)</code> stream flags <code>ios::skipws</code>,<code>ios::left</code>,<code>ios::internal</code>(pad between sign and value),<code>ios::dec</code>,<code>ios::showbase</code>,<code>ios::showpoint</code>,<code>ios::uppercase</code>,<code>ios::showpos</code> <code>setiosflags(flags)</code>(\u6309\u4f4d\u6216),<code>resetiosflags(flags)</code>(\u7f6e0),<code>setf(flags),unsetf(flags)</code> <pre><code>#include&lt;iostream&gt;\n#include&lt;iomanip&gt;\nmain() {\n    cout.setf(ios::showpos|ios::scientific);\n    cout &lt;&lt; \"123\" &lt;&lt; \" \" &lt;&lt; \"456.78\" &lt;&lt; endl;// +123 +40567800e+02\n    cout &lt;&lt; resetiosflags(ios::showpos) &lt;&lt; 123; // 123\n    return 0;\n}\n</code></pre>  FAIL:\u64cd\u4f5c/\u6570\u636e\u95ee\u9898,ignore,clear to GOOD BAD:\u7528\u6237 checking status:<code>good()</code>,<code>eof()</code>,<code>fail()</code>,<code>bad()</code> <pre><code>int main() \nint n;\ncout &lt;&lt; \"Enter a value for n,then [Enter]\" &lt;&lt; flush;\nwhile(cin.good()) {\n    cin &gt;&gt; n;\n    if(cin) { //an overload to int\n        cin.ignore(INT_MAX,'\\n'); //clear the current line\n        break;\n    }\n    if(cin.fail()) {\n        cin.clear();\n        cin.ignore(INTMAX,'\\n');\n        cout &lt;&lt; \"Try again\" &lt;&lt; flush;\n    }\n}\n</code></pre></p>"},{"location":"sp25/oop/note/#file-stream","title":"File Stream","text":"<p>In C,<code>fopen(filename,rt)</code> for read text mode In C++,we have <code>ios::app</code>(append),<code>ios::ate</code>(position at the end),<code>ios::binary</code>,<code>ios::in</code>,<code>ios::out</code> <pre><code>int main(int argc,char* argv[]) { //argv[0]:program name,argv[1]:source filename,argv[2]:target filename  \n    //correct usage: ./copy source.txt target.txt\n    if(argc != 3) {\n        cerr &lt;&lt; \"Usage: copy file1 file2\" &lt;&lt; endl;\n        exit(1);\n    }\n    ifstream in(argv[1]);\n    if(!in) {\n        cerr &lt;&lt; \"Unable to open file\" &lt;&lt; argv[1];\n        exit(2);  \n    }\n    ofstream out(argv[2]);\n    if(!out) {\n        cerr &lt;&lt; \"Unable to open file\" &lt;&lt; argv[2];\n        exit(2);  \n    }\n    char c;\n    while(in &gt;&gt; c)\n        out &lt;&lt; c;\n}\n</code></pre> <code>open(filename,mode)</code> <pre><code>ifstream inputS;\ninputS.open(\"somefile\",ios::in);\nif(!inputS) {\n    cerr &lt;&lt; \"Unable to open somefile\"; \n    ...\n</code></pre></p>"},{"location":"sp25/oop/note/#cast-operators","title":"Cast Operators\u8fd0\u7b97\u7b26","text":"<p>1.<code>static_cast</code>:compile time cast(int -&gt; float,parent pointer/reference -&gt; child,void -&gt; T) <pre><code>int main() {\n    int a=10;\n    double b = static_cast&lt;double&gt;(a);\n    class Base{};\n    class Derived:public Base{};\n    Derived* d;\n    Base* baseptr = static_cast&lt;Base*&gt;(&amp;d);\n    void* voidptr = &amp;a;\n    int* intptr = static_cast&lt;int*&gt;(voidptr);  \n}\n</code></pre> \u5fc5\u987b\u6709\u8f6c\u6362\u89c4\u5219 2.<code>dynamic_cast</code>:for Polymorphism(recall up-casting) <pre><code>class Base {\n    virtual void foo() {}\n};\nclass Derived: public Base {};\nint main() {\n    Base* baseptr = new Derived();\n    Derived* derivedptr = dynamic_cast&lt;Derived*&gt;(baseptr);//runtime check\n    if(derivedptr)\n        std::cout &lt;&lt; \"Cast succeed\" &lt;&lt; endl;\n    else \n        std::cout &lt;&lt; \"Cast failed\" &lt;&lt; endl;\n    delete baseptr;\n}\n</code></pre> \u5fc5\u987b\u6709\u7ee7\u627f\u5173\u7cfb 3.<code>const_cast</code>:change const/volatile(\u6613\u53d8\uff0c\u4e0d\u80fd\u4f18\u5316\uff0c\u5fc5\u987b\u4e0e\u5185\u5b58\u505a\u4ea4\u6362) attribute <pre><code>int main() {\n    const int a = 10;\n    int* b = const_cast&lt;int*&gt;(&amp;a);//remove const\n    *b = 20;\n}\n</code></pre> 4.<code>reinterpret_cast</code>:any type conversion(maybe dangerous),no type check <pre><code>int main() {\n    int a = 65;\n    char* chptr = reinterpret_cast&lt;char*&gt;(&amp;a);\n    std::cout &lt;&lt; *chptr &lt;&lt; endl;// 'A' in ASCII\n}\n</code></pre> \u4ec5\u8003\u5bdf123\u7684\u4f7f\u7528\u573a\u666f</p>"},{"location":"sp25/oop/note/#final-exam","title":"Final Exam","text":"<p>\u4e0d\u8003\u5bdf\uff1a\u53f3\u503c\u5f15\u7528\uff0c\u79fb\u52a8\u6784\u9020\uff0c\u6210\u5458\u53d8\u91cf\u6784\u9020\u521d\u59cb\u5316\uff0c\u4ee3\u7406\u6784\u9020  \u5199\u8f93\u51fa\uff0c\u9009\u62e9\uff0c\u6539\u9519 \u586b\u7a7a\u9898:exception,overload,template... \u8bbe\u8ba1\u9898:\u4e0d\u7f16\u8bd1\uff0c\u4e0d\u8fd0\u884c  </p>"},{"location":"sp25/oop/note/#supplement","title":"Supplement","text":""},{"location":"sp25/oop/note/#namespace","title":"namespace","text":"<p>\u547d\u540d\u7a7a\u95f4\uff1a\u5212\u5206\u5168\u5c40\u7c7b\u540d\u907f\u514d\u540d\u5b57\u51b2\u7a81\uff0c\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u53ef\u4ee5\u5b9a\u4e49\u76f8\u540c\u7684\u53d8\u91cf\u540d <pre><code>namespace space1{\n    string name = \"randomstar\";\n    void foo();\n    class cat(){\n        public:\n        void meow();\n    };\n} //no ',' or ';' here!\nnamespace space2{\n    string name = \"ToyamaKasumi\";\n    void foo();\n}\nnamespace space2{\n    void g();\n}\nint main()\n{\n    cout &lt;&lt; space1::name &lt;&lt; endl;\n    using namespace space2;\n    cout &lt;&lt; name &lt;&lt; endl;\n    space1::foo();\n    using space1::foo();\n    using space1::cat;\n    foo();\n    cat c;\n    c.meow();\n    using namespace space1;\n    using namespace space2;\n    foo(); //ERROR\n}\n</code></pre></p>"},{"location":"sp25/oop/note/#typeid","title":"typeid","text":"<pre><code>#include&lt;typeinfo&gt;\nA *ap = new B;\nstd::cout &lt;&lt; typeid(*ap).name() &lt;&lt; std::endl;\n//output:B if virtual A else A\n</code></pre> <p>\u9519\u9898\u96c6 </p>"},{"location":"sp25/oop/final_review/fa24/","title":"\u5355\u9009\u9898\uff08\u6bcf\u98982\u5206\uff09","text":"<p>1. Inline functions are avoided when ___</p> <p>A. function contains static variables B. function have recursive calls C. function have loops D. all of the mentioned  </p> <p>2. Which is the correct statement about operator overloading?</p> <p>A. Only arithmetic operators can be overloaded B. Only non-arithmetic operators can be overloaded C. Precedence of operators are changed after overloading D. Associativity and precedence of operators does not change  </p> <p>3. Pick out the correct statement.</p> <p>A. A friend function must be a member of another class B. A friend function cannot be a member of another class C. A friend function may or may not be a member of another class D. None of the mentioned  </p> <p>4. When a copy constructor is called?</p> <p>A. When an object of the class is returned by value B. When an object of the class is passed by value to a function C. When an object is constructed based on another object of the same class D. All of the mentioned  </p> <p>5. When destructors are called?</p> <p>A. When a program ends B. When a function ends C. When a delete operator is used D. All of the mentioned  </p> <p>6. What will be the output of the following C++ code?</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nclass Mammal {\npublic:\n    virtual void Define() {\n        cout &lt;&lt; \"I'm a Mammal\\n\";\n    }\n};\n\nclass Human : public Mammal {\npublic:\n    void Define() {\n        cout &lt;&lt; \"I'm a Human\\n\";\n    }\n};\n\nclass Male : public Human {\npublic:\n    void Define() {\n        cout &lt;&lt; \"I'm a Male\\n\";\n    }\n};\n\nclass Female : public Human {\npublic:\n    void Define() {\n        cout &lt;&lt; \"I'm a Female\\n\";\n    }\n};\n\nint main(int argc, char const *argv[]) {\n    Mammal *M = new Mammal();\n    Male m;\n    Female f;\n    *M = m;\n    M-&gt;Define();\n    M = &amp;m;\n    M-&gt;Define();\n    return 0;\n}\n</code></pre> <p>A. I'm a Male    I'm a Male  </p> <p>B. I'm a Male    I'm a Mammal  </p> <p>C. I'm a Mammal    I'm a Male  </p> <p>D. I'm a Mammal    I'm a Mammal  </p> <p>7. Which is the correct statement about pure virtual functions?</p> <p>A. They must be implemented inside a base class B. Pure keyword should be used to declare a pure virtual function C. Pure virtual function is implemented in derived classes D. Pure virtual function cannot be implemented in derived classes  </p> <p>8. Pick out the correct statement about the override.</p> <p>A. Overriding refers to a derived class function that has the same name and signature as a base class virtual function B. Overriding has different names C. Overriding refers to a derived class D. Overriding has different names &amp; it refers to a derived class  </p> <p>9. In nested try-catch block, if the inner catch block gets executed, then_</p> <p>A. Program stops immediately B. Outer catch block also executes C. Compiler jumps to the outer catch block and executes remaining statements of the main() function D. Compiler executes remaining statements of outer try-catch block and then the main() function  </p> <p>10. What does this template function indicate?</p> <pre><code>template&lt;class T&gt;\nT func(T a) {\n    cout &lt;&lt; a;\n}\n</code></pre> <p>A. A function taking a single generic parameter and returning a generic type B. A function taking a single generic parameter and returning nothing C. A function taking single int parameter and returning a generic type D. A function taking a single generic parameter and returning a specific non-void type  </p> <p>11. The static data member ________</p> <p>A. Can be accessed directly B. Can be accessed with any public class name C. Can only be accessed with dot operator D. Can be accessed using class name if not using static member function  </p> <p>12. What is the purpose of the this pointer in C++?</p> <p>A. To refer to the current object within a member function. B. To access static data members of the class. C. To allocate memory dynamically for an object. D. To initialize constant data members of the class.  </p> <p>13. Which among the following is true for default arguments?</p> <p>A. They are only allowed in the return type of the function declaration. B. They are only allowed in the parameter list of the function declaration. C. They are only allowed with the class name definition. D. They are only allowed with the integer type values.  </p> <p>14. Which problem may arise if we use abstract class functions for polymorphism?</p> <p>A. All classes are converted as abstract class B. Derived class must be of abstract type C. All the derived classes must implement the undefined functions D. Derived classes can\u2019t redefine the function  </p> <p>15. Pick the correct statement about references in C++</p> <p>A. References stores the address of variables B. References and variables both have the same address C. References use dereferencing operator(*) to access the value of variable its referencing D. References were also available in C  </p>"},{"location":"sp25/oop/final_review/fa24/#_1","title":"\u586b\u7a7a\u9898","text":"<p>1. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass BaseError {\npublic:\n    BaseError() { cout &lt;&lt; \"BaseError\" &lt;&lt; endl; }\n};\n\nclass FileError : public BaseError {\npublic:\n    FileError(const string&amp; filename) { m_filename = filename; }\n    void display() { cout &lt;&lt; \"FileError: \" &lt;&lt; m_filename &lt;&lt; endl; }\nprotected:\n    string m_filename;\n};\n\nvoid ReadFile(const string&amp; filename) {\n    if (filename == \"badfile.txt\")\n        throw FileError(filename);\n    cout &lt;&lt; \"File read successfully\" &lt;&lt; endl;\n}\n\nvoid ProcessFile(const string&amp; filename) {\n    try {\n        ReadFile(filename);\n    } catch (FileError&amp; fe) {\n        fe.display();\n        throw;\n    }\n}\n\nint main() {\n    try {\n        ProcessFile(\"goodfile.txt\");\n        ProcessFile(\"badfile.txt\");\n    } catch (...) {\n        cout &lt;&lt; \"Main exception caught\" &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre> <p>2. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Shape {\npublic:\n    virtual void draw() { cout &lt;&lt; \"Drawing a shape\" &lt;&lt; endl; }\n    void display() { cout &lt;&lt; \"Shape\" &lt;&lt; endl; }\n};\n\nclass Circle : public Shape {\npublic:\n    void display() { cout &lt;&lt; \"Circle\" &lt;&lt; endl; }\n};\n\nclass Square : public Shape {\npublic:\n    void draw() override { cout &lt;&lt; \"Drawing a square\" &lt;&lt; endl; }\n    void display() { cout &lt;&lt; \"Square\" &lt;&lt; endl; }\n};\n\nvoid render(Shape* shape) {\n    shape-&gt;draw();\n}\n\nint main() {\n    Circle circle;\n    Square square;\n    Shape shape;\n\n    Shape* shapes[3];\n    shapes[0] = &amp;circle;\n    shapes[1] = &amp;square;\n    shapes[2] = &amp;shape;\n\n    for (int i = 0; i &lt; 3; ++i) {\n        render(shapes[i]);\n    }\n\n    return 0;\n}\n</code></pre> <p>3. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntemplate&lt;class T&gt;\nclass Item {\npublic:\n    void print() { cout &lt;&lt; \"Item&lt;T&gt;\" &lt;&lt; endl; }\n};\n\ntemplate&lt;&gt;\nclass Item&lt;double&gt; {\npublic:\n    void print() { cout &lt;&lt; \"Item&lt;double&gt;\" &lt;&lt; endl; }\n};\n\ntemplate&lt;&gt;\nclass Item&lt;bool&gt; {\npublic:\n    void print() { cout &lt;&lt; \"Item&lt;bool&gt;\" &lt;&lt; endl; }\n};\n\nint main() {\n    Item&lt;int&gt; item1;\n    Item&lt;float&gt; item2;\n    Item&lt;double&gt; item3;\n\n    item1.print();\n    item2.print();\n    item3.print();\n\n    return 0;\n}\n</code></pre> <p>4. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Counter {\npublic:\n    Counter() {\n        count++;\n    }\n    ~Counter() {\n        count--;\n    }\n    static int getCount() {\n        return count;\n    }\nprivate:\n    static int count;\n};\n\nint Counter::count = 0;\n\nvoid func() {\n    Counter c1;\n    cout &lt;&lt; Counter::getCount() &lt;&lt; endl;\n}\n\nint main() {\n    func();\n    cout &lt;&lt; Counter::getCount() &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>5. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Base {\npublic:\n    virtual void display() const {\n        cout &lt;&lt; \"Base display\" &lt;&lt; endl;\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void display() const override {\n        cout &lt;&lt; \"Derived display\" &lt;&lt; endl;\n    }\n};\n\nint main() {\n    Base* b = new Derived();\n    Derived* d = dynamic_cast&lt;Derived*&gt;(b);\n    if (d != nullptr) {\n        d-&gt;display();\n    } else {\n        cout &lt;&lt; \"Conversion failed\" &lt;&lt; endl;\n    }\n\n    double pi = 3.14159;\n    int i = static_cast&lt;int&gt;(pi);\n    cout &lt;&lt; i &lt;&lt; endl;\n\n    delete b;\n    return 0;\n}\n</code></pre> <p>6. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Employee {\npublic:\n    Employee() {\n        cout &lt;&lt; \"Employee ctor called\" &lt;&lt; endl;\n    }\n\n    virtual ~Employee() {\n        cout &lt;&lt; \"Employee dtor called\" &lt;&lt; endl;\n    }\n\n    virtual void show() const {\n        cout &lt;&lt; \"Employee::show()\" &lt;&lt; endl;\n    }\n};\n\nclass Manager : public Employee {\npublic:\n    Manager() {\n        cout &lt;&lt; \"Manager ctor called\" &lt;&lt; endl;\n    }\n\n    ~Manager() {\n        cout &lt;&lt; \"Manager dtor called\" &lt;&lt; endl;\n    }\n\n    void show() const override {\n        cout &lt;&lt; \"Manager::show()\" &lt;&lt; endl;\n    }\n};\n\nvoid display(Employee* b) {\n    b-&gt;show(); \n}\n\nint main() {\n    Employee* b = new Manager(); \n    display(b); \n\n    delete b; \n    return 0;\n}\n</code></pre> <p>7. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nnamespace A {\n    int value = 10;\n\n    namespace B {\n        int value = 20;\n\n        int getValue() {\n            return value - A::value; \n        }\n    }\n}\n\nnamespace C {\n    int value = 30;\n\n    int getValue() {\n        return value + A::B::getValue(); \n    }\n}\n\nint main() {\n    cout &lt;&lt; A::B::getValue() &lt;&lt; endl; \n    cout &lt;&lt; C::getValue() &lt;&lt; endl;     \n    cout &lt;&lt; A::value + C::value &lt;&lt; endl; \n    return 0;\n}\n</code></pre> <p>8. What are the output of the following code?</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nusing namespace std;\n\nclass DynamicArray {\npublic:\n    DynamicArray(int size = 0) : size(size), data(new int[size]) {\n        for (int i = 0; i &lt; size; ++i) {\n            data[i] = i+1; \n        }\n    }\n\n    DynamicArray(const DynamicArray&amp; other) : size(other.size), data(new int[other.size]) {\n        for (int i = 0; i &lt; other.size; ++i) {\n            data[i] = other.data[i];\n        }\n    }\n\n    DynamicArray&amp; operator=(const DynamicArray&amp; other) {\n        if (this != &amp;other) {\n            delete[] data; \n            size = other.size;\n            data = new int[size];\n            for (int i = 0; i &lt; size; ++i) {\n                data[i] = other.data[i];\n            }\n        }\n        return *this;\n    }\n\n    DynamicArray operator+(const DynamicArray&amp; other) {\n        DynamicArray result(size + other.size);\n        for (int i = 0; i &lt; size; ++i) {\n            result.data[i] = data[i];\n        }\n        for (int i = 0; i &lt; other.size; ++i) {\n            result.data[size + i] = other.data[i];\n        }\n        return result;\n    }\n\n    int&amp; operator[](int index) {\n        return data[index];\n    }\n\n    friend ostream&amp; operator&lt;&lt;(ostream&amp; os, const DynamicArray&amp; arr) {\n        for (int i = 0; i &lt; arr.size; ++i) {\n            os &lt;&lt; arr.data[i] &lt;&lt; (i &lt; arr.size - 1 ? \", \" : \"\");\n        }\n        return os;\n    }\n\n    ~DynamicArray() {\n        delete[] data;\n    }\n\nprivate:\n    int size;\n    int* data;\n};\n\nint main() {\n    DynamicArray arr1(3); \n    DynamicArray arr2(2); \n    DynamicArray arr3;\n\n    arr3 = arr1 + arr2; \n\n    arr3[2] = 10; \n    cout &lt;&lt; arr3[0] &lt;&lt; endl; \n    cout &lt;&lt; arr3[1] &lt;&lt; endl; \n    cout &lt;&lt; arr3[2] &lt;&lt; endl; \n    cout &lt;&lt; arr3[4] &lt;&lt; endl; \n\n    return 0;\n}\n</code></pre>"},{"location":"sp25/oop/final_review/fa24/#_2","title":"\u7a0b\u5e8f\u586b\u7a7a\u9898","text":"<p>1. Fill-in-the-Blank Question about Template Partial Specialization</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\n// Primary template\ntemplate &lt;typename T&gt;\nclass MyClass {\npublic:\n    MyClass(T v): value(v) {}\n    void Display() { cout &lt;&lt; \"Primary Template: \" &lt;&lt; value &lt;&lt; endl; }\n\nprivate:\n    T value;\n};\n\ntemplate &lt;typename T&gt;\nclass MyClass&lt;______&gt;  // Blank 1: Declare class template for T*\n{\npublic:\n    MyClass(T* v): value(_______), pValue(v) {}  // Blank 2: Initialize member variable\n    void DisplayPtr() { cout &lt;&lt; \"Partial Specialization: \" &lt;&lt; pValue &lt;&lt; endl; }\n    void Display() { cout &lt;&lt; \"Partial Specialization: \" &lt;&lt; value &lt;&lt; endl; }\n\nprivate:\n    T* pValue;\n    T  value;\n};\n\nint main() {\n    MyClass&lt;int&gt; obj1(10);\n    obj1.Display(); \n\n    int value = 20;\n    MyClass&lt;int*&gt; obj2(______);  // Blank 3: Initialize obj2 with partial specification \n    obj2.______();  // Blank 4: Call the Display method for obj2\n\n    return 0;\n}\n</code></pre> <p>2. Fill-in-the-Blank Question about Inheritance and Polymorphism</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nclass Shape {\npublic:\n    Shape(const std::string&amp; name): ______(name) {}\n    virtual void calculateArea() {}\n    void display() const {\n        cout &lt;&lt; mName &lt;&lt; \" area: \" &lt;&lt; mArea &lt;&lt; endl;\n    }\n\n    ______ ~Shape(){   \n        cout &lt;&lt; \"Destructor of Shape is called\" &lt;&lt; endl;\n    }\n\nprotected:\n    float mArea;\n\nprivate:\n    std::string mName;\n};\n\nclass Circle : ______ Shape {\npublic:\n    Circle(float r): Shape(\"Circle\"), mRadius(r) {}\n    void calculateArea() {\n        mArea = 3.14 * mRadius * mRadius;\n    }\n    ~Circle()  {\n        cout &lt;&lt; \"Destructor of a subclass is called\" &lt;&lt; endl;\n    }\nprivate:\n    float mRadius;\n};\n\nclass Square : public Shape {\npublic:\n    Square(float s): Shape(\"Square\"), mSide(s) {}\n    void calculateArea() {\n        mArea = mSide * mSide;\n    }\nprivate:\n    float mSide;\n};\n\nint main() {\n    ______ shapes[2]; \n    shapes[0] = new Circle(2.0);\n    shapes[1] = new ______(4.0); \n\n    for(int i = 0; i &lt; 2; i++) {\n        shapes[i]-&gt;calculateArea();\n        shapes[i]-&gt;display();\n\n        ______ shapes[i]; \n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"sp25/oop/final_review/fa24/#20","title":"\u4e3b\u89c2\u9898\uff0820\u5206\uff09","text":"<p>Online Support Chat System</p> <p>We aim to design an Online Support Chat System that routes customer queries to appropriate support agents based on their expertise. The system follows the Chain of Responsibility Design Pattern, allowing queries to be processed step by step through a chain of handlers.</p> <p>There are 6 classes in total in the system:</p> <p>SupportQuery: A class representing a customer query, with the following attribute: \u2022 type: The type of query (e.g., \"Billing\", \"Technical\", \"Customer Service\").</p> <p>Handler: An abstract class representing a generic handler in the chain. It declares: \u2022 SetNext(Handler* handler): Links the current handler to the next handler in the chain. \u2022 Handle(SupportQuery&amp; query): Processes or forwards the query.</p> <p>BaseHandler: A class derived from Handler implementing default chaining behavior. It forwards queries to the next handler if the current handler cannot process them.</p> <p>BillingHandler: A concrete handler that processes queries of type \"Billing\". If the query is not \"Billing\", it will forward the query to the next handler in the chain.</p> <p>TechnicalHandler: A concrete handler that processes queries of type \"Technical\". If the query is not \"Technical\", it will forward the query to the next handler in the chain.</p> <p>CustomerServiceHandler: A concrete handler that processes queries of type \"Customer Service\". If the query is not \"Customer Service\", it will forward the query to the next handler in the chain.</p> <p>The implementation for BaseHandler and BillingHandler are as follows:</p> <pre><code>// Implements chaining logic class\n// BaseHandler implements chaining logic\nclass BaseHandler : public Handler {\nprivate:\n    Handler* nextHandler = nullptr;\npublic:\n    Handler* SetNext(Handler* handler) override {\n        nextHandler = handler;\n        return handler;\n    }\n    string Handle(SupportQuery&amp; query) override {\n        if (nextHandler) {\n            return nextHandler-&gt;Handle(query);\n        }\n        return {};\n    }\n};\n\n// Concrete Handlers\nclass BillingHandler : public BaseHandler {\npublic:\n    string Handle(SupportQuery&amp; query) override {\n        if (query.getType() == \"Billing\") {\n            return \"BillingHandler: Handling Billing query.\\n\";\n        } else {\n            return BaseHandler::Handle(query);\n        }\n    }\n};\n</code></pre> <p>Your task is to implement SupportQuery, Handler, TechnicalHandler, and CustomerServiceHandler classes, in order to make sure that the following code works properly.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\n// Client code to test the chain\nvoid ClientCode(Handler&amp; handler, vector&lt;SupportQuery&gt;&amp; queries) {\n    for (auto&amp; query : queries) {\n        cout &lt;&lt; \"Processing query (Type: \" &lt;&lt; query.getType() &lt;&lt; \")\\n\";\n        const string result = handler.Handle(query);\n        if (!result.empty()) {\n            cout &lt;&lt; \"  \" &lt;&lt; result;\n        } else {\n            cout &lt;&lt; \"  \" &lt;&lt; query.getType() &lt;&lt; \" query was left unhandled.\\n\";\n        }\n    }\n}\n\nint main() {\n    // Create handlers\n    BillingHandler* billing = new BillingHandler;\n    TechnicalHandler* technical = new TechnicalHandler;\n    CustomerServiceHandler* customerService = new CustomerServiceHandler;\n\n    // Build the chain\n    billing-&gt;SetNext(technical)-&gt;SetNext(customerService);\n\n    // Test queries\n    vector&lt;SupportQuery&gt; queries = {\n        SupportQuery(\"Billing\"),\n        SupportQuery(\"Technical\"),\n        SupportQuery(\"Customer Service\")\n    };\n    cout &lt;&lt; \"Chain: Billing &gt; Technical &gt; Customer Service\" &lt;&lt; endl;\n    ClientCode(*billing, queries);\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Subchain: Technical &gt; Customer Service\" &lt;&lt; endl;\n    ClientCode(*technical, queries);\n\n    // Clean up\n    delete billing;\n    delete technical;\n    delete customerService;\n    return 0;\n}\n</code></pre> <p>The output of the program will be:</p> <pre><code>Chain: Billing &gt; Technical &gt; Customer Service\nProcessing query (Type: Billing)\n  BillingHandler: Handling Billing query.\nProcessing query (Type: Technical)\n  TechnicalHandler: Handling Technical query.\nProcessing query (Type: Customer Service)\n  CustomerServiceHandler: Handling Customer Service query.\n\nSubchain: Technical &gt; Customer Service\nProcessing query (Type: Billing)\n  Billing query was left unhandled.\nProcessing query (Type: Technical)\n  TechnicalHandler: Handling Technical query.\nProcessing query (Type: Customer Service)\n  CustomerServiceHandler: Handling Customer Service query.\n</code></pre> <p>Answer: DDCDD CCADB DABCB \u7a0b\u5e8f\u8f93\u51fa\u9898\uff1a File read successfully  [1\u5206] BaseError  [1\u5206] FileError: badfile.txt  [1\u5206] Main exception caught  [1\u5206]</p> <p>Drawing a shape  [1\u5206] Drawing a square  [1\u5206] Drawing a shape  [1\u5206]</p> <p>Item  [1\u5206] Item  [1\u5206] Item  [1\u5206] <p>1  [2\u5206] 0  [2\u5206]</p> <p>Derived display  [2\u5206] 3  [2\u5206]</p> <p>Employee ctor called  [1\u5206] Manager ctor called  [1\u5206] Manager::show()  [1\u5206] Manager dtor called  [1\u5206] Employee dtor called  [1\u5206]</p> <p>10  [1\u5206] 40  [1\u5206] 40  [1\u5206]</p> <p>1  [1\u5206] 2  [1\u5206] 10  [1\u5206] 2  [1\u5206] \u7a0b\u5e8f\u586b\u7a7a\u9898\uff1a T  [2\u5206] v  [2\u5206] &amp;value  [2\u5206] Display  [2\u5206]</p> <p>mName  [2\u5206] virtual  [2\u5206] public  [2\u5206] Shape*  [2\u5206] Square  [2\u5206] delete  [2\u5206]</p>"},{"location":"sp25/oop/hw1/","title":"Index","text":"<p>In this program,we are given a list of students and their scores of different courses(in score.txt) We want to calculate the average score for each student and each course,and for each course,we also want to calculate the lowest and highest score for each course. The result is output as a list.  The average score for each student is accurate to five decimal places while the average score for each course is accurate to one decimal places.  </p> <p>The program is running under g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0  </p> <p>Run the program by executing <code>make run</code>.  </p> <p>The result will display in the terminal.</p>"},{"location":"sp25/oop/hw2/","title":"Index","text":"<p>This program is based on student1. Each record consists of a name (w/o space) and scores are in integer ranging from 1 to 5. In addition to the first homework,we are asked to write a CLI which reads scoring records of students and prints out a summary sheet. Specifically,the user can input an arbitary number of students each takes arbitary number of courses. Each record consists of the course id/name and the score the student gained. Note that a student usually won't choose every available course. We use NA to represent that a student didn't take the certain course.</p> <p>The program is running under g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0  </p> <p>Run the program by executing <code>make run</code>.  </p> <p>The result will display in the terminal.</p> <p>sample input:(14 tests) <pre><code>K.Alice Chinese 4 Math 5 Physics 2 Biology 5 History 3 Politics 4\nJ.Bob English 5 Chemistry 3 Chinese 3 Math 4 Geography 3 Politics 5 History 4 Physics 3 Biology 3\nF.Charlie Biology 3 Politics 3 Chinese 5 Math 4 Chemistry 2\nM.David Geography 4\nP.Eva Politics 4 English 4 Math 2 Chinese 3 History 4 Biology 5\nS.Frank English 2 Math 4 Chinese 5\nG.Grace History 5 Geography 4 Politics 3 Chinese 4 Math 1 Biology 4\nV.Helen Physics 3 Math 4 English 4 Politics 3 Geography 2 Chinese 5 Chemistry 3 Biology 1\nL.Ivy Chinese 4 Math 3 English 4 Physics 4 Chemistry 2 Biology 3\nN.Jack Chinese 3 Math 5 English 2 History 4 Politics 2 Geography 5\nI.Kate Math 4 Physics 2 Chemistry 3 Biology 5\nH.Leo English 3 Chinese 5 Politics 2 Geopgraphy 4 History 5\nT.Mia English 5 History 5 Geography 5 Physics 4 Math 5\nW.Noah Politics 2 Geography 1 Math 1 Chinese 2 Biology 1 History 1\nStudentA ads 93 oop 91 fds 79\nStudentB cg 87 bs 92 os 88\n&lt;Ctrl + D&gt;\n</code></pre></p> <p>sample output: <pre><code>no        name      Chinese   Math      English   Physics   Chemistry Biology   History   Politics  Geography average   \n1         K.Alice   4         5         NA        2         NA        5         3         4         NA        3.83333   \n2         J.Bob     3         4         5         3         3         3         4         5         3         3.66667   \n3         F.Charlie 5         4         NA        NA        2         3         NA        3         NA        3.4       \n4         M.David   NA        NA        NA        NA        NA        NA        NA        NA        4         4         \n5         P.Eva     3         2         4         NA        NA        5         4         4         NA        3.66667   \n6         S.Frank   5         4         2         NA        NA        NA        NA        NA        NA        3.66667   \n7         G.Grace   4         1         NA        NA        NA        4         5         3         4         3.5       \n8         V.Helen   5         4         4         3         3         1         NA        3         2         3.125     \n9         L.Ivy     4         3         4         4         2         3         NA        NA        NA        3.33333   \n10        N.Jack    3         5         2         NA        NA        NA        4         2         5         3.5       \n11        I.Kate    NA        4         NA        2         3         5         NA        NA        NA        3.5       \n12        H.Leo     5         NA        3         NA        NA        NA        5         2         NA        3.8       \n13        T.Mia     NA        5         5         4         NA        NA        5         NA        5         4.8       \n14        W.Noah    2         1         NA        NA        NA        1         1         2         1         1.33333   \n          average   3.9       3.5       3.6       3.0       2.6       3.3       3.9       3.1       3.4       \n          min       2         1         2         2         2         1         1         2         1         \n          max       5         5         5         4         3         5         5         5         5         \n</code></pre></p>"},{"location":"sp25/oop/hw3/","title":"Index","text":"<p>This program is a CLI game called adventure. In the game,a player explore the castle which consists of many rooms.The task of the player is to find the room where the princess is prisoned and take her to leave. There are many types of room each has distinct exits and there is a monster in the castle whose location is unknown. The game is over if the player encounters the monster. The game starts in the lobby and the only way to leave is via the lobby.  </p> <p>The program is running under g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0  </p> <p>Run the program by executing <code>make run</code>.  </p> <p>The result will display in the terminal.</p> <p>The maze figure is as follows: </p> <p>sample interaction: <pre><code>&gt; Game start!\n&gt; Type 'help' if you don't know what to do.\n&gt; Welcome to the Lobby. There are 3 exits: west, east and up.\n&gt; Enter your command:\ngo west\n&gt; Moving to west\n&gt; Welcome to the Room 1. There are 2 exits: east and up.\n&gt; Enter your command:\ngo up\n&gt; Moving to up\n&gt; Welcome to the Room 3. There are 2 exits: east and down.\n&gt; Enter your command:\ngo east\n&gt; Moving to east\n&gt; Princess:Help me!\n&gt; You:Don't be afraid!\n&gt; Princess:Take me to the lobby.\n&gt; Welcome to the Room 4. There are 3 exits: west, east and down.\n&gt; Enter your command:\ngo down\n&gt; Moving to down\n&gt; You take the princess to the lobby!\n&gt; You win!\n</code></pre> <pre><code>&gt; Game start!\n&gt; Type 'help' if you don't know what to do.\n&gt; Welcome to the Lobby. There are 3 exits: west, east and up.\n&gt; Enter your command:\ngo up\n&gt; Moving to up\n&gt; Princess:Help me!\n&gt; You:Don't be afraid!\n&gt; Princess:Take me to the lobby.\n&gt; Welcome to the Room 4. There are 3 exits: west, east and down.\n&gt; Enter your command:\ngo east\n&gt; Moving to east\n&gt; Whoops! Monster here!\n&gt; Game over!\n</code></pre></p>"},{"location":"sp25/oop/hw4/","title":"Index","text":"<p>This programme is a CLI software called personal diary. The software consists of four programs(.exe):</p> <ul> <li><code>pdadd</code>:add an entity to the diary for the date,replace if an old diary of the same date already exists.   read from stdin until <code>.</code> or <code>EOF</code></li> <li><code>pdlist[]</code>:list all the entities in the diary ordered by date or list all the entities in the period provided by stdin by <code>start</code> and <code>end</code></li> <li><code>pdshow</code>:prints the content of the entity specified by the date</li> <li><code>pdremove</code>:remove one entity of the date(returns 0 on success and -1 on failure)</li> </ul> <p>The software stores the diary in <code>diary.txt</code>, and reads it to the memory at the beginning of each program, and stores it back to the file at the end of the process.</p> <p>The program is running under g++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0  </p> <p>Run the program by executing <code>make</code> and <code>./&lt;program_name&gt;.exe</code>(in directory /program),or simply <code>make run&lt;program_name&gt;</code>,e.g.<code>make runpdadd</code> </p> <p>Run test by executing <code>make test</code> </p> <p>The result will display in the terminal.</p> <p>Note:some entities already in diary.txt <pre><code>1.1\nSunny\nNew Year's Day\n4.4\nRainy\nQingMing\n5.1\nSunny\nInternational Labor Day\n5.31\nCloudy\nDragon Boat Festival\n10.1\nSunny\nNational Day\n</code></pre></p> <p>sample interaction: <code>./pdadd.exe</code> <pre><code>&gt; Diary open succeed.\n&gt; Type `help` if you don't know what to do.\nhelp\n&gt; `pdadd &lt;date&gt;` to add an entity,end by a line with a single `.` or `EOF`(`Ctrl-D` in Unix and `Ctrl-Z` in Windows).\n&gt; All the dates are in form &lt;month&gt;.&lt;date&gt;,e.g. 5.1.\n&gt; `bye` to exit the program.\npdadd 4.1\nSunny today!\nHappy April Fools Day!\n.\n&gt; Add 4.1\npdadd 4.2\n.\n&gt; Error: Content cannot be empty!\npdadd 4.4\nRainy today!\nWish you peace and health during the QingMing Festival!\n.\n&gt; Replace 4.4\n</code></pre> <code>./pdlist.exe</code> <pre><code>&gt; Diary open succeed.\n&gt; Type `help` if you don't know what to do.\nhelp\n&gt; `pdlist` to list entities ordered by date.\n&gt; `pdlist [&lt;start_date&gt;,&lt;end_date&gt;] to list entities during the period.\n&gt; All the dates are in form &lt;month&gt;.&lt;date&gt;,e.g. 5.1.\n&gt; `bye` to exit the program.\npdlist\n1.1\n...\npdlist []\n1.1\n...\npdlist [4.1,6.1]\n4.1\nSunny today!\nHappy April Fools Day!\n4.4\nRainy today!\nWish you peace and health during the QingMing Festival!\n5.1\nSunny\nInternational Labor Day\n5.31\nCloudy\nDragon Boat Festival\n</code></pre> <code>./pdshow.exe</code> <pre><code>&gt; Diary open succeed.\n&gt; Type `help` if you don't know what to do.\nhelp\n&gt; `pdshow &lt;date&gt;` to print the content specified by the date.\n&gt; All the dates are in form &lt;month&gt;.&lt;date&gt;,e.g. 5.1.\n&gt; `bye` to exit the program.\npdshow 10.1\nSunny\nNational Day\npdshow 10.2\n&gt; Contents Not Found!\npdshow 10.32\n&gt; Invalid Input! Try again!\n</code></pre> <code>./pdremove.exe</code> <pre><code>&gt; Diary open succeed.\n&gt; Type `help` if you don't know what to do.\nhelp\n&gt; `pdremove &lt;date&gt;` to remove one entity of the date. \n&gt; All the dates are in form &lt;month&gt;.&lt;date&gt;,e.g. 5.1.\n&gt; `bye` to exit the program.\npdremove 1.1\n&gt; remove succeed!\npdremove 1.2\n&gt; remove fail!\n&gt; Contents Not Found!\nbye\n&gt; Bye~!\n&gt; Diary closed.\n</code></pre> output: <pre><code>4.1\nSunny today!\nHappy April Fools Day!\n4.4\nRainy today!\nWish you peace and health during the QingMing Festival!\n5.1\nSunny\nInternational Labor Day\n5.31\nCloudy\nDragon Boat Festival\n10.1\nSunny\nNational Day\n</code></pre> Additional test for <code>pdadd</code>(concerning <code>EOF</code>) <pre><code>&gt; Diary open succeed.\n&gt; Type `help` if you don't know what to do.\npdadd 4.4\nRainy today!\nWish you peace and health during the QingMing Festival!\n&lt;Ctrl + D&gt;&lt;Ctrl + D&gt;\n&gt; Replace 4.4\n&gt; Bye~!\n&gt; Diary close succeed.\n</code></pre></p>"},{"location":"sp25/oop/hw5/","title":"Index","text":"<p>This programme is a class that represents a fraction number like <code>2/3</code></p> <p>The class includes the following functions:  </p> <ul> <li>Default Ctor  </li> <li>Ctor take two integers as parameters</li> <li>Copy ctor  </li> <li>Arithmetic operations:<code>+ - * /</code> </li> <li>Relational operators:<code>&lt; &lt;= == != &gt;= &gt;</code> </li> <li>Typecast to double  </li> <li>To string  </li> <li>Inserter and extractor for streams  </li> <li>Conversion from a finite decimal string like:<code>1.414</code> </li> </ul> <p>The program is running under g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0</p> <p>Run the program by executing <code>make run</code>.  </p> <p>Tests already in <code>main.cpp</code> </p> <p>The result will display in the terminal.</p>"},{"location":"sp25/oop/hw6/","title":"Index","text":"<p>This programme is a class template <code>Vector</code></p> <p>Definition detail in <code>vector.h</code></p> <p>The program is running under g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0</p> <p>Run the program by executing <code>make run</code>.  </p> <p>Tests already in <code>main.cpp</code> </p> <p>The result will display in the terminal.</p>"},{"location":"sp25/oop/hw7/","title":"Index","text":"<p>STL allocator + memory pool STL Allocator Interface</p> <p>An allocator is used by standard library containers as a template parameter : <pre><code>template &lt; class T, class Alloc = allocator&lt;T&gt; &gt; class vector;\ntemplate &lt; class T, class Alloc = allocator&lt;T&gt; &gt; class list;\n</code></pre> What does an allocator class have? Typically, it possesses: <pre><code>typedef void _Not_user_specialized;\ntypedef _Ty value_type;\ntypedef value_type *pointer;\ntypedef const value_type *const_pointer;\ntypedef value_type&amp; reference;\ntypedef const value_type&amp; const_reference;\ntypedef size_t size_type;\ntypedef ptrdiff_t difference_type;\ntypedef true_type propagate_on_container_move_assignment;\ntypedef true_type is_always_equal;\n\npointer address(reference _Val) const _NOEXCEPT\nconst_pointer address(const_reference _Val) const _NOEXCEPT\nvoid deallocate(pointer _Ptr, size_type _Count)\n_DECLSPEC_ALLOCATOR pointer allocate(size_type _Count)\ntemplate&lt;class _Uty&gt; void destroy(_Uty *_Ptr)\ntemplate&lt;class _Objty, class _Types&gt;\nvoid construct(_Objty *_Ptr, _Types&amp;&amp;... _Args)\n</code></pre> Memory Pool</p> <p>STL provides you a default std::allocator, but you can implement your own to replace it. For example, you can design a memory pool to speed up the dynamic allocation of a large number of small blocks (e.g., 8 bytes, 16 bytes, ...), and to reduce memory fragmentation.  Figure 1: Mem pool using block based allocation strategy.</p> <p>The program is running under g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0</p> <p>Run the program by executing <code>make run</code>.  </p> <p>The result will display in the terminal.</p>"},{"location":"sp25/oop/hw7/STL_allocator%26memory_pool/","title":"STL allocator&memory pool","text":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u5927\u4f5c\u4e1a:STL allocator &amp; Memory pool       \u6768\u4ebf\u916c 3230105697 2025-6-18 ~ 2025-6-21"},{"location":"sp25/oop/hw7/STL_allocator%26memory_pool/#1","title":"1.\u5b9e\u9a8c\u76ee\u7684","text":"<ul> <li>\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u5206\u914d\u5668\u4ee5\u652f\u6301vector\u5bf9\u8c61\u7684\u64cd\u4f5c  </li> <li>\u901a\u8fc7memory pool\uff0c\u4f18\u5316\u5c0f\u5bf9\u8c61\u5206\u914d\u7684\u901f\u5ea6\uff0c\u51cf\u5c11\u5185\u5b58\u7684\u788e\u7247\u5316  </li> </ul>"},{"location":"sp25/oop/hw7/STL_allocator%26memory_pool/#2","title":"2.\u5b9e\u9a8c\u73af\u5883","text":"<p>g++ (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0</p>"},{"location":"sp25/oop/hw7/STL_allocator%26memory_pool/#3","title":"3.\u7f16\u5199\u601d\u8def","text":""},{"location":"sp25/oop/hw7/STL_allocator%26memory_pool/#myallocator","title":"MyAllocator","text":"<p><code>address</code>\u51fd\u6570\uff1a\u8fd4\u56deVal\u7684\u5730\u5740 <code>allocate</code>\u51fd\u6570\uff1a\u5728\u521d\u59cb\u5316\uff0cpush_back\uff0cresize\u65f6\u88ab\u8c03\u7528\uff0c\u901a\u8fc7<code>MemoryPoolAllocator::allocate</code>\u5c1d\u8bd5\u5728\u5185\u5b58\u6c60\u4e2d\u5206\u914d\u7a7a\u95f4 <code>deallocate</code>\u51fd\u6570\uff1a\u6536\u56de\u5206\u914d\u7684\u7a7a\u95f4\uff0c\u901a\u8fc7<code>MemoryPoolAllocator::deallocate</code>\u5c1d\u8bd5\u4ece\u5185\u5b58\u6c60\u4e2d\u56de\u6536\u7a7a\u95f4 <code>destroy</code>\u51fd\u6570\uff1a\u8d1f\u8d23\u6307\u9488\u6307\u5411\u5bf9\u8c61\u7684\u6790\u6784 <code>construct</code>\u51fd\u6570\uff1a\u5728\u5df2\u5206\u914d\u5185\u5b58\u4e0a\u6784\u9020\u5bf9\u8c61\uff0c\u901a\u8fc7forward\u5b8c\u7f8e\u8f6c\u53d1\u907f\u514d\u62f7\u8d1d  </p>"},{"location":"sp25/oop/hw7/STL_allocator%26memory_pool/#memorypool","title":"MemoryPool","text":"<p>\u5185\u5b58\u6c60\u4e2d\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6570\u7ec4free list\uff0c\u5206\u522b\u7528\u4e8e\u7ba1\u7406256Bytes\u4ee5\u4e0b\u5404\u5927\u5c0f\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6570\u7ec4\u4e2d\u5b58\u653e\u4e86\u4e00\u7cfb\u5217\u94fe\u8868\u6307\u9488\uff0c\u6307\u5411\u5185\u5b58\u5757\u94fe\u8868free list link <pre><code>free list[0](16B) -&gt; free list[1](32B)\n    |\n    \u2193\nfree_list_link\n    |\n    \u2193\nfree_list_link\n</code></pre> <code>allocate</code>\u51fd\u6570\uff1a\u6839\u636e\u8981\u5206\u914d\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u9009\u62e9\u5206\u914d\u65b9\u5f0f\uff0c&lt;=256Bytes\u4f7f\u7528\u5185\u5b58\u6c60\uff0c&gt;256Bytes\u76f4\u63a5\u4f7f\u7528new \u5bf9&lt;=256Bytes\u7684\u5bf9\u8c61\uff0c\u5148\u5c06\u5176\u5927\u5c0f\u630916\u5b57\u8282\u5bf9\u9f50\uff0c\u968f\u540e\u5230\u5bf9\u5e94\u7684free list link\u4e2d\u7533\u8bf7\u7a7a\u95f4\uff0c\u4fee\u6539free list link\u7684\u5934\u6307\u9488 \u5982\u679cfree list link\u4e3a\u7a7a\uff0c\u5219\u901a\u8fc7<code>refill</code>\u5206\u914d\u521d\u59cb\u5757\u5230free list link\u4e2d <code>deallocate</code>\u51fd\u6570\uff1a\u6839\u636e\u8981\u5206\u914d\u56de\u6536\u7a7a\u95f4\u7684\u5927\u5c0f\uff0c\u9009\u62e9\u56de\u6536\u65b9\u5f0f\uff0c&lt;=256Bytes\u4f7f\u7528\u5185\u5b58\u6c60\uff0c&gt;256Bytes\u76f4\u63a5\u4f7f\u7528delete \u5bf9&lt;=256Bytes\u7684\u5bf9\u8c61\uff0c\u5148\u627e\u5230\u5bf9\u5e94\u7684free list link,\u5c06free list\u7684\u6307\u9488\u79fb\u5230ptr\u6240\u6307\u7684\u4f4d\u7f6e\uff08\u91ca\u653eptr\u6240\u6307\u7684\u7a7a\u95f4\uff09\u5e76\u8fd4\u56de\u5373\u53ef  </p>"},{"location":"sp25/oop/hw7/STL_allocator%26memory_pool/#4","title":"4.\u7cfb\u7edf\u6d4b\u8bd5","text":"<p>\u4f7f\u7528release\u6a21\u5f0f\u4f18\u5316\u540e\uff0c\u6d4b\u8bd5\u7ed3\u679c\u5982\u4e0b  \u53ef\u4ee5\u770b\u5230\uff0c\u5e94\u7528\u5185\u5b58\u6c60\u540e\u76f8\u6bd4\u4e8eSTL\u6709\u4e00\u5b9a\u7684\u901f\u5ea6\u63d0\u5347\uff0c\u4f46\u591a\u6b21\u6d4b\u8bd5\u53d1\u73b0\u8fd9\u4e00\u63d0\u5347\u6709\u4e00\u5b9a\u7684\u968f\u673a\u6027\uff0c\u53ef\u80fd\u662f\u7531\u4e8e\u968f\u673a\u5206\u914d\u5927\u5c0f\u4e0e\u7cfb\u7edf\u72b6\u6001\u7b49\u56e0\u7d20  </p>"},{"location":"sp25/oop/hw7/%E8%AF%84%E6%B5%8B%E6%96%B9%E5%BC%8F/","title":"\u8bc4\u6d4b\u65b9\u5f0f","text":"<p>\u6ce8\uff1a\u672c\u6b21STL\u5927\u4f5c\u4e1a\u5728\u76f8\u540c\u73af\u5883\u4e0b\uff0c\u7edf\u4e00\u4f7f\u7528\uff1a g++ -std=c++17 -Wall -O0 -march=native -o main xxx.cpp\u6307\u4ee4\u7f16\u8bd1\u6d4b\u8bd5\u3002 \u4e3b\u8981\u9488\u5bf9\u5927\u91cf\u5c0f\u5185\u5b58\u52a8\u6001\u5206\u914d\u6d4b\u8bd5\uff0c\u53d6100\u6b21\u8fd0\u884c\u65f6\u95f4\u7684\u5747\u503c\u6765\u6392\u5e8f\u3002 \u5bf9\u4e8e\u56e0\u4e3a\u63d0\u524d\u7533\u8bf7\u8f83\u5927\u5185\u5b58\u6216\u4f7f\u7528\u8f83\u5927\u5757\u5bfc\u81f4\u7684\u901f\u5ea6\u4e0b\u964d\uff0c\u5df2\u5728\u8bc4\u6d4b\u4e2d\u76f8\u5e94\u8c03\u6574\u3002 \u6700\u7ec8\u6309\u7167\u8fd0\u884c\u65f6\u95f4\u6392\u5e8f\uff0c\u5e76\u8f85\u4ee5\u62a5\u544a\u548c\u4ee3\u7801\u8d28\u91cf\u8bc4\u4f30\uff0c\u5728[48, 60]\u533a\u95f4\u5185\u5206\u914d\u6210\u7ee9\u3002 \u5982\u6709\u5f02\u8bae\uff0c\u8bf7\u53ca\u65f6\u8054\u7cfb\u52a9\u6559\u3002</p> <p>\u8bfe\u7a0b\u6210\u7ee9 = 50% \u5e73\u65f6\u4f5c\u4e1a + 50 % \u671f\u672b\u8003\u8bd5</p>"},{"location":"sp25/sys3/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edfIII  5.5\u5b66\u5206","text":""},{"location":"sp25/sys3/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u5434\u78ca \u5e38\u745e/\u5468\u4e9a\u91d1</p>"},{"location":"sp25/sys3/#_2","title":"\u8ba4\u5b9a","text":"<p>\u4e13\u4e1a\u57fa\u7840\u8bfe</p>"},{"location":"sp25/sys3/#_3","title":"\u5206\u6570\u6784\u6210","text":"<p>\u4f5c\u4e1a 10%   - cache\u76f8\u5173\u8ba1\u7b97   - cache\u6027\u80fd\u4f18\u5316\u7684presentation \u5b9e\u9a8c 60%   - Lab1 BHT&amp;BTB 8%   - Lab2 Cache Design 8%   - Lab3 Virtual Memory 8%   - Lab4 User Mode 8%   - Lab5 Page fault and fork system call 10%   - Lab6 Hardware support page fault and MMU 10%   - Project Xpart 8%(\u8d85\u51fa\u90e8\u5206\u4ee5\u975e\u7b49\u503c\u7684\u5f62\u5f0f\u8bb0\u5165bonus) -------total &lt;= 70--------- - \u671f\u672b 30%   \u5355\u9009\uff1a15 * 2% = 30%   Q&amp;A\uff1a70%  </p>"},{"location":"sp25/sys3/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u76f8\u6bd4\u4e0esys1\u4e0esys2\uff0csys3\u7684\u96be\u5ea6\u66f4\u9ad8\uff0c\u5de5\u4f5c\u91cf\u66f4\u5927\uff0c\u56e0\u6b64\u9700\u8981\u989d\u5916\u91cd\u89c6 \u53ea\u6709\u786c\u4ef6\u6709\u4e00\u6b21\u4f5c\u4e1a\u548c\u4e00\u4e2acache\u6027\u80fd\u4f18\u5316\u7684\u5c55\u793a\uff0c\u8f6f\u4ef6\u90e8\u5206\u6709\u8bb8\u591aquiz\u751a\u81f3\u968f\u5802\u6d4b\u8bd5\uff0c\u4f46\u4e0d\u8ba1\u5165\u603b\u8bc4\u5206\u6570\uff0c\u53ea\u662f\u4f5c\u4e3a\u7ec3\u4e60 \u5b9e\u9a8c\u4e2dLab1\uff0c2\uff0c6\u4e3a\u786c\u4ef6\u5b9e\u9a8c\uff0cLab3\uff0c4\uff0c5\u4e3a\u8f6f\u4ef6\u5b9e\u9a8c\uff0c\u96be\u5ea6\u4e0a\uff1aLab2 &gt;&gt;&gt;&gt;&gt; Lab5,xpart &gt; Lab6 &gt; Lab1,3,4 xpart\u7684\u9a8c\u6536\u91c7\u7528presentation\u7684\u5f62\u5f0f\uff0c\u4e0d\u9700\u8981\u8dd1\u4ee3\u7801\uff0c\u53ea\u9700\u8981\u5236\u4f5cppt\u7136\u540e\u8bb2\u6e05\u695a\u5de5\u4f5c\u91cf\uff08\uff0c\u5e76\u5e94\u5bf9\u4e00\u4e9b\u63d0\u95ee\uff09\u5373\u53ef Lab2\u662f\u6574\u4e2a\u7cfb\u7edf\u8d2f\u901a\u8bfe\u6700\u96be\u7684\u5b9e\u9a8c\uff0c\u53ef\u80fd\u9700\u8981\u5927\u6539\uff08\u91cd\u5199\uff09\u786c\u4ef6\u6846\u67b6\uff0c\u9884\u8ba1\u5b8c\u6210\u65f6\u95f4\u53ef\u80fd\u9700\u8981\u8fbe\u523050\u5c0f\u65f6\u4ee5\u4e0a\uff08\u901a\u8fc7<code>verilate_sort</code>\u6d4b\u8bd5\u53ef\u4ee5\u83b7\u5f9760%\u7684\u5206\u6570\uff09\uff0c\u9700\u8981\u66f4\u591a\u5730\u8bf7\u6559\u52a9\u6559 OS\u90e8\u5206\u7684\u5b9e\u9a8c\u5305\u62ec\u601d\u8003\u9898\u9700\u8981\u989d\u5916\u5173\u6ce8\u7ec6\u8282\uff0c\u5373\u4f7f\u8fd0\u884c\u6b63\u786e\u4e5f\u8981\u6ce8\u610f\u662f\u5426\u4f1a\u6709\u5bc4\u5b58\u5668\u4fe1\u606f\u4e22\u5931\uff0ccsr\u5bc4\u5b58\u5668\u90fd\u8d77\u5230\u4e86\u4ec0\u4e48\u4f5c\u7528 \u671f\u672b\u8003\u8bd5\u5927\u9898\u5305\u62ec\uff1atomasulo+\u786c\u4ef6\u524d\u77bb\u7684\u586b\u8868\u3001MSI protocol\u3001Virtual Memory\uff08Sv39\u7684\u5730\u5740\u7ffb\u8bd1\uff09\u3001File System  </p> <p>Homework </p>"},{"location":"sp25/sys3/note/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edfIII","text":"<p>\u4f53\u7cfb\u7ed3\u6784 by Rui Chang OS by Yajin Zhou  </p>"},{"location":"sp25/sys3/note/#_1","title":"\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"sp25/sys3/note/#fundamentals-of-computer-system-week1","title":"Fundamentals of computer system Week1","text":"<p>Classes of computers(by Flynn)  </p> <ul> <li>SISD(single instruction single data stream):only in theory  </li> <li>SIMD(multiple):commonly used  </li> <li>MISD:only in theory  </li> <li>MIMD:current CPU  </li> </ul> <p>Classes of computers(in textbook)  </p> <ul> <li>desktop/personal  </li> <li>server:\u670d\u52a1\u5668 security  </li> <li>embedded:\u5d4c\u5165\u5f0f immediate response  </li> <li>personal mobile  </li> <li>supercomputer(peak performance + electricity -&gt; cooling)  </li> </ul> <p>Performance The performance(time) can be affected by:  </p> <ul> <li>Algorithm(time complexity)  </li> <li>Programming language,compiler,architecture  </li> <li>Processor and memory  </li> <li>I/O,OS  </li> </ul> <p>Measuring performance - Single users on a PC     minimization of response time      minimization of execution time - Large data     maximization of TP - Response time - Execution time(CPU time)     comprises of user CPU (execution) time and system CPU time  </p> <p>\\(Performance = \\frac{1}{Execution Time}\\) If X is n times faster than Y,then \\(\\frac{Performance_X}{Performance_Y} = \\frac{Execution Time_Y}{Execution Time_X} = n\\)</p>"},{"location":"sp25/sys3/note/#quantitative-approach","title":"\u7cfb\u7edf\u91cf\u5316\u7814\u7a76\u65b9\u6cd5 Quantitative approach","text":"<p>CPU Performance \\(CPU\\ Execution\\ Time = CPU\\ Clock\\ Cycles * Clock\\ Period\\) \\(CPU\\ Execution\\ Time = \\frac{CPU\\ Clock\\ Cycles}{Clock\\ Rate(freq)}\\) Performance improvement by  </p> <ul> <li>reduce number of clock cycles  </li> <li>increase clock rate  </li> <li>trade off clock rate against cycle count  </li> </ul> <p>Average cycles per instruction(CPI) \\(CPI = \\frac{CPU\\ Clock\\ Cycles}{Instruction\\ Count}\\) \\(CPU\\ time = \\frac{Instructions}{Program}*\\frac{Clock\\ Cycles}{Instructions}*\\frac{Seconds}{Clock\\ Cycles}\\) </p>"},{"location":"sp25/sys3/note/#amdahls-law","title":"Amdahl's Law(\u6027\u80fd\u4f18\u5316)","text":"<p>\\(Improved\\ Execution\\ Time = \\frac{Affected\\ Execution\\ Time}{Amount\\ of\\ Improvement} + Unaffected\\ Execution\\ Time\\) \\(T_{improved}=\\frac{T_{affected}}{improvement\\ factor} + T_{unaffected}\\) </p> <p>\u5c40\u90e8\u52a0\u901f\u6bd4:improvement factor \\(Speedup_{overall} = \\frac{Performance\\ for\\ entire\\ task_{using\\ enhancement}}{Performance\\ for\\ entire\\ task_{without\\ enhancement}}= \\frac{Total\\ Execution\\ Time_{without\\ enhancement}}{Total\\ Execution\\ Time_{using\\ enhancement}}\\) </p> <p>\u6539\u8fdb\u6bd4\u4f8b:\\(fraction = \\frac{Time\\ can\\ be\\ improved}{Total\\ Execution\\ Time}\\) \\(Speedup_{overall} &lt; \\frac{1}{1-Fraction_{enhanced}}\\)</p>"},{"location":"sp25/sys3/note/#great-architecture-ideas","title":"Great Architecture Ideas","text":"<ul> <li>Moore's law:number of transistors doubles every 18-24 months  </li> <li>Use abstraction to simplify design  </li> <li>Make the common case fast  </li> <li>Improve performance via parallelism  </li> <li>Improve performance via pipelining  </li> <li>Improve performance via prediction  </li> <li>Use a hierarchy(\u5206\u7ea7) of memories  </li> <li>Improve dependability(\u53ef\u9760\u6027) via redundancy(\u5907\u4efd)  </li> </ul> <p>Below the program:  </p> <ul> <li>parallel nature of processors  </li> <li>hierarchical nature of memories  </li> <li>compiler decisions  </li> </ul>"},{"location":"sp25/sys3/note/#instruction-level-parallelismilp-week2-3","title":"Instruction-Level Parallelism(ILP) Week2 - 3","text":"<p>Dependencies  </p> <ul> <li>Data dependence(RAW-read after write)</li> <li>Name dependence:rename <pre><code>DIV F2,F6,F4\nADD F6,F0,F12\nSUB F8,F6,F14\n//anti-dependence(WAR)\nDIV F2,F6,F4\nADD S,F0,F12\nSUB F8,S,F14\n</code></pre> <pre><code>DIV F2,F6,F4\nADD F6,F0,F12\nSUB F2,F6,F14\n//output-dependence(WAW)\nDIV F2,F0,F4\nADD F6,F0,F12\nSUB S,F6,F14\n</code></pre></li> <li>Control dependence:Branch hazards  </li> </ul> <p> </p> <p>Hazard  </p> <ul> <li>Structure hazard:add hardware</li> <li>Data hazard:Forwarding + stall/scheduling  </li> <li>Control hazard:branch prediction  </li> </ul>"},{"location":"sp25/sys3/note/#branch-prediction","title":"Branch prediction","text":"<ul> <li>static:\u4efb\u9009</li> <li>dynamic:BTB</li> </ul> <p>Delay slot:forbidden by RISC-V due to prediction  </p> <p>Dynamic branch prediction 1.Branch History Table(BHT):2-Bit predictor 2.Instruction/Data-read/Data-write buffer(Branch-Target Buffer(BTB) in prediction) </p>"},{"location":"sp25/sys3/note/#dynamic-scheduling","title":"Dynamic Scheduling","text":"<p>simple pipelining has the limitation:  </p> <p>In-order <pre><code>DIV F4,F0,F2\nSUB F10,F4,F6\nADD F12,F6,F14//waiting without data dependencies\n</code></pre></p>"},{"location":"sp25/sys3/note/#scoreboard","title":"Scoreboard","text":"<p>Scoreboard algorithm is an approach to schedule the instructions.  </p> <p>recall:hazard detection in ID split ID into two parts:IS(issue) &amp; RO(read operands) IS:check structural hazards(in-order) RO:check data hazards(out of order) cannot flow to IS/RO if a certain hazard exists <pre><code>1.LD  F6,34(R2) //integer unit\n//assume the first inst has been completed\n2.LD  F2,45(R3) //integer unit structural hazard\n3.MUL F0,F2,F4  //F2 F8 F0 F6 data hazard\n4.SUB F8,F6,F2\n5.DIV F10,F0,F6\n6.ADD F6,F8,F2\n</code></pre></p> <p>info table design  </p> <ul> <li>Instruction status table </li> <li>Function component status table  \u53ea\u6709\u5728\u67d0\u6761\u6307\u4ee4\u6267\u884cWB\u540e\u6e05\u7a7a\u8be5\u6307\u4ee4\u4f7f\u7528\u7684\u90e8\u4ef6\u7684\u4e00\u884c\uff0c\u4e0b\u4e00\u4e2a\u8981\u4f7f\u7528\u8fd9\u4e00\u90e8\u4ef6\u7684\u6307\u4ee4\u624d\u80fd\u8fdb\u5165IS\u9636\u6bb5  </li> <li>Register status table  note that register status can be read from function component table,register status table is created just for convenience.  </li> </ul> <p>In-class practice: </p>"},{"location":"sp25/sys3/note/#tomasulo","title":"Tomasulo","text":"<p>Tomasulo's approach is to introduce register renaming in hardware to minimize WAW and WAR hazards. <pre><code>1.LD  F6,34(R2) \n2.LD  F2,45(R3) \n3.MUL F0,F2,F4  \n4.SUB F8,F6,F2\n5.DIV F10,F0,F6\n6.ADD F6,F8,F2\n</code></pre> Reservation Station(RS\u4fdd\u7559\u7ad9):\u9632\u6b62\u56e0\u786c\u4ef6\u51b2\u7a81\u5bfc\u81f4\u6307\u4ee4\u65e0\u6cd5\u6d41\u5165(\u4e0a\u4f8b\u4e2d\u76844.SUB\u4e0e6.ADD),\u5728RS\u4e2d\u6267\u884c\u4e71\u5e8f Command Data Bus(CDB):\u5c06\u6307\u4ee4\u9700\u8981\u7684\u503c\u66ff\u6362\u4e3a\u4fdd\u7559\u7ad9\u7684\u7ed3\u679c(6.ADD\u4e2dF8\u7684\u503c\u5373\u4e3aadder RS\u7684\u7ed3\u679c,\u4fdd\u7559\u7ad9\u7684\u540d\u79f0\u66ff\u4ee3\u4e86\u5bc4\u5b58\u5668\u7684\u540d\u79f0),\u901a\u8fc7\u5e7f\u64ad\u7684\u65b9\u5f0f\u4f7f\u7ed3\u679c\u5206\u5e03\u63a7\u5236 \u6267\u884c\u9636\u6bb5\u7b80\u5316\u4e3aIS,EX,WB\u4e09\u9636\u6bb5,\u6ca1\u6709\u89e3\u51b3\u987a\u5e8f\u5199\u56de\u7684\u95ee\u9898 IS:\u68c0\u67e5\u4fdd\u7559\u7ad9\u662f\u5426\u8fd8\u6709\u7a7a\u4f4d  EX:\u4fdd\u7559\u7ad9\u4e2d\u4e71\u5e8f\u6267\u884c,\u5982\u679c\u64cd\u4f5c\u6570\u672a\u5168\u90e8ready\u5219\u7b49\u5f85,\u64cd\u4f5c\u6570\u5df2\u7ecfready\u7684\u5148\u6267\u884c WB:CDB\u540c\u65f6\u5c06\u7ed3\u679c\u5199\u5165\u5bc4\u5b58\u5668\u548c\u9700\u8981\u7684RS Register status Qi\u8bb0\u5f55\u5bc4\u5b58\u5668\u4e0eRS\u7684\u5bf9\u5e94\u5173\u7cfb Instruction status table,Function component status table,Register status table(Field Qi) are still needed.</p> <p>Limitation:</p> <ul> <li>Structual complexity  </li> <li>performance limited by Common Data Bus  </li> <li>correctness not guaranteed  </li> </ul> <p>The limitations on ILP approaches directly led to the movement to multicore.</p> <p>In-class practice: </p> <p>Instructions come out in order:Waiting sofa(buffer)</p>"},{"location":"sp25/sys3/note/#hardware-based-speculation","title":"Hardware-Based Speculation \u786c\u4ef6\u524d\u77bb","text":"<p>Reorder buffer(ROB) before writing back to registers Why reorder? For debug and consistency extend the stages of every instruction into:IS,EX,WB,Commit Commit:In-order write back \u2014\u2014 the key of speculation  </p> <ul> <li>Function component status table:ROB No. in column dest in  </li> <li>ROB table:the current stages of the relevant instructions  </li> <li>Register status table:ROB row shows the registers to be written and the corresponding ROB No.</li> </ul> <p>In-class practice:\u524d\u4e09\u5217\u540cTomasulo Commit\u5217:5,6,17,18,58,59  </p> <p>60\u4e2a\u5468\u671f\u7684\u8868\u683c\u53d8\u5316\uff0c\u6bcf\u4e2a\u683c\u5b50\u4f1a\u586b\u4f1a\u7b97</p> <ul> <li>Precise exception  </li> <li>easily extend to other(e.g. integer)units  </li> <li>complex hardware(CDB)  </li> </ul>"},{"location":"sp25/sys3/note/#exploiting-ilp-using-multiple-issue-and-static-scheduling","title":"Exploiting ILP Using Multiple Issue and Static Scheduling","text":"<ul> <li>n-issue Superscalar  </li> <li>VLIW  </li> <li>Super pipeline  </li> </ul> <p>Dynamic scheduling is more dependent on hardware,while static scheduling may not.  </p> <p>Multi-issue based on dynamic scheduling: \u53cc\u6d41\u5165\u6d41\u51faTomasulo:  bottleneck:data-dependent branches &amp; ALU With Speculation:  \u524d\u77bb\u6267\u884c\uff1a\u4e0d\u9700\u8981\u7b49\u5f85\u5206\u652f\u7ed3\u679c\uff0c\u56e0\u4e3a\u4e0d\u4e00\u5b9a\u8981\u63d0\u4ea4 Branches are a critical performance limiter(especially with data-dependent ones),but speculation helps.  </p>"},{"location":"sp25/sys3/note/#vliw","title":"VLIW","text":"<p>operation slots parallel execution in EX <pre><code>Loop:fld    f0,0(x1)\n     fadd.d f4,f0,f2\n     fsd    f4,0(x1)\n     addi   x1,x1,-8\n     bne    x1,x2,Loop\n</code></pre> \u6307\u4ee4\u4e71\u5e8f/\u5faa\u73af\u5c55\u5f00</p> <ul> <li>code length increases  </li> <li>lockstep mechanism  </li> <li>machine code incompability  </li> </ul>"},{"location":"sp25/sys3/note/#superpipeline","title":"Superpipeline","text":"<p>IF IS RF EX (DF DS TC) WB</p>"},{"location":"sp25/sys3/note/#memory-hierarchycache-week4-5","title":"Memory Hierarchy(Cache) Week4 - 5","text":""},{"location":"sp25/sys3/note/#introduction","title":"Introduction","text":"<ul> <li>Registers  </li> <li>Cache  </li> <li>Memory  </li> <li> <p>Storage  </p> </li> <li> <p>Mechanical memory  </p> </li> <li>Electronic memory   SRAM:static random access memory(Cache)   DRAM:dynamic ~(Main memory)     DDR2(double data rate\u4e0a\u5347\u6cbf\u548c\u4e0b\u964d\u6cbf\u90fd\u80fd\u4f20\u6570\u636e),DDR3,DDRSDRAM   Flash   ROM:read-only memory     PROM,EPROM</li> <li>Optical memory</li> </ul> <p>Temporal/Spatial locality\u65f6\u7a7a\u5c40\u90e8\u6027  </p> <p>Cache:a safe place for hiding or storing things.  </p> <p>hit/miss:whether the processor can or cannot find a requested data in the cache hit rate/miss rate/hit time/miss penalty  </p> <p>Block run:A fixed-size collection of data containing the data we need retrieved from the memory Spatial locality:likely need other data within the same block soon  </p>"},{"location":"sp25/sys3/note/#technology-trend","title":"Technology Trend","text":"<p>SRAM DRAM SDRAM(Synchronous DRAM) DDR SDRAM HBM:High Bandwidth Memory DRAM SSD HDD/TAPE</p>"},{"location":"sp25/sys3/note/#memory-hierarchy","title":"Memory Hierarchy","text":""},{"location":"sp25/sys3/note/#cache-miss","title":"Cache Miss","text":"<p>Latency:the time to retrieve the first word of the book Bandwidth:the time to retrieve the rest of the book  </p> <p>Miss causes  </p> <ul> <li>Compulsory:first reference(cache is empty)  </li> <li>Capacity:blocks discarded and later retrieved  </li> <li>Conflict:program makes repeated references to multiple addresses from different blocks that map to the same location in the cache  </li> </ul> <p>desktop users:average latency server:memory bandwidth(multiple users) embedded:power and battery life/real-time response/small memory  </p> <p>Everything is a cache. Registers -&gt; L1-Cache -&gt; L2-Cache -&gt; Memory -&gt; Disk  </p> <p>Cache Size = Block Size * Sets + Related info(Indexes)</p>"},{"location":"sp25/sys3/note/#cache-design","title":"Cache Design","text":"<p>Using a FSM to control a simple cache next-state function determines the state transition  write through\u5199\u76f4\u8fbe:write back to both cache and memory</p>"},{"location":"sp25/sys3/note/#1where-can-a-block-be-placed-in-the-upper-levelblock-placement","title":"1.Where can a block be placed in the upper level?(Block placement)","text":""},{"location":"sp25/sys3/note/#direct-mapped","title":"Direct mapped","text":"<p>(Block address) modulo (Number of blocks in the cache):\u5faa\u73af\u5206\u914d e.g.Cache number = 8(0-7)  Memory 1,9,17,25 -&gt; Cache 1 [Problem]low space usage &amp; high conflict probability  </p>"},{"location":"sp25/sys3/note/#fully-associative","title":"Fully associative","text":"<p>Block can go anywhere in cache  </p>"},{"location":"sp25/sys3/note/#n-way-set-associative","title":"n-way Set associative","text":"<p>Each memory block maps to a cache group(n cache blocks in each group) and put memory block into certain cache block in casual for most caches:n &lt;= 4</p>"},{"location":"sp25/sys3/note/#2how-is-a-block-found-if-it-is-in-the-upper-levelblock-identification","title":"2.How is a block found if it is in the upper level?(Block Identification)","text":"<p>Every block has an address tag that stores the main memory address of the data stored in the block  valid bit index selects the set/block direct map:tag + set index + offset hit if valid_bit == 1'b1 &amp;&amp; tag == mem_addr  </p>"},{"location":"sp25/sys3/note/#cache-size-calculation","title":"Cache Size calculation","text":"<p> The size of the block is One word(4 bytes) 64-bit addresses 2<sup>n</sup>blocks(n bits for the index) block size = 2<sup>m</sup>words tag = 64-(n+m+Byteoffset) = 64 - (10 + 0 + 2) = 52 Byteoffset = log<sub>2</sub>block size(in bytes) = 2 cache size = 2<sup>n</sup> * (block size + tag size + valid size) = 2<sup>10</sup> * (2<sup>0</sup> * 32(bits/word) + 52 + 1) = 85Kib.  </p> <p>E.g.How many total bits are required for a direct-mapped cache with 16KiB of data and four-word blocks,assuming a 64-bit address? ANS:16KiB = 4096words = 2<sup>12</sup>words block size is 4 words = 2<sup>2</sup>words,m=2 2<sup>12</sup>/2<sup>2</sup> = 1024blocks,n=10 data = 4 * 32(bits/word) = 128 bits(16Bytes * 8) tag = 64-(n+m+2) = 50 bits note:64-bit address = 50-bit tag + 10-bit index + 2-bit word offset + 2-bit Byte offset \u6620\u5c04\u5230\u7f13\u5b58\u5757 Cache Size = 2<sup>n</sup>*(block size + tag size + valid size) = 2<sup>10</sup> * (128 + 50 + 1) = 179Kib = 22.375KiB</p> <p>E.g.Consider a cache with 64 blocks and a block size of 16 bytes. To what block number does byte address 1201 map? 1201 / 16 = 75(1200-1215 in the same block) 75 modulo 64 = 11  </p>"},{"location":"sp25/sys3/note/#3which-block-should-be-replaced-on-a-cachemain-memory-missblock-replacement","title":"3.Which block should be replaced on a cache/main memory miss?(Block Replacement)","text":"<p>No selection is needed for direct map Handle cache miss: 1.send PC to memory(PC - 4) 2.main memory perform and wait 3.write the cache entry 4.restart inst execution(refetch) In set-associative and fully-associative,N blocks to choose for replacement.  </p>"},{"location":"sp25/sys3/note/#random","title":"Random","text":""},{"location":"sp25/sys3/note/#lru","title":"LRU","text":"<p>Least-Recently Used(LRU):assumed more recently accessed blocks more likely to be referenced again use extra bits to keep track of accesses</p>"},{"location":"sp25/sys3/note/#fifo","title":"FIFO","text":"<p>First In,First Out(FIFO)  </p>"},{"location":"sp25/sys3/note/#optin-theory","title":"OPT(In theory)","text":"<p>Replace the one with the latest use in the future Thrashing:Loop access sequence causes no hit for FIFO/LRU Block Size affects the performance greatly  </p>"},{"location":"sp25/sys3/note/#stack-replacement-algorithm","title":"Stack replacement algorithm","text":"<p>B<sub>t</sub>(n) represents the set of access sequences contained in a cache block of size n at time t. B<sub>t</sub>(n) is the subset of B<sub>t</sub>(n+1). LRU is a stack replacement algorithm. FIFO is not a stack replacement algorithm.(Belady) Least-Recently Used is pushed to the bottom of the stack </p>"},{"location":"sp25/sys3/note/#implementation","title":"Implementation","text":"<p>Comparison pair flip-flop e.g.three cache blocks(A,B,C) take pair AB,AC,BC T<sub>AB</sub>:A is accessed later than B T<sub>AB</sub>,T<sub>AC</sub>,T<sub>BC</sub> represents the sequence of access by applying triggers and gates huge block number:Layered comparison  </p>"},{"location":"sp25/sys3/note/#4what-happens-on-a-writewrite-strategy","title":"4.What happens on a write?(Write Strategy)","text":"<p>When data is written into the cache,is the data also written to main memory? Write Through  </p> <ul> <li>can always discard cached data  </li> <li>only a valid bit  </li> <li>memory always have the latest data  </li> </ul> <p>Write Back</p> <ul> <li>can't discard  </li> <li>valid bit and dirty bit(cache\u4e0ememory\u4e0d\u4e00\u81f4)  </li> <li>much lower bandwidth</li> </ul> <p>Write hit write buffer(write through) Write miss</p> <ul> <li>write allocate   block is loaded into the cache(write back)  </li> <li>write around   block is only written to main memory(not stored in the cache) </li> </ul> <p>Read allocate memory -&gt; cache read from cache Read through E.g.Assume a fully-associative write-back cache(empty) What are the number of hits and misses using no-write allocate vs. write allocate? no-write allocate <pre><code>write Mem[100];  //miss ,not write to cache\nwrite Mem[100];  //miss ,not write to cache\nread Mem[200];   //miss ,read into cache\nwrite Mem[200];  //hit\nwrite Mem[100];  //miss ,not write to cache\n</code></pre> write allocate <pre><code>write Mem[100];  //miss write to cache\nwrite Mem[100];  //hit\nread Mem[200];   //miss ,read into cache\nwrite Mem[200];  //hit\nwrite Mem[100];  //hit\n</code></pre></p>"},{"location":"sp25/sys3/note/#virtual-memory","title":"Virtual Memory","text":""},{"location":"sp25/sys3/note/#memory-system-performance","title":"Memory System Performance","text":"<p>Memory Stall Average Memory Access Time(AMAT) \\(AMAT = (HitTime + MissRate * MissPenalty)\\) E.g.Impact on performance  </p>"},{"location":"sp25/sys3/note/#cpu-vulnerability","title":"*CPU Vulnerability","text":""},{"location":"sp25/sys3/note/#meltdown","title":"Meltdown","text":"<p>\u5229\u7528Intel CPU\u4e71\u5e8f\u6267\u884c\uff0c\u5229\u7528\u5185\u5b58\u54cd\u5e94\u65f6\u95f4\u8d8a\u754c\u8bbf\u95ee  </p>"},{"location":"sp25/sys3/note/#spectre","title":"Spectre","text":"<p>\u5229\u7528Cache\u9884\u53d6\u6307\u4ee4\u83b7\u53d6\u79c1\u5bc6\u4fe1\u606f  </p>"},{"location":"sp25/sys3/note/#cache-optimization-presentation-week-6","title":"Cache Optimization presentation Week 6","text":""},{"location":"sp25/sys3/note/#os","title":"OS","text":""},{"location":"sp25/sys3/note/#main-memory-week7-10","title":"Main Memory Week7 - 10","text":""},{"location":"sp25/sys3/note/#partition","title":"Partition","text":"<p>using physical memory multi-programming:partition protection,fast-execution,fast context switch Once process starts,partition cannot be moved Solution:logical address(offset within the partition\u76f8\u5bf9\u5730\u5740) Simple implementation:base and limit(length) registers(privileged) between base and base + limit:segmentation limit check for protection  </p> <ul> <li>built-in protection  </li> <li>fast execution(hardware)  </li> <li>fast context switch(only change base and limit)  </li> <li>norelocation of program address  </li> <li>partition can be suspended and moved at any time  </li> </ul>"},{"location":"sp25/sys3/note/#memory-allocation-strategy","title":"Memory allocation strategy","text":"<p>fixed  same size causing Internal Fragmentation(\u5206\u914d\u7684\u7528\u4e0d\u5b8c) variable External Fragmentation(\u6709\u7a7aprocess\u4f46\u653e\u4e0d\u8fdb) first-fit,best-fit,worst-fit  </p>"},{"location":"sp25/sys3/note/#segmentation","title":"Segmentation","text":"<p>.text,.data,... have different authority,can they be put into the same partition?   No,we map one process to n partitions(each is called a segmentation) [Problem] Insufficient base and limit registers [Solution] Segment table:an array where each entry has base and limit and perm(permission) Every process has a segment table Only a base register is needed to point to the segment table Every entry represents a segmentation logical address now is a pair:  limit can be changed,therefore it is a variable allocation,no internal fragmentation but external fragmentation Segmentation is used effectively in Unix(before paging because of small amount of additional hardware) address binding source code(symbolic) -&gt; compiler(relocatable) -&gt; linker(absolute) Memory-Management Unit(MMU):a translator from logical addr to physical addr"},{"location":"sp25/sys3/note/#paging","title":"Paging","text":"<p>basic idea:cut the process,making it noncontiguous(avoids external segmentation) divide physical addr into fixed-sized blocks called frames(\u5e27) divide logical(virtual) addr into blocks of same size called pages Set up a mapping to translate logical to physical addr,this mapping is called page table(index page,value frame)(not stored in the pages) Internal fragmentation fixed length partition page size:2048,program size:72766(35 pages + 1086bytes) internal fragementation = 2048 - 1086 = 962 Nowadays,the page size is getting bigger because we allow waste in memory(memory is cheaper) frame table:which frame is free,how many frames have been allocated,... helps OS manage physical address logical addr =  m-n bits for page_number,n bits for page_offset m = 32 or 64,n = log<sub>2</sub>(page_size) x86:2<sup>32</sup> = 4GB"},{"location":"sp25/sys3/note/#implementation_1","title":"Implementation","text":"<p>Page-table base register(PTBR),Page-table length register(PTLR) [Problem] Access page table to find frame number needs one memory access while actually read the data in memory needs another memory access [Solution] cache the translation to avoid one memory access(TLB:Translation Look-aside Buffer) hardware implementation:associative memory tag TLB entries with address-space identifier(ASID)that uniquely identifies a process when context-switch Associative memory supports parallel search Effective Access Time EAT = hit_ratio * memory_access_time + (1 - hit_ratio) * 2 * memory_access_time In modern design,hit_ratio is approximately 99.9% Increase the page size helps improve the hit ratio(memory_access_size = TLB_size * page_size) Memory Protection present(valid) bit and permission bits in page table Page Sharing Run a program multiple times:.text can be shared but .data cannot be shared  </p>"},{"location":"sp25/sys3/note/#structure","title":"Structure","text":"<p>[Question] 32-bit logical address space &amp; 4KB page size,what is the page table size? 4GB/4KB = 1M entries(page table lines) 1M * 4B = 4MB(must be physically contiguous because another table needed for mapping if page table is splited) If we have 1K processes,simply page tables occupies the whole memory [Insights] Many indices are invalid [Solution] break down page table into pages Page size is 4KB,how many entries can fit in one page? one entry is 4B,thus we have 1K entries/page   1M entries can be broken down to 1K pages,indexed by 1K entries,put into another page(4KB)  [Advantages] Pages don't need to be contiguous,and no page allocated if invalid in the first level logical addr =  12-bits offset:4K(Page size)(stored in the last-level pages) 10-bits page_directory_number and 10-bits page_table_number:1K entries per table If page size is 64KB,we have 16-bits offset,14-bits page_table_number and 2-bits page_directory_number Page Table in Linux:page table base register CR3(arm:TTBR,RISCV:SATP,x86:PDBR)(store physical addr,otherwise another table for mapping is needed) 64-bit logical address space:16EB(4G * 4GB) Page table entry:8B page table size:4KB Entry number/page = 512 3-level page:12 + 9*3 = 39bits(512GB Phone) 4-level page:48bits(256TB Server) 5-level page:57bits(128PB AI) PTE,PMD,PUD(upper),P4D,PGD(global directory)"},{"location":"sp25/sys3/note/#hashed-page-table","title":"Hashed page table","text":"<p>virtual page number is hashed into frame number using linked list if two page number has the same hash value high collision probability &amp; need contiguous addr  </p>"},{"location":"sp25/sys3/note/#inverted-page-table","title":"Inverted page table","text":"<p>[Insights] physical addr space &lt;&lt; virtual addr space [Solution] index by physical addr Each entry has a pid and virtual page number need traverse the whole page table &amp; no memory sharing  </p>"},{"location":"sp25/sys3/note/#swapping","title":"Swapping","text":"<p>[Definition] extends physical memory with backing disks(\u7528\u786c\u76d8\u6362\u5185\u5b58) Context switch becomes veryvery slow Swapping is unfriendly to SSD/flash memory Android terminates apps if low free memory Intel IA-32 Page Address Extensions(PAE):page table entries to 64bits,but 2-bits for a 4 entry table Intel IA-64 6 segmentations ARM:no segmentations  </p>"},{"location":"sp25/sys3/note/#practice","title":"Practice","text":"<p> 1)4GB/4KB = 1M entries,1M * 4B = 4MB 2)1ST:4KB,2ND:1K * 4KB = 4MB 3)Pages don't need to be contiguous,and no page allocated if invalid in the first level 4)10-bits page_directory_number,10-bits page_table_number,12-bits offset 0xf2015202 = 0b1111001000|0000010101|001000000010(968,21)  32-bits:2+14+16 39-bit VA:10+13+16(\u51cf\u5c11\u4e00\u7ea7) 48-bit VA:6+13+13+16  offset:log<sub>2</sub>(page_size) = 10 page_number:32-10 = 22 0x00003986:0b0000000000000000001110|0110000110 page_number:14 invalid 0x00002bc6:0b0000000000000000001010|1111000110 page_number:10 offset:0x000003c6 addr = 0x13 &lt;&lt; 10 + 0x000003c6(\u4f4e10\u4f4d)  </p>"},{"location":"sp25/sys3/note/#virtual-memory_1","title":"Virtual Memory","text":"<p>[Insights]Code needs to be loaded to memory in execution,but the entire program is rarely needed at the same time [Solution]partially-loaded program demand paging:brings a page into physical memory only when accessed lasy swap:never swap a page unless accessed pre-paging:predict pages may be accessed later invalid -&gt; page fault  </p>"},{"location":"sp25/sys3/note/#page-fault","title":"Page fault","text":"<p>(1)invalid reference -&gt; exception (2)valid reference but not in memory -&gt; swap in page fault handling  </p> <ul> <li>get an empty physical frame  </li> <li>swap page into frame via disk operation(maintained by free-frame list)  </li> <li>set page table entry to indicate the page in memory  </li> <li>restart the instruction  </li> </ul> <p>tell OS to map by <code>syscall</code>(brk,mmap),not actually allocation until demand  allocate free frames using zero-fill-on-demand  EAT:page fault rate:p EAT = (1-p) * memory access time + p * (page fault overhead + swap out + swap in + instruction restart overhead) Copy-on-Write(COW):allows the parent and child processes(fork()) to initially share the same pages in memory as long as no process modify(write) it. If either process writes the COW page,OS copies the page and set the page writable Page replacement:no free page when needed [Solution] swap out some pages to swap\u5206\u533a [Question] How to select victim page to avoid thrashing? Dirty bit:whether the page is modified after loaded? We can directly replace the pages if not dirty page fault handling with replacement  </p> <ul> <li>find the location of the desired page on disk  </li> <li>find the free page   if there is a free page,use it   if there is none,pick a victim frame     if the frame's dirty,write to the disk  </li> <li>update the page table  </li> <li>restart the instruction  </li> </ul> <p>potentially 2 page I/O for one page fault Page replacement algorithm:FIFO,optimal,LRU,LFU,MFU For FIFO,adding more frames may cause more page faults(Belady's anomaly)(not stack replacement) (Enhanced) Second-Chance Algorithm:take order pair(reference,modify(dirty))(0,0 &gt; 0,1 &gt; 1,0 &gt; 1,1) Page-Buffering Algorithm:always keep a pool of free frames  </p>"},{"location":"sp25/sys3/note/#allocation","title":"Allocation","text":"<p>Fixed(Local) allocation per process Global allocation Reclaiming pages memory below minimum threshold:choose process to kill according to OOM scores Major page fault:page is referenced but not in memory Minor pape fault:mapping does not exist,but page in memory   shared library   reclaimed and not freed yet Non-Uniform Memory Access(NUMA):speed of access to memory varies(multi-core and multi-core-correspond-memory) allocating memory \"close to\" the CPU by scheduler  </p>"},{"location":"sp25/sys3/note/#thrashing","title":"Thrashing","text":"<p>[Definition] a process does not have enough pages,causing higher page fault rate,page fault to get page,existing existing frame,but quickly need replaced frame back,thereby a process is busy swapping pages in and out Why does thrashing occur?total size of locality &gt; total memory size [Solution]  1.using local or priority page replacement(one process thrashing does not affect others) 2.provide a process with as many frames as it needs Working-set Model Working-set window(\u0394):a fixed number of page references working set of process p<sub>i</sub>(WSS<sub>i</sub>):total number of pages referenced in the most recent \u0394 total working sets:D = \u03a3WSS<sub>i</sub>,monitor the total working set by suspending and swapping out to make D &lt; m [Challenge] keep track of the working set [Solution] page-fault frequency(PFF) to check the pressure of process memory,swap out a process is PFF is too high  </p>"},{"location":"sp25/sys3/note/#kernel-memory-allocation","title":"Kernel Memory Allocation","text":"<p>allocated from a free-memory pool for device I/O,kernel memory needs to be physically contiguous Buddy System:memory is allocated in units of the size of power of 2 split the unit into two buddies until a proper sized chunk is available E.g.256KB is available,21KB is requested 256KB -&gt; 128KB -&gt; 64KB -&gt; 32KB = 21KB_round_up Slab Allocator:a slab contains one or more pages,divided into equal-sized objects a cache in a slab allocator consists of one or more slabs fast small kernel object allocation and small internal fragmentation,object fields may be reusable,no need to initialize again  kmem_cache -&gt; slabs_full/partial/empty -&gt; slab -&gt; page -&gt; object <code>kmalloc()</code> -&gt; small object using slab/huge object using buddy system:ensuring contiguous PA <code>vmalloc()</code>(similar to <code>malloc()</code> in user space):huge space requirement but no need contiguous PA   </p>"},{"location":"sp25/sys3/note/#other-considerations","title":"Other considerations","text":"<p>Prepaging Page Size(and reason)  </p> <ul> <li>Fragmentation:small page size  </li> <li>Page table size:large  </li> <li>Number of page faults:large  </li> <li>TLB(page table entry cache) size:large</li> <li>Locality:small  </li> <li>I/O overhead:large(every page fault needs an I/O)  </li> <li>always a power of 2  </li> <li>growing over time  </li> </ul> <p>TLB Reach:the amount of memory accessible from the TLB TLB Reach = TLB size * page size Program structure int[128,128],each row is stored in one page,and only one entry in the TLB <pre><code>for(j = 0; j &lt; 128 ; j++)\n  for(i = 0; i &lt; 128; i++)\n128*128 = 16384 page faults\nfor(i = 0; i &lt; 128 ; i++)\n  for(j = 0; j &lt; 128; j++)\n128 page faults\n</code></pre> I/O interlock:pages that are used for copying a file from a device must be locked from being selected for eviction  </p>"},{"location":"sp25/sys3/note/#free-space-management","title":"*Free Space Management","text":"<p>In virtual memory space, [Mechanism] splitting and coalescing(\u5408\u5e76)  [Problem] the storage of the linked list [Solution] reuse the freed space   <pre><code>typedef struct __header_t {\n  int size;\n  int magic;\n} header_t;\n\ntypedef struct __node_t {\n  int size;\n  struct __node_t* next;\n} node_t;\n\nvoid free(void *ptr) {\n  header_t *hptr = (void*)ptr - sizeof(header_t);\n  ...\n}\n</code></pre>  16500:a space addr pointer [Question] What is 16500 does not point correctly,e.g.,16508(where size and magic can be cotrolled by user)\u5806\u55b7  </p> <p>Virtual_Memory_Quiz(2024final) </p> answer <p>CDAC</p> <p>a.VA 15 = 10(VPN) + 5(OFFSET)   PA 12 = 7(PFN) + 5(OFFSET)  </p> <p>b.Virtual Address 0x17f5:0b00101(pde index)|11111(pte index)|10101(PA offset) pde content from PDBR(108),pte content from pde content(84) Value:0x1c from pte content &amp; PA offset(78,21) PA:0b1001110(78),0b10101(21)-&gt;0b100111010101-&gt;0x9d5  </p>"},{"location":"sp25/sys3/note/#file-system-week10-12","title":"File System Week10 - 12","text":""},{"location":"sp25/sys3/note/#file-system-interface","title":"File System Interface","text":"<p>[Definition] file is a contiguous logical addr space for storing info proc file system - use file system interface to retrieve system info(not real data in storage),an alterative of syscalls,using read,open and write File attributes:name,identifier(tag),type,location,size,protection(permission,e.g.777,access control list(ACL)),time/user identification,checksum,... File operations:</p> <ul> <li>create:space for file allocated;entry allocated in the directory  </li> <li>open:return a handler for other operations <pre><code>fd = open(path,...);//file descriptor\n//per process mapping[fd,file]\nread(fd,...);\n</code></pre></li> <li>read/write:maintain a pointer  </li> <li>seek:reposition the pointer within the file  </li> <li>delete:release space,hardlink(delete a file until all the pointers relate to it are deleted),truncate(delete a file but maintains its attributes)  </li> <li>copy:create and read/write  </li> </ul> <p>Open files:open-file table(info about all opened files,per-process(position,access right;differ in processes) &amp; system-wide(location on disk)) Info:file position(per-process),file-open count,disk location,access right *lock:shared lock &amp; exclusive lock file types:magic number(.exe,.o,.c,.txt,...)  </p>"},{"location":"sp25/sys3/note/#file-structure","title":"File structure","text":"<ul> <li>no structure:linux  </li> <li>simple record structure:database  </li> <li>complex structure:word document,relocatable program file  </li> </ul> <p>Access methods: sequential access:tape direct access(random access):access an element of arbitary position in (roughly) equal time other method:multiple layers of index points to blocks  </p> <ul> <li>directory structure:a collection of nodes containing info about all files  </li> <li>disk structure:subdivided into partitions(\u5206\u533a),each volume(partition) tracks file system info in the volume's table   raw disks(no partition,no file system):preferred in database  </li> </ul> <p>Directory operations  </p> <ul> <li>create   LinkAT FileName,INode  </li> <li>delete  </li> <li>list  </li> <li>search  </li> <li>group(locally group files by properties,e.g. all java project)  </li> </ul>"},{"location":"sp25/sys3/note/#single-level-directory","title":"Single-Level Directory","text":"<p>A single directory for all users [Problem] two users can't have same file name hard to group files  </p>"},{"location":"sp25/sys3/note/#two-level-directory","title":"Two-Level Directory","text":"<p>Separate directory for each user  [Problem] no file sharing  </p>"},{"location":"sp25/sys3/note/#tree-structured-directory","title":"Tree-Structured Directory","text":"<p> efficient searching,grouping and naming File can be accessed using absolute or relative path name absolute path name: /home/alice/.. relative path(<code>pwd</code>):/... Delete: Option I:<code>rm</code> directory cannot delete unless it's empty Option II:<code>rm -rf</code> delete all files,directories and sub-directories"},{"location":"sp25/sys3/note/#acyclic-graph-directory","title":"Acyclic-Graph Directory","text":"<p>allow links to a directory entry/files for aliasing(renaming)  [Problem] Dangling pointer(\u60ac\u6302\u6307\u9488) Delete /dict/all,then /dict/w/list &amp; /spell/words are dangling pointers [Solution] backpointer:record all the pointers to the entry reference counter:count # of links to it,only delete when counter = 0 <pre><code>//dangling pointers\nchar *ptr = malloc(size);\nchar* ptr1 = ptr;\nfree(ptr);\nptr = null;\n//ptr1 is a dangling pointer\n</code></pre> [Advantage] Shared files  metadata in <code>inode</code> link:\u591a\u4e2a\u6587\u4ef6\u8def\u5f84\u6307\u5411\u540c\u4e00\u6587\u4ef6 hardlink:\u591a\u4e2a\u6587\u4ef6\u540d\u6307\u5411\u540c\u4e00\u4e2a<code>inode</code> softlink(symbolic link):datablock\u5b58\u653e\u771f\u6b63link\u7684\u8def\u5f84(\u5feb\u6377\u65b9\u5f0f) <pre><code>/home/\n  file\n  file1\n  file2\nDirectory:Name  inode\n          file  500\n          file1 500\n          file2 501 block#1000(/home/file)\n</code></pre> <code>file1</code> automatically removed if <code>rm /home/file</code> softlink need multiple searches and may cause broken link(linked file not exist) hardlink deletes the datablock only when the links are all deleted softlink can link files cross-filesystem cycles in graph structure garbage collection &amp; cycle detection algorithm  </p>"},{"location":"sp25/sys3/note/#mounting","title":"Mounting","text":"<p>A file system must be mounted(\u6302\u8f7d) before it can be accessed,e.g.\u63d2\u5165U\u76d8 a mounted file system makes the old directory at the mount point invisible  </p>"},{"location":"sp25/sys3/note/#file-sharing","title":"File Sharing","text":"<p>protection by user ID &amp; group ID NFS(Network File System)  </p>"},{"location":"sp25/sys3/note/#acl","title":"ACL","text":"<p>ACL(Access Control List) fine-grained control(\u7cbe\u7ec6\u63a7\u5236\u9632\u6b62\u8fc7\u5ea6\u6388\u6743) but list management is a big deal UNIX Access Control \u9ed8\u8ba4\u6ca1\u6709\u8bbe\u7f6eACL\u4f46\u662f\u652f\u6301 user types:owner(RWX),group(RW),others(X) <pre><code>chmod 761 game\n# 7 for owner,6 for group,1 for others\n</code></pre> fork() <pre><code>int main(int argc,char* argv[]) {\n  int fd = open(\"./file.txt\",O_RDONLY);\n  lseek(fd,5,SEEK_SET);\n\n  int rc = fork();\n  if(rc == 0) {\n    printf(\"child: fd %d\\n\",fd);\n    rc = lseek(fd,10,SEEK_SET);\n    printf(\"child: offset %d\\n\",rc);\n  }\n  else if (rc &gt; 0) {\n    (void) wait(NULL);\n    printf(\"parent: fd %d\\n\",fd);\n    printf(\"parent: offset %d\\n\",(int)lseek(fd,0,SEEK_CUR));//5?\n    //10 actually\n  }\n  return 0;\n}\n</code></pre> Per-process access table but not a deep copy for file descriptors(they point to the same handle) <pre><code>  if(rc == 0) {\n    close(fd);//file descriptor leak\n    int fd = open(\"./file.txt\",O_RDONLY);\n    /*\n    a good way is to close parent process' file descriptor \n    before operations in child\n    /*\n    ...\n  }\n</code></pre></p>"},{"location":"sp25/sys3/note/#file-and-directory","title":"File and Directory","text":"<p>File:linear array of bytes,each has an inode number Directory:a list of user-readable name to inode number mapping,each entry points to file or other directory create <pre><code>int fd = open(\"foo\",O_CREAT | O_WRONLY | O_TRUNC);\n/*\nO_CREAT:create if not exists\nO_WRONLY:can only write\nO_TRUNC:truncate it to zero bytes if the file exists\n*/\n</code></pre> <pre><code>echo hello &gt; foo\ncat foo\n# hello\nstrace cat foo #\u67e5\u770b\u7cfb\u7edf\u8c03\u7528 open(\"foo\",O_RDONLY) = 3\n# read(3,\"hello\\n\",131072) = 6\n# write(1,\"hello\\n\",6hello) = 6 \n# read(3,\",131072) = 0\n</code></pre> seek <pre><code>off_t lseek(int fildes, off_t offset, int whence);\n/*\nwhence == SEEK_SET,offset = offset_bytes\nwhence == SEEK_CUR,offset = current_location + offset_bytes\nwhence == SEEK_END,offset = size_of_file + offset_bytes\n*/\n</code></pre> write <pre><code>int fd = open(\"foo\",O_CREAT | O_WRONLY | O_TRUNC);\nassert(fd &gt; -1);\nint rc = write(fd,buffer,size);\nassert (rc == size);\nrc = fsync(fd);//forces all dirty data to disk\nassert(rc == 0);\n</code></pre> stat <pre><code>stat foo\n// File: 'foo'\n// Size: 6 Blocks: 8 IO Block: 4096 ...\n// ...\n</code></pre> remove <pre><code>strace rm foo\n# unlinkat(AT_FDCWD, \"foo\", 0) = 0\n</code></pre> <code>rm</code>:unlink the file and check the Reference count of the inode free the inode until the reference count == 0 mkdir <pre><code>strace mkdir foo\n# mkdir(\"foo\", 0777) = 0\nls -al\n# drwxrwxr-x 2 os os 4096 &lt;time&gt; .\n# drwxrwxr-x 3 os os 4096 &lt;time&gt; ..\n</code></pre> Empty directory has two entries('.' for current,'..' for upper level) read directory <pre><code>int main(int argc,char* argv[]) {\n  DIR *dp = opendir(\".\");\n  assert(dp != NULL);\n  struct dirent *d;\n  while((d = readdir(dp)) != NULL) \n    printf(\"%d %s\\n\",(int)d-&gt;d_ino,d-&gt;name);\n  closedir(dp);\n  return 0;\n}\n/*\nstruct dirent {\n  char d_name[256];\n  ino_t d_ino;\n  off_t d_off;\n  ...\n}\n*/\n</code></pre> link <code>link()</code> system call:takes two arguments,an old pathname and a new one <pre><code>ln file file2 # link(hardlink)\nls -i file file2\n# same inode number\n</code></pre> <pre><code>echo hello &gt; file\nln -s file file2 # Symbolic link(softlink)\n# filepath in datablock of file2  \nrm file\ncat file2\n# No such file or directory  \n</code></pre> TOCTTOU *Time of Check to Time of Use <pre><code>if (access(\"file\", W_OK) != 0) //check\n  exit(1);\n//schedule ?\n//symlink(\"/etc/password\",\"file\");\nfd = open(\"file\", O_WRONLY);\nwrite(fd, buffer, sizeof(buffer)); //use\n</code></pre> <code>O_NOFOLLOW</code>:fail if pathname is symbolic link  </p>"},{"location":"sp25/sys3/note/#file-system-implementation","title":"File System Implementation","text":"<p>File system resides on secondary storage(disks) disk driver provides interface to read/write disk blocks file system provides user interface to storage,mapping logical to physical file control block(inode)  </p>"},{"location":"sp25/sys3/note/#layered-file-system","title":"Layered File System","text":"<p>0.I/O control--device drivers 1.basic file system 2.file-organization module 3.logical file system</p>"},{"location":"sp25/sys3/note/#implementation_2","title":"Implementation","text":"<p>on-disk structure(storage)  </p> <ul> <li>file control block:perm,dates,ACL,size,data block/pointer to data block(same data inside and other data stored in other place and pointed by a pointer)  </li> <li>boot control block:contains info to boot OS(per volume)  </li> <li>volume control block(superblock):volume details,including total block number,block size,free blocks &amp; pointers,free FCB &amp; pointers(per volume)   FCB count is fixed when formatting the disk for high efficiency   expand if FCB is full  </li> <li>directory structure(per file system)  </li> </ul> <p>in-memory structure(access)  </p> <ul> <li>mount table  </li> <li>in-memory directory structure cache  </li> <li>system-wide open-file table:copy of FCB  </li> <li>per-process open-file table:pointers to entries in system-wide open-file table and other info  </li> <li>I/O memory buffers  </li> </ul> <p>creation 1.FCB allocation 2.link inode &amp; name 3.directory update In UNIX,directories are treated equally as files,which is different from Windows open 1.search system-wide open-file table:already opened?   It it is,create a per-process open-file table pointing to the existing system-wide open-file table   If not,search the directory for the file name,place the FCB in system-wide open-file table once found 2.make an entry in per-process open-file table with pointers to the entry in the system-wide open-file table(FCB in system-wide) 3.increment the open count in the system-wide open-file table 4.return a pointer <code>fd</code> to the entry in per-process open-file table close 1.remove per-process open-file entry 2.decrement open count 3.all processes close file -&gt; copy info to disk,remove system-wide open-file table mount Boot block:series of sequential blocks containing bootloader In-memory mount table:mount points,type of file system mounted,access path,(UNIX)a pointer to the superblock(global metadata,fixed location on disk) Virtual File System VFS:an object-oriented way for implementing file systems VFS object types:superblock,inode,dentry(associates name to inode),file Directory Linear list of file names;hash table(faster search but collsion)  </p>"},{"location":"sp25/sys3/note/#disk-block-allocation","title":"Disk Block Allocation","text":"<ul> <li>contiguous allocation:best performance in most cases,simple to implement   not flexible:file size hard to change,causing external fragmentation   extent-based contiguous allocation:extent is a set of contiguous blocks but extents are not necessarily adjacent  </li> <li>linked:each file is a linked list of disk blocks   blocks can be scattered,no external fragmentation   many I/Os and seeks for locating   Improvement:cluster the blocks,but causing internal fragmentation  </li> <li>indexed:each file has its index blocks of pointers to its data blocks   random access avaliable,no external fragmentation   but storing index requires space,a waste for small files   index block allocation:multiple-level  quiz answer:4TB  </li> </ul>"},{"location":"sp25/sys3/note/#free-space-management_1","title":"Free Space Management","text":"<ul> <li>Bitmap:one bit for each block,but require extra space for bitmap storage  </li> <li>Linked list:no waste of space but difficult for getting contiguous space   note:usually no need to traverse the list  </li> <li>Grouping:use indexes to group free blocks   store addr of n-1 free blocks in the first free block and a pointer to next index block  </li> <li>Counting:a link of clusters  </li> </ul>"},{"location":"sp25/sys3/note/#file-system-performance","title":"File System Performance","text":"<p>\u2022 disk allocation and directory algorithms \u2022 types of data kept in file\u2019s directory entry \u2022 pre-allocation or as-needed allocation of metadata structures \u2022 fixed-size or varying-size data structures Performance Improvement: 1.keep data and metadata close together,because every operation to data operates metadata 2.use cache Page cache:caches pages for MMIO(Memory-mapped I/O(fd -&gt; VA))  unified buffer cache uses the same page cache to cache both memory-mapped pages and disk I/O to avoid double caching 3.use asynchronous writes:buffered or cached,periodically/fsync() to disk 4.optimize sequential access free behind:remove the previous page from the buffer read-ahead:read multiple pages ahead Read often slower than write because of asynchronous writes,no asynchronous read  </p>"},{"location":"sp25/sys3/note/#recovery","title":"Recovery","text":"<p>1.backup 2.Log structured file systems:metadata for updates sequentially written to a circular log,then commit to write to disk,recommit if failed only ensure the consistency,not guarantee that data will not be lost  </p>"},{"location":"sp25/sys3/note/#example","title":"Example","text":"<p>Assume we have 64 blocks,each block size 4K 56/64 for data 5/64 for inode(suppose inode are 256bytes,4Kb block can hold 16 inodes),80 files 1/64 for bitmap for free inodes 1/64 for bitmap for free data regions 1/64 for superblock:info about the file system(inode block number,data block number,inode table begin addr,data region begin addr &amp; a magic number)  inode_number addr = inode_number * sizeof(inode) + 4k(superblock) + 8k(bitmap)  </p>"},{"location":"sp25/sys3/note/#directory-organization","title":"Directory organization","text":"<p>a mapping of inode &amp; name,strlen(length of name),reclen(ROUNDUP(strlen))  \u7ed9\u5b9a\u76f8\u5bf9\u8def\u5f84\uff0c\u6309\u7edd\u5bf9\u8def\u5f84\u8bfb write in open() for updating time,etc in inode First search system-wide open-file table.If found,we don't need to find the file After opening the file,put the entry into the per-process open-file table </p>"},{"location":"sp25/sys3/note/#crash-consistency","title":"*Crash Consistency","text":"<p>Crash scenarios:write inode,bitmap &amp; data block [Case1] Only data block is written [Case2] Only inode is written(inode points to garbage):inconsistency between inode and bitmap [Case3] Only bitmap is written:a space leak [Case4] inode &amp; bitmap written:block has garbage data [Case5] inode &amp; data block [Case6] bitmap &amp; data block:data belonging unknown [Solution1] checker [Solution2] journaling(writing ahead logging) 1.write inode,bitmap &amp; data to log(a.k.a journal) 2.Transaction begin(TxB) -&gt; Transaction end(TxE) 3.After the transaction is safely on the disk,overwrite the old data(checkpointing) checkpoint:write from log to disk  crash when writing to journal [Solution1] issue one operation at a time [Solution2] split write to two steps Recovery [Case1] crash when writing to log no TxE,data lost but no inconsistency [Case2] after transaction committed but before checkpoint redo logging [Case3] during checkpointing redo Journal structure:circular [Problem] writing each data block twice [Solution] Metadata journaling [Option1] write data after the transaction finishes [Option2] write the data block first(no garbage pointer)  quiz answer:unlink(\"/m\");creat(\"/z\");mkdir();</p>"},{"location":"sp25/sys3/note/#mass-storage-week13","title":"Mass Storage Week13","text":"<p>See [databaseChap12] sector,track,cylinder </p>"},{"location":"sp25/sys3/note/#magnetic-disk","title":"Magnetic Disk","text":"<p>positioning time(random-access time) = seek time + rotational latency performance:transfer rate(Gb/sec) average access time = average seek time + average latency average I/O time = average access time + (data to transer/transfer rate) + controller overhead  </p>"},{"location":"sp25/sys3/note/#non-volatile-memory-devices","title":"Non-volatile memory devices","text":"<p>solid-state disk(SSDs) more reliable than HDDs 1.read and written in pages increment but can't overwrite in place(must be erased) 2.can only be erased a limited number of times 3.lifespan measured by drive writes per day(DWPD) NAND Flash Controller Algorithm flash translation layer(FTL) table garbage collection:free invalid page space </p>"},{"location":"sp25/sys3/note/#disk-attachment","title":"Disk Attachment","text":"<ul> <li>host-attached storage:hard disk,RAID,CD,DVD,tape,...   using I/O bus    </li> <li>network-attached storage(NAS)   over TCP/UDP on IP network  </li> <li>storage area network(SAN)   high speed interconnection and efficient protocols(than TCP/IP)  </li> </ul>"},{"location":"sp25/sys3/note/#disk-scheduling","title":"Disk scheduling","text":""},{"location":"sp25/sys3/note/#fcfs","title":"FCFS","text":""},{"location":"sp25/sys3/note/#sstf","title":"SSTF","text":"<p>shortest seek time first(not optimal,compare to SJF),starvation exists </p>"},{"location":"sp25/sys3/note/#scanelevator","title":"SCAN(Elevator)","text":""},{"location":"sp25/sys3/note/#c-scan","title":"C-SCAN","text":"<p>Circular-SCAN  </p>"},{"location":"sp25/sys3/note/#lookc-look","title":"LOOK/C-LOOK","text":""},{"location":"sp25/sys3/note/#disk-management","title":"Disk Management","text":"<p>Physical formatting:divide disk into sectors Logical formatting:OS partition disk into groups of cylinders,each treated as a logical disk root partition:only contains the OS,mounted at boot time boot block:point to bootloader(codes of how to load kernel) swap space management \u6269\u5c55\u7269\u7406\u5185\u5b58(DRAM),\u6682\u5b58\u4e0d\u6d3b\u8dc3\u7684page\u7528\u4e8e\u4ea4\u6362 Swap partition\u4ea4\u6362\u5206\u533a  </p>"},{"location":"sp25/sys3/note/#raid","title":"RAID","text":"<p>Redundant array of inexpensive disks RAID 0:split evenly on two or more disks  RAID 1:exact copy/mirror  RAID 2:stripe data at the bit-level,use Hamming code RAID 4:block-level striping with a dedicated parity disk RAID 5:block-level striping with parity data distributed across all disks RAID 6:adding additional parity block detect/recover from disk failures,does not prevent or detect data corruption ZFS adds additional checks(checksum) to detect errors  </p>"},{"location":"sp25/sys3/note/#io-week13-14","title":"I/O Week13 - 14","text":""},{"location":"sp25/sys3/note/#io-hardware","title":"I/O hardware","text":"<p>I/O devices:storage,communication,human-interface bus:interconnection port:device connection part controller access by polling(CPU\u5468\u671f\u6027\u68c0\u67e5,very high network load,busy-wait) or interrupt(from I/O,context switch) direct I/O Instruction:<code>In/Out &lt;Device.no&gt;</code>(x86) MMIO:VA Space -&gt; I/O device  </p>"},{"location":"sp25/sys3/note/#interrupts","title":"Interrupts","text":"<p>[type] protection error(invalid access),page fault,system calls Multi-CPU can process interrupts concurrently,even use a CPU to handle interrupts dedicatedly,CPU affinity(lock on global data if accessed by multiple cores) APIC(Advanced programming interrupt controller)  </p>"},{"location":"sp25/sys3/note/#dma","title":"DMA","text":"<p>[Definition] Direct Memory Access:transfer data directly between I/O &amp; memory(bypass the CPU) using DMA controller in the device [Problem] Device may change physical address directly [Solution] IOMMU:Device address -&gt; Physical address [Problem] IOMMU can only control page size granularity </p>"},{"location":"sp25/sys3/note/#io-devices","title":"I/O Devices","text":"<p>character-stream:sequential,block:random-access(read,write,seek),memory-mapped file access,network socket direct manipulation(\u64cd\u4f5c) of I/O device is not allowed(e.g. \u76d1\u542cpassword)  </p> <ul> <li>Synchronous I/O   blocking:process suspended until I/O completed   non-blocking:I/O return as much data as avaliable,use select to find data if ready then use read or write to transfer data  </li> <li>Asynchronous I/O:process runs while I/O executes,I/O signals process when completed(data already in buffer,<code>read()</code> not needed)  </li> </ul>"},{"location":"sp25/sys3/note/#kernel-io-subsystem","title":"Kernel I/O Subsystem","text":"<p>scheduling:queue I/O requests via per-device queue buffering:store data in memory while transferring between devices because of speed unmatch,device transfer size unmatch or maintain copy semantics(e.g,<code>write(fd,buf,...)</code>) cache:hold a copy of data for fast access spooling:hold output \u6253\u5370\u673a device reservation:exclusive access to device name to device representation:major/minor(\u7f16\u53f7) in UNIX  </p>"},{"location":"sp25/sys3/note/#error-handling","title":"Error Handling","text":"<p>recover by retrying or advanced handling return error code  </p>"},{"location":"sp25/sys3/note/#io-protection","title":"I/O Protection","text":"<p>direct I/O Instruction:define all I/O instructions to be privileged MMIO:security check in MMU(user mode cannot access I/O VA) </p>"},{"location":"sp25/sys3/note/#performance","title":"Performance","text":"<p>[Improvement] reduce context switches,reduce data copying,reduce interrupts by using large transfers,small controllers,polling,use DMA,smarter hardware,move user-mode processes to kernel threads(reduce context switches and essures non-blocking) <code>sendfile()</code>,SG-DMA copy zero-copy in practice:2 context switch + 2 DMA copy (no CPU copy) </p>"},{"location":"sp25/sys3/note/#page-cache","title":"Page Cache","text":"<p>in memory,before read from disk not work for big file(data written in cache but never read) File_System_Quiz</p>"},{"location":"sp25/sys3/note/#_2","title":"\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"sp25/sys3/note/#dlptlp-week14-15","title":"DLP,TLP Week14 - 15","text":""},{"location":"sp25/sys3/note/#simdvector-processor","title":"SIMD:Vector processor","text":"<p>SIMD:single instruction multiple data \u5355\u6307\u4ee4\u6d41\u591a\u6570\u636e\u6d41 \\(D = A * (B + C)\\),A,B,C,D are vectors of length N 1.horizontal processing method \\(d_i = a_i * (b_i + c_i)\\) data related:N times,function switching:2N times(static pipeline needs drain\u6392\u7a7a) 2.vertical processing method \\(K = B + C\\) \\(D = A * K\\) data related:1 time,function switching:2 times [Problem] what if N is very big;multiplication has to wait for all add operations complete 3.vertical and horizontal(grouping) processing method N is very big,each group can put n instructions N = s * n + r data related:s+1 times,function switching:2(s+1) times  </p>"},{"location":"sp25/sys3/note/#cray-1","title":"CRAY-1","text":"<p>64 instructions per group,12 single-function pipeline Vi conflict <pre><code>V0 = V1 + V2\nV3 = V0 * V4\n\nV0 = V1 + V2\nV3 = V1 * V4 # V1 may not be entirely stored in memory  \n\nV3 = V1 * V2\nV5 = V4 * V6 # hardware conflict\n</code></pre> instruction types:  </p> <ul> <li>Vk = Vi op Vj  </li> <li>Vk = Si op Vj  </li> <li>Vk &lt;- Memory  </li> <li>Memory &lt;- Vi  </li> <li>Memory:6 beats  </li> <li>Add:6 beats  </li> <li>Multiply:7 beats  </li> <li>Every data transfer:1 beat  </li> </ul>"},{"location":"sp25/sys3/note/#performance-improvement","title":"Performance improvement","text":"<p>1.multiple functional units 2.vector chaining technology\u5411\u91cf\u94fe\u63a5 \\(D = A * (B + C)\\),N &lt;= 64 V0 = B,V1 = C <pre><code>V3 &lt;- memory\nV2 = V0 + V1\nV4 = V2 * V3 # RAW but no functional/hardware conflict,using chaining!\n</code></pre>  once the first output of V4 come out,every clock cycle another output of V4 come out  (1)((1 + 6 + 1) + N - 1) + ((1 + 6 + 1) + N - 1) + ((1 + 7 + 1) + N - 1) = 3N + 22 (2)((1 + 6 + 1) + N - 1) + ((1 + 7 + 1) + N - 1) = 2N + 15 (3)(1 + 6 + 1) + (1 + 7 + 1) + N - 1 = N + 16 3.Segmented vector 4.Multi-processor system RISC-V(scalar) -&gt; RV64V  </p>"},{"location":"sp25/sys3/note/#array-processor","title":"Array Processor\u9635\u5217\u673a","text":"<p>Distributed memory:each processor has its own memory(ICN,dynamic network connecting the processors) Centralized shared memory:N processors and K memories interconnect by ICN [Question] connection path:direct or indirect interconnection network:static or dynamic [Goal] any two PEs can achieve info transfer in a few steps single-stage/multi-stage interconnection network  </p>"},{"location":"sp25/sys3/note/#single-state-interconnection-network","title":"Single-state interconnection network","text":"<p>Cube:N inputs and outputs are encoded with n-bit(\\(n = log_2N\\)) binary code \\(P_{n-1}...P_i...P_1P_0\\) \\(Cube_i(P_{n-1}...P_i...P_1P_0) = P_{n-1}...\\overline{P_i}...P_1P_0\\)  The 3D cube can transfer data between any two processing elements at most 3 times if N is bigger,then we have at most \\(log_2N\\) times(hyper cube) PM2I(Plus Minus \\(2^i\\)):\\(PM2_{+i}(j) = (j + 2^i)mod N\\),\\(PM2_{-i}(j) = (j - 2^i)mod N\\),2n functions,2n-1 different functions(i = n - 1) transfer data between any two processing elements at most n - 1 times Shuffle exchange \\(shuffle(P_{n-1}...P_i...P_1P_0) = P_{n-2}...P_{i-1}...P_1P_0P_{n-1}\\) exchange:\\(Cube_0\\)  If N is bigger,from all '0' to all '1', we need n shuffles and n - 1 exchanges Other static networks </p> <ul> <li>Linear array  </li> <li>Circular array  </li> <li>Loop with chord array </li> <li>Tree array   tree with loop,binary fat tree </li> <li>Star array  </li> <li>Grid:\u683c  </li> <li>2D torus </li> <li>Hypercube  </li> <li>Cube with loop </li> </ul>"},{"location":"sp25/sys3/note/#network-charactistics","title":"Network Charactistics","text":"<p>Dynamic networks  </p> <ul> <li>buses:time-division characteristics,only one pair of nodes are transmitting data at the same time  </li> <li>crossbar switches </li> <li>multi-stage interconnection network(Switch unit:m input and m output switches)    switch function   switch control method   topology  </li> </ul> <p>cube  Each switch can be chosen direct connection or exchange connection,8 different connections in total  hint:the binary representation of connect/exchange corresponds to the function Example:  </p> <p>Practice</p> <p> shuffle Multi-level shuffle exchange network(a.k.a Omega network)  </p> <ul> <li>switch function has 4 functions  </li> <li>topological structure is inverse to the cube structure </li> </ul> <p> </p>"},{"location":"sp25/sys3/note/#dlp-in-gpu","title":"DLP in GPU","text":"<p>SIMD exploit parallelism for:matrix,media Graphical Processing Unit(GPU) heterogenous(\u5f02\u6e90) execution model forms of GPU parallelism:CUDA(Compute Unified Device Architecture) thread Single instruction multiple thread Multithreaded SIMD processors:SIMT  GPU memory is shared by all grids Local memory is shared by all threads of SIMD instructions within a thread block Private memory is private to a single CUDA Thread </p>"},{"location":"sp25/sys3/note/#llp","title":"LLP","text":"<p>LLP:Loop-Level Parallelism Loop-carried dependence:focuses on determining whether data accesses in later iterations are dependent on data values produced in eariler iterations <pre><code>for(i=999;i&gt;=0;i--)\n  x[i] = x[i] + s;//no loop-carried dependencence  \n\nfor(i=0;i&lt;100;i++) {\n  A[i+1] = A[i] + C[i];  //S1-&gt;S1\n  B[i+1] = B[i] + A[i+1];//S1-&gt;S2,S2-&gt;S2\n  //loop-carried dependence\n}\n\nfor(i=0;i&lt;100;i++) {\n  A[i] = A[i] + B[i];  //S1\n  B[i+1] = C[i] + D[i];//S2\n  //S1 uses value computed by S2 in previous iteration\n  //S2 in i-1 -&gt; S1 in i\n  //but dependence is not circular,S2 can be done in parallel\n}\n\n//rewrite to erase loop-carried dependence\nA[0] = A[0] + B[0];\nfor(i=1;i&lt;100;i++) {\n  B[i] = C[i-1] + D[i-1]; //\u751f\u4ea7\u8005\n  A[i] = A[i] + B[i];     //\u6d88\u8d39\u8005\n  //data access depends on the value produced in the same iteration\n  //no loop-carried dependence\n}\nB[100] = C[99] + D[99];\n</code></pre> <pre><code>for(i=0;i&lt;100;i++) {\n  Y[i] = X[i]/c;\n  X[i] = X[i] + c;//name dependence\n  Z[i] = Y[i] + c;//RAW\n  Y[i] = c - Y[i];\n}\n//rewrite:\nfor(i=0;i&lt;100;i++) {\n  T[i] = X[i]/c;\n  P[i] = X[i] + c;\n  Z[i] = T[i] + c;\n  Y[i] = c - T[i];\n}\n</code></pre> !!! TODO:practice  </p>"},{"location":"sp25/sys3/note/#mimdthread-level-parallelism","title":"MIMD:Thread-level Parallelism","text":"<p>MIMD:multiple instructions multiple data multi-processor:shared memory multi-computer:message passing NORMA(no-remote memory access) </p>"},{"location":"sp25/sys3/note/#uniform-memory-accessuma","title":"Uniform-Memory Access(UMA)","text":"<p>\u96c6\u4e2d\u5171\u4eab\uff0c\u7d27\u8026\u5408\u7684\u5171\u4eab\u8d44\u6e90\uff0ca.k.a SMP(Symmetiric(Shared-memory) Multi-Processors)  each CPU owns its cache and small private memory  </p>"},{"location":"sp25/sys3/note/#non-uniform-memory-accessnuma","title":"Non-Uniform-Memory Access(NUMA)","text":"<p>\u5206\u5e03\u5f0f\uff0ca.k.a DSP(Distributed Shared-memory Processors)  NC-NUMA:Non-Cache Non-Uniform Memory Access CC-NUMA:Coherent Cache Non-Uniform Memory Access  </p>"},{"location":"sp25/sys3/note/#cache-only-memory-accesscoma","title":"Cache-Only Memory Access(COMA)","text":"<p> COMA is a special case of NUMA Coherent Cache by applying cache-coherence protocol  </p>"},{"location":"sp25/sys3/note/#massively-parallel-processorsmpp","title":"Massively Parallel Processors(MPP)","text":"<p>Multiple processors(standard CPUs) connected by custom network </p>"},{"location":"sp25/sys3/note/#clusters-of-workstationscow","title":"Clusters of Workstations(COW)","text":"<p>a large number of PCs or workstations connected by commercial network </p>"},{"location":"sp25/sys3/note/#performance-evalutation","title":"Performance evalutation","text":"<p>hurdle:limited parallelism avaliable in programs,relatively high cost of communications Recall Amdahl's Law: \\(Speedup_{overall} = \\frac{Execution\\ time_{old}}{Execution\\ time_{new}}= \\frac{1}{(1-Fraction_{enhanced}) + \\frac{Fraction_{enhanced}}{SpeedUp_{enhanced}}}\\) </p>"},{"location":"sp25/sys3/note/#cache-coherence","title":"Cache Coherence","text":"<p>An example  </p> time event cacheA cacheB memory 0 0 1 Aread 0 0 2 Bread 0 0 0 3 Astore 1 0 1 <p>memory consistency:a processor writes location A followed by B,any processor that sees the new value of B must also see the new value of A\u8bfb\u5199\u987a\u5e8f using memory consistency model relaxed consistency model:allows out-of-order execution,using synchronization R-&gt;W,R-&gt;R are often relaxed cache coherence:all reads by any processor must return the most recently written value,writes to the same location by any two processors are seen in the same order by all processors causing by migration &amp; replication using cache coherence protocol </p>"},{"location":"sp25/sys3/note/#bus-snooping-protocoluma","title":"Bus snooping protocol(UMA)","text":"<p>\u76d1\u542c:broadcast invalid info/update data on the bus to invalidate/update other copies write through &amp; write back write invalidate protocol(using write back) |processor|buss|cacheA|cacheB|memory| |-------|-------|-------|-------|-------| |||||0| |Aread|cache miss|0||0| |Bread|cache miss|0|0|0| |Awrite|invalidation|1|X|0| |Bread|cache miss|1|1|1|</p> <p>MSI protocol - Invalid - Shared - Modified(Exclusive)  </p> <p> </p> <p>!!! TODO:practice MESI protocol exclusive -&gt; shared if read by others exclusive -&gt; modified if written True exclusive,no copy in other cores,no invalidation will happen(no broadcast is needed)  </p>"},{"location":"sp25/sys3/note/#directory-based-protocolnuma","title":"Directory based protocol(NUMA)","text":"<p>directory for recording which processors in the system have copies of certain blocks in the cache,sends invalid signal to processors that have copies through the directory when one cache writes  </p>"},{"location":"sp25/sys3/note/#final-review-week16","title":"Final Review Week16","text":""},{"location":"sp25/sys3/note/#_3","title":"\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"sp25/sys3/note/#_4","title":"\u91cf\u5316\u7814\u7a76\u65b9\u6cd5","text":"<p>\u9009\u62e9\u9898 CPI,CPU time\u7684\u8ba1\u7b97 Amdahl's Law:\u8ba1\u7b97SpeedUp  </p>"},{"location":"sp25/sys3/note/#ilp","title":"ILP","text":"<p>Data Dependencies Name Dependencies (RAW,WAR,WAW) Control Dependencies \u662f\u5426\u5b58\u5728\u5192\u9669\u7684\u533a\u5206  </p>"},{"location":"sp25/sys3/note/#scoreboard_1","title":"Scoreboard","text":"<p>ID -&gt; IS(in-order) + RO(out-of-order)  </p>"},{"location":"sp25/sys3/note/#tomasulo_1","title":"Tomasulo","text":"<p>Reservation station,command bus  </p>"},{"location":"sp25/sys3/note/#hardware-based-speculation_1","title":"Hardware-based Speculation","text":"<p>using Reorder buffer(ROB) before writing back to registers  </p>"},{"location":"sp25/sys3/note/#cache","title":"Cache","text":"<p>Block placement(fully associative,set associative,direct mapped) Which one has a lower cache miss rate? Block identification(tag/block) Given cache size,associative method,calculate the tag bit number,...(see homework) Block replacement(Random,LRU,FIFO) Write strategy(Write Back,Write Through(with write buffer)) What happens if write hit or write miss?(combined with cache coherence protocol) \\(AMAT = (HitTime + MissRate * MissPenalty)\\) \u7ed9\u5b9aCPI\uff0cMissPenalty\uff0cMissRate\u8ba1\u7b97AMAT\uff0cCPUTime\u7b49  </p>"},{"location":"sp25/sys3/note/#multiple-issue-static-scheduling","title":"Multiple issue &amp; static scheduling","text":"<p>\u9009\u62e9\u9898\uff0c\u533a\u5206Superpipeline,superscalar,VLIW  </p>"},{"location":"sp25/sys3/note/#dlp","title":"DLP","text":"<p>SIMD \u5404\u81ea\u7684\u7279\u70b9</p>"},{"location":"sp25/sys3/note/#vector-processor","title":"Vector Processor","text":"<p>CRAY-1</p>"},{"location":"sp25/sys3/note/#array-processor_1","title":"Array Processor","text":"<p>interconnect network</p>"},{"location":"sp25/sys3/note/#tlp","title":"TLP","text":"<p>MIMD UMA(SMP),NUMA(DSP)\u533a\u522b\uff0c\u9002\u7528\u573a\u666f memory consistency\u4e0d\u6d89\u53ca\uff0c\u53ea\u8003\u5bdf\u4e0eCoherence\u7684\u533a\u522b MSI protocol(snooping) \u72b6\u6001\u673a MESI(+Exclusive)  </p>"},{"location":"sp25/sys3/note/#os_1","title":"OS","text":""},{"location":"sp25/sys3/note/#main-memory","title":"Main Memory","text":"<p>Paritition,Segmentation Fragmentation(internal,external) Paging to avoid external fragmentation Address translation PTBR(page-table base register) contains physical address TLB acceleration:page cache in CPU Effective Access Time(EAT) pages must physical contigious page directory number,page table number,page offset(calculation!) Hashed page table,inverted page table  </p>"},{"location":"sp25/sys3/note/#demand-paging","title":"Demand paging","text":"<p>Page Fault Page replacement(FIFO,optimal,LRU,LFU,MFU) \u51e0\u6b21\u7f3a\u9875</p>"},{"location":"sp25/sys3/note/#page-size","title":"Page size","text":"<p>TLB reach</p>"},{"location":"sp25/sys3/note/#mass-storage","title":"Mass Storage","text":"<p>Disk scheduling(FCFS,SSTF,SCAN,C-SCAN,C-LOOK)\u8ba1\u7b97\u5404\u4e2a\u7b97\u6cd5\u4e0b\u78c1\u5934\u79fb\u52a8\u7684\u8ddd\u79bb  </p>"},{"location":"sp25/sys3/note/#io-system","title":"I/O System","text":"<p>Polling &amp; Interrupt  </p>"},{"location":"sp25/sys3/note/#file-system","title":"File System","text":"<p>File attributes Open files(per-process table,system-wide table) Directory:link&amp;unlink  Protection:permission(ACL,Unix)  </p>"},{"location":"sp25/sys3/note/#file-system-implementation_1","title":"File System Implementation","text":"<p>FCB(file metadata) note:file name is stored in directory metadata,not FCB! on-disk structure,directory structure multi-level pointer(\u8ba1\u7b97max file size) \u4f8b\uff1a\u6700\u591a\u8bfb3\u6b21(single indirect) disk block allocation:contiguous,linked-list,indexed  </p>"},{"location":"sp25/xi/","title":"\u4e60\u8fd1\u5e73\u65b0\u65f6\u4ee3\u4e2d\u56fd\u7279\u8272\u793e\u4f1a\u4e3b\u4e49\u601d\u60f3\u6982\u8bba  3.0\u5b66\u5206","text":""},{"location":"sp25/xi/#_1","title":"\u6388\u8bfe\u6559\u5e08","text":"<p>\u6851\u5efa\u6cc9/\u7fdf\u7eed\u6743 \u9009\u8bfe\u7cfb\u7edf\u6559\u5e08\u59d3\u540d\u6392\u5728\u524d\u7684\u4e3b\u5bfc\u8bfe\u7a0b\u6559\u6388\u4e0e\u8bc4\u5206  </p>"},{"location":"sp25/xi/#_2","title":"\u8ba4\u5b9a","text":"<p>\u601d\u653f\u519b\u4f53\u8bfe</p>"},{"location":"sp25/xi/#_3","title":"\u5206\u6570\u6784\u6210","text":"<ul> <li>\u5e73\u65f6\u6210\u7ee960%\uff1a  </li> <li>\u8003\u52e4\uff1a\u5b9e\u9645\u9664\u4e24\u6b21\u53c2\u89c2\u524d\u5408\u5f71\u5916\u6ca1\u6709\u8fdb\u884c\u8fc7\u8bfe\u5802\u7b7e\u5230  </li> <li>\u5c0f\u7ec4\u4f5c\u4e1a(10-12\u4eba\u4e00\u7ec4)\uff1a<ul> <li>\u601d\u8003\u9898\uff1a\u9488\u5bf9\u6bcf\u8282\u8bfe\u524d\u7684\u601d\u8003\u9898\u5728\u5b66\u5728\u6d59\u5927\u63d0\u4ea4\u8ba8\u8bba\u8bb0\u5f55\u8868  </li> <li>\u8bfe\u5802\u53d1\u8a00\uff1a\u5176\u4e2d\u4e09\u6b21\u601d\u8003\u9898\u9700\u8981\u5236\u4f5cppt\uff08\u4e5f\u53ef\u4ee5\u4e0d\u505a\uff09\u5728\u8bfe\u5802\u4e0apre  </li> <li>\u5b9e\u8df5\u8c03\u7814\uff1a\u8c03\u7814\u4e60\u601d\u60f3\u5728\u6d59\u6c5f\u7684\u5b9e\u8df5\uff0c\u5236\u4f5cppt\u5728\u8bfe\u5802\u4e0a\u8fdb\u884c20-30\u5206\u949f\u7684pre\uff0c\u5e76\u63d0\u4ea4\u8c03\u7814\u62a5\u544a  </li> </ul> </li> <li>\u671f\u672b\u8003\u8bd540%(\u5f00\u5377)</li> </ul>"},{"location":"sp25/xi/#_4","title":"\u5b66\u4e60\u5efa\u8bae","text":"<p>\u5e73\u65f6\u6210\u7ee9\u4f1a\u5728\u6700\u540e\u4e00\u8282\u8bfe\u901a\u8fc7\u516c\u5e03\u5c0f\u7ec4\u5747\u5206\u5e76\u7ec4\u5185\u5206\u914d\uff0c\u5c0f\u7ec4\u5747\u5206\u4e00\u822c\u572892-95\u5206 \u671f\u672b\u53ea\u9700\u8981\u5e26\u4e66\uff0c\u8003\u524d\u7a0d\u5fae\u7ffb\u4e00\u7ffb\u5c31\u5dee\u4e0d\u591a\u4e86  </p>"},{"location":"tools/","title":"\u5de5\u5177","text":"<p>\u5e38\u7528\u5de5\u5177\u89e3\u6790\u4e0e\u5907\u5fd8  </p>"},{"location":"tools/gdb/","title":"Gdb","text":"<p>g++ -g -o my_program my_program.cpp</p> <p>gdb my_program</p>"},{"location":"tools/git/","title":"Git","text":""},{"location":"tools/git/#introduction","title":"Introduction","text":"<p>Git \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff0c\u7528\u4e8e\u8ddf\u8e2a\u6587\u4ef6\u7684\u53d8\u5316\uff0c\u5e38\u7528\u4e8e\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7ba1\u7406\u4ee3\u7801\uff0c\u4e3b\u8981\u529f\u80fd\u5305\u62ec\u7248\u672c\u63a7\u5236\u3001\u534f\u4f5c\u5f00\u53d1\u548c\u4ee3\u7801\u5907\u4efd  </p>"},{"location":"tools/git/#github-gitlab","title":"Github &amp; Gitlab","text":"<p>Github:\u57fa\u4e8e Git \u7684\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\uff0c\u63d0\u4f9b\u8fdc\u7a0b\u4ed3\u5e93\u5b58\u50a8\u548c\u534f\u4f5c\u5f00\u53d1\u529f\u80fd\uff0c\u4e3b\u8981\u529f\u80fd\u5305\u62ec\u8fdc\u7a0b\u4ee3\u7801\u6258\u7ba1\u3001\u534f\u4f5c\u5f00\u53d1\u3001\u4ee3\u7801\u5ba1\u67e5\u3001\u81ea\u52a8\u5316\u3001\u793e\u533a\u548c\u5f00\u6e90\u9879\u76ee\u6258\u7ba1 Gitlab:\u57fa\u4e8e Git \u7684 DevOps \u5e73\u53f0\uff0c\u9664\u4e86\u4ee3\u7801\u6258\u7ba1\u5916\uff0c\u8fd8\u63d0\u4f9b\u5b8c\u6574\u7684 DevOps \u5de5\u5177\u94fe\uff0c\u9002\u5408\u4f01\u4e1a\u7ea7 DevOps \u6d41\u7a0b\u3001\u79c1\u6709\u5316\u90e8\u7f72\u3001\u56e2\u961f\u534f\u4f5c     DevOps:Development(\u5f00\u53d1)and Operation(\u8fd0\u7ef4)  </p>"},{"location":"tools/git/#concepts","title":"Concepts","text":"<p>1.Repository:\u4ed3\u5e93\u662f Git \u5b58\u50a8\u9879\u76ee\u7684\u5730\u65b9\uff0c\u5305\u542b\u9879\u76ee\u7684\u6240\u6709\u6587\u4ef6\u548c\u5386\u53f2\u8bb0\u5f55\u3002\u4ed3\u5e93\u53ef\u4ee5\u662f\u672c\u5730\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u8fdc\u7a0b\u7684\uff08\u5982 GitHub\u3001GitLab \u7b49\uff09 2.Commit:\u63d0\u4ea4\u662f Git \u4e2d\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u7528\u4e8e\u4fdd\u5b58\u6587\u4ef6\u7684\u5f53\u524d\u72b6\u6001\u3002\u6bcf\u6b21\u63d0\u4ea4\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684\u54c8\u5e0c\u503c\uff0c\u8bb0\u5f55\u6587\u4ef6\u7684\u66f4\u6539\u4fe1\u606f\u3001\u4f5c\u8005\u548c\u65f6\u95f4\u6233 3.Branch:\u5206\u652f\u662f\u9879\u76ee\u7684\u72ec\u7acb\u5f00\u53d1\u7ebf\u3002\u9ed8\u8ba4\u5206\u652f\u901a\u5e38\u79f0\u4e3a main \u6216 master\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u521b\u5efa\u65b0\u5206\u652f\u6765\u5f00\u53d1\u65b0\u529f\u80fd\u6216\u4fee\u590d\u95ee\u9898\uff0c\u800c\u4e0d\u4f1a\u5f71\u54cd\u4e3b\u5206\u652f 4.Merge:\u5408\u5e76\u662f\u5c06\u4e00\u4e2a\u5206\u652f\u7684\u66f4\u6539\u6574\u5408\u5230\u53e6\u4e00\u4e2a\u5206\u652f\u7684\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5c06\u529f\u80fd\u5206\u652f\u5408\u5e76\u5230\u4e3b\u5206\u652f 5.Pull:\u62c9\u53d6\u662f\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u83b7\u53d6\u6700\u65b0\u66f4\u6539\u5e76\u5408\u5e76\u5230\u672c\u5730\u5206\u652f\u7684\u64cd\u4f5c 6.Push:\u63a8\u9001\u662f\u5c06\u672c\u5730\u5206\u652f\u7684\u66f4\u6539\u4e0a\u4f20\u5230\u8fdc\u7a0b\u4ed3\u5e93\u7684\u64cd\u4f5c 7.Clone:\u514b\u9686\u662f\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u590d\u5236\u6574\u4e2a\u9879\u76ee\u5230\u672c\u5730\u7684\u64cd\u4f5c 8.Staging Area:\u6682\u5b58\u533a\u662f\u63d0\u4ea4\u524d\u7684\u4e2d\u95f4\u533a\u57df\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u9009\u62e9\u54ea\u4e9b\u66f4\u6539\u9700\u8981\u63d0\u4ea4  </p>"},{"location":"tools/git/#_1","title":"\u547d\u4ee4","text":""},{"location":"tools/git/#repository-creation","title":"Repository creation","text":"<pre><code>git init  \ngit add README.md  \ngit commit -m \"&lt;update_info&gt;\"\ngit branch -M &lt;branch_name&gt;  \ngit remote add origin &lt;website.git&gt;\ngit push -u origin main\n</code></pre>"},{"location":"tools/git/#repository-contribution","title":"Repository contribution","text":"<pre><code>git add .\ngit commit -m \"&lt;update_info&gt;\"  \ngit push origin &lt;branch_name&gt;  \n</code></pre>"},{"location":"tools/git/#status","title":"Status","text":"<pre><code>git status #\u67e5\u770b\u76ee\u5f55\u4e0e\u6682\u5b58\u533a\u72b6\u6001\ngit log #\u67e5\u770b\u5386\u53f2\ngit log --oneline #\u67e5\u770b\u7b80\u7ea6\u5386\u53f2\ngit log -p #\u67e5\u770b\u8be6\u7ec6\u5386\u53f2\ngit log --graph #\u67e5\u770b\u63d0\u4ea4\u5386\u53f2\u5206\u652f\u56fe\ngit show &lt;commit_hash&gt; #\u67e5\u770b\u67d0\u6b21\u63d0\u4ea4\u8be6\u7ec6\u4fe1\u606f\ngit blame &lt;file&gt; #\u67e5\u770b\u67d0\u4e00\u6587\u4ef6\u662f\u8c01\u63d0\u4ea4\u7684\u4fee\u6539\n</code></pre>"},{"location":"tools/git/#branch","title":"Branch","text":"<pre><code>git branch #\u67e5\u770b\u672c\u5730\u5206\u652f\ngit branch -a #\u67e5\u770b\u6240\u6709\u5206\u652f\ngit branch -r #\u67e5\u770b\u8fdc\u7a0b\u5206\u652f\ngit branch -d &lt;branch_name&gt; #\u5220\u9664\u672c\u5730\u5206\u652f\ngit branch -D &lt;branch_name&gt; #\u5f3a\u5236\u5220\u9664\u672c\u5730\u5206\u652f\uff08\u5373\u4f7f\u672a\u5408\u5e76\uff09\ngit push origin --delete &lt;branch_name&gt; #\u5220\u9664\u8fdc\u7a0b\u5206\u652f\ngit fetch --all #\u83b7\u53d6\u6240\u6709\u8fdc\u7a0b\u5206\u652f\u7684\u66f4\u65b0\ngit merge --no-ff &lt;branch&gt; #\u5408\u5e76\u5206\u652f\u5e76\u4fdd\u7559\u8bb0\u5f55\ngit checkout -b &lt;branch_name&gt; #\u521b\u5efa\u5206\u652f\u5e76\u5207\u6362\ngit checkout master #\u56de\u5230master\u5206\u652f\ngit diff &lt;branch_name&gt; master #\u663e\u793a\u67d0\u5206\u652f\u4e0e\u4e3b\u5206\u652f\u7684\u5dee\u522b\n</code></pre>"},{"location":"tools/git/#remote","title":"Remote \u8fdc\u7a0b\u4ed3\u5e93","text":"<pre><code>git remote -v #\u67e5\u770b\u5730\u5740\ngit remote show origin #\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\ngit fetch origin #\u83b7\u53d6\u66f4\u65b0\uff08\u4e0d\u5408\u5e76\uff09\ngit pull --rebase #\u62c9\u53d6\u66f4\u65b0\u5e76\u53d8\u57fa\uff08\u907f\u514d\u5408\u5e76\u63d0\u4ea4\uff09\ngit remote prune origin #\u6e05\u7406\u672c\u5730\u5df2\u5220\u9664\u7684\u8fdc\u7a0b\u5206\u652f\n</code></pre>"},{"location":"tools/git/#clone","title":"Clone","text":"<pre><code>git clone -b &lt;branch_name&gt;&lt;repo_url&gt; #\u514b\u9686\u67d0url\u7684\u67d0\u5206\u652f\ngit checkout -b &lt;branch_name&gt; origin/&lt;branch_name&gt; #\u5173\u8054\u5206\u652f\n</code></pre>"},{"location":"tools/git/#clear","title":"Clear","text":"<pre><code>git rm --cached &lt;file&gt; #\u5c06\u5df2add\u672acommit\u7684\u6587\u4ef6\u9000\u56de\u672aadd\u72b6\u6001\ngit checkout -- &lt;file&gt; #\u64a4\u9500\u5df2\u4fee\u6539\u6587\u4ef6\u7684\u4fee\u6539\ngit reset soft --HEAD^ #\u64a4\u9500commit\u4f46\u4e0d\u66f4\u6539\u6587\u4ef6\ngit reset hard --HEAD^ #\u64a4\u9500commit\u4e14\u5c06\u6587\u4ef6\u9000\u56de\u4e0a\u4e00\u7248\u672c\ngit push -f #\u5f3a\u5236\u63a8\u9001\uff0c\u8986\u76d6commit\n</code></pre>"},{"location":"tools/git/#reset","title":"Reset","text":"<pre><code>git checkout -- &lt;file&gt;  #\u64a4\u9500\u5de5\u4f5c\u533a\u7684\u4fee\u6539\ngit reset HEAD &lt;file&gt;   #\u5c06\u6587\u4ef6\u4ece\u6682\u5b58\u533a\u64a4\u56de\u5230\u5de5\u4f5c\u533a\ngit revert &lt;commit_hash&gt;    #\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u63d0\u4ea4\u6765\u64a4\u9500\u67d0\u6b21\u63d0\u4ea4\ngit stash   #\u5c06\u5f53\u524d\u4fee\u6539\u6682\u5b58\u8d77\u6765\ngit stash pop   #\u6062\u590d\u6700\u8fd1\u4e00\u6b21\u6682\u5b58\u7684\u4fee\u6539\ngit stash list  #\u67e5\u770b\u6240\u6709\u6682\u5b58\u7684\u4fee\u6539\ngit stash drop  #\u5220\u9664\u6700\u8fd1\u4e00\u6b21\u6682\u5b58\u7684\u4fee\u6539\n</code></pre>"},{"location":"tools/git/#submodule","title":"Submodule","text":"<pre><code>git submodule add &lt;repo_url&gt;    #\u6dfb\u52a0\u5b50\u6a21\u5757\ngit submodule init  #\u521d\u59cb\u5316\u5b50\u6a21\u5757\ngit submodule update    #\u66f4\u65b0\u5b50\u6a21\u5757\ngit submodule foreach &lt;cmd&gt; #\u5bf9\u6bcf\u4e2a\u5b50\u6a21\u5757\u6267\u884c\u547d\u4ee4\n</code></pre>"},{"location":"tools/git/#config","title":"Config","text":"<pre><code>git config --list   #\u67e5\u770b Git \u914d\u7f6e\ngit config --global user.name \"name\"    #\u8bbe\u7f6e\u5168\u5c40\u7528\u6237\u540d\ngit config --global user.email \"email\"  #\u8bbe\u7f6e\u5168\u5c40\u90ae\u7bb1\ngit config --global alias.&lt;alias&gt; &lt;command&gt; #\u8bbe\u7f6e\u547d\u4ee4\u522b\u540d\ngit config --global core.editor \"vim\"   #\u8bbe\u7f6e\u9ed8\u8ba4\u7f16\u8f91\u5668\n</code></pre> <p>\u53c2\u8003 https://note.tonycrane.cc/cs/tools/git/</p>"},{"location":"tools/latex/","title":"LaTeX","text":""},{"location":"tools/latex/#_1","title":"\u5de5\u5177","text":"<p>Texlive <pre><code>sudo apt install texlive-full\n</code></pre> Mathtype\u56fa\u5b9a\u516c\u5f0f\u8f6c\u5316\u4e3aLaTeX Mathpix\u624b\u5199\u516c\u5f0f\u3001\u8ba1\u7b97\u673a\u751f\u6210\u516c\u5f0f\u8f6c\u5316\u4e3aLaTeX Vscode\u63d2\u4ef6\uff1a  </p> <ul> <li>latex workshop</li> <li>latex utilities</li> <li>Ctrl + Shift + P -&gt; Preferences: Open Settings (JSON) -&gt; settings.json  </li> </ul> <pre><code>\"latex-workshop.latex.recipes\": [\n  {\n    \"name\": \"pdflatex\",\n    \"tools\": [\"pdflatex\"]\n  },\n  {\n    \"name\": \"latexmk\",\n    \"tools\": [\"latexmk\"]\n  }\n],\n\"latex-workshop.latex.tools\": [\n  {\n    \"name\": \"pdflatex\",\n    \"command\": \"pdflatex\",\n    \"args\": [\"-interaction=nonstopmode\", \"-synctex=1\", \"%DOC%\"]\n  },\n  {\n    \"name\": \"latexmk\",\n    \"command\": \"latexmk\",\n    \"args\": [\"-pdf\", \"-interaction=nonstopmode\", \"-synctex=1\", \"%DOC%\"]\n  }\n],\n\"latex-workshop.view.pdf.viewer\": \"tab\",\n\"latex-workshop.latex.autoBuild.run\": \"onFileChange\"\n</code></pre> <p>\u53c2\u8003 BV1LT4y1y7oz</p>"},{"location":"tools/latex/format/","title":"\u6587\u732e","text":""},{"location":"tools/latex/format/#_1","title":"\u8bba\u6587","text":"<p>In *.tex <pre><code>\\documentclass[a4paper,11pt,UTF8]{article}\n\\usepackage{CTEX} #\u4e2d\u6587\n\\usepackage{amsfonts}\n\\usepackage{amssymb}\n\\usepackage{mathrsfs}\n\\usepackage[arrow,matrix]{xy}\n\\usepackage{amsmath,amssymb,amscd,bm,bbm,amsthm,mathrsfs}\n\\usepackage{amsmath,amscd}\n\\usepackage{amsfonts,amssymb}\n\\usepackage{xypic}\n\\usepackage{indentfirst}\n\\usepackage{diagbox} #\u8868\u683c\n\\usepackage{graphicx} #\u56fe\u7247\n\n\\def\\d{\\textup{d}} #\\d\u8868\u793ad\u7684\u6b63\u4f53\uff0c\u7528\u4e8e\u8f93\u5165\u5fae\u5206\u7b26\u53f7\n\n\\theoremstyle{plain}\n\\newtheorem{thm}{\u5b9a\u7406}[section]\n\\newtheorem{lem}{\u5f15\u7406}[section]\n\\newtheorem{prop}{\u547d\u9898}[section]\n\\newtheorem{cor}{\u63a8\u8bba}[section]\n\n\\theoremstyle{definition}\n\\newtheorem{defn}{\u5b9a\u4e49}[section]\n\\newtheorem{exmp}{\u4f8b\u5b50}[section]\n\\newtheorem*{ack}\n\n\\theoremstyle{Remark}\n\\newtheorem{rem}{\u6ce8\u91ca}[section]\n\n\\renewcommand{\\qedsymbol}{$\\square$}\n\\renewcommand\\baselinestretch{1.25}\n</code></pre> <pre><code>\\begin{document}\n\\title{\u8bba\u6587\u6807\u9898}\n\\author{\u4f5c\u8005}\n// \\date{\\today}\n\\maketitle\n\n\\begin{abstract}\n...\n\\end{abstract}\n\n\\setcounter{section}{-1} #\u5f15\u8a00\u4ece0\u5f00\u59cb\u7f16\u53f7\n\n\\section{\u5f15\u8a00}\n...\n\\section{\u6b63\u6587}\n...\n\n\\end{document}\n</code></pre></p>"},{"location":"tools/latex/format/#ppt","title":"PPT","text":"<p><pre><code>\\documentclass[fontset = none]{beamer}\n\\usetheme{Madrid}\n\\useoutertheme{smoothbars}\n\\def\\mathfamilydefault{\\rmdefault}\n\\usepackage{fontspec}\n\\setmainfont{Times New Roman}\n\n\\usepackage{CTEX} \n\\usepackage{amsfonts}\n\\usepackage{amssymb}\n\\usepackage{mathrsfs}\n\\usepackage[arrow,matrix]{xy}\n\\usepackage{amsmath,amssymb,amscd,bm,bbm,amsthm,mathrsfs}\n\\usepackage{amsmath,amscd}\n\\usepackage{amsfonts,amssymb}\n\\usepackage{xypic}\n\\usepackage{indentfirst}\n\\usepackage{diagbox} \n\\usepackage{graphicx} \n\n\\def\\d{\\textup{d}} #\\d\u8868\u793ad\u7684\u6b63\u4f53\uff0c\u7528\u4e8e\u8f93\u5165\u5fae\u5206\u7b26\u53f7\n\n\\theoremstyle{plain}\n\\newtheorem{thm}{\u5b9a\u7406}[section]\n\\newtheorem{lem}{\u5f15\u7406}[section]\n\\newtheorem{prop}{\u547d\u9898}[section]\n\\newtheorem{cor}{\u63a8\u8bba}[section]\n\n\\theoremstyle{definition}\n\\newtheorem{defn}{\u5b9a\u4e49}[section]\n\\newtheorem{exmp}{\u4f8b\u5b50}[section]\n\\newtheorem*{ack}\n\n\\theoremstyle{Remark}\n\\newtheorem{rem}{\u6ce8\u91ca}[section]\n\n\\renewcommand{\\qedsymbol}{$\\square$}\n\\renewcommand\\baselinestretch{1.5}\n\n\\definecolor{uibblue}{HTML}{262686}\n\\defindcolor{uibgreen}{HTML}{006000}\n</code></pre> <pre><code>\\begin{document}\n\\begin{frame}\n\\title{\u6807\u9898}\n\\author{\u4f5c\u8005}\n\\institute{\u5b66\u9662}\n\\date{\\today}\n\\titlepage\n\\end{frame}\n\n\\section{\u7b2c\u4e00\u7ae0}\n\\begin{frame}{\u7b2c\u4e00\u8282}\n\\begin{thm}[\u540d\u79f0]\n\\hspace{2em}\u5b9a\u7406.\n\\end{thm}\n\\pause\n\\setbeamercolor{block title}{fg = white,bg = uibgreen}\n\\begin{proof}\n\\hspace{2em}\u8bc1\u660e.\n\\end{proof}\n\\pause\n\\setbeamercolor{block title}{fg = white,bg = uibblue}\n\\begin{block}{\u81ea\u5b9a\u4e49}\n\\hspace{2em}\u81ea\u5b9a\u4e49\u5185\u5bb9.\n\\end{block}\n\\end{frame}\n\\end{document}\n</code></pre></p>"},{"location":"tools/latex/format/#_2","title":"\u7f16\u8bd1","text":""},{"location":"tools/latex/symbols/","title":"\u5e38\u7528\u7b26\u53f7","text":""},{"location":"tools/latex/symbols/#_1","title":"\u5e38\u7528\u7b26\u53f7","text":"<pre><code>$a+b=c$ //\u884c\u5185\u516c\u5f0f\n$$a+b=c$$ //\u884c\u95f4\u516c\u5f0f\n</code></pre>"},{"location":"tools/latex/symbols/#_2","title":"\u6570\u5b66\u7b26\u53f7","text":""},{"location":"tools/latex/symbols/#_3","title":"\u56db\u5219\u8fd0\u7b97","text":"<pre><code>+,-,\\times,\\div,\\cdot,\\pm,\\mp,=,\\approx //\u52a0\u51cf\u4e58\u9664\u3001\u70b9\u4e58\u3001\u52a0\u51cf\u3001\u51cf\u52a0\u3001\u7b49\u4e8e\u3001\u7ea6\u7b49\u4e8e\n</code></pre>"},{"location":"tools/latex/symbols/#_4","title":"\u5927\u5c0f\u6bd4\u8f83","text":"<pre><code>\\le,\\ge,\\ll,\\gg,\\ne,\\equiv //\u5c0f\u4e8e\u7b49\u4e8e\u3001\u5927\u4e8e\u7b49\u4e8e\u3001\u8fdc\u5c0f\u4e8e\u3001\u8fdc\u5927\u4e8e\u3001\u4e0d\u7b49\u4e8e\u3001\u6052\u7b49\u4e8e\n</code></pre>"},{"location":"tools/latex/symbols/#_5","title":"\u4e0a\u4e0b\u6807","text":"<pre><code>x_2,x^2,C_n^m,a_{ij},f^{(n)} //\u4e0b\u6807\u4e0e\u4e0a\u6807\n</code></pre>"},{"location":"tools/latex/symbols/#_6","title":"\u5206\u6570","text":"<pre><code>\\frac{\u5206\u5b50}{\u5206\u6bcd}\n\\displaystyle\\frac{}{} //\u884c\u5185\u516c\u5f0f\u624b\u52a8\u653e\u5927\n\\frac{c}{displaystyle\\frac{a}{b}} //\u884c\u95f4\u5b50\u5206\u6570\u624b\u52a8\u653e\u5927\n</code></pre>"},{"location":"tools/latex/symbols/#_7","title":"\u6781\u9650 \u7ea7\u6570","text":"<pre><code>\\sqrt{a},\\sqrt{n}{a}\n\\lim\\limits_{x \\rightarrow 0}x //\u6781\u9650\n\\sum\\limits_{i=1}^na_i //\u6c42\u548c\n\\prod\\limits_{i=1}^nb_i //\u8fde\u4e58\n\\bigoplus\\limits_{i=1}^nV_i //\u76f4\u548c\n\\bigotimes\\limits_{i=1}^nW_i //\u5f20\u91cf\u79ef\n\\lim\\limits_{\\substack{x \\rightarrow 0 \\\\ y \\rightarrow 0}}xy //\u591a\u91cd\u4e0b\u6807\n</code></pre>"},{"location":"tools/latex/symbols/#_8","title":"\u96c6\u5408","text":"<pre><code>\\in,\\subset,\\subseteq,\\supset,\\supseteq,\\cap,\\cup,\\emptyset,\\varnothing\n//\u5c5e\u4e8e\uff0c\u5305\u542b\u4e8e\uff0c\u771f\u5305\u542b\u4e8e\uff0c\u5305\u542b\uff0c\u771f\u5305\u542b\uff0c\u4ea4\uff0c\u5e76\uff0c\u7a7a\u96c6\uff0c\u7a7a\u96c6(\u683c\u5f0f\u4e0d\u540c)\n\\not\\in,\\not\\subset //\u4e0d\u5c5e\u4e8e\uff0c\u4e0d\u5305\u542b\u4e8e\n</code></pre>"},{"location":"tools/latex/symbols/#_9","title":"\u6574\u9664","text":"<pre><code>\\mid,\\not\\mid,\\nmid //\u6574\u9664\uff0c\u4e0d\u6574\u9664\uff0c\u4e0d\u6574\u9664(\u683c\u5f0f\u4e0d\u540c)\n</code></pre>"},{"location":"tools/latex/symbols/#_10","title":"\u5b57\u6bcd\u7b26\u53f7","text":"<pre><code>\\mathbb{R} //\u7a7a\u5fc3\u7b26\u53f7\n\n\\mathcal{A},\\mathscr{I},\\mathfrak{g} //\u82b1\u5199\u7b26\u53f7\n</code></pre>"},{"location":"tools/latex/symbols/#_11","title":"\u79bb\u6563\u6570\u5b66","text":"<pre><code>\\forall,\\exists //\u4efb\u610f\uff0c\u5b58\u5728\n\n\\wedge,\\vee //\u903b\u8f91\u4e0e\uff0c\u903b\u8f91\u6216\n\n\\binom{}{} //\u7ec4\u5408\u6570\n</code></pre>"},{"location":"tools/latex/symbols/#_12","title":"\u5e0c\u814a\u5b57\u6bcd","text":"<pre><code>\\alpha,\\beta,\\gamma,\\delta,\\epsilon,\\varepsilon(\u683c\u5f0f\u4e0d\u540c),\\eta,\\theta,\\lambda,\n\\mu,\\pi,\\rho,\\sigma,\\tau,\\phi,\\varphi,\\psi,\\omega,\\xi,\\zeta\n\\Gamma,\\Delta,\\Pi,\\Sigma,\\Phi,\\Psi,\\Omega\n</code></pre>"},{"location":"tools/latex/symbols/#_13","title":"\u65e0\u7a77","text":"<pre><code>\\infty,\\aleph //\u65e0\u7a77\u5927\uff0c\u963f\u5217\u592b\n</code></pre>"},{"location":"tools/latex/symbols/#_14","title":"\u521d\u7b49\u51fd\u6570","text":"<pre><code>\\sin,\\cos,\\tan,\\cot,\\log,\\lg,\\ln\n</code></pre>"},{"location":"tools/latex/symbols/#_15","title":"\u5fae\u79ef\u5206","text":"<pre><code>\\d x //\u5fae\u5206\n\\int_a^bf(x)\\d x //\u79ef\u5206\n\\frac{\\partial y}{partial x} //\u504f\u5fae\u5206\n\\iint_D f(x,y) \\d x \\d y //\u4e8c\u91cd\u79ef\u5206\n\\oint_DP\\d x + Q\\d y //\u66f2\u7ebf\u79ef\u5206\n\\nabla //\u68af\u5ea6\n</code></pre>"},{"location":"tools/latex/symbols/#_16","title":"\u4e0a\u5212\u7ebf","text":"<pre><code>\\overline{AB},\\(wide)tilde{AB},\\(wide)hat{AB},\\overrightarrow{AB}\n//\u4e0a\u5212\u7ebf\uff0c\u4e0a\u6ce2\u6d6a\u7ebf\uff0c\u4e0a\u5c16\u53f7\uff0c\u77e2\u91cf\n</code></pre>"},{"location":"tools/latex/symbols/#_17","title":"\u7279\u6b8a\u7b26\u53f7","text":"<pre><code>\\backslash,\\left\\{a\\right\\} //\u53cd\u659c\u6760\uff0c\u5927\u62ec\u53f7\n</code></pre>"},{"location":"tools/latex/symbols/#_18","title":"\u62ec\u53f7","text":"<pre><code>(a),[a],\\left(\\frac{1}{2},1\\right),\\left(\\frac{1}{2},1\\right] //\u533a\u95f4\u4e0e\u5355\u4fa7\u62ec\u53f7\n</code></pre>"},{"location":"tools/latex/symbols/#_19","title":"\u65b9\u7a0b\u7ec4","text":"<pre><code>{l}:\u5de6\u5bf9\u9f50\u4e00\u5217\n\n\\left\\{\\begin{array}}{l}\nx+y=1,\\\\\nx-y=1.\\\\\n\\end{array}\\right.\n</code></pre>"},{"location":"tools/latex/symbols/#_20","title":"\u77e9\u9635","text":"<pre><code>^\\top # \u8f6c\u7f6e\n*{n}{X}:\u91cd\u590dX\u683c\u5f0fn\u6b21\uff0cc:centre\u5c45\u4e2d\u5bf9\u9f50\n\nA=\\left( {\\begin{array}{*{20}{c}}\n{a_{11}} &amp; {a_{12}} &amp; {\\cdots} &amp; {a_{1n}} \\\\\n{a_{21}} &amp; {a_{22}} &amp; {\\cdots} &amp; {a_{2n}} \\\\\n{\\vdots} &amp; {\\vdots} &amp; {} &amp; {\\vdots} \\\\\n{a_{n1}} &amp; {a_{n2}} &amp; {\\cdots} &amp; {a_{nn}} \\\\\n\\end{array}}    \n    \\right)\n</code></pre>"},{"location":"tools/latex/symbols/#_21","title":"\u76f8\u4f3c\u5168\u7b49","text":"<pre><code>\\sim,\\cong //\u76f8\u4f3c\uff0c\u5168\u7b49\n</code></pre>"},{"location":"tools/latex/symbols/#_22","title":"\u7bad\u5934\u4e0e\u5173\u7cfb","text":"<p><pre><code>\\rightarrow,\\Rightarrow,\\rightrightarrows,\\Leftrightarrow,\\iff,\\mapsto\n//\u53f3\u7bad\u5934\uff0c\u63a8\u51fa\uff0c\u53cc\u53f3\u7bad\u5934\uff0c\u7b49\u4ef7\uff0c\u7b49\u4ef7(\u4e0d\u540c\u683c\u5f0f)\uff0c\u6620\u5c04\u7bad\u5934\n</code></pre> <pre><code>\\stackrel{\\Delta}{\\rightarrow} //\u8fd9\u662f\u4e00\u4e2a\u70b9\u71c3\u7b26\u53f7\n//\u5728\u7bad\u5934\u4e0a\u6cd5\u6dfb\u52a0\u6587\u5b57\u6216\u7b26\u53f7\n</code></pre></p>"},{"location":"tools/latex/symbols/#_23","title":"\u51e0\u4f55","text":"<pre><code>\\circ,\\triangle,\\odot,\\bot,\\parallel //\u5ea6\uff0c\u4e09\u89d2\uff0c\u5706\uff0c\u5782\u76f4\uff0c\u5e73\u884c\n</code></pre>"},{"location":"tools/latex/symbols/#_24","title":"\u6392\u7248\u7b26\u53f7","text":"<pre><code>//\u5229\u7528\u6570\u7ec4\u5b9e\u73b0\u5bf9\u9f50\n\\begin{array}{*{20}{c}}\n{f:} &amp; {A \\rightarrow B} \\\\\n{} &amp; {a \\mapsto f(a)} \\\\\n\\end{array}\n\n//\u6362\u884c\u516c\u5f0f\u5bf9\u9f50\n{lll}:\u4e09\u5217\u5206\u522b\u5de6\u5bf9\u9f50\n\n\\begin{displaymath}\n    \\begin{array}{lll}\n&amp;&amp;a+a+a+a+a+a+a+a\\\\\n&amp;=&amp;a+a+a+a+a+a+a+a.\n    \\end{array}\n\\end{displaymath}\n\n//(\u7b2c\u4e00\u5217)&amp;(\u7b2c\u4e8c\u5217)&amp;(\u7b2c\u4e09\u5217)\uff1a\u8868\u793a\u7b2c\u4e00\u884c\u7684\u524d\u4e24\u5217\u4e3a\u7a7a\uff0c\u7b2c\u4e09\u5217\u624d\u5f00\u59cb\u586b\u5145\u5185\u5bb9\n//&amp;=\uff1a\u8868\u793a = \u5904\u4e8e\u7b2c\u4e8c\u5217\uff0c\u53f3\u4fa7\u7684\u8868\u8fbe\u5f0f\u5728\u7b2c\u4e09\u5217\n\n//\u884c\u95f4\u8ddd\n\\renewcommand*{\\arraystretch}{1.5} //1.5\u500d\u884c\u8ddd\n\\begin{displaymath}\n    \\begin{array}{lll}\n...\n    \\end{array}\n\\end{displaymath}\n\\renewcommand*{\\arraystretch}{1} //\u8c03\u6574\u56de\u9ed8\u8ba4\u884c\u8ddd\n\n//\u6587\u5b57\n\\text{\u5b9a\u7406\uff1a}\u516c\u5f0f\n\n//\u9879\u76ee\u7f16\u53f7\n\u81ea\u52a8\u6807\u53f71.2.3.\n\\begin{enumerate}\n \\item \u4e00;\n \\item \u4e8c;\n \\item \u4e09.\n\\end{enumerate}\n\u5c0f\u62ec\u53f7\u6807\u53f7(1)(2)(3)\n\\begin{enumerate}\n \\item[(1)] \u9996\u5148;\n \\item[(2)] \u5176\u6b21;\n \\item[(3)] \u6700\u540e.\n\\end{enumerate}\n\n//\u8868\u683c\n\\begin{center} //\u5c45\u4e2d\n\\begin{tabular}{|m{3cm}&lt;{\\centering}|m{3cm}&lt;{\\centering}|m{3cm}&lt;{\\centering}|} //3cm:\u5217\u5bbd\n\\hline //\u6362\u884c\n\\textbf{\u7b2c\u4e00\u5217}&amp;\\textbf{\u7b2c\u4e8c\u5217}&amp;\\textbf{\u7b2c\u4e09\u5217}\\\\ //\u52a0\u7c97\n\\hline\n&amp; &amp; \\\\\n\\hline\n\\end{tabular}\n\\end{center}\n\n//\u63d2\u56fe\n\\begin{center}\n\\includegraphics[scale=0.1]{./1.png} //\u7f29\u653e\u6bd4\u7387\n\\end{center}\n</code></pre>"},{"location":"tools/latex/symbols/#_25","title":"\u5b9a\u7406\u73af\u5883","text":"<pre><code>\\begin{lem}\n\u5f15\u7406.\n\\end{lem}\n\n\\begin{thm}[\u540d\u79f0]\n\u5e26\u6709\u540d\u5b57\u7684\u5b9a\u7406.\n\\end{thm}\nprop,cor,defn,exmp,ack\u540c\u7406\n\n\\begin{defn}\\label{D3.2}\n\u5e26\u6709\u6807\u7b7e\u7684\u5b9a\u4e49.\n\\end{defn}\n\n\\begin{defn}\n\u5b9a\u4e49\\ref{D3.2}\u4e2d\u6211\u4eec\u63d0\u5230\n\\end{defn}\n</code></pre>"},{"location":"tools/latex/symbols/#_26","title":"\u53c2\u8003\u6587\u732e","text":"<pre><code>\\bibliographystyle{elsarticle-num-names}\n\n\\begin{thebibliography}{60}\n  \\bibitem{1}\u4f5c\u8005\uff0c\\emph{\u9898\u76ee}\uff0c\u671f\u520a\uff0c\\textbf{\u5377\u53f7}(\u5e74\u4efd)\uff0c\u9875\u7801.\n\\end{thebibliography}\n//bibitem:\u6807\u8bc6\u7b26(\u4f7f\u7528cite\u53ef\u4ee5\u5f15\u7528\uff0c\u65b9\u6cd5\u540clabel) emph:\u659c\u4f53 textbf:\u52a0\u7c97\n</code></pre>"},{"location":"tools/linux/","title":"Linux","text":""},{"location":"tools/linux/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"tools/linux/#sudoroot","title":"sudo:root\u6743\u9650","text":"<pre><code>sudo su  # \u83b7\u53d6root\u6743\u9650\n</code></pre>"},{"location":"tools/linux/#cd","title":"cd:\u5207\u6362\u5de5\u4f5c\u76ee\u5f55","text":"<pre><code>cd /home/user/Documents  # \u5207\u6362\u5230\u7edd\u5bf9\u8def\u5f84\u76ee\u5f55\ncd ..                    # \u5207\u6362\u5230\u4e0a\u4e00\u7ea7\u76ee\u5f55\ncd ~                     # \u5207\u6362\u5230\u5f53\u524d\u7528\u6237\u7684\u4e3b\u76ee\u5f55\n</code></pre>"},{"location":"tools/linux/#pwd","title":"pwd:\u663e\u793a\u5de5\u4f5c\u76ee\u5f55","text":"<pre><code>pwd\n# \u8f93\u51fa: /home/user/Documents\n</code></pre>"},{"location":"tools/linux/#tree","title":"tree:\u5217\u51fa\u6811\u72b6\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784","text":""},{"location":"tools/linux/#ls","title":"ls:\u5217\u51fa\u76ee\u5f55\u5185\u5bb9","text":"<pre><code>ls              # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u5185\u5bb9\nls -l           # \u5217\u51fa\u8be6\u7ec6\u4fe1\u606f\uff08\u5982\u6743\u9650\u3001\u5927\u5c0f\u3001\u4fee\u6539\u65e5\u671f\uff09\nls -a           # \u663e\u793a\u6240\u6709\u6587\u4ef6\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff08\u4ee5 . \u5f00\u5934\u7684\u6587\u4ef6\uff09\n</code></pre>"},{"location":"tools/linux/#cp","title":"cp:\u590d\u5236","text":"<pre><code>cp file1.txt file2.txt      # \u5c06 file1.txt \u590d\u5236\u5230 file2.txt\n# 123 abc -&gt; 123 123\ncp -r dir1 dir2             # \u9012\u5f52\u5730\u590d\u5236\u76ee\u5f55 dir1 \u5230 dir2\n</code></pre>"},{"location":"tools/linux/#mv","title":"mv:\u79fb\u52a8\u6216\u91cd\u547d\u540d","text":"<pre><code>mv file1.txt dir/           # \u5c06 file1.txt \u79fb\u52a8\u5230 dir \u76ee\u5f55\nmv oldname.txt newname.txt  # \u91cd\u547d\u540d\u6587\u4ef6 oldname.txt \u4e3a newname.txt\n</code></pre>"},{"location":"tools/linux/#rm","title":"rm:\u5220\u9664","text":"<pre><code>rm file1.txt file2.txt       # \u5220\u9664 file1.txt file2.txt\nrm -r dir                    # \u5220\u9664\u76ee\u5f55\u53ca\u5176\u5185\u5bb9\nrm -f file2.txt              # \u5f3a\u5236\u5220\u9664\u6587\u4ef6\uff0c\u4e0d\u663e\u793a\u8b66\u544a\n</code></pre>"},{"location":"tools/linux/#cat","title":"cat:\u67e5\u770b","text":"<pre><code>cat file1.txt        # \u663e\u793a file1.txt \u7684\u5185\u5bb9\ncat file1.txt file2.txt  # \u8fde\u63a5\u591a\u4e2a\u6587\u4ef6\u5e76\u663e\u793a\u5b83\u4eec\u7684\u5185\u5bb9\n</code></pre>"},{"location":"tools/linux/#mkdir","title":"mkdir:\u65b0\u5efa\u6587\u4ef6\u5939","text":"<pre><code>mkdir newdirectory   # \u65b0\u5efa\u540d\u4e3anewdirectory\u7684\u6587\u4ef6\u5939 \n</code></pre>"},{"location":"tools/linux/#touch","title":"touch:\u65b0\u5efa\u6587\u4ef6","text":"<pre><code>touch main.c         # \u65b0\u5efamain.c\u6587\u4ef6\n</code></pre>"},{"location":"tools/linux/#headtail","title":"head/tail: \u67e5\u770b\u6587\u4ef6\u7684\u5f00\u59cb/\u7ed3\u5c3e\u90e8\u5206","text":"<pre><code>head file1.txt       # \u663e\u793a file1.txt \u7684\u524d10\u884c\ntail file1.txt       # \u663e\u793a file1.txt \u7684\u6700\u540e10\u884c\ntail -n 20 file1.txt # \u663e\u793a file1.txt \u7684\u6700\u540e20\u884c\n</code></pre>"},{"location":"tools/linux/#lessmore","title":"less/more: \u5206\u9875\u663e\u793a\u6587\u4ef6\u5185\u5bb9","text":"<pre><code>less file1.txt   # \u5206\u9875\u663e\u793a file1.txt \u5185\u5bb9 q\u9000\u51fa\nmore file1.txt   # \u4ee5\u5355\u9875\u6a21\u5f0f\u663e\u793a file1.txt \u5185\u5bb9 \u4f7f\u7528'\u2b07'\u7ffb\u9875\n</code></pre>"},{"location":"tools/linux/#eogdisplay","title":"eog/display:\u67e5\u770b\u56fe\u7247","text":"<pre><code>eog/display image.png     # \u6253\u5f00 image.png \u56fe\u7247\n</code></pre>"},{"location":"tools/linux/#vim","title":"vim:\u7f16\u8f91\u6587\u4ef6","text":"<p><pre><code>vim file1.txt         # \u4f7f\u7528 vim \u6253\u5f00 file1.txt \u8fdb\u884c\u7f16\u8f91\nvim +20 file1.txt     # \u6253\u5f00 file1.txt \u5e76\u5b9a\u4f4d\u5230\u7b2c20\u884c\n</code></pre> <pre><code>In vim:\n:wq  # \u4fdd\u5b58\u5e76\u9000\u51fa\n:w   # \u4fdd\u5b58\u4f46\u4e0d\u9000\u51fa\n:q!  # \u5f3a\u5236\u9000\u51fa\u800c\u4e0d\u4fdd\u5b58\n</code></pre></p>"},{"location":"tools/linux/#find","title":"find:\u67e5\u627e\u6587\u4ef6","text":"<pre><code>find . -name \"*.txt\"     # \u67e5\u627e\u5f53\u524d\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u4e0b\u6240\u6709\u6269\u5c55\u540d\u4e3a .txt \u7684\u6587\u4ef6\nfind ~/notebook/ -type d # \u67e5\u627e /home/user \u4e0b\u7684\u6240\u6709\u76ee\u5f55\n/home/tapir_elithril/notebook/\n/home/tapir_elithril/notebook/.github\n/home/tapir_elithril/notebook/.github/.DS_Store\n/home/tapir_elithril/notebook/.github/workflows\n/home/tapir_elithril/notebook/docs\n...\n</code></pre>"},{"location":"tools/linux/#chmod","title":"chmod:\u4fee\u6539\u6587\u4ef6\u6743\u9650","text":"<pre><code>chmod 755 file1.sh        # \u8bbe\u7f6e file1.sh \u6587\u4ef6\u4e3a\u53ef\u6267\u884c\uff0c\u5e76\u8bbe\u7f6e\u6743\u9650\u4e3a rwxr-xr-x\n# \u4e8c\u8fdb\u5236\u8868\u793a\u6cd5r=4,w=2,x=1\nchmod +x file1.sh         # \u7ed9 file1.sh \u6587\u4ef6\u6dfb\u52a0\u53ef\u6267\u884c\u6743\u9650\nchmod -R 755 /path/to/dir # \u9012\u5f52\u5730\u4e3a\u76ee\u5f55\u53ca\u5176\u6240\u6709\u5b50\u6587\u4ef6\u8bbe\u7f6e\u6743\u9650\n</code></pre>"},{"location":"tools/linux/#grep","title":"grep:\u641c\u7d22\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9","text":"<pre><code>grep \"hello\" file1.txt         # \u67e5\u627e file1.txt \u4e2d\u5305\u542b \"hello\" \u7684\u884c\ngrep -r \"hello\" /home/user     # \u5728 /home/user \u76ee\u5f55\u4e0b\u9012\u5f52\u67e5\u627e \"hello\"\n</code></pre>"},{"location":"tools/linux/#objdump","title":"objdump:\u53cd\u7f16\u8bd1","text":"<pre><code>objdump -d ./program  # \u53cd\u7f16\u8bd1\u4e3a\u6c47\u7f16\u6307\u4ee4\nobjdump -d -M intel ./program | grep &lt;word&gt;  # \u4f7f\u7528Intel\u8bed\u6cd5\u53cd\u7f16\u8bd1\n</code></pre>"},{"location":"tools/linux/#readelfelf","title":"readelf:\u5206\u6790elf","text":"<pre><code>readelf -h ./program  # \u67e5\u770b\u6587\u4ef6\u5934\n</code></pre>"},{"location":"tools/linux/#echo","title":"echo:\u914d\u7f6e\u53d8\u91cf","text":"<pre><code>echo \"Hello World\"  # \u663e\u793a\u6587\u672c\nname = John\necho $name # \u663e\u793a\u53d8\u91cf\u503c\necho $PATH # \u663e\u793a\u73af\u5883\u53d8\u91cf\necho 'export VARIABLE_NAME=\"VARIABLE_VALUE\"' &gt;&gt; ~/.bashrc  # \u914d\u7f6e\u73af\u5883\u53d8\u91cf\nsource ~/.bashrc\n</code></pre>"},{"location":"tools/linux/#man","title":"man:\u5168\u4e16\u754c\u6700\u5f3a\u5927\u7684\u7537\u4eba","text":"<pre><code>man ls          # \u663e\u793a\u547d\u4ee4\u4fe1\u606f\u4e0e\u7528\u6cd5\nman -f objdump  # \u663e\u793a\u547d\u4ee4\u7684\u7b80\u77ed\u63cf\u8ff0\nman 1 printf    # \u67e5\u770bprintf\u547d\u4ee4\nman 3 printf    # \u67e5\u770b C \u5e93\u51fd\u6570 printf\n</code></pre>"},{"location":"tools/linux/#sort","title":"sort:\u6392\u5e8f\u6587\u4ef6\u5185\u5bb9","text":"<pre><code>sort file1.txt        # \u5bf9 file1.txt \u4e2d\u7684\u884c\u8fdb\u884c\u5b57\u5178\u987a\u5e8f\u6392\u5e8f\nsort -r file1.txt     # \u53cd\u5411\u6392\u5e8f\nsort -n file1.txt     # \u6309\u6570\u5b57\u5927\u5c0f\u6392\u5e8f\n</code></pre>"},{"location":"tools/linux/#tar","title":"tar:\u6253\u5305\u548c\u89e3\u5305\u6587\u4ef6","text":"<pre><code>tar -cvf archive.tar file1.txt file2.txt  # \u5c06file1.txt file2.txt\u538b\u7f29\u4e3aarchive.tar\ntar -xvf archive.tar                      # \u89e3\u538b archive.tar\ntar -czvf archive.tar.gz dir/             # \u521b\u5efa\u538b\u7f29\u7684 tar.gz \u5f52\u6863\ntar -xzvf archive.tar.gz                  # \u89e3\u538b tar.gz \u5f52\u6863\u6587\u4ef6\n</code></pre>"},{"location":"tools/linux/#kill","title":"kill:\u7ec8\u6b62\u8fdb\u7a0b","text":"<pre><code>kill 1234                # \u7ec8\u6b62\u8fdb\u7a0b\u53f7\u4e3a 1234 \u7684\u8fdb\u7a0b\nkill -9 1234             # \u5f3a\u5236\u7ec8\u6b62\u8fdb\u7a0b\u53f7\u4e3a 1234 \u7684\u8fdb\u7a0b\uff08SIGKILL\uff09\n</code></pre>"},{"location":"tools/makefile/","title":"Makefile","text":"<p>\u53c2\u8003makefile\u4ecb\u7ecd</p>"},{"location":"tools/makefile/#introduction","title":"Introduction","text":"<p>GNU Make \u662f\u4e00\u4e2a\u7528\u4e8e\u81ea\u52a8\u5316\u7f16\u8bd1\u7684\u5de5\u5177\uff0c\u5b83\u901a\u8fc7\u8bfb\u53d6 Makefile \u6587\u4ef6\u4e2d\u7684\u89c4\u5219\u6765\u6267\u884c\u7f16\u8bd1\u8fc7\u7a0b\u3002Makefile \u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7684\u89c4\u5219\uff0c\u63cf\u8ff0\u4e86\u6e90\u6587\u4ef6\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ee5\u53ca\u5982\u4f55\u7f16\u8bd1\u548c\u94fe\u63a5\u8fd9\u4e9b\u6e90\u6587\u4ef6\u3002(\u6765\u81easys2-lab4)  </p>"},{"location":"tools/makefile/#_1","title":"\u8bed\u6cd5","text":""},{"location":"tools/makefile/#_2","title":"\u57fa\u672c\u683c\u5f0f","text":"<p><pre><code>target ... : prerequisites ...\n    recipe\n    ...\n    ...\n# \u6307\u4ee4\u5185\u5bb9\u524d\u4e00\u5b9a\u8981\u4f7f\u7528tab\u7f29\u8fdb\uff0c\u4e0d\u80fd\u4f7f\u7528\u7a7a\u683c\n# \\\u8868\u793a\u6362\u884c \u65b9\u4fbf\u9605\u8bfb\u4f7f\u7528\n\nmain.o: main.c\n    gcc -c main.c -o main.o\n</code></pre> target:\u76ee\u6807\u6587\u4ef6(obj file) prerequisite:\u4f9d\u8d56 recipe:\u547d\u4ee4  </p>"},{"location":"tools/makefile/#target","title":"target\u6784\u5efa","text":"<p><pre><code>C_SRC := $(wildcard *.c)\nASM_SRC := $(wildcard *.S)\nOBJ := $(C_SRC:.c=.o) $(ASM_SRC:.S=.o)\n</code></pre> \u4f7f\u7528wildcard\u81ea\u52a8\u5339\u914d\u6240\u6709\u76f8\u540c\u540d\u79f0\u7c7b\u578b\u7684\u6587\u4ef6\uff0c\u5c06\u76ee\u6807\u5bf9\u8c61\u8d4b\u503c\u7ed9OBJ  </p>"},{"location":"tools/makefile/#_3","title":"\u5b9a\u4e49\u53d8\u91cf","text":"<p><pre><code>CC = gcc\nCFLAGS = -c\nCPPFLAGS := -I$(CURDIR)/../include # \u4f9d\u8d56\u7684\u4f4d\u7f6e\n</code></pre> \u5b9a\u4e49\u53d8\u91cf\u6765\u5b58\u50a8\u7f16\u8bd1\u5668\u3001\u7f16\u8bd1\u9009\u9879\u7b49\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027 \u81ea\u52a8\u53d8\u91cf\uff1a $@: \u76ee\u6807\u6587\u4ef6\u540d $&lt;: \u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6  $^: \u6240\u6709\u4f9d\u8d56\u6587\u4ef6\uff08\u53bb\u91cd\uff09 \u4f8b\u5982\uff1a <pre><code>%.o: %.c\n    $(GCC) $(CFLAGS) $(CPPFLAGS) -c $&lt;\n# $&lt; : %.c\n# $@ : %.o\n# gcc -c -I./../include -c %.c\n</code></pre></p>"},{"location":"tools/makefile/#_4","title":"\u4f2a\u76ee\u6807","text":"<p>\u4e0d\u751f\u6210\u540c\u540d\u6587\u4ef6\uff0c\u4ec5\u7528\u4e8e\u6267\u884c\u547d\u4ee4\u7684\u64cd\u4f5c\uff0c\u7528<code>.PHONY</code>\u6807\u8bb0 \u5e38\u89c1\u6807\u8bb0\uff1a <pre><code>.PHONY: clean all\n\nall:$(OBJ)\n# \u6267\u884cmake all\u7f16\u8bd1\u4ea7\u751f\u6240\u6709OBJ\u6587\u4ef6\uff0call\u672c\u8eab\u4e0d\u662f\u4e00\u4e2a\u8981\u521b\u5efa\u7684\u6587\u4ef6\n\nclean:\n    rm -f *.o\n</code></pre></p>"},{"location":"tools/makefile/#_5","title":"\u8def\u5f84\u4f20\u9012","text":"<p>\u53d8\u91cf\u53ef\u4ee5\u5728\u591a\u4e2a\u6587\u4ef6\u5939\u7684makefile\u4e4b\u95f4\u4f20\u9012(\u4f7f\u7528export)\uff0c\u4e00\u4e2a\u5177\u4f53\u7684\u793a\u4f8b\u5982\u4e0b: \u5bf9\u4e8e\u4ee5\u4e0b\u76ee\u5f55\u7ed3\u6784 <pre><code>.\n\u251c\u2500\u2500 kernel\n\u2502   \u251c\u2500\u2500 Makefile\n\u2502   \u251c\u2500\u2500 arch\n\u2502   \u2502   \u2514\u2500\u2500 riscv\n\u2502   \u2502       \u251c\u2500\u2500 Makefile\n\u2502   \u2502       \u251c\u2500\u2500 include\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 mm.h\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 print.h\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 printk.h\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 private_kdefs.h\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 proc.h\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 sbi.h\n\u2502   \u2502       \u2514\u2500\u2500 kernel\n\u2502   \u2502           \u251c\u2500\u2500 Makefile\n\u2502   \u2502           \u251c\u2500\u2500 clock.c\n\u2502   \u2502           \u251c\u2500\u2500 entry.S\n\u2502   \u2502           \u251c\u2500\u2500 head.S\n\u2502   \u2502           \u251c\u2500\u2500 main.c\n\u2502   \u2502           \u251c\u2500\u2500 mm.c\n\u2502   \u2502           \u251c\u2500\u2500 printk.c\n\u2502   \u2502           \u251c\u2500\u2500 proc.c\n\u2502   \u2502           \u251c\u2500\u2500 sbi.c\n\u2502   \u2502           \u251c\u2500\u2500 trap.c\n\u2502   \u2502           \u2514\u2500\u2500 vmlinux.lds\n\u2502   \u251c\u2500\u2500 include\n\u2502   \u2502   \u251c\u2500\u2500 ctype.h\n\u2502   \u2502   \u251c\u2500\u2500 inttypes.h\n\u2502   \u2502   \u251c\u2500\u2500 limits.h\n\u2502   \u2502   \u251c\u2500\u2500 riscv-asm.h\n\u2502   \u2502   \u251c\u2500\u2500 stdarg.h\n\u2502   \u2502   \u251c\u2500\u2500 stddef.h\n\u2502   \u2502   \u251c\u2500\u2500 stdint.h\n\u2502   \u2502   \u251c\u2500\u2500 stdio.h\n\u2502   \u2502   \u251c\u2500\u2500 stdlib.h\n\u2514\u2500\u2500 \u2514\u2500\u2500 \u2514\u2500\u2500 string.h\n</code></pre></p> <pre><code># In ./kernel/Makefile:\nCROSS_ := riscv64-linux-gnu-\nexport GCC := $(CROSS_)gcc\nexport LD := $(CROSS_)ld\nexport OBJCOPY := $(CROSS_)objcopy\nexport OBJDUMP := $(CROSS_)objdump\nexport NM := $(CROSS_)nm\n\nISA := rv64ia_zicsr_zifencei\nABI := lp64\n\nexport CPPFLAGS := -I$(CURDIR)/include\nexport CFLAGS := -march=$(ISA) -mabi=$(ABI) -mcmodel=medany \\\n    -ffreestanding -fno-builtin -ffunction-sections -fdata-sections \\\n    -nostartfiles -nostdlib -nostdinc -static -ggdb -Og \\\n    -Wall -Wextra -std=gnu11\nexport LDFLAGS := -lgcc -Wl,--nmagic -Wl,--gc-sections\n# In ./kernel/arch/riscv/Makefile:\nCPPFLAGS += -I$(CURDIR)/include\n# In ./kernel/arch/riscv/kernel/Makefile:\n%.o: %.S\n    $(GCC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) -c $&lt;\n\n%.o: %.c\n    $(GCC) $(CFLAGS) $(CPPFLAGS) -c $&lt;\n</code></pre>"},{"location":"tools/markdown/","title":"Markdown \u5e38\u7528\u8bed\u6cd5","text":""},{"location":"tools/markdown/#_1","title":"\u57fa\u672c\u683c\u5f0f","text":"<pre><code>\u5207\u6362\u8f93\u5165\u6a21\u5f0f(vscode):\u5c0f\u952e\u76d80\n&lt;space&gt;&lt;space&gt;&lt;\\n&gt; # \u6362\u884c\n&lt;/br&gt; # \u5f3a\u5236\u6362\u884c\n&lt;div STYLE=\"page-break-after: always;\"&gt;&lt;/div&gt; # \u6362\u9875\n&lt;div style=\"text-align: left;\"&gt;\n  \u8fd9\u662f\u5de6\u5bf9\u9f50\u7684\u5185\u5bb9\u3002\n&lt;/div&gt;\n\n&lt;div style=\"text-align: center;\"&gt;\n  \u8fd9\u662f\u5c45\u4e2d\u7684\u5185\u5bb9\u3002\n&lt;/div&gt;\n\n&lt;div style=\"text-align: right;\"&gt;\n  \u8fd9\u662f\u53f3\u5bf9\u9f50\u7684\u5185\u5bb9\u3002\n&lt;/div&gt;\n\n&lt;div style=\"text-align: justify;\"&gt;\n  \u8fd9\u662f\u4e24\u7aef\u5bf9\u9f50\u7684\u5185\u5bb9\u3002\n&lt;/div&gt;\n\n&lt;font size=&lt;\u5b57\u4f53\u5927\u5c0f(\u6570\u5b57)&gt; face=&lt;\u5b57\u4f53\u540d\u79f0&gt;&gt;\n  ...\n&lt;/font&gt;\n</code></pre>"},{"location":"tools/markdown/#_2","title":"\u6807\u9898","text":"<pre><code># \u4e00\u7ea7\u6807\u9898\n## \u4e8c\u7ea7\u6807\u9898\n### \u4e09\u7ea7\u6807\u9898\n#### \u56db\u7ea7\u6807\u9898\n##### \u4e94\u7ea7\u6807\u9898\n###### \u516d\u7ea7\u6807\u9898\n</code></pre>"},{"location":"tools/markdown/#_3","title":"\u5f3a\u8c03","text":"<pre><code>*\u659c\u4f53* or _\u659c\u4f53_\n**\u7c97\u4f53** or __\u7c97\u4f53__\n***\u7c97\u659c\u4f53***\n</code></pre>"},{"location":"tools/markdown/#_4","title":"\u5217\u8868","text":"<pre><code>//\u65e0\u5e8f\u5217\u8868\n- \u9879\u76ee1\n- \u9879\u76ee2\n  - \u5b50\u9879\u76ee1\n  - \u5b50\u9879\u76ee2\n//\u6709\u5e8f\u5217\u8868\n1.\u9879\u76ee1\n2.\u9879\u76ee2\n    1.\u5b50\u9879\u76ee1\n    2.\u5b50\u9879\u76ee2\n</code></pre>"},{"location":"tools/markdown/#_5","title":"\u94fe\u63a5","text":"<pre><code>[\u94fe\u63a5\u6587\u672c](\u94fe\u63a5\u5730\u5740)\n[Google](https://www.google.com) //\u7f51\u5740\n![\u56fe\u7247\u63cf\u8ff0](../../../image/image.png) //\u56fe\u7247\n</code></pre>"},{"location":"tools/markdown/#_6","title":"\u5f15\u7528","text":"<pre><code>&gt; This is a quote.\n</code></pre> <p>\"The only way to do great work is to love what you do.\" \u2014 Steve Jobs</p>"},{"location":"tools/markdown/#_7","title":"\u4ee3\u7801","text":"<p><pre><code>\u8fd9\u662f\u4e00\u4e2a `\u884c\u5185\u4ee3\u7801`\n\u663e\u7136\u8fd9\u6bb5\u6587\u5b57\u5df2\u7ecf\u5728\u4e00\u4e2a\u4ee3\u7801\u5757\u4e2d\u4e86\n\u652f\u6301\u8bed\u8a00\uff1apy,js,html,css,java,c,cpp,ruby,php,sql,bash(sh),json,yaml,r,go,markdown\n</code></pre> \u5728\u8bed\u8a00\u5904\u586b\u5199text linenums=\"0/1\"\u8868\u793a\u4e0d\u663e\u793a/\u663e\u793a\u884c\u53f7 hl_lines=\"5 7 9 10 11\"\u8868\u793a\u9ad8\u4eae5\u30017\u30019\u300110\u300111\u884c title=\"user/src/main.c\" linenums=\"28\"\u8bbe\u7f6e\u5f15\u7528\u6765\u6e90  </p>"},{"location":"tools/markdown/#_8","title":"\u8868\u683c","text":"<p><pre><code>| \u8868\u59341 | \u8868\u59342 | \u8868\u59343 |\n|-------|-------|-------|\n| \u5185\u5bb91 | \u5185\u5bb92 | \u5185\u5bb93 |\n| \u5185\u5bb94 | \u5185\u5bb95 | \u5185\u5bb96 |  \n</code></pre> | \u8868\u59341 | \u8868\u59342 | \u8868\u59343 | |-------|-------|-------| | \u5185\u5bb91 | \u5185\u5bb92 | \u5185\u5bb93 | | \u5185\u5bb94 | \u5185\u5bb95 | \u5185\u5bb96 |  </p>"},{"location":"tools/markdown/#_9","title":"\u8f6c\u4e49\u5b57\u7b26","text":"<p><pre><code>\\*\u8fd9\u4e0d\u662f\u659c\u4f53\\*\n</code></pre> *\u8fd9\u4e0d\u662f\u659c\u4f53*</p>"},{"location":"tools/markdown/#admonitions","title":"\u63d0\u793a\u6846(admonitions)","text":"<p>\u652f\u6301\u7684\u63d0\u793a\u6846\u7c7b\u578b\uff1anote,danger,abstract,tip,warning,question(???) <pre><code>In mkdocs.yml:\nmarkdown_extensions:\n  - pymdownx.details\n</code></pre> <pre><code>!!! note \"\u8fd9\u662f\u4e00\u4e2a\u9ed8\u8ba4\u5c55\u5f00\u7684\u63d0\u793a\u6846\"\n    \u8fd9\u662f\u63d0\u793a\u6846\u7684\u5185\u5bb9\uff0c\u5b83\u662f\u6298\u53e0\u7684\uff0c\u70b9\u51fb\u6807\u9898\u5c55\u5f00\u3002\n</code></pre></p> <p>\u8fd9\u662f\u4e00\u4e2a\u9ed8\u8ba4\u5c55\u5f00\u7684\u63d0\u793a\u6846</p> <p>\u8fd9\u662f\u63d0\u793a\u6846\u7684\u5185\u5bb9\uff0c\u5b83\u662f\u6298\u53e0\u7684\uff0c\u70b9\u51fb\u6807\u9898\u5c55\u5f00\u3002</p>"}]}